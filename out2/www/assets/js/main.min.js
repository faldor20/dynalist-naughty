"use strict";
!(function () {
  Function.prototype.bind ||
    (Function.prototype.bind = function (e) {
      if ("function" != typeof this)
        throw new TypeError(
          "Function.prototype.bind - what is trying to be bound is not callable",
        );
      var t = Array.prototype.slice.call(arguments, 1),
        i = this,
        n = function () {},
        o = function () {
          return i.apply(
            this instanceof n ? this : e,
            t.concat(Array.prototype.slice.call(arguments)),
          );
        };
      return (
        this.prototype && (n.prototype = this.prototype),
        (o.prototype = new n()),
        o
      );
    }),
    Array.prototype.every ||
      (Array.prototype.every = function (e, t) {
        var i, n;
        if (null == this) throw new TypeError("this is null or not defined");
        var o = Object(this),
          s = o.length >>> 0;
        if ("function" != typeof e) throw new TypeError();
        for (1 < arguments.length && (i = t), n = 0; n < s; ) {
          var r = void 0;
          if (n in o) if (((r = o[n]), !e.call(i, r, n, o))) return !1;
          n++;
        }
        return !0;
      }),
    Array.prototype.some ||
      (Array.prototype.some = function (e) {
        if (null == this)
          throw new TypeError(
            "Array.prototype.some called on null or undefined",
          );
        if ("function" != typeof e) throw new TypeError();
        for (
          var t = Object(this),
            i = t.length >>> 0,
            n = 2 <= arguments.length ? arguments[1] : void 0,
            o = 0;
          o < i;
          o++
        )
          if (o in t && e.call(n, t[o], o, t)) return !0;
        return !1;
      }),
    Array.prototype.clone ||
      (Array.prototype.clone = function () {
        return this.slice(0);
      }),
    Array.prototype.cloneInline ||
      (Array.prototype.cloneInline = function () {
        for (var e = new Array(this.length), t = 0; t < this.length; t++)
          e[t] = this[t];
        return e;
      }),
    Array.prototype.first ||
      (Array.prototype.first = function () {
        return 0 === this.length ? null : this[0];
      }),
    Array.prototype.last ||
      (Array.prototype.last = function () {
        return 0 === this.length ? null : this[this.length - 1];
      }),
    Array.prototype.peek || (Array.prototype.peek = Array.prototype.last),
    Array.prototype.contains ||
      (Array.prototype.contains = function (e) {
        return -1 !== this.indexOf(e);
      }),
    Array.prototype.remove ||
      (Array.prototype.remove = function (e) {
        for (var t = this.length - 1; 0 <= t; t--)
          this[t] === e && this.splice(t, 1);
      }),
    Array.isArray ||
      (Array.isArray = function (e) {
        return "[object Array]" === Object.prototype.toString.call(e);
      }),
    Array.each ||
      ((Array.each = function (e, t, i) {
        for (var n = 0; n < e.length; n++)
          if (!1 === t.call(i, e[n], n, e)) return !1;
        return !0;
      }),
      (Array.eachReverse = function (e, t, i) {
        for (var n = e.length - 1; 0 <= n; n--)
          if (!1 === t.call(i, e[n], n, e)) return !1;
        return !0;
      })),
    Object.isEmpty ||
      (Object.isEmpty = function (e) {
        for (var t in e) if (e.hasOwnProperty(t)) return !1;
        return !0;
      }),
    Object.each ||
      (Object.each = function (e, t, i) {
        for (var n in e)
          if (e.hasOwnProperty(n) && !1 === t.call(i, e[n], n)) return !1;
        return !0;
      }),
    Object.getOrCreate ||
      (Object.getOrCreate = function (e, t, i) {
        var n = e[t];
        return n || ((n = i(t)), (e[t] = n)), n;
      }),
    "function" != typeof Object.assign &&
      Object.defineProperty(Object, "assign", {
        value: function e(t) {
          if (null == t)
            throw new TypeError("Cannot convert undefined or null to object");
          for (var i = Object(t), n = 1; n < arguments.length; n++) {
            var o = arguments[n];
            if (null != o)
              for (var s in o)
                Object.prototype.hasOwnProperty.call(o, s) && (i[s] = o[s]);
          }
          return i;
        },
        writable: !0,
        configurable: !0,
      }),
    String.isString ||
      (String.isString = function (e) {
        return "string" == typeof e || e instanceof String;
      }),
    String.prototype.contains ||
      (String.prototype.contains = function (e) {
        return -1 !== this.indexOf(e);
      }),
    String.prototype.startsWith ||
      (String.prototype.startsWith = function (e, t) {
        return this.substr(!t || t < 0 ? 0 : +t, e.length) === e;
      }),
    String.prototype.endsWith ||
      (String.prototype.endsWith = function (e, t) {
        return (
          (void 0 === t || t > this.length) && (t = this.length),
          this.substring(t - e.length, t) === e
        );
      }),
    Math.clamp ||
      (Math.clamp = function (e, t, i) {
        return Math.min(Math.max(e, t), i);
      }),
    Math.square ||
      (Math.square = function (e) {
        return e * e;
      }),
    Number.isInteger ||
      (Number.isInteger = function (e) {
        return "number" == typeof e && isFinite(e) && Math.floor(e) === e;
      }),
    document.hasFocus ||
      (document.hasFocus = function () {
        return "visible" === document.visibilityState;
      }),
    (navigator.vibrate =
      navigator.vibrate ||
      navigator.webkitVibrate ||
      navigator.mozVibrate ||
      navigator.msVibrate),
    Element.prototype.matches ||
      (Element.prototype.matches =
        Element.prototype.msMatchesSelector ||
        Element.prototype.webkitMatchesSelector),
    (Element.prototype.html = function (e) {
      if (void 0 === e) return this.innerHTML;
      this.innerHTML = e;
    }),
    (Node.prototype.getText = function () {
      var e = this,
        t = e.nodeType;
      if (1 !== t && 9 !== t && 11 !== t)
        return 3 === t || 4 === t ? e.nodeValue : "";
      if ("string" == typeof e.textContent) return e.textContent;
      for (var i = [], n = e.firstChild; n; n = n.nextSibling)
        i.push(n.getText());
      return i.join("");
    }),
    (Node.prototype.setText = function (e) {
      var t = this.nodeType;
      1 === t || 9 === t || 11 === t
        ? (this.textContent = e)
        : (3 !== t && 4 !== t) || (this.nodeValue = e);
    }),
    (Node.prototype.insertAfter = function (e) {
      e.parentNode && e.parentNode.insertBefore(this, e.nextSibling);
    }),
    (Node.prototype.append = function (e) {
      e.detach(), this.appendChild(e);
    }),
    (Node.prototype.appendEl = function (e) {
      e.parentNode !== this && e.detach(),
        this.lastChild !== e && this.appendChild(e);
    }),
    (Node.prototype.prepend = function (e) {
      e.detach(), this.insertBefore(e, this.firstChild);
    }),
    (Node.prototype.detach = function () {
      this.parentNode && this.parentNode.removeChild(this);
    }),
    (Node.prototype.empty = function () {
      for (; this.lastChild; ) this.removeChild(this.lastChild);
      return this;
    }),
    (Node.prototype.indexOf = function (e) {
      return Array.prototype.indexOf.call(this.childNodes, e);
    });
  var t = "_dynalist_ctx";
  (Element.prototype.getCtx = function () {
    return this[t];
  }),
    (Element.prototype.hasCtx = function () {
      return bool(this[t]);
    }),
    (Element.prototype.setCtx = function (e) {
      this[t] = e;
    }),
    (Element.prototype.addClass = function () {
      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
      return this.addClasses(e), this;
    }),
    (Element.prototype.addClasses = function (e) {
      for (var t = 0; t < e.length; t++) this.classList.add(e[t]);
      return this;
    }),
    (Element.prototype.removeClass = function () {
      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
      return this.removeClasses(e), this;
    }),
    (Element.prototype.removeClasses = function (e) {
      for (var t = 0; t < e.length; t++) this.classList.remove(e[t]);
      return this;
    }),
    (Element.prototype.toggleClass = function (e, t) {
      return (
        e instanceof Array || (e = [e]),
        t ? this.addClasses(e) : this.removeClasses(e),
        this
      );
    }),
    (Element.prototype.hasClass = function (e) {
      return this.classList.contains(e);
    }),
    (Element.prototype.setAttr = function (e, t) {
      this.setAttribute(e, String(t));
    }),
    (Element.prototype.setAttrs = function (e) {
      for (var t in e) e.hasOwnProperty(t) && this.setAttr(t, e[t]);
    }),
    (Element.prototype.getAttr = Element.prototype.getAttribute),
    HTMLElement.prototype.show ||
      (HTMLElement.prototype.show = function () {
        return (
          "none" === this.style.display &&
            ((this.style.display = this.getAttribute("data-display") || ""),
            this.removeAttribute("data-display")),
          this
        );
      }),
    HTMLElement.prototype.hide ||
      (HTMLElement.prototype.hide = function () {
        var e = this.style.display;
        return (
          "none" !== e &&
            ((this.style.display = "none"),
            e
              ? this.setAttribute("data-display", e)
              : this.removeAttribute("data-display")),
          this
        );
      }),
    HTMLElement.prototype.visible ||
      Object.defineProperty(HTMLElement.prototype, "visible", {
        get: function () {
          return null !== this.offsetParent;
        },
      }),
    (Element.prototype.uShow = function () {
      this.removeClass("u-hidden");
    }),
    (Element.prototype.uHide = function () {
      this.addClass("u-hidden");
    }),
    (Element.prototype.uToggle = function (e) {
      this.toggleClass("u-hidden", !e);
    }),
    (window.fish = function (e) {
      return document.querySelector(e);
    }),
    (window.fishAll = function (e) {
      return Array.prototype.slice.call(document.querySelectorAll(e));
    }),
    (Element.prototype.find = function (e) {
      return this.querySelector(e);
    }),
    (Element.prototype.findAll = function (e) {
      return Array.prototype.slice.call(this.querySelectorAll(e));
    }),
    (Node.prototype.createEl = function (e, t, i) {
      return ((t = t || {}).parent = this), createEl(e, t, i);
    }),
    (window.createEl = function e(t, i, n) {
      var o = i || {},
        s = o.cls,
        r = o.text,
        a = o.attr,
        _ = o.title,
        c = o.value,
        l = o.type,
        u = o.parent,
        h = document.createElement(t);
      return (
        s &&
          (Array.isArray(s) ? (h.className = s.join(" ")) : (h.className = s)),
        r && h.setText(r),
        a && h.setAttrs(a),
        _ && (h.title = _),
        c &&
          (h instanceof HTMLInputElement ||
            h instanceof HTMLSelectElement ||
            h instanceof HTMLOptionElement) &&
          (h.value = c),
        l && h instanceof HTMLInputElement && (h.type = l),
        n && n(h),
        u && u.appendChild(h),
        h
      );
    });
  var e = function (e, i, n, t) {
      var o = this._DYNALIST_EVENTS;
      o || ((o = {}), (this._DYNALIST_EVENTS = o));
      var s = o[e];
      s || ((s = []), (o[e] = s));
      var r = function (e) {
        var t = (function e(t, i, n) {
          return t
            ? t.matches(i)
              ? t
              : t === n
              ? null
              : e(t.parentElement, i, n)
            : null;
        })(e.target, i, e.currentTarget);
        t && n.call(this, e, t);
      };
      s.push({ selector: i, listener: n, options: t, callback: r }),
        this.addEventListener(e, r, t);
    },
    i = function (i, n, o, s) {
      var r = this,
        e = this._DYNALIST_EVENTS;
      if (e) {
        var t = e[i];
        t &&
          (e[i] = t.filter(function (e) {
            if (e.selector !== n || e.listener !== o || e.options !== s)
              return !0;
            var t = e.callback;
            return r.removeEventListener(i, t, s), !1;
          }));
      }
    };
  (HTMLElement.prototype.on = e),
    (Document.prototype.on = e),
    (HTMLElement.prototype.off = i),
    (Document.prototype.off = i),
    (window.bool = function (e) {
      return !!e;
    }),
    (window.isString = function (e) {
      return "string" == typeof e || e instanceof String;
    }),
    (window.parseBool = function (e) {
      return "false" !== e && 0 !== e && ("true" === e || bool(e));
    }),
    (window.clone_arguments = function (e) {
      for (var t = e.length, i = [], n = 0; n < t; n++) i.push(e[n]);
      return i;
    }),
    (window.isArrayLike = function (e) {
      return (
        Array.isArray(e) ||
        (bool(e) &&
          "object" == typeof e &&
          "number" == typeof e.length &&
          (0 === e.length || 0 < e.length))
      );
    }),
    (window.each = function (e, t, i, n) {
      if (isArrayLike(e)) {
        if (n) {
          for (var o = e.length - 1; 0 <= o; o--)
            if (!1 === t.call(i, e[o], o, e)) return !1;
        } else
          for (o = 0; o < e.length; o++)
            if (!1 === t.call(i, e[o], o, e)) return !1;
      } else if (e instanceof Object)
        for (var s in e)
          if (e.hasOwnProperty(s) && !1 === t.call(i, e[s], s, e)) return !1;
      return !0;
    }),
    (window.each_reverse = function (e, t, i) {
      return each(e, t, i, !0);
    }),
    (window.debounce = function (e, i, n, o, s) {
      var r = null,
        a = null,
        _ = null,
        c = !1,
        l = 0,
        u = function () {
          (r = null), s && (l = Date.now()), e.apply(a, _);
        },
        h = function (e, t) {
          e && r && clearTimeout(r), (!e && r) || (r = setTimeout(u, t));
        },
        p = function () {
          if (c) return p;
          if (!r || o) {
            (a = this), (_ = []);
            for (var e = 0; e < arguments.length; e++) _.push(arguments[e]);
          }
          if (s) {
            var t = Date.now();
            if (l < t - i) return (l = t), u(), p;
          }
          return h(n, i), p;
        };
      return (
        (p.cancel = function () {
          return r && (clearTimeout(r), (r = null)), p;
        }),
        (p.disable = function () {
          return (c = !0), p;
        }),
        (p.enable = function () {
          return (c = !1), p;
        }),
        (p.set_timeout = function (e) {
          return (i = e), r && h(!0, i), p;
        }),
        (p.flush = function () {
          return h(!0, 0), p;
        }),
        p
      );
    }),
    (window.log = function () {
      console.log.apply(console, arguments);
    }),
    (window.stacktrace = function (e) {
      e || (e = new Error());
      var t = Array.prototype.cloneInline.call(arguments);
      t.push(get_stacktrace(e)), console.error.apply(console, t);
    }),
    (window.assert = function (e, t, i) {
      if (!e) {
        var n = "Assert Failed";
        t && (n += ": " + t), i && (n += ": " + i), trace(n, new Error());
      }
    }),
    (window.trace = function (e, t) {
      t && (e += "\n" + get_stacktrace(t)), console.error(e);
    }),
    (window.assert_equal = function (e, t, i) {
      assert(e === t, e + " != " + t, i);
    }),
    (window.assert_not_null = function (e, t) {
      assert(null != e, e + " is null", t);
    }),
    (window.assert_not_reached = function (e) {
      assert(!1, "Should not reach here.", e);
    }),
    (window.get_stacktrace = function (e) {
      return e.stack || e.stacktrace || "";
    }),
    (window.track_error = function (e, t) {
      console.error(e);
    }),
    (window.unsafe = function (e) {
      try {
        return e();
      } catch (e) {
        track_error(e);
      }
    }),
    (window.performance && window.performance.now) ||
      (window.performance = Date),
    (window.perf = function (e, t) {
      var i = performance.now();
      if (t) for (var n = 0; n < t; n++) e();
      else e();
      var o = performance.now() - i;
      return Math.round(o);
    });
  var n = {
      4: "Owner",
      3: "Manage",
      2: "Can edit",
      1: "View only",
      0: "No access",
    },
    g = (DYNALIST.SERVER_PROTOCOL, DYNALIST.SERVER_HOST || "dynalist.io"),
    d = DYNALIST.SERVER_URL || "https://dynalist.io",
    o = DYNALIST.PUSH_URL || "wss://push.dynalist.io",
    c = "Untitled",
    f = "/demo/",
    h = ["div", "p", "table", "tbody", "thead", "tr", "pre"],
    p = [
      "article",
      "dd",
      "div",
      "dl",
      "form",
      "h1",
      "h2",
      "h3",
      "h4",
      "h5",
      "h6",
      "header",
      "hr",
      "nav",
      "p",
      "pre",
      "section",
      "table",
    ],
    m = ["", "block", "list-item", "table", "table-caption", "table-cell"],
    v = ["span"],
    s = "@inbox.dynalist.io",
    r = { ENGLISH: "en_US", GERMAN: "de_DE" },
    a = {
      arial: '"Arial"',
      helvetica: '"Helvetica"',
      roboto_light: '"Roboto"',
      lora: '"Lora"',
      calibri: '"Calibri"',
      calibri_light: '"Calibri Light"',
      whitney: '"Whitney"',
      whitney_light: '"Whitney Light"',
      consolas: '"Consolas"',
      yahei: '"Microsoft YaHei", "微软雅黑", "Hiragino Sans GB", "冬青黑体"',
      kaiti: '"KaiTi", "楷体", "STKaiti", "华文楷体"',
      meiryo: '"メイリオ", "Meiryo"',
      ms_pmincho: '"ＭＳ Ｐ明朝", "MS PMincho"',
      hira_kaku: '"ヒラギノ角ゴ Pro W3", "Hiragino Kaku Gothic Pro"',
      hira_mincho: '"ヒラギノ明朝 Pro W3", "Hiragino Mincho Pro"',
      malgun: '"Malgun Gothic", "Dotum", "AppleGothic"',
      batang: '"Batang", "AppleMyungjo"',
      open_dyslexic: '"Open Dyslexic"',
      system:
        '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
      inter: '"Inter"',
    },
    l = {
      BACKSPACE: 8,
      TAB: 9,
      ENTER: 13,
      SHIFT: 16,
      CTRL: 17,
      ALT: 18,
      ESC: 27,
      END: 35,
      HOME: 36,
      LEFT: 37,
      UP: 38,
      RIGHT: 39,
      DOWN: 40,
      DELETE: 46,
      A: 65,
      B: 66,
      C: 67,
      F: 70,
      H: 72,
      I: 73,
      J: 74,
      K: 75,
      L: 76,
      M: 77,
      N: 78,
      O: 79,
      P: 80,
      S: 83,
      U: 85,
      X: 88,
      Y: 89,
      Z: 90,
      COMMA: 188,
      PERIOD: 190,
      SLASH: 191,
      LBRACK: 219,
      RBRACK: 221,
      GRAVE_ACCENT: 192,
      ZERO: 48,
      ONE: 49,
      TWO: 50,
      THREE: 51,
      FOUR: 52,
      FIVE: 53,
      SIX: 54,
    },
    y = 1,
    _ = 3,
    u = 5,
    b = 500,
    w = 250,
    k = 200,
    E = 9e5,
    C = 6e4,
    T = 3e5,
    O = 50,
    x = 10,
    A = 30,
    D = 50,
    S = 60,
    N = 40,
    I = 500,
    L = 75,
    M = 200,
    R = "/user/session",
    P = "/user/login",
    F = "/user/signup",
    H = "/user/resetpass",
    z = "/loginrequest/create",
    B = "/loginrequest/login",
    U = "/user/forgotpass",
    j = "/feedback",
    G = "/import/workflowy",
    q = "/upgrade/hasredeemed",
    W = "/user/google_login",
    Y = "/user/apple_login",
    K = "/user/google_link",
    V = [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July",
      "August",
      "September",
      "October",
      "November",
      "December",
    ],
    X = "dropbox",
    Z = "gdrive",
    J = "gcal",
    Q = 0,
    ee = 1,
    te = 2,
    ie = 3,
    ne = 4,
    oe = {
      ACTIVE_NORMAL: "active_normal",
      ACTIVE_SLEEPING: "active_sleeping",
      PASSIVE_NORMAL: "passive_normal",
      PASSIVE_SLEEPING: "passive_sleeping",
    },
    se = {};
  (se[oe.ACTIVE_NORMAL] = 1),
    (se[oe.ACTIVE_SLEEPING] = 5),
    (se[oe.PASSIVE_NORMAL] = 5),
    (se[oe.PASSIVE_SLEEPING] = 15);
  var re = 1728e5,
    ae = "Ok",
    _e = "NotSignedIn",
    ce = "NetError",
    le = "BadResponse",
    ue = "Deprecated",
    he = d + "/assets/img/app/uploading.png",
    pe = {
      title: "Upload quota exceeded",
      message:
        "You've run out of your 1 GB monthly quota, please wait for your quota to free up. You can check your quota in Settings -> Dynalist Pro.",
    },
    de = {
      title: "File too large",
      message:
        "The file you are trying to upload is too big. Please upload files that are less than 50 MB.",
    },
    fe = 0,
    ge = 1,
    me = { 0: "dot", 1: "arabic" },
    ve = "control",
    ye = "shift",
    be = "alt",
    we = "ctrl",
    ke = "meta",
    Ee = {
      0: "",
      1: "#f9d0c4",
      2: "#fed8b1",
      3: "#fef2c0",
      4: "#c8e3c0",
      5: "#c5def5",
      6: "#d4c5f9",
    },
    Ce = {
      0: "",
      1: "#651f0a",
      2: "#743b01",
      3: "#6f5a02",
      4: "#2a4920",
      5: "#10385d",
      6: "#403a67",
    },
    Te = {
      none: 0,
      red: 1,
      orange: 2,
      yellow: 3,
      green: 4,
      blue: 5,
      purple: 6,
    },
    Oe = "mod-color-label-",
    xe = [];
  for (var Ae in Ee) xe.push(Oe + Ae);
  var De = "",
    Se = "grab",
    Ne = "grabbing",
    Ie = 6e4,
    Le = "text/plain; charset=UTF-8";
  function Me(e, t, i, n, o) {
    var s = (o = o || {}).timeout,
      r = o.contentType,
      a = o.raw,
      _ = o.headers;
    a || (t = JSON.stringify(t)),
      s || (s = Ie),
      r || (r = Le),
      $.ajax(e, {
        type: "POST",
        data: t,
        contentType: r,
        timeout: s,
        xhrFields: { withCredentials: !0 },
        processData: !1,
        headers: _,
        dataType: "json",
        success: i,
        error: n,
      });
  }
  var Re = null;
  function Pe() {
    return Re;
  }
  var Fe = (function () {
      var g = String.fromCharCode,
        i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
        n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$",
        o = {};
      function s(e, t) {
        if (!o[e]) {
          o[e] = {};
          for (var i = 0; i < e.length; i++) o[e][e.charAt(i)] = i;
        }
        return o[e][t];
      }
      var r = {
        compressToBase64: function (e) {
          if (null == e) return "";
          for (
            var t = r._compress(e, 6, function (e) {
              return i.charAt(e);
            });
            0 < t.length % 4;

          )
            t += "=";
        },
        decompressFromBase64: function (t) {
          return null === t
            ? ""
            : "" === t
            ? null
            : r._decompress(t.length, 32, function (e) {
                return s(i, t.charAt(e));
              });
        },
        compressToUTF16: function (e) {
          return null == e
            ? ""
            : r._compress(e, 15, function (e) {
                return g(e + 32);
              }) + " ";
        },
        decompressFromUTF16: function (t) {
          return null == t
            ? ""
            : "" == t
            ? null
            : r._decompress(t.length, 16384, function (e) {
                return t.charCodeAt(e) - 32;
              });
        },
        compressToUint8Array: function (e) {
          for (
            var t = r.compress(e),
              i = new Uint8Array(2 * t.length),
              n = 0,
              o = t.length;
            n < o;
            n++
          ) {
            var s = t.charCodeAt(n);
            (i[2 * n] = s >>> 8), (i[2 * n + 1] = s % 256);
          }
          return i;
        },
        decompressFromUint8Array: function (e) {
          if (null == e) return r.decompress(e);
          for (var t = new Array(e.length / 2), i = 0, n = t.length; i < n; i++)
            t[i] = 256 * e[2 * i] + e[2 * i + 1];
          var o = [];
          return (
            t.forEach(function (e) {
              o.push(g(e));
            }),
            r.decompress(o.join(""))
          );
        },
        compressToEncodedURIComponent: function (e) {
          return null == e
            ? ""
            : r._compress(e, 6, function (e) {
                return n.charAt(e);
              });
        },
        decompressFromEncodedURIComponent: function (t) {
          return null == t
            ? ""
            : "" == t
            ? null
            : ((t = t.replace(/ /g, "+")),
              r._decompress(t.length, 32, function (e) {
                return s(n, t.charAt(e));
              }));
        },
        compress: function (e) {
          return r._compress(e, 16, function (e) {
            return g(e);
          });
        },
        _compress: function (e, t, i) {
          if (null == e) return "";
          var n,
            o,
            s,
            r = {},
            a = {},
            _ = "",
            c = "",
            l = "",
            u = 2,
            h = 3,
            p = 2,
            d = [],
            f = 0,
            g = 0;
          for (s = 0; s < e.length; s += 1)
            if (
              ((_ = e.charAt(s)),
              Object.prototype.hasOwnProperty.call(r, _) ||
                ((r[_] = h++), (a[_] = !0)),
              (c = l + _),
              Object.prototype.hasOwnProperty.call(r, c))
            )
              l = c;
            else {
              if (Object.prototype.hasOwnProperty.call(a, l)) {
                if (l.charCodeAt(0) < 256) {
                  for (n = 0; n < p; n++)
                    (f <<= 1),
                      g == t - 1 ? ((g = 0), d.push(i(f)), (f = 0)) : g++;
                  for (o = l.charCodeAt(0), n = 0; n < 8; n++)
                    (f = (f << 1) | (1 & o)),
                      g == t - 1 ? ((g = 0), d.push(i(f)), (f = 0)) : g++,
                      (o >>= 1);
                } else {
                  for (o = 1, n = 0; n < p; n++)
                    (f = (f << 1) | o),
                      g == t - 1 ? ((g = 0), d.push(i(f)), (f = 0)) : g++,
                      (o = 0);
                  for (o = l.charCodeAt(0), n = 0; n < 16; n++)
                    (f = (f << 1) | (1 & o)),
                      g == t - 1 ? ((g = 0), d.push(i(f)), (f = 0)) : g++,
                      (o >>= 1);
                }
                0 == --u && ((u = Math.pow(2, p)), p++), delete a[l];
              } else
                for (o = r[l], n = 0; n < p; n++)
                  (f = (f << 1) | (1 & o)),
                    g == t - 1 ? ((g = 0), d.push(i(f)), (f = 0)) : g++,
                    (o >>= 1);
              0 == --u && ((u = Math.pow(2, p)), p++),
                (r[c] = h++),
                (l = String(_));
            }
          if ("" !== l) {
            if (Object.prototype.hasOwnProperty.call(a, l)) {
              if (l.charCodeAt(0) < 256) {
                for (n = 0; n < p; n++)
                  (f <<= 1),
                    g == t - 1 ? ((g = 0), d.push(i(f)), (f = 0)) : g++;
                for (o = l.charCodeAt(0), n = 0; n < 8; n++)
                  (f = (f << 1) | (1 & o)),
                    g == t - 1 ? ((g = 0), d.push(i(f)), (f = 0)) : g++,
                    (o >>= 1);
              } else {
                for (o = 1, n = 0; n < p; n++)
                  (f = (f << 1) | o),
                    g == t - 1 ? ((g = 0), d.push(i(f)), (f = 0)) : g++,
                    (o = 0);
                for (o = l.charCodeAt(0), n = 0; n < 16; n++)
                  (f = (f << 1) | (1 & o)),
                    g == t - 1 ? ((g = 0), d.push(i(f)), (f = 0)) : g++,
                    (o >>= 1);
              }
              0 == --u && ((u = Math.pow(2, p)), p++), delete a[l];
            } else
              for (o = r[l], n = 0; n < p; n++)
                (f = (f << 1) | (1 & o)),
                  g == t - 1 ? ((g = 0), d.push(i(f)), (f = 0)) : g++,
                  (o >>= 1);
            0 == --u && ((u = Math.pow(2, p)), p++);
          }
          for (o = 2, n = 0; n < p; n++)
            (f = (f << 1) | (1 & o)),
              g == t - 1 ? ((g = 0), d.push(i(f)), (f = 0)) : g++,
              (o >>= 1);
          for (;;) {
            if (((f <<= 1), g == t - 1)) {
              d.push(i(f));
              break;
            }
            g++;
          }
          return d.join("");
        },
        decompress: function (t) {
          return null == t
            ? ""
            : "" == t
            ? null
            : r._decompress(t.length, 32768, function (e) {
                return t.charCodeAt(e);
              });
        },
        _decompress: function (e, t, i) {
          var n,
            o,
            s,
            r,
            a,
            _,
            c = [0, 1, 2],
            l = 4,
            u = 4,
            h = 3,
            p = "",
            d = [],
            f = { val: i(0), position: t, index: 1 };
          for (o = 0, r = Math.pow(2, 2), a = 1; a != r; )
            (s = f.val & f.position),
              (f.position >>= 1),
              0 == f.position && ((f.position = t), (f.val = i(f.index++))),
              (o |= (0 < s ? 1 : 0) * a),
              (a <<= 1);
          switch (o) {
            case 0:
              for (o = 0, r = Math.pow(2, 8), a = 1; a != r; )
                (s = f.val & f.position),
                  (f.position >>= 1),
                  0 == f.position && ((f.position = t), (f.val = i(f.index++))),
                  (o |= (0 < s ? 1 : 0) * a),
                  (a <<= 1);
              _ = g(o);
              break;
            case 1:
              for (o = 0, r = Math.pow(2, 16), a = 1; a != r; )
                (s = f.val & f.position),
                  (f.position >>= 1),
                  0 == f.position && ((f.position = t), (f.val = i(f.index++))),
                  (o |= (0 < s ? 1 : 0) * a),
                  (a <<= 1);
              _ = g(o);
              break;
            case 2:
              return "";
          }
          for (n = c[3] = _, d.push(_); ; ) {
            if (f.index > e) return "";
            for (o = 0, r = Math.pow(2, h), a = 1; a != r; )
              (s = f.val & f.position),
                (f.position >>= 1),
                0 == f.position && ((f.position = t), (f.val = i(f.index++))),
                (o |= (0 < s ? 1 : 0) * a),
                (a <<= 1);
            switch ((_ = o)) {
              case 0:
                for (o = 0, r = Math.pow(2, 8), a = 1; a != r; )
                  (s = f.val & f.position),
                    (f.position >>= 1),
                    0 == f.position &&
                      ((f.position = t), (f.val = i(f.index++))),
                    (o |= (0 < s ? 1 : 0) * a),
                    (a <<= 1);
                (c[u++] = g(o)), (_ = u - 1), l--;
                break;
              case 1:
                for (o = 0, r = Math.pow(2, 16), a = 1; a != r; )
                  (s = f.val & f.position),
                    (f.position >>= 1),
                    0 == f.position &&
                      ((f.position = t), (f.val = i(f.index++))),
                    (o |= (0 < s ? 1 : 0) * a),
                    (a <<= 1);
                (c[u++] = g(o)), (_ = u - 1), l--;
                break;
              case 2:
                return d.join("");
            }
            if ((0 == l && ((l = Math.pow(2, h)), h++), c[_])) p = c[_];
            else {
              if (_ !== u) return null;
              p = n + n.charAt(0);
            }
            d.push(p),
              (c[u++] = n + p.charAt(0)),
              (n = p),
              0 == --l && ((l = Math.pow(2, h)), h++);
          }
        },
      };
      return r;
    })(),
    He = (function () {
      function s() {}
      return (
        (s.encode_url_query = function (e) {
          if (!e) return "";
          var t = [];
          for (var i in e)
            e.hasOwnProperty(i) &&
              e[i] &&
              (!0 === e[i]
                ? t.push(encodeURIComponent(i))
                : t.push(
                    encodeURIComponent(i) + "=" + encodeURIComponent(e[i]),
                  ));
          return t.join("&");
        }),
        (s.decode_url_query = function (e) {
          var t = {};
          if (!e || "" === e.trim()) return t;
          for (var i = e.split("&"), n = 0; n < i.length; n++) {
            var o = i[n].split("=");
            if (1 <= o.length && o[0]) {
              var s = decodeURIComponent(o[0]);
              2 === o.length ? (t[s] = decodeURIComponent(o[1])) : (t[s] = !0);
            }
          }
          return t;
        }),
        (s.decode_url = function (e) {
          e || (e = "");
          var t = e.split("#"),
            i = 1 < t.length ? t[1] : "",
            n = t[0].split("?"),
            o = 1 < n.length ? n[1] : "";
          return {
            path: n[0],
            query: s.decode_url_query(o),
            hash: s.decode_url_query(i),
          };
        }),
        s
      );
    })(),
    ze = DYNALIST.SERVICES_URL || "https://dynlst.com",
    Be = "/update",
    Ue = 5e3,
    je = 1.5,
    Ge = 6e5,
    qe = 3e5,
    $e = 864e5,
    We = 500,
    Ye = 5e3,
    Ke = 100;
  function Ve() {
    return Date.now();
  }
  function Xe(e, t, i, n) {
    Me(ze + e, t, i, n);
  }
  function Ze() {
    return He.decode_url(window.location.href).query.src || null;
  }
  var Je = (function () {
      function e(e) {
        (this.uid = e),
          (this.ts_diff = 0),
          (this.ts = 0),
          (this.data = []),
          (this.length = 0),
          (this.failed = 0),
          (this.working = !1),
          (this.lz = !0),
          (this.timer = null),
          (this._request_run = debounce(this.run, Ue));
      }
      return (
        (e.prototype.request_run = function () {
          var e = Math.pow(je, this.failed) * Ue;
          Ge < e && (e = Ge),
            (e = Math.floor(e)),
            this._request_run.set_timeout(e),
            this._request_run();
        }),
        (e.prototype.run = function () {
          if (0 !== this.data.length) {
            var e = Ve();
            this.ts < e - qe ? this.refresh() : this.push();
          }
        }),
        (e.prototype.refresh = function () {
          var i = this;
          if (!this.working) {
            var n = Ve();
            (this.working = !0),
              Xe(
                Be,
                {},
                function () {
                  (i.working = !1), (i.failed = 0);
                  var e = Ve(),
                    t = e - n;
                  (i.ts_diff = Math.floor(t / 2)), (i.ts = e), i.run();
                },
                function () {
                  (i.working = !1), i.failed++, i.request_run();
                },
              );
          }
        }),
        (e.prototype.track = function (e, t, i) {
          try {
            if (!0 === e) return void this.run();
            (t = t || {}),
              unsafe(function () {
                return (function e(t) {
                  if (t.url) {
                    t.url = window.location.href;
                    var i = unsafe(Ze);
                    i && (t.src = i);
                  }
                  t.referrer &&
                    ((t.referrer = document.referrer),
                    t.referrer || delete t.referrer);
                })(t);
              }),
              this.data.push({ type: e, ts: Ve(), data: t }),
              this.prune(),
              i ? this.run() : this.request_run();
          } catch (e) {
            track_error(e);
          }
        }),
        (e.prototype.prune = function () {
          if (!(this.data.length < We)) {
            for (
              var e = Ve() - $e, t = 0;
              t < this.data.length && !(this.data[t].ts > e);
              t++
            );
            0 < t && this.data.splice(0, t),
              this.data.length > Ye &&
                this.data.splice(0, this.data.length - Ye);
          }
        }),
        (e.prototype.push = function () {
          var t = this;
          if (!this.working && 0 !== this.data.length) {
            this.length = Math.min(Ke, this.data.length);
            var e = this.data.slice(0, this.length);
            this.lz && ((e = JSON.stringify(e)), (e = Fe.compressToUTF16(e)));
            var i = {
                uid: this.uid,
                ts: this.ts_diff + Ve(),
                lz: this.lz,
                data: e,
              },
              n = function (e) {
                (t.working = !1),
                  e
                    ? ((t.failed = 0), t.data.splice(0, t.length))
                    : (t.failed++, (t.length = 0)),
                  0 < t.data.length && t.request_run();
              };
            (this.working = !0),
              Xe(
                Be,
                i,
                function (e) {
                  n(bool(e && e.status));
                },
                function () {
                  n(!1);
                },
              );
          }
        }),
        (e.prototype.preview = function () {
          return this.data
            .map(function (e) {
              return JSON.stringify(e);
            })
            .join("\n");
        }),
        e
      );
    })(),
    Qe = (function () {
      var r,
        s,
        a = window,
        _ = "fulfilled",
        c = (function () {
          var t = [],
            i = 0;
          function n() {
            for (; t.length - i; ) {
              try {
                t[i]();
              } catch (e) {
                a.console && a.console.error(e);
              }
              (t[i++] = s), 1024 == i && (t.splice(0, 1024), (i = 0));
            }
          }
          var o = (function () {
            if ("undefined" == typeof MutationObserver)
              return function () {
                setTimeout(n, 0);
              };
            var e = document.createElement("div");
            return (
              new MutationObserver(n).observe(e, { attributes: !0 }),
              function () {
                e.setAttribute("a", 0);
              }
            );
          })();
          return function (e) {
            t.push(e), t.length - i == 1 && o();
          };
        })();
      function l(e) {
        if (e) {
          var t = this;
          e(
            function (e) {
              t.resolve(e);
            },
            function (e) {
              t.reject(e);
            },
          );
        }
      }
      function u(t, e) {
        if ("function" == typeof t.y)
          try {
            var i = t.y.call(s, e);
            t.p.resolve(i);
          } catch (e) {
            t.p.reject(e);
          }
        else t.p.resolve(e);
      }
      function h(t, e) {
        if ("function" == typeof t.n)
          try {
            var i = t.n.call(s, e);
            t.p.resolve(i);
          } catch (e) {
            t.p.reject(e);
          }
        else t.p.reject(e);
      }
      return (
        (l.prototype = {
          resolve: function (i) {
            if (this.state === r) {
              if (i === this)
                return this.reject(
                  new TypeError("Attempt to resolve promise with self"),
                );
              var n = this;
              if (i && ("function" == typeof i || "object" == typeof i))
                try {
                  var t = !0,
                    e = i.then;
                  if ("function" == typeof e)
                    return void e.call(
                      i,
                      function (e) {
                        t && ((t = !1), n.resolve(e));
                      },
                      function (e) {
                        t && ((t = !1), n.reject(e));
                      },
                    );
                } catch (e) {
                  return void (t && this.reject(e));
                }
              (this.state = _),
                (this.v = i),
                n.c &&
                  c(function () {
                    for (var e = 0, t = n.c.length; e < t; e++) u(n.c[e], i);
                  });
            }
          },
          reject: function (i) {
            if (this.state === r) {
              (this.state = "rejected"), (this.v = i);
              var n = this.c;
              n
                ? c(function () {
                    for (var e = 0, t = n.length; e < t; e++) h(n[e], i);
                  })
                : !l.suppressUncaughtRejectionError &&
                  a.console &&
                  a.console.log(
                    "You upset Zousan. Please catch rejections: ",
                    i,
                    i ? i.stack : null,
                  );
            }
          },
          then: function (e, t) {
            var i = new l(),
              n = { y: e, n: t, p: i };
            if (this.state === r) this.c ? this.c.push(n) : (this.c = [n]);
            else {
              var o = this.state,
                s = this.v;
              c(function () {
                o === _ ? u(n, s) : h(n, s);
              });
            }
            return i;
          },
          catch: function (e) {
            return this.then(null, e);
          },
          finally: function (e) {
            return this.then(e, e);
          },
          timeout: function (e, n) {
            n = n || "Timeout";
            var o = this;
            return new l(function (t, i) {
              setTimeout(function () {
                i(Error(n));
              }, e),
                o.then(
                  function (e) {
                    t(e);
                  },
                  function (e) {
                    i(e);
                  },
                );
            });
          },
        }),
        (l.resolve = function (e) {
          var t = new l();
          return t.resolve(e), t;
        }),
        (l.reject = function (e) {
          var t = new l();
          return t.reject(e), t;
        }),
        (l.all = function (i) {
          var n = [],
            o = 0,
            s = new l();
          function e(e, t) {
            (e && "function" == typeof e.then) || (e = l.resolve(e)),
              e.then(
                function (e) {
                  (n[t] = e), ++o == i.length && s.resolve(n);
                },
                function (e) {
                  s.reject(e);
                },
              );
          }
          for (var t = 0; t < i.length; t++) e(i[t], t);
          return i.length || s.resolve(n), s;
        }),
        ((a.Zousan = l).soon = c),
        (l.cb_resolve = function (t) {
          return function (e) {
            t && t(null, e);
          };
        }),
        (l.cb_reject = function (t) {
          return function (e) {
            t && t(e);
          };
        }),
        l
      );
    })(),
    et = "web";
  DYNALIST.IS_STANDALONE_MODE &&
    ((et = "desktop"),
    window.process &&
      window.process.platform &&
      (et = window.process.platform)),
    (window.Zousan = Qe),
    (DYNALIST.PLATFORM = et);
  var tt = new Je(DYNALIST.SESSION.identity);
  (window.ghost = tt),
    (window.__ = tt.track.bind(tt)),
    __("hit", { url: !0, referrer: !0 }, !0);
  var it = function (e, t) {
    return (it =
      Object.setPrototypeOf ||
      ({ __proto__: [] } instanceof Array &&
        function (e, t) {
          e.__proto__ = t;
        }) ||
      function (e, t) {
        for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
      })(e, t);
  };
  function nt(e, t) {
    function i() {
      this.constructor = e;
    }
    it(e, t),
      (e.prototype =
        null === t ? Object.create(t) : ((i.prototype = t.prototype), new i()));
  }
  var ot,
    st = function e() {},
    rt = (function (o) {
      function e(e, t, i) {
        var n = o.call(this) || this;
        return (n.node = e), (n.oldMeta = t), (n.newMeta = i), n;
      }
      return (
        nt(e, o),
        (e.prototype.apply = function (e) {
          e.edit_meta(this.node, this.newMeta);
        }),
        (e.prototype.revert = function (e) {
          e.edit_meta(this.node, this.oldMeta);
        }),
        e
      );
    })(st),
    at = (function (r) {
      function e(e, t, i, n, o) {
        var s = r.call(this) || this;
        return (
          (s.node = e),
          (s.oldParent = t),
          (s.oldLocId = i),
          (s.newParent = n),
          (s.newLocId = o),
          s
        );
      }
      return (
        nt(e, r),
        (e.prototype.apply = function (e) {
          e.attach_node(this.node, this.newParent, this.newLocId);
        }),
        (e.prototype.revert = function (e) {
          e.attach_node(this.node, this.oldParent, this.oldLocId);
        }),
        e
      );
    })(st),
    _t = (function () {
      function e() {
        (this.actions = []),
          (this.oldSelection = null),
          (this.newSelection = null),
          (this.time = Date.now()),
          (this.mergeInfo = null);
      }
      return (
        (e.prototype.execute = function (e) {
          this.actions.push(e);
        }),
        (e.prototype.detach = function (e) {
          this.execute(new at(e, e.get_parent(), e.get_loc_id(), null, null));
        }),
        (e.prototype.attach = function (e, t, i) {
          var n = t.generate_loc_id(i);
          this.execute(new at(e, e.get_parent(), e.get_loc_id(), t, n));
        }),
        (e.prototype.edit = function (e, t) {
          var i = e.get_meta(),
            n = e.get_meta_object().clone(),
            o = t(n) || n;
          this.editMeta(e, i, o.write());
        }),
        (e.prototype.editMeta = function (e, t, i) {
          t !== i && this.execute(new rt(e, t, i));
        }),
        (e.prototype.setOldSelection = function (e) {
          this.oldSelection = e;
        }),
        (e.prototype.getOldSelection = function () {
          return this.oldSelection;
        }),
        (e.prototype.setNewSelection = function (e) {
          this.newSelection = e;
        }),
        (e.prototype.getNewSelection = function () {
          return this.newSelection;
        }),
        (e.prototype.setMergeInfo = function (e) {
          this.mergeInfo = e;
        }),
        (e.prototype.getMergeInfo = function () {
          return this.mergeInfo;
        }),
        (e.prototype.apply = function (e, t) {
          for (var i = this.actions, n = 0; n < i.length; n++) i[n].apply(e);
          t && t.apply(this.newSelection);
        }),
        (e.prototype.revert = function (e, t) {
          for (var i = this.actions, n = i.length - 1; 0 <= n; n--)
            i[n].revert(e);
          t && t.apply(this.oldSelection);
        }),
        (e.prototype.hasActions = function () {
          return 0 < this.actions.length;
        }),
        (e.prototype.getActions = function () {
          return this.actions;
        }),
        (e.prototype.getTime = function () {
          return this.time;
        }),
        (e.prototype.isExpired = function () {
          return Date.now() > this.time + re;
        }),
        e
      );
    })(),
    ct = (function () {
      function e(e, t) {
        (this.documentController = e),
          (this.nodeCollection = t),
          (this.lastEdit = null),
          (this.undoStack = []),
          (this.redoStack = []);
      }
      return (
        (e.prototype.historyChangeEvent = function () {
          var e = 0 < this.undoStack.length,
            t = 0 < this.redoStack.length;
          this.nodeCollection.trigger("history_change", e, t);
        }),
        (e.prototype.exec = function (e, t) {
          var i = new _t();
          if ((e && i.setOldSelection(e.get()), t(i), i.hasActions())) {
            e && !i.getNewSelection() && i.setNewSelection(e.get());
            var n = this.undoStack;
            this.merge(n.last(), i) && n.pop(),
              (this.redoStack = []),
              this.undoStack.push(i),
              i.apply(this.documentController, e),
              this.historyChangeEvent();
          }
          return i;
        }),
        (e.prototype.merge = function (e, t) {
          if (!e || e.getTime() + 1e3 < Date.now()) return !1;
          var i = e.getMergeInfo(),
            n = t.getMergeInfo();
          if (!i || !n || i.increase !== n.increase || i.note !== n.note)
            return !1;
          var o = e.getActions(),
            s = t.getActions();
          if (1 !== o.length && 1 !== s.length) return !1;
          var r = o[0],
            a = s[0];
          return (
            r instanceof rt &&
            a instanceof rt &&
            r.node === a.node &&
            (t.setOldSelection(e.getOldSelection()),
            (a.oldMeta = r.oldMeta),
            !0)
          );
        }),
        (e.prototype.undo = function (e) {
          var t = this.undoStack.pop();
          t &&
            (t.isExpired()
              ? (this.undoStack = [])
              : (t.setMergeInfo(null),
                this.redoStack.push(t),
                t.revert(this.documentController, e))),
            this.historyChangeEvent();
        }),
        (e.prototype.redo = function (e) {
          var t = this.redoStack.pop();
          t &&
            (t.isExpired()
              ? ((this.undoStack = []), (this.redoStack = []))
              : (this.undoStack.push(t), t.apply(this.documentController, e))),
            this.historyChangeEvent();
        }),
        (e.prototype.prune = function () {
          if (0 < this.undoStack.length) {
            var e = void 0;
            for (
              e = 0;
              e < this.undoStack.length && this.undoStack[e].isExpired();
              e++
            );
            0 < e && this.undoStack.splice(0, e);
          }
          0 < this.redoStack.length &&
            this.redoStack[this.redoStack.length - 1].isExpired() &&
            ((this.undoStack = []), (this.redoStack = [])),
            this.historyChangeEvent();
        }),
        e
      );
    })(),
    lt = 0,
    ut = 1,
    ht = 2,
    pt = 3,
    dt =
      (((ot = {})[lt] = "Loading"),
      (ot[ut] = "Not saved yet"),
      (ot[ht] = "Saved locally"),
      (ot[pt] = "Synced with server"),
      ot),
    ft = (function () {
      function e(e, t) {
        (this.controller = e),
          (this.sync_manager = t),
          (this.working = !1),
          (this.passive = !1),
          (this.error = ""),
          (this.error_log = []),
          (this.disabled = !1),
          (this.sync_state = lt),
          (this.last_state_ts = 0),
          t.add_component(this);
      }
      return (
        (e.prototype.get_controller = function () {
          return this.controller;
        }),
        (e.prototype.get_sync_state = function () {
          return this.sync_state;
        }),
        (e.prototype.set_sync_state = function (e) {
          this.sync_state !== e &&
            ((this.last_state_ts = Date.now()),
            (this.sync_state = e),
            this.sync_manager.update());
        }),
        (e.prototype.has_error = function () {
          return bool(this.error);
        }),
        (e.prototype.get_error = function () {
          return this.error;
        }),
        (e.prototype.clear_error = function () {
          this.set_error("");
        }),
        (e.prototype.set_error = function (e) {
          e || (e = ""),
            this.error !== e && ((this.error = e), this.sync_manager.update());
        }),
        (e.prototype.get_last_state_ts = function () {
          return this.last_state_ts;
        }),
        (e.prototype.is_working = function () {
          return this.working;
        }),
        (e.prototype.set_working = function (e) {
          this.working !== e &&
            ((this.working = e), this.sync_manager.update());
        }),
        (e.prototype.is_passive = function () {
          return this.passive;
        }),
        (e.prototype.set_passive = function (e) {
          this.passive = bool(e);
        }),
        (e.prototype.push_error_log = function (e) {
          this.error_log.push(e),
            5 < this.error_log.length &&
              this.error_log.splice(0, this.error_log.length - 5);
        }),
        (e.prototype.get_error_log = function () {
          return this.error_log;
        }),
        (e.prototype.is_disabled = function () {
          return this.disabled || this.sync_manager.is_disabled();
        }),
        (e.prototype.set_disabled = function (e) {
          this.disabled !== e &&
            ((this.disabled = e), this.sync_manager.update());
        }),
        (e.prototype.handle_sync_exception = function (e) {
          this.push_error_log("An error occurred during Sync. " + e.message);
        }),
        (e.prototype.handle_hash_check_fail = function () {
          this.push_error_log("Found corrupted state.");
        }),
        e
      );
    })(),
    gt = (function () {
      function e(e) {
        (this.components = []),
          (this.update_callback = e),
          (this.disabled = !1);
      }
      return (
        (e.prototype.get_sync_state = function () {
          var i = pt;
          return (
            Array.each(this.components, function (e) {
              var t = e.get_sync_state();
              t != lt && t < i && (i = t);
            }),
            i
          );
        }),
        (e.prototype.is_working = function () {
          var t = !1;
          return (
            Array.each(this.components, function (e) {
              if (e.is_working() && !e.is_passive()) return !(t = !0);
            }),
            t
          );
        }),
        (e.prototype.get_earliest_unsynced = function () {
          var i = Date.now();
          return (
            Array.each(this.components, function (e) {
              if (e.get_sync_state() === ut) {
                var t = e.get_last_state_ts();
                0 < t && t < i && (i = t);
              }
            }),
            i
          );
        }),
        (e.prototype.is_disabled = function () {
          return this.disabled;
        }),
        (e.prototype.set_disabled = function (e) {
          this.disabled !== e && ((this.disabled = e), this.update());
        }),
        (e.prototype.has_error = function () {
          var t = !1;
          return (
            Array.each(this.components, function (e) {
              if (e.has_error()) return !(t = !0);
            }),
            t
          );
        }),
        (e.prototype.add_component = function (e) {
          this.components.push(e);
        }),
        (e.prototype.remove_component = function (e) {
          this.components.remove(e);
        }),
        (e.prototype.get_components = function () {
          return this.components;
        }),
        (e.prototype.update = function () {
          this.update_callback();
        }),
        e
      );
    })(),
    mt = (function () {
      function e(e) {
        e || (e = new vt()), (this.events = e);
      }
      return (
        (e.prototype.on = function (e, t, i) {
          return this.events.on(e, t, i);
        }),
        (e.prototype.off = function (e, t) {
          this.events.off(e, t);
        }),
        (e.prototype.offref = function (e) {
          this.events.offref(e);
        }),
        (e.prototype.trigger = function (e) {
          for (var t, i = [], n = 1; n < arguments.length; n++)
            i[n - 1] = arguments[n];
          (t = this.events).trigger.apply(
            t,
            (function e() {
              for (var t = 0, i = 0, n = arguments.length; i < n; i++)
                t += arguments[i].length;
              var o = Array(t),
                s = 0;
              for (i = 0; i < n; i++)
                for (var r = arguments[i], a = 0, _ = r.length; a < _; a++, s++)
                  o[s] = r[a];
              return o;
            })([e], i),
          );
        }),
        e
      );
    })(),
    vt = (function () {
      function e(e) {
        (this._ = {}),
          e &&
            ((e.on = this.on.bind(this)),
            (e.off = this.off.bind(this)),
            (e.offref = this.offref.bind(this)),
            (e.trigger = this.trigger.bind(this))),
          (this.disabled = !1);
      }
      return (
        (e.prototype.on = function (e, t, i) {
          var n = this._,
            o = n[e];
          o || (n[e] = o = []);
          var s = { name: e, fn: t, ctx: i };
          return o.push(s), s;
        }),
        (e.prototype.off = function (e, t) {
          var i = this._,
            n = i[e],
            o = [];
          if (n && t)
            for (var s = 0; s < n.length; s++) n[s].fn !== t && o.push(n[s]);
          0 < o.length ? (i[e] = o) : delete i[e];
        }),
        (e.prototype.offref = function (e) {
          if (e) {
            var t = e.name,
              i = this._,
              n = i[t],
              o = [];
            if (n && e)
              for (var s = 0; s < n.length; s++) n[s] !== e && o.push(n[s]);
            o.length ? (i[t] = o) : delete i[t];
          }
        }),
        (e.prototype.trigger = function (e) {
          for (var t = [], i = 1; i < arguments.length; i++)
            t[i - 1] = arguments[i];
          if (!this.disabled) {
            var n = this._[e];
            if (n) {
              n = n.slice();
              for (var o = 0; o < n.length; o++) this.tryTrigger(n[o], t);
            }
          }
        }),
        (e.prototype.tryTrigger = function (e, t) {
          try {
            e.fn.apply(e.ctx, t);
          } catch (e) {
            setTimeout(function () {
              throw e;
            }, 0);
          }
        }),
        (e.prototype.disable_for = function (e) {
          try {
            (this.disabled = !0), e();
          } finally {
            this.disabled = !1;
          }
        }),
        e
      );
    })(),
    yt = (function (i) {
      function e(e) {
        var t = i.call(this, e) || this;
        return (t.parent = null), (t.index = -1), t;
      }
      return (
        nt(e, i),
        (e.prototype.get_index = function () {
          return this.index;
        }),
        (e.prototype.set_index = function (e) {
          this.index !== e &&
            ((this.index = e), this.trigger("index_change", this));
        }),
        (e.prototype.has_ancestor = function (e) {
          return (
            this.parent && (this.parent === e || this.parent.has_ancestor(e))
          );
        }),
        (e.prototype.next_ancestor = function (e) {
          return this.parent === e
            ? this
            : this.parent
            ? this.parent.next_ancestor(e)
            : void 0;
        }),
        (e.prototype.has_parent = function () {
          return bool(this.parent);
        }),
        (e.prototype.get_parent = function () {
          return this.parent;
        }),
        (e.prototype.detach = function () {
          this.parent && this.parent.detach_child(this);
        }),
        (e.prototype.remove = function () {
          this.parent && this.parent.detach_child(this),
            this.trigger("remove", this);
        }),
        (e.prototype.next = function () {
          if (this.parent) return this.parent.get_child(this.index + 1);
        }),
        (e.prototype.prev = function () {
          if (this.parent) return this.parent.get_child(this.index - 1);
        }),
        (e.prototype.is_first = function () {
          return 0 === this.index;
        }),
        (e.prototype.is_last = function () {
          return (
            this.has_parent() &&
            this.index === this.parent.get_children().length() - 1
          );
        }),
        e
      );
    })(mt),
    bt = (function () {
      function e() {
        (this.a = []), (this.b = []);
      }
      return (
        (e.prototype.enqueue = function (e) {
          this.a.push(e);
        }),
        (e.prototype.flip = function () {
          if (0 === this.b.length)
            for (var e = this.a.length - 1; 0 <= e; e--)
              this.b.push(this.a.pop());
        }),
        (e.prototype.dequeue = function () {
          if (!this.empty) return this.flip(), this.b.pop();
        }),
        Object.defineProperty(e.prototype, "empty", {
          get: function () {
            return 0 === this.length;
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(e.prototype, "length", {
          get: function () {
            return this.a.length + this.b.length;
          },
          enumerable: !0,
          configurable: !0,
        }),
        e
      );
    })();
  function wt(e) {
    return setTimeout(e, 0);
  }
  function kt(e) {
    return null !== e && ("string" == typeof e || e instanceof String);
  }
  function Et(e, t) {
    return e === t ? 0 : !e || e < t ? -1 : 1;
  }
  function Ct(e, t, i) {
    return (e ? Ot : Tt)(t, i);
  }
  function Tt(e, t) {
    e instanceof Array || (e = [e]);
    for (var i = [], n = e.length - 1; 0 <= n; n--) i.push(e[n]);
    for (; 0 < i.length; ) {
      var o = t(i.pop());
      if (!1 === o) return;
      if (o && o instanceof Array)
        for (n = o.length - 1; 0 <= n; n--) i.push(o[n]);
    }
  }
  function Ot(e, t) {
    e instanceof Array || (e = [e]);
    for (var i = new bt(), n = 0; n < e.length; n++) i.enqueue(e[n]);
    for (; !i.empty; ) {
      var o = t(i.dequeue());
      if (!1 === o) return;
      if (o && o instanceof Array)
        for (n = 0; n < o.length; n++) i.enqueue(o[n]);
    }
  }
  function xt(e) {
    return e
      .replace(/&/g, "&amp;")
      .replace(/</g, "&lt;")
      .replace(/>/g, "&gt;")
      .replace(/"/g, "&quot;")
      .replace(/'/g, "&#039;");
  }
  var At = /[\-\[\]\/{}()*+?.\\^$|]/g;
  function Dt(e) {
    return (At.lastIndex = 0), e.replace(At, "\\$&");
  }
  function St(e) {
    var t = Date.now(),
      i = (t - (e = Math.min(parseInt(e, 10), t))) / 1e3;
    if (i <= 60) return "Just now";
    var n = Math.floor(i / 60);
    if (n < 60) return 1 === n ? "1 minute ago" : n + " minutes ago";
    var o = Math.floor(n / 60);
    if (o < 24) return 1 === o ? "1 hour ago" : o + " hours ago";
    var s = new Date(e);
    return V[s.getMonth()] + " " + s.getDate() + ", " + s.getFullYear();
  }
  function Nt(e) {
    return void 0 !== n[e] ? n[e] : "Unknown permission";
  }
  function It(e) {
    return e.replace(/\t/g, "    ");
  }
  function Lt(e) {
    return e.replace(/\r\n/g, "\n").replace(/\r/g, "\n");
  }
  function Mt(e) {
    for (var t = 0; t < e.length && " " == e[t]; ) t++;
    return e.slice(t);
  }
  function Rt(e, t) {
    return e.length > t - 3 ? e.substring(0, t - 3) + "..." : e;
  }
  function Pt(e) {
    return 0 === e.length ? null : e[e.length - 1];
  }
  function Ft(e) {
    for (
      var t = e / 1024, i = ["KB", "MB", "GB", "TB", "PB"], n = 0;
      1024 <= Math.abs(t) && n < i.length;

    )
      (t /= 1024), ++n;
    return t.toFixed(0) + " " + i[n];
  }
  function Ht(e) {
    return e.replace(/(?:\r\n|\r|\n)/g, "<br>");
  }
  function zt(e, t, i, n) {
    for (var o = e, s = 0; s < i.length; s++) {
      var r = i[s],
        a = r[0],
        _ = r[1];
      o < a && n(!1, o, a), n(!0, a, _), (o = _);
    }
    o < t && n(!1, o, t);
  }
  function Bt(e) {
    var t = document.createElement("textarea");
    (t.value = e), document.body.appendChild(t), t.focus(), t.select();
    var i = !1;
    try {
      i = document.execCommand("copy");
    } catch (e) {}
    return document.body.removeChild(t), i;
  }
  function Ut(e) {
    return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  }
  function jt(e, t, i) {
    return i || (i = t + "s"), 1 === e ? e + " " + t : Ut(e) + " " + i;
  }
  var Gt = (function () {
      function e(e) {
        (this.parent = e), (this.children = []);
      }
      return (
        (e.prototype.get = function (e) {
          if (this._range_check(e)) return this.children[e];
        }),
        (e.prototype.set = function (e, t) {
          (t.parent = this.parent), (this.children[e] = t).set_index(e);
        }),
        (e.prototype.length = function () {
          return this.children.length;
        }),
        (e.prototype.last_index = function () {
          return this.children.length - 1;
        }),
        (e.prototype.insert = function (e, t) {
          e > this.length() && (e = this.length()),
            (t.parent = this.parent),
            this.children.splice(e, 0, t),
            this._update_index(e);
        }),
        (e.prototype.prepend = function (e) {
          this.insert(0, e);
        }),
        (e.prototype.append = function (e) {
          (e.parent = this.parent),
            this.children.push(e),
            this._update_index(this.last_index());
        }),
        (e.prototype.remove = function (e) {
          (this.children = (function e(t, i) {
            return t.filter(function (e) {
              return i != e;
            });
          })(this.children, e)),
            (e.parent = null),
            e.set_index(-1),
            this._update_index(0);
        }),
        (e.prototype.clear = function () {
          this.children = [];
        }),
        (e.prototype.array = function () {
          return this.children.slice();
        }),
        (e.prototype.each = function (e, t, i) {
          return each(this.children, e, t, i);
        }),
        (e.prototype.is_empty = function () {
          return 0 === this.children.length;
        }),
        (e.prototype.some = function (e) {
          return this.children.some(e);
        }),
        (e.prototype.every = function (e) {
          return this.children.every(e);
        }),
        (e.prototype._range_check = function (e) {
          return 0 <= e && e < this.length();
        }),
        (e.prototype._update_index = function (e) {
          for (var t = e; t < this.children.length; t++)
            this.children[t].set_index(t);
        }),
        e
      );
    })(),
    qt = (function (i) {
      function e(e) {
        var t = i.call(this, e) || this;
        return (t.children = new Gt(t)), t;
      }
      return (
        nt(e, i),
        (e.prototype.get_children = function () {
          return this.children;
        }),
        (e.prototype.has_children = function () {
          return !this.children.is_empty();
        }),
        (e.prototype.num_children = function () {
          return this.children.length();
        }),
        (e.prototype.get_child_first = function () {
          return this.children.get(0);
        }),
        (e.prototype.get_child_last = function () {
          return this.children.get(this.children.last_index());
        }),
        (e.prototype.get_child = function (e) {
          return this.children.get(e);
        }),
        (e.prototype.attach_child = function (e, t, i) {
          if (t)
            return (
              t.detach(),
              this.children.insert(e, t),
              this.trigger("attach", t),
              t
            );
        }),
        (e.prototype.attach_child_first = function (e) {
          return this.attach_child(0, e);
        }),
        (e.prototype.attach_child_end = function (e) {
          return this.attach_child(this.children.length(), e);
        }),
        (e.prototype.detach_child = function (e) {
          return this.children.remove(e), this.trigger("detach", e, this), e;
        }),
        (e.prototype.remove = function () {
          var t = this;
          this.children.each(function (e) {
            t.detach_child(e);
          }),
            i.prototype.remove.call(this);
        }),
        e
      );
    })(yt),
    $t = (function (i) {
      function e(e) {
        var t = i.call(this, e) || this;
        return (t.collapsed = !1), t;
      }
      return (
        nt(e, i),
        (e.prototype.is_collapsed = function () {
          return this.collapsed;
        }),
        (e.prototype.set_collapsed = function (e, t) {
          this.collapsed !== e &&
            ((this.collapsed = e), this.trigger("collapse_change", this, t));
        }),
        (e.prototype.has_visible_children = function () {
          return this.has_children() && !this.is_collapsed();
        }),
        e
      );
    })(qt);
  function Wt() {
    return Date.now();
  }
  function Yt() {
    return (function e(t) {
      return t.replace(/\+/g, "-").replace(/\//g, "_").replace(/=+$/, "");
    })(
      (function e(t) {
        return btoa(String.fromCharCode.apply(null, t));
      })(
        (function e(t) {
          for (var i = new Array(t), n = 0; n < t; )
            for (
              var o = Math.random() * Math.pow(2, 32), s = 0;
              s < 4 && n < t;
              s++
            )
              (i[n] = o % 256), (o /= 256), n++;
          return i;
        })(18),
      ),
    );
  }
  function Kt() {
    return "~" + Yt();
  }
  !(function () {
    if (!window.atob) {
      var l =
          "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
        _ = l.split("");
      (window.atob = function (e) {
        if (/(=[^=]+|={3,})$/.test(e))
          throw new Error("String contains an invalid character");
        var t = 3 & (e = e.replace(/=/g, "")).length;
        if (1 == t) throw new Error("String contains an invalid character");
        for (var i = [], n = 0, o = 0, s = e.length / 4; n < s; ++n) {
          var r = l.indexOf(e[o++] || "A"),
            a = l.indexOf(e[o++] || "A"),
            _ = l.indexOf(e[o++] || "A"),
            c = l.indexOf(e[o++] || "A");
          if ((r | a | _ | c) < 0)
            throw new Error("String contains an invalid character");
          (i[i.length] = 255 & ((r << 2) | (a >> 4))),
            (i[i.length] = 255 & ((a << 4) | (_ >> 2))),
            (i[i.length] = 255 & ((_ << 6) | c));
        }
        return String.fromCharCode.apply(null, i).substr(0, i.length + t - 4);
      }),
        (window.btoa = function (e) {
          for (var t = [], i = 0, n = 0, o = e.length / 3; i < o; ++i) {
            var s = e.charCodeAt(n++),
              r = e.charCodeAt(n++),
              a = e.charCodeAt(n++);
            if (255 < (s | r | a))
              throw new Error("String contains an invalid character");
            t[t.length] =
              _[s >> 2] +
              _[((s << 4) & 63) | (r >> 4)] +
              (isNaN(r) ? "=" : _[((r << 2) & 63) | (a >> 6)]) +
              (isNaN(r + a) ? "=" : _[63 & a]);
          }
          return t.join("");
        });
    }
  })();
  var Vt = "0123456789abcdef".split(""),
    Xt = [-2147483648, 8388608, 32768, 128],
    Zt = [24, 16, 8, 0],
    Jt = [
      1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993,
      2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987,
      1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774,
      264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986,
      2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711,
      113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291,
      1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411,
      3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344,
      430227734, 506948616, 659060556, 883997877, 958139571, 1322822218,
      1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424,
      2428436474, 2756734187, 3204031479, 3329325298,
    ],
    Qt = [],
    ei = function (e) {
      var t = "string" != typeof e;
      t && e.constructor == ArrayBuffer && (e = new Uint8Array(e));
      var i,
        n,
        o,
        s,
        r,
        a,
        _,
        c,
        l,
        u,
        h,
        p,
        d,
        f,
        g,
        m,
        v,
        y,
        b,
        w,
        k = !0,
        E = !1,
        C = 0,
        T = 0,
        O = 0,
        x = e.length;
      (i = 1779033703),
        (n = 3144134277),
        (o = 1013904242),
        (s = 2773480762),
        (r = 1359893119),
        (a = 2600822924),
        (_ = 528734635),
        (c = 1541459225),
        (l = 0);
      do {
        if (
          ((Qt[0] = l),
          (Qt[16] =
            Qt[1] =
            Qt[2] =
            Qt[3] =
            Qt[4] =
            Qt[5] =
            Qt[6] =
            Qt[7] =
            Qt[8] =
            Qt[9] =
            Qt[10] =
            Qt[11] =
            Qt[12] =
            Qt[13] =
            Qt[14] =
            Qt[15] =
              0),
          t)
        )
          for (h = T; C < x && h < 64; ++C) Qt[h >> 2] |= e[C] << Zt[3 & h++];
        else
          for (h = T; C < x && h < 64; ++C)
            (u = e.charCodeAt(C)) < 128
              ? (Qt[h >> 2] |= u << Zt[3 & h++])
              : (u < 2048
                  ? (Qt[h >> 2] |= (192 | (u >> 6)) << Zt[3 & h++])
                  : (u < 55296 || 57344 <= u
                      ? (Qt[h >> 2] |= (224 | (u >> 12)) << Zt[3 & h++])
                      : ((u =
                          65536 +
                          (((1023 & u) << 10) | (1023 & e.charCodeAt(++C)))),
                        (Qt[h >> 2] |= (240 | (u >> 18)) << Zt[3 & h++]),
                        (Qt[h >> 2] |=
                          (128 | ((u >> 12) & 63)) << Zt[3 & h++])),
                    (Qt[h >> 2] |= (128 | ((u >> 6) & 63)) << Zt[3 & h++])),
                (Qt[h >> 2] |= (128 | (63 & u)) << Zt[3 & h++]));
        (O += h - T),
          (T = h - 64),
          C == x && ((Qt[h >> 2] |= Xt[3 & h]), ++C),
          (l = Qt[16]),
          x < C && h < 56 && ((Qt[15] = O << 3), (E = !0));
        var A = i,
          D = n,
          S = o,
          N = s,
          I = r,
          L = a,
          M = _,
          R = c;
        for (p = 16; p < 64; ++p)
          (d =
            (((m = Qt[p - 15]) >>> 7) | (m << 25)) ^
            ((m >>> 18) | (m << 14)) ^
            (m >>> 3)),
            (f =
              (((m = Qt[p - 2]) >>> 17) | (m << 15)) ^
              ((m >>> 19) | (m << 13)) ^
              (m >>> 10)),
            (Qt[p] = (Qt[p - 16] + d + Qt[p - 7] + f) << 0);
        for (w = D & S, p = 0; p < 64; p += 4)
          k
            ? ((v = 704751109),
              (R = ((m = Qt[0] - 210244248) - 1521486534) << 0),
              (N = (m + 143694565) << 0),
              (k = !1))
            : ((d =
                ((A >>> 2) | (A << 30)) ^
                ((A >>> 13) | (A << 19)) ^
                ((A >>> 22) | (A << 10))),
              (g = (v = A & D) ^ (A & S) ^ w),
              (R =
                (N +
                  (m =
                    R +
                    (f =
                      ((I >>> 6) | (I << 26)) ^
                      ((I >>> 11) | (I << 21)) ^
                      ((I >>> 25) | (I << 7))) +
                    ((I & L) ^ (~I & M)) +
                    Jt[p] +
                    Qt[p])) <<
                0),
              (N = (m + (d + g)) << 0)),
            (d =
              ((N >>> 2) | (N << 30)) ^
              ((N >>> 13) | (N << 19)) ^
              ((N >>> 22) | (N << 10))),
            (g = (y = N & A) ^ (N & D) ^ v),
            (M =
              (S +
                (m =
                  M +
                  (f =
                    ((R >>> 6) | (R << 26)) ^
                    ((R >>> 11) | (R << 21)) ^
                    ((R >>> 25) | (R << 7))) +
                  ((R & I) ^ (~R & L)) +
                  Jt[p + 1] +
                  Qt[p + 1])) <<
              0),
            (d =
              (((S = (m + (d + g)) << 0) >>> 2) | (S << 30)) ^
              ((S >>> 13) | (S << 19)) ^
              ((S >>> 22) | (S << 10))),
            (g = (b = S & N) ^ (S & A) ^ y),
            (L =
              (D +
                (m =
                  L +
                  (f =
                    ((M >>> 6) | (M << 26)) ^
                    ((M >>> 11) | (M << 21)) ^
                    ((M >>> 25) | (M << 7))) +
                  ((M & R) ^ (~M & I)) +
                  Jt[p + 2] +
                  Qt[p + 2])) <<
              0),
            (d =
              (((D = (m + (d + g)) << 0) >>> 2) | (D << 30)) ^
              ((D >>> 13) | (D << 19)) ^
              ((D >>> 22) | (D << 10))),
            (g = (w = D & S) ^ (D & N) ^ b),
            (I =
              (A +
                (m =
                  I +
                  (f =
                    ((L >>> 6) | (L << 26)) ^
                    ((L >>> 11) | (L << 21)) ^
                    ((L >>> 25) | (L << 7))) +
                  ((L & M) ^ (~L & R)) +
                  Jt[p + 3] +
                  Qt[p + 3])) <<
              0),
            (A = (m + (d + g)) << 0);
        (i = (i + A) << 0),
          (n = (n + D) << 0),
          (o = (o + S) << 0),
          (s = (s + N) << 0),
          (r = (r + I) << 0),
          (a = (a + L) << 0),
          (_ = (_ + M) << 0),
          (c = (c + R) << 0);
      } while (!E);
      return (
        Vt[(i >> 28) & 15] +
        Vt[(i >> 24) & 15] +
        Vt[(i >> 20) & 15] +
        Vt[(i >> 16) & 15] +
        Vt[(i >> 12) & 15] +
        Vt[(i >> 8) & 15] +
        Vt[(i >> 4) & 15] +
        Vt[15 & i] +
        Vt[(n >> 28) & 15] +
        Vt[(n >> 24) & 15] +
        Vt[(n >> 20) & 15] +
        Vt[(n >> 16) & 15] +
        Vt[(n >> 12) & 15] +
        Vt[(n >> 8) & 15] +
        Vt[(n >> 4) & 15] +
        Vt[15 & n] +
        Vt[(o >> 28) & 15] +
        Vt[(o >> 24) & 15] +
        Vt[(o >> 20) & 15] +
        Vt[(o >> 16) & 15] +
        Vt[(o >> 12) & 15] +
        Vt[(o >> 8) & 15] +
        Vt[(o >> 4) & 15] +
        Vt[15 & o] +
        Vt[(s >> 28) & 15] +
        Vt[(s >> 24) & 15] +
        Vt[(s >> 20) & 15] +
        Vt[(s >> 16) & 15] +
        Vt[(s >> 12) & 15] +
        Vt[(s >> 8) & 15] +
        Vt[(s >> 4) & 15] +
        Vt[15 & s] +
        Vt[(r >> 28) & 15] +
        Vt[(r >> 24) & 15] +
        Vt[(r >> 20) & 15] +
        Vt[(r >> 16) & 15] +
        Vt[(r >> 12) & 15] +
        Vt[(r >> 8) & 15] +
        Vt[(r >> 4) & 15] +
        Vt[15 & r] +
        Vt[(a >> 28) & 15] +
        Vt[(a >> 24) & 15] +
        Vt[(a >> 20) & 15] +
        Vt[(a >> 16) & 15] +
        Vt[(a >> 12) & 15] +
        Vt[(a >> 8) & 15] +
        Vt[(a >> 4) & 15] +
        Vt[15 & a] +
        Vt[(_ >> 28) & 15] +
        Vt[(_ >> 24) & 15] +
        Vt[(_ >> 20) & 15] +
        Vt[(_ >> 16) & 15] +
        Vt[(_ >> 12) & 15] +
        Vt[(_ >> 8) & 15] +
        Vt[(_ >> 4) & 15] +
        Vt[15 & _] +
        Vt[(c >> 28) & 15] +
        Vt[(c >> 24) & 15] +
        Vt[(c >> 20) & 15] +
        Vt[(c >> 16) & 15] +
        Vt[(c >> 12) & 15] +
        Vt[(c >> 8) & 15] +
        Vt[(c >> 4) & 15] +
        Vt[15 & c]
      );
    },
    ti = (function (s) {
      function e(e, t, i, n) {
        var o = s.call(this, e.events) || this;
        return (
          (o.userspace = e),
          (o.namespace = t),
          (o.id = i),
          (o.server_id = n),
          (o.ts = 0),
          (o.title = "Untitled"),
          o
        );
      }
      return (
        nt(e, s),
        (e.prototype.get_type = function () {
          return "file";
        }),
        (e.prototype.is_root = function () {
          return this.userspace.get_root_file() === this;
        }),
        (e.prototype.get_id = function () {
          return this.id;
        }),
        (e.prototype.has_server_id = function () {
          return bool(this.server_id);
        }),
        (e.prototype.get_server_id = function () {
          return this.server_id ? this.server_id : this.id;
        }),
        (e.prototype.set_server_id = function (e) {
          if (this.server_id !== e) {
            var t = this.server_id;
            (this.server_id = e),
              this.userspace.file_change_server_id(this, t, e),
              this.userspace.trigger("file_server_id_change", this, t, e);
          }
        }),
        (e.prototype.get_title = function () {
          return this.title;
        }),
        (e.prototype.set_title = function (e) {
          bool(e) || (e = "Untitled"),
            this.title !== e &&
              ((this.title = e),
              this.userspace.trigger("file_title_change", this));
        }),
        (e.prototype.get_ts = function () {
          return this.ts;
        }),
        (e.prototype.set_ts = function (e) {
          this.ts = e;
        }),
        (e.prototype.get_namespace = function () {
          return this.namespace;
        }),
        (e.prototype.set_namespace = function (e) {
          this.namespace != e &&
            ((this.namespace = e),
            this.userspace.trigger("file_namespace_change", this, e));
        }),
        (e.prototype.set_namespace_recursive = function (e) {
          this.set_namespace(e);
        }),
        (e.prototype.is_from_root_namespace = function () {
          return this.get_namespace() === this.userspace.get_root_namespace();
        }),
        (e.prototype.is_namespace_root = function () {
          return this.get_namespace().get_root_file() === this;
        }),
        (e.prototype.contains_shared_item = function () {
          return !this.get_namespace().is_root();
        }),
        (e.prototype.is_attached = function () {
          var e = this.get_namespace(),
            t = e.get_root_file();
          if (this !== t && !this.has_ancestor(t)) return !1;
          if (e.is_root()) return !0;
          var i = e.get_linkfile();
          return !(!i || !i.has_ancestor(this.userspace.get_root_file()));
        }),
        (e.prototype.get_underlying_file = function () {
          return this;
        }),
        (e.prototype.should_show_sharing_options = function () {
          var e = !this.is_from_root_namespace() && this.is_namespace_root(),
            t = this.contains_shared_item(),
            i = this.get_namespace().get_permission();
          return (e && ie <= i) || (!e && !t);
        }),
        (e.prototype.serialize = function () {
          return {
            id: this.id,
            server_id: this.server_id,
            type: this.get_type(),
            namespace_id: this.namespace.get_id(),
            title: this.title,
          };
        }),
        (e.prototype.deserialize = function (e) {
          this.set_server_id(e.server_id), this.set_title(e.title);
        }),
        (e.prototype.post_deserialize = function (e) {}),
        e
      );
    })($t),
    ii = (function (o) {
      function e(e, t, i, n) {
        return o.call(this, e, t, i, n) || this;
      }
      return (
        nt(e, o),
        (e.prototype.get_type = function () {
          return "folder";
        }),
        (e.prototype.set_collapsed = function (e, t) {
          this.collapsed !== e &&
            (o.prototype.set_collapsed.call(this, e, t),
            this.userspace.trigger("folder_collapse_change", this));
        }),
        (e.prototype.set_namespace_recursive = function (t) {
          this.set_namespace(t),
            this.children.each(function (e) {
              e.set_namespace_recursive(t);
            });
        }),
        (e.prototype.contains_shared_item = function () {
          if (o.prototype.contains_shared_item.call(this)) return !0;
          var t = !1;
          return (
            this.get_children().each(function (e) {
              if (e.contains_shared_item()) return !(t = !0);
            }, this),
            t
          );
        }),
        (e.prototype.serialize = function () {
          var t = o.prototype.serialize.call(this);
          return (
            (t.collapsed = this.collapsed),
            (t.children = []),
            this.children.each(function (e) {
              t.children.push(e.get_id());
            }, this),
            t
          );
        }),
        (e.prototype.deserialize = function (e) {
          o.prototype.deserialize.call(this, e),
            this.set_collapsed(e.collapsed);
        }),
        (e.prototype.post_deserialize = function (e) {
          each(
            e.children,
            function (e) {
              this.attach_child_end(this.userspace._find_file(e, e));
            },
            this,
          );
        }),
        e
      );
    })(ti),
    ni = (function (n) {
      function e(e, t) {
        var i = n.call(this, new vt()) || this;
        return (
          (i.userspace = e),
          (i.id = t),
          (i.version = 0),
          (i.linkfile = null),
          (i.root_file = null),
          (i.permission = 2),
          i
        );
      }
      return (
        nt(e, n),
        (e.prototype.is_root = function () {
          return this.userspace.get_root_namespace() === this;
        }),
        (e.prototype.get_id = function () {
          return this.id;
        }),
        (e.prototype.set_id = function (e) {
          if (this.id != e) {
            var t = this.id;
            (this.id = e),
              this.userspace.namespace_id_change(t, e),
              this.userspace.trigger("namespace_id_change", this, t, e);
          }
        }),
        (e.prototype.get_version = function () {
          return this.version;
        }),
        (e.prototype.set_version = function (e) {
          this.version != e &&
            ((this.version = e),
            this.userspace.trigger("namespace_version_change", this, e));
        }),
        (e.prototype.get_permission = function () {
          return this.permission;
        }),
        (e.prototype.set_permission = function (e) {
          this.permission != e &&
            ((this.permission = e),
            this.userspace.trigger("namespace_permission_change", this, e));
        }),
        (e.prototype.get_root_file = function () {
          return this.root_file;
        }),
        (e.prototype.set_root_file = function (e) {
          this.root_file != e &&
            ((this.root_file = e) && e.set_namespace_recursive(this),
            this.userspace.trigger("namespace_root_file_change", this, e));
        }),
        (e.prototype.get_linkfile = function () {
          return this.linkfile;
        }),
        (e.prototype.set_linkfile = function (e) {
          this.linkfile != e &&
            ((this.linkfile = e),
            this.userspace.trigger("namespace_linkfile_change", this));
        }),
        (e.prototype.update_children = function () {
          this.root_file && this.root_file.set_namespace_recursive(this);
        }),
        (e.prototype.serialize = function () {
          return {
            namespace_id: this.id,
            version: this.version,
            permission: this.permission,
            root_file_id: this.root_file ? this.root_file.get_id() : null,
          };
        }),
        (e.prototype.deserialize = function (e) {
          this.set_version(e.version), this.set_permission(e.permission);
        }),
        (e.prototype.post_deserialize = function (e) {
          (e.root_file_id || e.root_file_server_id) &&
            this.set_root_file(
              this.userspace._find_file(e.root_file_id, e.root_file_server_id),
            );
        }),
        (e.prototype.encode = function () {
          for (
            var s = [],
              r = [this.root_file],
              e = function () {
                var e = r.shift();
                if (!e) return "continue";
                var t = e.get_server_id(),
                  i = "";
                if (e instanceof ii) {
                  var n = [];
                  e.children.each(function (e) {
                    r.push(e), n.push(e.get_server_id());
                  }),
                    (i = n.join(","));
                }
                var o = [t, i];
                s.push(o);
              };
            0 < r.length;

          )
            e();
          return JSON.stringify(s);
        }),
        (e.prototype.hash = function () {
          return ei(this.encode());
        }),
        e
      );
    })(mt);
  var oi = (function () {
      function t(e) {
        this.data = t.read(e);
      }
      return (
        (t.prototype.get_data = function () {
          return this.data;
        }),
        (t.prototype.put = function (e, t) {
          return t ? (this.data[e] = t) : delete this.data[e], this;
        }),
        (t.prototype.get = function (e) {
          return this.data[e];
        }),
        (t.prototype.remove = function (e) {
          return delete this.data[e], this;
        }),
        (t.prototype.set_bool = function (e, t) {
          return this.put(e, t ? 1 : 0);
        }),
        (t.prototype.get_bool = function (e) {
          return bool(this.get(e));
        }),
        (t.prototype.set_int = function (e, t) {
          return this.put(e, t);
        }),
        (t.prototype.get_int = function (e) {
          var t = this.get(e);
          return t || 0;
        }),
        (t.prototype.set_string = function (e, t) {
          return this.put(e, t);
        }),
        (t.prototype.get_string = function (e) {
          var t = this.get(e);
          return t || "";
        }),
        (t.read = function (e) {
          if (!e) return {};
          try {
            return JSON.parse(e);
          } catch (e) {
            return {};
          }
        }),
        (t.prototype.write = function () {
          return t.write(this.data);
        }),
        (t.write = function (e) {
          for (var t in e) e.hasOwnProperty(t) && !e[t] && delete e[t];
          var i = (function e(t, i) {
            i || (i = {}), "function" == typeof i && (i = { cmp: i });
            var s,
              _ =
                i.cmp &&
                ((s = i.cmp),
                function (o) {
                  return function (e, t) {
                    var i = { key: e, value: o[e] },
                      n = { key: t, value: o[t] };
                    return s(i, n);
                  };
                });
            return (function e(t) {
              if (
                (t &&
                  t.toJSON &&
                  "function" == typeof t.toJSON &&
                  (t = t.toJSON()),
                void 0 !== t)
              ) {
                if ("object" != typeof t || null === t)
                  return JSON.stringify(t);
                var i = [];
                if (Array.isArray(t)) {
                  for (var n = 0; n < t.length; n++) {
                    var o = e(t[n]) || JSON.stringify(null);
                    i.push(o);
                  }
                  return "[" + i.join(",") + "]";
                }
                var s = Object.keys(t).sort(_ && _(t));
                for (n = 0; n < s.length; n++) {
                  var r = s[n],
                    a = e(t[r]);
                  a && i.push(JSON.stringify(r) + ":" + a);
                }
                return "{" + i.join(",") + "}";
              }
            })(t);
          })(e);
          return "{}" === i && (i = ""), i;
        }),
        t
      );
    })(),
    si = (function (i) {
      function e(e) {
        var t = i.call(this, e.events) || this;
        return (t.userspace = e), t;
      }
      return (
        nt(e, i),
        (e.prototype.serialize = function () {
          var t = [];
          return (
            this.children.each(function (e) {
              t.push(e.serialize());
            }),
            t
          );
        }),
        (e.prototype.deserialize = function (e) {
          var i = this;
          Array.each(this.children.array(), function (e) {
            e.detach();
          }),
            each(e, function (e) {
              var t = i.userspace.deserialize_bookmark(e);
              i.attach_child_end(t);
            });
        }),
        (e.prototype.get_id = function () {
          return "root_bookmark";
        }),
        e
      );
    })(qt),
    ri = (function (o) {
      function e(e, t, i) {
        var n = o.call(this, e.events) || this;
        return (
          (n.userspace = e),
          (n.id = t),
          (n.server_id = i),
          (n.data = ""),
          (n.data_obj = new di(n.data)),
          n
        );
      }
      return (
        nt(e, o),
        (e.prototype.get_id = function () {
          return this.id;
        }),
        (e.prototype.has_server_id = function () {
          return bool(this.server_id);
        }),
        (e.prototype.get_server_id = function () {
          return this.server_id ? this.server_id : this.id;
        }),
        (e.prototype.set_server_id = function (e) {
          if (this.server_id !== e) {
            var t = this.server_id;
            (this.server_id = e),
              this.userspace.bookmark_change_server_id(this, t, e),
              this.userspace.trigger("bookmark_server_id_change", this, t, e);
          }
        }),
        (e.prototype.get_data = function () {
          return this.data;
        }),
        (e.prototype.get_data_object = function () {
          return this.data_obj;
        }),
        (e.prototype.set_data = function (e) {
          bool(e) || (e = ""),
            this.data !== e &&
              ((this.data = e),
              (this.data_obj = new di(e)),
              this.userspace.trigger("bookmark_data_change", this));
        }),
        (e.prototype.set_edited_ts = function (e) {
          this.edited_ts = e;
        }),
        (e.prototype.get_edited_ts = function () {
          return this.edited_ts;
        }),
        (e.prototype.serialize = function () {
          return {
            id: this.id,
            server_id: this.server_id,
            ts: this.edited_ts,
            data: this.data,
          };
        }),
        (e.prototype.deserialize = function (e) {
          this.set_server_id(e.server_id),
            this.set_data(e.data),
            0 === e.ts || e.ts || (e.ts = Wt()),
            this.set_edited_ts(e.ts);
        }),
        (e.prototype.is_root = function () {
          return !1;
        }),
        (e.prototype.is_detached = function () {
          return -1 === this.index;
        }),
        e
      );
    })(yt),
    ai = "t",
    _i = "d",
    ci = "z",
    li = "f",
    ui = "q",
    hi = "flat",
    pi = "s",
    di = (function (t) {
      function e(e) {
        return t.call(this, e) || this;
      }
      return (
        nt(e, t),
        (e.prototype.set_title = function (e) {
          return this.set_string(ai, e);
        }),
        (e.prototype.get_title = function () {
          return this.get_string(ai);
        }),
        (e.prototype.set_document = function (e) {
          return this.set_string(_i, e);
        }),
        (e.prototype.get_document = function () {
          return this.get_string(_i);
        }),
        (e.prototype.set_zoom = function (e) {
          return this.set_string(ci, e);
        }),
        (e.prototype.get_zoom = function () {
          return this.get_string(ci);
        }),
        (e.prototype.set_focus = function (e) {
          return this.set_string(li, e);
        }),
        (e.prototype.get_focus = function () {
          return this.get_string(li);
        }),
        (e.prototype.set_search_query = function (e) {
          return this.set_string(ui, e);
        }),
        (e.prototype.get_search_query = function () {
          return this.get_string(ui);
        }),
        (e.prototype.set_flat_search = function (e) {
          return this.set_bool(hi, e);
        }),
        (e.prototype.get_flat_search = function () {
          return this.get_bool(hi);
        }),
        (e.prototype.set_sort = function (e) {
          return this.set_string(pi, e);
        }),
        (e.prototype.get_sort = function () {
          return this.get_string(pi);
        }),
        (e.prototype.clone = function () {
          return new e(this.write());
        }),
        (e.prototype.set_url_manager_state = function (e) {
          var t = e.document_server_id,
            i = e.zoom_node_id,
            n = e.focus_node_id,
            o = e.search_query,
            s = e.flat,
            r = e.sort;
          this.set_document(t),
            this.set_zoom(i),
            this.set_focus(n),
            this.set_search_query(o),
            this.set_flat_search(s),
            this.set_sort(r);
        }),
        (e.prototype.convert_to_url_state = function () {
          return {
            document_server_id: this.get_document(),
            zoom_node_id: this.get_zoom(),
            focus_node_id: this.get_focus(),
            search_query: this.get_search_query(),
            flat: this.get_flat_search(),
            sort: this.get_sort(),
          };
        }),
        e
      );
    })(oi),
    fi = (function (s) {
      function e(e, t, i, n) {
        var o = s.call(this, e, t, i, n) || this;
        return (o.target_namespace = null), (o.target_namespace_id = ""), o;
      }
      return (
        nt(e, s),
        (e.prototype.get_type = function () {
          return "linkfile";
        }),
        (e.prototype.contains_shared_item = function () {
          return !0;
        }),
        (e.prototype.set_target_namespace_id = function (e) {
          this.target_namespace_id = e;
        }),
        (e.prototype.set_target_namespace = function (e) {
          e !== this.get_namespace() &&
            this.target_namespace !== e &&
            (this.target_namespace && this.target_namespace.set_linkfile(null),
            (this.target_namespace = e),
            this.target_namespace && this.target_namespace.set_linkfile(this),
            this.userspace.trigger("target_namespace_change", this));
        }),
        (e.prototype.get_target_namespace = function () {
          return this.target_namespace;
        }),
        (e.prototype.get_target_namespace_id = function () {
          return this.target_namespace ? this.target_namespace.get_id() : null;
        }),
        (e.prototype.get_target_file = function () {
          return this.target_namespace
            ? this.target_namespace.get_root_file()
            : null;
        }),
        (e.prototype.get_underlying_file = function () {
          return this.get_target_file();
        }),
        (e.prototype.serialize = function () {
          var e = s.prototype.serialize.call(this);
          return (e.target_namespace_id = this.get_target_namespace_id()), e;
        }),
        (e.prototype.deserialize = function (e) {
          s.prototype.deserialize.call(this, e),
            this.set_target_namespace_id(e.target_namespace_id);
        }),
        (e.prototype.post_deserialize = function (e) {
          this.update_target_namespace();
        }),
        (e.prototype.update_target_namespace = function () {
          this.set_target_namespace(
            this.userspace.find_namespace(this.target_namespace_id),
          );
        }),
        e
      );
    })(ti);
  function gi(e) {
    return (window.EXT || {})[e];
  }
  function mi(e, t) {
    var i = createEl("script");
    (i.onload = t),
      (i.type = "text/javascript"),
      (i.src = e),
      document.head.appendChild(i);
  }
  function vi(e, t) {
    var i = createEl("link");
    (i.onload = t),
      (i.rel = "stylesheet"),
      (i.href = e),
      document.head.appendChild(i);
  }
  function yi() {
    window.location.reload();
  }
  function bi(e) {
    var t = document.createElement("script");
    (t.async = !0), (t.defer = !0), (t.src = e), document.body.append(t);
  }
  function wi() {
    var t = [],
      e = function () {
        if (t) for (var e = 0; e < t.length; e++) t[e]();
        t = null;
      };
    return (
      (e.push = function (e) {
        t ? t.push(e) : e();
      }),
      e
    );
  }
  function ki(e, t) {
    var i = e.x - t.x,
      n = e.y - t.y;
    return Math.sqrt(i * i + n * n);
  }
  function Ei(e) {
    return e.type.startsWith("touch") ? Ti(e.originalEvent) : Ci(e);
  }
  function Ci(e) {
    return { x: e.pageX, y: e.pageY };
  }
  function Ti(e, t) {
    void 0 === t && (t = 0);
    var i = e.touches[t];
    return { x: i.pageX, y: i.pageY };
  }
  function Oi(e) {
    return (
      e &&
      e === document.activeElement &&
      (!document.hasFocus || document.hasFocus()) &&
      !!(e.type || e.href || ~e.tabIndex)
    );
  }
  var xi = gi("aes"),
    Ai = gi("localforage"),
    Di = (gi("scroll"), gi("saveAs")),
    Si = gi("moment"),
    Ni =
      (gi("datepicker"),
      gi("timepicker"),
      window.DYNALIST.RES_PATH || "/assets/"),
    Ii = null;
  var Li = null;
  var Mi = /^\s*\d{4}-\d{2}-\d{2}\s*$/;
  function Ri(e) {
    e && (e = e.replace(/\s+(\+|-)/, "$1"));
    var t = Si(e),
      i = t.valueOf();
    if (isNaN(i)) return null;
    if (2534022144e5 < i) return null;
    var n = i;
    return e.match(Mi) && (n = t.add(1, "d").valueOf()), [i, n];
  }
  function Pi(e, t) {
    var i = new Date(),
      n = i.getTime();
    if ("now" === e) return n;
    var o = "d",
      s = 0;
    if (
      ((s =
        "today" === e
          ? 0
          : "yesterday" === e
          ? -1
          : "tomorrow" === e
          ? 1
          : ((o = e.substr(e.length - 1)), Number(e.substr(0, e.length - 1)))),
      isNaN(s))
    )
      return 0;
    switch (o) {
      case "d":
      case "w":
      case "m":
        var r = 0,
          a = 0;
        switch (o) {
          case "d":
            r = s;
            break;
          case "w":
            r = 7 * s;
            break;
          case "m":
            a = s;
        }
        return (
          ("always" === t || ("future" === t && 0 <= s)) && (r += 1),
          new Date(
            i.getFullYear(),
            i.getMonth() + a,
            i.getDate() + r,
            0,
            0,
            0,
            0,
          ).getTime()
        );
      case "h":
        return n + 60 * s * 60 * 1e3;
    }
    return 0;
  }
  function Fi(e, t, i, n, o) {
    var s = Si(e),
      r = zi(new Date()),
      a = zi(new Date(e)),
      _ = "",
      c = Math.round((a - r) / 864e5);
    if (i)
      try {
        if ("relative" !== i) return s.format(i);
        if (n) {
          if (0 === c) return "Today";
          if (-1 === c) return "Yesterday";
          if (1 === c) return "Tomorrow";
        }
        return s.fromNow();
      } catch (e) {}
    if (0 === c) {
      if (((_ = "Today"), n)) return _;
      if (o) return s.fromNow();
    } else
      c < 0
        ? 1 === (c = Math.abs(c))
          ? (_ = "Yesterday")
          : c < 7 && (_ = c + " days ago")
        : 1 === c
        ? (_ = "Tomorrow")
        : c < 7 && (_ = "In " + c + " days");
    return (
      _ || (_ = s.format("ddd, MMMM Do YYYY")), n ? _ : _ + ", " + Hi(s, t)
    );
  }
  function Hi(e, t) {
    var i = "";
    return (
      t
        ? (i = e.format("HH:mm"))
        : (0 === e.minute() && (i = e.format("h a")),
          i || (i = e.format("h:mm a"))),
      i
    );
  }
  function zi(e) {
    return Date.UTC(e.getFullYear(), e.getMonth(), e.getDate());
  }
  function Bi(e) {
    var t = new Date(e);
    return 0 === t.getHours() && 0 === t.getMinutes() && 0 === t.getSeconds();
  }
  function Ui(e, t) {
    return Si(e).add(t, "d").valueOf();
  }
  var ji = { d: "day", w: "week", m: "month", y: "year" },
    Gi = {
      1: "Mon",
      2: "Tue",
      3: "Wed",
      4: "Thu",
      5: "Fri",
      6: "Sat",
      7: "Sun",
    },
    qi = (function () {
      function e(e, t, i, n) {
        (this.amount = e), (this.unit = t), (this.data = i), (this.reset = n);
      }
      return (
        (e.prototype.get_next_recurrence = function (e) {
          var t = this.unit,
            i = this.amount,
            n = Si(e);
          if ("d" === t) return n.add(i, "d").valueOf();
          if ("w" !== t)
            return "m" === t
              ? n.add(i, "M").valueOf()
              : "y" === t
              ? n.add(i, "y").valueOf()
              : e;
          var o = this.data;
          if (o) {
            for (var s = n.isoWeekday(), r = 0, a = 1; a <= 7; a++) {
              var _ = ((s + a - 1) % 7) + 1;
              if (o.contains(_.toString())) {
                r = a;
                break;
              }
            }
            return (
              1 < i && 7 < s + r && (r += 7 * (i - 1)), n.add(r, "d").valueOf()
            );
          }
          return n.add(i, "w").valueOf();
        }),
        (e.prototype.get_markdown_string = function () {
          return this.amount.toString() + this.unit + this.data;
        }),
        (e.prototype.get_readable_recurrence_string = function (e) {
          void 0 === e && (e = !1);
          var t = e ? "Every " : "every ";
          (1 === this.amount
            ? (t += ji[this.unit])
            : (t += this.amount + " " + ji[this.unit] + "s"),
          "w" === this.unit && this.data) &&
            (t +=
              " on " +
              this.data
                .split("")
                .map(function (e) {
                  return Gi[e];
                })
                .join(", "));
          return t;
        }),
        e
      );
    })(),
    $i = (function () {
      function e() {}
      return (
        (e.detect_url = function (t) {
          var e = !1,
            i = !1,
            n = "";
          try {
            n = He.decode_url(t).path;
          } catch (e) {
            console.error("Failed to parse URL " + t);
          }
          return (
            (n = n.replace(/^(https?):\/\//, "")).startsWith(g) &&
              (n = n.substr(g.length)),
            ("/" === n || n.startsWith("/d/") || n.startsWith(f)) && (e = !0),
            (n.startsWith("/u/") || n.startsWith(g + "/u/")) && (i = !0),
            { internal_url: e, upload_url: i }
          );
        }),
        e
      );
    })(),
    Wi = (function () {
      function i(e, t, i) {
        (this._string = e),
          (this.start = void 0 === t ? 0 : t),
          (this.end = void 0 === i ? e.length : i);
      }
      return (
        Object.defineProperty(i.prototype, "string", {
          get: function () {
            return this._string.substring(this.start, this.end);
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(i.prototype, "length", {
          get: function () {
            return this.end - this.start;
          },
          enumerable: !0,
          configurable: !0,
        }),
        (i.prototype.merge = function (e) {
          return new i(this._string, this.start, e.end);
        }),
        (i.prototype.substring = function (e, t) {
          return new i(
            this._string,
            this.start + e,
            Math.min(this.start + t, this.end),
          );
        }),
        i
      );
    })(),
    Yi = (function () {
      function e(e) {
        this.token = e;
      }
      return (
        (e.prototype.traverse = function (e) {
          e(this);
        }),
        (e.prototype.getText = function () {
          return "";
        }),
        e
      );
    })(),
    Ki = (function (e) {
      function t() {
        return e.call(this, null) || this;
      }
      return nt(t, e), t;
    })(Yi),
    Vi = (function (i) {
      function n(e) {
        var t = i.call(this, n.merge_list_tokens(e)) || this;
        return (t.items = e), t;
      }
      return (
        nt(n, i),
        (n.prototype.append = function (e) {
          this.items.push(e);
        }),
        (n.prototype.traverse = function (t) {
          t(this),
            this.items.forEach(function (e) {
              e.traverse(t);
            });
        }),
        (n.prototype.getText = function () {
          return this.items
            .map(function (e) {
              return e.getText();
            })
            .join("");
        }),
        (n.merge_list_tokens = function (e) {
          return e.first().token.merge(e.last().token);
        }),
        n
      );
    })(Yi),
    Xi = (function (i) {
      function e(e) {
        var t = i.call(this, e) || this;
        return (t.text = e.string), t;
      }
      return (
        nt(e, i),
        (e.prototype.append = function (e) {
          (this.token = this.token.merge(e)),
            (this.text = this.text + e.string);
        }),
        (e.prototype.getText = function () {
          return this.text;
        }),
        e
      );
    })(Yi),
    Zi = (function (n) {
      function e(e, t) {
        var i = n.call(this, e) || this;
        return (i.inner = t), i;
      }
      return (
        nt(e, n),
        (e.prototype.traverse = function (e) {
          e(this), this.inner.traverse(e);
        }),
        (e.prototype.getText = function () {
          return this.inner.getText();
        }),
        e
      );
    })(Yi),
    Ji = (function (n) {
      function e(e, t) {
        var i = n.call(this, e) || this;
        return (i.latex = t.text), i;
      }
      return (
        nt(e, n),
        (e.prototype.getText = function () {
          return this.latex;
        }),
        e
      );
    })(Xi),
    Qi = (function (i) {
      function e(e, t) {
        return i.call(this, e, t) || this;
      }
      return nt(e, i), e;
    })(Zi),
    en = (function (i) {
      function e(e, t) {
        return i.call(this, e, t) || this;
      }
      return nt(e, i), e;
    })(Zi),
    tn = (function (i) {
      function e(e, t) {
        return i.call(this, e, t) || this;
      }
      return nt(e, i), e;
    })(Zi),
    nn = (function (i) {
      function e(e, t) {
        return i.call(this, e, t) || this;
      }
      return nt(e, i), e;
    })(Zi),
    on = (function (i) {
      function e(e, t) {
        return i.call(this, e, t) || this;
      }
      return nt(e, i), e;
    })(Zi),
    sn = (function (i) {
      function e(e, t) {
        return i.call(this, e, t) || this;
      }
      return nt(e, i), e;
    })(Zi),
    rn = (function (r) {
      function e(e, t, i, n, o) {
        var s = r.call(this, e) || this;
        return (
          (s.text_token = t),
          (s.url_token = i),
          (s.text = n),
          (s.url = o),
          (s.override_text = null),
          s
        );
      }
      return (
        nt(e, r),
        (e.prototype.getText = function () {
          return this.text;
        }),
        e
      );
    })(Yi),
    an = (function (r) {
      function e(e, t, i, n, o) {
        var s = r.call(this, e, t, i, n, o) || this;
        return (s.is_displayed = !1), (s.has_zoom_node = !1), s;
      }
      return nt(e, r), e;
    })(rn),
    _n = (function (a) {
      function e(e, t, i, n, o, s) {
        var r = a.call(this, e, t, i, n, o) || this;
        return (r.is_upload = s), r;
      }
      return nt(e, a), e;
    })(rn);
  function cn(e) {
    return e.match(/^[a-zA-Z0-9.+\-]+:/g)
      ? e
      : e.match(/^([a-zA-Z0-9.+\-]+:\\|\/[a-zA-Z0-9])/g)
      ? "file://" + e
      : "http://" + e;
  }
  function ln(e, t, i) {
    var n = t.string || "Link",
      o = i.string;
    o = cn(o);
    var s = $i.detect_url(o),
      r = s.internal_url,
      a = s.upload_url;
    return r ? new an(e, t, i, n, o) : new _n(e, t, i, n, o, a);
  }
  var un = (function (s) {
    function e(e, t, i, n, o) {
      return s.call(this, e, t, i, n, o) || this;
    }
    return nt(e, s), e;
  })(rn);
  function hn(e, t, i) {
    var n = t.string || "Image",
      o = i.string;
    return (o = cn(o)), new un(e, t, i, n, o);
  }
  var pn = (function (i) {
    function e(e) {
      var t = i.call(this, e) || this;
      return (t.tag = e.string), t;
    }
    return (
      nt(e, i),
      (e.prototype.get_tag = function () {
        return this.tag;
      }),
      (e.prototype.getText = function () {
        return this.tag;
      }),
      e
    );
  })(Yi);
  function dn(e, t) {
    var i,
      n = (t.text || "").split("|"),
      o = n[0],
      s = n[1],
      r = o.split(" - "),
      a = r[0],
      _ = r[1],
      c = 0,
      l = Ri(a.trim());
    if (!l) return new Xi(e);
    if (((i = l[0]), (c = l[1]), _)) {
      var u = Ri(_.trim());
      u && (c = u[1]);
    }
    var h = null;
    return (
      s &&
        (h = (function e(t) {
          t = t.trim().toLowerCase();
          var i = !1;
          "~" === t.charAt(0) && ((i = !0), (t = t.substr(1).trim()));
          var n = t.match(/^([0-9]*)\s*([a-z]+)\s*(-?[0-9]*)$/);
          if (!n) return null;
          var o = parseInt(n[1]);
          (isNaN(o) || "" === n[1]) && (o = 1);
          var s = n[2];
          return ["d", "w", "m", "y"].contains(s)
            ? new qi(o, s, n[3], i)
            : null;
        })(s)),
      new fn(e, i, c, h)
    );
  }
  var fn = (function (s) {
    function e(e, t, i, n) {
      var o = s.call(this, e, new Xi(e)) || this;
      return (
        (!i || i < t) && (i = t),
        (o.startTime = t),
        (o.endTime = i),
        (o.isAllDay = t < i && Bi(t) && Bi(i)),
        (o.recurrence = n),
        o
      );
    }
    return (
      nt(e, s),
      (e.prototype.format = function (e, t) {
        var i = this.startTime,
          n = this.endTime,
          o = this.isAllDay,
          s = o ? 1296e5 < n - i : i < n;
        o && (n = Ui(n, -1));
        var r = Fi(i, e, t, o, !s);
        return (
          s &&
            (!(function e(t, i) {
              var n = new Date(t),
                o = new Date(i);
              return (
                n.getFullYear() === o.getFullYear() &&
                n.getMonth() === o.getMonth() &&
                o.getDate() === n.getDate()
              );
            })(i, n) || t
              ? (r += " - " + Fi(n, e, t, o, !1))
              : (r +=
                  " - " +
                  (function e(t, i) {
                    return Hi(Si(t), i);
                  })(n, e))),
          this.recurrence
            ? r + ", " + this.recurrence.get_readable_recurrence_string()
            : r
        );
      }),
      (e.prototype.getText = function () {
        return this.token.string;
      }),
      e
    );
  })(Zi);
  var gn = "[a-zA-Z0-9.+\\-]+://",
    mn = new RegExp(gn),
    vn =
      "(" +
      [
        "#",
        "@",
        "$$",
        "__",
        "~~",
        "==",
        "**",
        "![",
        "[",
        "]",
        "!(",
        "(",
        ")",
        "\n",
        " ",
        ",",
        ";",
        ".",
        "?",
        "!",
        "`",
        "/",
        "'",
        "\\",
        ":",
      ]
        .map(Dt)
        .join("|") +
      "|" +
      gn +
      ")";
  var yn,
    bn,
    wn,
    kn,
    En,
    Cn,
    Tn,
    On,
    xn,
    An,
    Dn,
    Sn = (function () {
      function e(e, t, i, n) {
        (this.type = e),
          (this.index = t),
          (this.start_token = i),
          (this.matchers = n),
          (this.list = []),
          (this.data = {});
      }
      return (
        (e.prototype.append = function (e) {
          if (e) {
            e instanceof Wi && (e = new Xi(e));
            var t = this.list,
              i = t.length;
            if (0 < i) {
              var n = t[i - 1];
              if (n.constructor === Xi && e.constructor === Xi)
                return void n.append(e.token);
            }
            t.push(e);
          }
        }),
        (e.prototype.length = function () {
          return this.list.length;
        }),
        (e.prototype.finish_and_get_result = function (e) {
          var t = this.list;
          this.list = [];
          var i = this.start_token,
            n = (function e(t) {
              return 0 === t.length
                ? new Ki()
                : 1 === t.length
                ? t[0]
                : new Vi(t);
            })(t);
          return (n.token = i.merge(e)), n;
        }),
        (e.prototype.get_matchers = function () {
          return this.matchers;
        }),
        e
      );
    })(),
    Nn = (function () {
      function e(e, t, i) {
        (this.root_matchers = t),
          (this.stack = []),
          (this.index = 0),
          (this.token = null),
          (this.tokens = i),
          this.push_context("root", e.substring(0, 0));
      }
      return (
        (e.prototype.current_context = function () {
          return this.stack.last();
        }),
        (e.prototype.current_token = function () {
          return this.tokens[this.index];
        }),
        (e.prototype.previous_token = function () {
          return this.getToken(this.index - 1);
        }),
        (e.prototype.next_token = function () {
          return this.getToken(this.index + 1);
        }),
        (e.prototype.getToken = function (e) {
          return e < 0 || e >= this.tokens.length ? null : this.tokens[e];
        }),
        (e.prototype.append = function (e) {
          this.current_context().append(e);
        }),
        (e.prototype.finish_and_get_result = function () {
          for (var e = this.stack, t = e.length - 1; 1 <= t; t--) {
            var i = e[t];
            e[t - 1].append(i.finish_and_get_result(this.tokens.last()));
          }
          return this.stack[0].finish_and_get_result(this.tokens.last());
        }),
        (e.prototype.push_context = function (e, t, i) {
          i = i || this.root_matchers;
          var n = new Sn(e, this.index, t, i);
          return this.stack.push(n), n;
        }),
        (e.prototype.pop_context_and_append = function (e) {
          this.stack.pop(), this.append(e);
        }),
        (e.prototype.has_next = function () {
          return this.index < this.tokens.length;
        }),
        (e.prototype.process_next = function () {
          this.token = this.tokens[this.index];
          var e = this.current_context(),
            t = e.get_matchers().get_matcher_function(this.token)(this, e);
          void 0 === t && (t = this.index + 1), (this.index = t);
        }),
        (e.prototype.getIndex = function () {
          return this.index;
        }),
        e
      );
    })(),
    In = function (e) {
      e.append(e.token);
    },
    Ln = function (e, t) {
      if ("root" !== t.type)
        return e.pop_context_and_append(e.tokens[t.index]), t.index + 1;
    },
    Mn = (function () {
      function e(e, t, i) {
        (this.matcher_functions = e || {}),
          (this.regex_matcher_functions = {}),
          (this.default_matcher = t || In),
          (this.eof_matcher = i || Ln);
      }
      return (
        (e.prototype.get_matcher_function = function (e) {
          var t = e.string;
          if ("" === t) return this.eof_matcher;
          if (this.matcher_functions.hasOwnProperty(t))
            return this.matcher_functions[t];
          for (var i in this.regex_matcher_functions)
            if (
              this.regex_matcher_functions.hasOwnProperty(i) &&
              new RegExp(i).test(t)
            )
              return this.regex_matcher_functions[i];
          return this.default_matcher;
        }),
        (e.prototype.add_matcher_function = function (e, t) {
          this.matcher_functions[e] = t;
        }),
        (e.prototype.add_regex_matcher_function = function (e, t) {
          this.regex_matcher_functions[e] = t;
        }),
        e
      );
    })(),
    Rn = /[\\~$=`*_{}\[\]()#+\-.!]/,
    Pn =
      ((Tn = new Mn()),
      (On = function (e) {
        var t = e.next_token();
        if (t) {
          var i = t.string.charAt(0);
          if (Rn.test(i)) return e.append(e.next_token()), e.getIndex() + 2;
        }
        return In(e);
      }),
      (An = function (e) {
        var o = function (e, t) {
            var i = t.finish_and_get_result(e.previous_token()),
              n = i.token;
            return /^\d+$/.test(n.substring(1, n.length).string)
              ? Ln(e, t)
              : (e.pop_context_and_append(new pn(i.token)), e.index);
          },
          a = ["\n", " ", ""],
          t = function (e, t) {
            var i = e.next_token(),
              n = i ? i.string : null;
            return !n || a.contains(n) ? o(e, t) : In(e);
          },
          _ = new Mn(
            {
              "\n": o,
              " ": o,
              "**": o,
              __: o,
              "`": o,
              "'": o,
              ":": t,
              ",": o,
              ".": t,
              "?": o,
              "!": o,
              ";": o,
              "/": o,
              "(": function (e, t) {
                return t.data.brackets++, In(e);
              },
              ")": function (e, t) {
                return 0 < t.data.brackets
                  ? (t.data.brackets--, In(e))
                  : o(e, t);
              },
            },
            null,
            o,
          );
        Tn.add_matcher_function(e, function (e, t) {
          var i = !1;
          if (0 === t.length()) i = !0;
          else {
            var n = e.previous_token(),
              o = n ? n.string : null;
            (0 !== t.length() && o && !/\s+$/.test(o)) || (i = !0);
          }
          var s = e.next_token(),
            r = s ? s.string : null;
          ((r && !a.contains(r)) || (i = !1), i) &&
            (e.push_context("tag", e.current_token(), _),
            (e.current_context().data.brackets = 0));
          In(e);
        });
      }),
      (xn = function (e, i, t, n) {
        var o = function (e, t) {
            var i = t.finish_and_get_result(e.previous_token());
            e.pop_context_and_append(new n(i.token, i));
          },
          s = null;
        t && (s = new Mn()).add_matcher_function(e, o),
          Tn.add_matcher_function(e, function (e, t) {
            if (t.type === i) return o(e, t);
            e.push_context(i, e.next_token(), s);
          });
      })(
        "**",
        "bold",
        !(Dn = function (e, i, r) {
          var n = new Mn({
              "[": function (e, t) {
                t.data.brackets++, In(e);
              },
              "]": function (e, t) {
                var i = t.data;
                0 < i.brackets
                  ? (i.brackets--, In(e))
                  : ((i.title_end = e.previous_token()),
                    t.finish_and_get_result(e.previous_token()),
                    (t.matchers = o));
              },
            }),
            o = new Mn(
              {
                "(": function (e, t) {
                  (t.matchers = s), (t.data.url_start = e.next_token());
                },
              },
              Ln,
            ),
            s = new Mn({
              "(": function (e, t) {
                t.data.brackets++, In(e);
              },
              ")": function (e, t) {
                var i = t.data;
                if (0 < i.brackets) i.brackets--, In(e);
                else {
                  if (1 !== t.length()) return Ln(e, t);
                  var n = i.title_start.merge(i.title_end),
                    o = i.url_start.merge(e.previous_token());
                  t.finish_and_get_result(e.previous_token());
                  var s = t.start_token.merge(e.current_token());
                  e.pop_context_and_append(r(s, n, o));
                }
              },
            });
          Tn.add_matcher_function(e, function (e) {
            var t = e.push_context(i, e.current_token(), n).data;
            (t.title_start = e.next_token()), (t.brackets = 0);
          });
        }),
        Qi,
      ),
      xn("__", "italics", !1, en),
      xn("$$", "latex", !0, Ji),
      xn("~~", "strikethrough", !1, on),
      xn("==", "highlight", !1, sn),
      (yn = new Mn({
        "`": function (e, t) {
          var i = t.finish_and_get_result(e.previous_token());
          e.pop_context_and_append(new tn(i.token, i));
        },
        "\\": On,
      })),
      (bn = new Mn({
        "`": function (e, t) {
          var i = e.getIndex(),
            n = e.next_token() && "`" === e.next_token().string,
            o = e.getToken(i + 2),
            s = o && "`" === o.string,
            r = e.getToken(i + 3),
            a = r && "\n" === r.string;
          if (n && s) {
            var _ = t.finish_and_get_result(e.previous_token());
            return (
              e.pop_context_and_append(new nn(_.token, _)),
              a ? e.getIndex() + 4 : e.getIndex() + 3
            );
          }
          In(e);
        },
      })),
      Tn.add_matcher_function("`", function (e) {
        var t = e.getIndex(),
          i = e.next_token(),
          n = i && "`" === i.string,
          o = e.getToken(t + 2),
          s = o && "`" === o.string;
        if (n && s)
          return (
            e.push_context("multilinecode", e.getToken(t + 3), bn),
            e.getIndex() + 3
          );
        e.push_context("inlinecode", e.current_token(), yn);
      }),
      An("#"),
      An("@"),
      Dn("[", "link", ln),
      Dn("![", "image", hn),
      (kn = new Mn(
        {
          "\n": (wn = function (e, t) {
            var i = t.finish_and_get_result(e.previous_token()).token;
            e.pop_context_and_append(ln(i, i, i)), In(e);
          }),
          " ": wn,
          "(": function (e, t) {
            return t.data.brackets++, In(e);
          },
          ")": function (e, t) {
            return 0 < t.data.brackets ? (t.data.brackets--, In(e)) : wn(e, t);
          },
        },
        null,
        wn,
      )),
      Tn.add_regex_matcher_function(gn, function (e) {
        e.push_context("url", e.current_token(), kn),
          (e.current_context().data.brackets = 0),
          In(e);
      }),
      (En = "!("),
      (Cn = new Mn({
        ")": function (e, t) {
          var i = t.finish_and_get_result(e.current_token());
          e.pop_context_and_append(dn(i.token, i));
        },
      })),
      Tn.add_matcher_function(En, function (e) {
        e.push_context("time", e.current_token(), Cn);
      }),
      Tn.add_matcher_function("\\", On),
      Tn),
    Fn = function (e) {
      for (
        var t = (function e(t) {
            for (
              var i, n = new RegExp(vn, "g"), o = [], s = 0;
              null !== (i = n.exec(t.string));

            )
              i.index > s && o.push(t.substring(s, i.index)),
                o.push(t.substring(i.index, n.lastIndex)),
                (s = n.lastIndex);
            return (
              s < t.length && o.push(t.substring(s, t.length)),
              o.push(t.substring(t.length, t.length)),
              o
            );
          })(e),
          i = new Nn(e, Pn, t);
        i.has_next();

      )
        i.process_next();
      return i.finish_and_get_result();
    },
    Hn = (function () {
      function e() {}
      return (
        (e.parse_text = function (t) {
          try {
            if (!t) return new Xi(new Wi(""));
            t = t.replace(new RegExp(String.fromCharCode(160), "g"), " ");
            var e = new Wi(t);
            return Fn(e);
          } catch (e) {
            return console.error(e), log(t), track_error(e), new Xi(new Wi(t));
          }
        }),
        e
      );
    })(),
    zn = (function (o) {
      function e(e, t) {
        var i = o.call(this, e.events) || this;
        return (
          (i.collection = e),
          (i.id = t),
          (i.meta = ""),
          (i.meta_obj = new Yn(i.meta)),
          (i.children_loc_ids = []),
          (i.children_loc_nodes = []),
          (i.loc_id = null),
          (i.created_ts = 0),
          (i.edited_ts = 0),
          (i.attached_ts = 0),
          (i.content_parse_tree = null),
          (i.note_parse_tree = null),
          (i.sync_attempt = 0),
          i
        );
      }
      return (
        nt(e, o),
        (e.prototype.get_id = function () {
          return this.id;
        }),
        (e.prototype.get_node_collection = function () {
          return this.collection;
        }),
        (e.prototype.get_meta = function () {
          return this.meta;
        }),
        (e.prototype.get_meta_object = function () {
          return this.meta_obj;
        }),
        (e.prototype.set_meta = function (e) {
          if ((bool(e) || (e = ""), this.meta !== e)) {
            this.meta;
            var t = this.meta_obj,
              i = t.get_content(),
              n = t.get_note(),
              o = this.get_content_parse_tree(),
              s = this.get_note_parse_tree();
            (this.meta = e), (this.meta_obj = new Yn(e));
            var r = this.meta_obj.get_content(),
              a = this.meta_obj.get_note();
            if (
              ((this.content_parse_tree = null),
              (this.note_parse_tree = null),
              r !== i)
            ) {
              var _ = {
                node: this,
                old_content: i,
                old_content_parse_tree: o,
                new_content: r,
              };
              this.collection.trigger("node_content_change", this, _);
            }
            if (a !== n) {
              _ = {
                node: this,
                old_note: n,
                old_note_parse_tree: s,
                new_note: a,
              };
              this.collection.trigger("node_note_change", this, _);
            }
            this.collection.trigger("node_meta_change", this);
          }
        }),
        (e.prototype.get_content_parse_tree = function () {
          return (
            this.content_parse_tree ||
              (this.content_parse_tree = Hn.parse_text(
                this.get_meta_object().get_content(),
              )),
            this.content_parse_tree
          );
        }),
        (e.prototype.get_note_parse_tree = function () {
          return (
            this.note_parse_tree ||
              (this.note_parse_tree = Hn.parse_text(
                this.get_meta_object().get_note(),
              )),
            this.note_parse_tree
          );
        }),
        (e.prototype.get_clean_title = function () {
          return (
            this.get_content_parse_tree().getText() ||
            this.get_meta_object().get_content()
          );
        }),
        (e.prototype.set_created_ts = function (e) {
          this.created_ts !== e &&
            ((this.created_ts = e),
            this.collection.trigger("node_created_ts_change", this));
        }),
        (e.prototype.get_created_ts = function () {
          return this.created_ts;
        }),
        (e.prototype.set_edited_ts = function (e) {
          this.edited_ts !== e &&
            ((this.edited_ts = e),
            this.collection.trigger("node_edited_ts_change", this));
        }),
        (e.prototype.get_edited_ts = function () {
          return this.edited_ts;
        }),
        (e.prototype.set_attached_ts = function (e) {
          this.attached_ts !== e &&
            ((this.attached_ts = e),
            this.collection.trigger("node_attached_ts_change", this));
        }),
        (e.prototype.get_attached_ts = function () {
          return this.attached_ts;
        }),
        (e.prototype.set_sync_attempt = function (e) {
          this.sync_attempt = e;
        }),
        (e.prototype.is_root = function () {
          return this.collection.get_root() === this;
        }),
        (e.prototype.is_attached_to_root = function () {
          return (
            this.is_root() ||
            this.has_ancestor(this.get_node_collection().get_root())
          );
        }),
        (e.prototype.attach_child = function (e, t, i) {
          if (t && t !== this) {
            if (t.get_parent() === this) {
              if (!i && t.get_index() === e) return;
              if (t.get_loc_id() == i) return;
            }
            if (
              (i || (i = this.generate_loc_id(e)),
              t.detach(),
              (e = this.get_loc_id_index(i)),
              o.prototype.attach_child.call(this, e, t),
              t.get_parent() == this)
            ) {
              var n = this.children_loc_ids.indexOf(i);
              (this.children_loc_nodes[n] = t).loc_id = i;
            } else this.remove_loc_id(i);
          }
        }),
        (e.prototype.generate_loc_id = function (e) {
          var t = Yt(),
            i = this.find_available_loc_id(e);
          return (
            this.children_loc_ids.splice(i, 0, t),
            this.children_loc_nodes.splice(i, 0, null),
            t
          );
        }),
        (e.prototype.remove_loc_id = function (e) {
          var t = this.children_loc_ids.indexOf(e);
          this.children_loc_ids.splice(t, 1),
            this.children_loc_nodes.splice(t, 1);
        }),
        (e.prototype.find_available_loc_id = function (e) {
          if (e < 0) return 0;
          if (e >= this.num_children()) return this.children_loc_ids.length;
          var t = this.get_child(e).loc_id;
          return this.children_loc_ids.indexOf(t);
        }),
        (e.prototype.get_loc_id_index = function (e) {
          var t = this.get_loc_id_node_or_prev(e);
          return t
            ? t.get_loc_id() === e
              ? t.get_index()
              : t.get_index() + 1
            : 0;
        }),
        (e.prototype.get_loc_id_node_or_prev = function (e) {
          var t = this.children_loc_ids.indexOf(e);
          if (-1 === t) return null;
          for (var i = null; null === i && 0 <= t; )
            (i = this.children_loc_nodes[t]), t--;
          return i;
        }),
        (e.prototype.get_loc_id_node_or_prev_safe = function (e) {
          var t = this.get_loc_id_node_or_prev(e);
          return t || this.get_loc_id_node_or_next(e);
        }),
        (e.prototype.get_loc_id_node_or_next = function (e) {
          var t = this.children_loc_ids.indexOf(e);
          if (-1 === t) return null;
          for (var i = null; null === i && t < this.children_loc_nodes.length; )
            (i = this.children_loc_nodes[t]), t++;
          return i;
        }),
        (e.prototype.get_loc_id_node_or_next_safe = function (e) {
          var t = this.get_loc_id_node_or_next(e);
          return t || this.get_loc_id_node_or_prev(e);
        }),
        (e.prototype.attach_child_at = function (e, t) {
          var i = this.get_loc_id_index(e);
          this.attach_child(i, t, e);
        }),
        (e.prototype.get_loc_id = function () {
          return this.loc_id;
        }),
        (e.prototype.detach_child = function (e) {
          var t = this.children_loc_ids.indexOf(e.loc_id);
          (this.children_loc_nodes[t] = null),
            (e.loc_id = null),
            o.prototype.detach_child.call(this, e);
        }),
        (e.prototype.next = function () {
          return o.prototype.next.call(this);
        }),
        (e.prototype.prev = function () {
          return o.prototype.prev.call(this);
        }),
        (e.prototype.is_expired = function (e) {
          var t = Math.max(this.edited_ts, this.attached_ts) + e;
          return this.edited_ts && this.attached_ts && Wt() > t;
        }),
        (e.prototype.serialize = function () {
          var t = {};
          return (
            this.children.each(function (e) {
              t[e.get_loc_id()] = e.get_id();
            }),
            {
              id: this.id,
              meta: this.meta,
              collapsed: this.collapsed,
              created_ts: this.created_ts,
              edited_ts: this.edited_ts,
              attached_ts: this.attached_ts,
              sync_attempt: this.sync_attempt,
              children_loc_ids: this.children_loc_ids,
              children_by_loc_ids: t,
            }
          );
        }),
        (e.prototype.deserialize = function (e) {
          this.set_meta(e.meta),
            this.set_collapsed(e.collapsed),
            e.created_ts || 0 === e.created_ts || (e.created_ts = 0),
            e.edited_ts || 0 === e.edited_ts || (e.edited_ts = 0),
            e.attached_ts || 0 === e.attached_ts || (e.attached_ts = 0),
            this.set_created_ts(e.created_ts),
            this.set_edited_ts(e.edited_ts),
            this.set_attached_ts(e.attached_ts),
            0 !== e.sync_attempt && this.set_sync_attempt(e.sync_attempt);
        }),
        (e.prototype.post_deserialize_local = function (e) {
          e.children_loc_ids &&
            ((this.children_loc_ids = e.children_loc_ids),
            (this.children_loc_nodes = []),
            each(
              this.children_loc_ids,
              function (e) {
                this.children_loc_nodes.push(null);
              },
              this,
            )),
            e.children_by_loc_ids &&
              each(
                e.children_by_loc_ids,
                function (e, t) {
                  this.attach_child_at(t, this.collection.find_node(e));
                },
                this,
              );
        }),
        (e.prototype.post_deserialize_merge = function (t) {
          var e = this.children.array();
          each(e, function (e) {
            t.children.contains(e.get_id()) || e.detach();
          });
          var i = 0;
          each(
            t.children,
            function (e) {
              var t = this.collection.find_node(e);
              (t.get_parent() == this && t.get_index() == i) ||
                this.attach_child(i, t),
                i++;
            },
            this,
          );
        }),
        e
      );
    })($t),
    Bn = "c",
    Un = "n",
    jn = "checkbox",
    Gn = "checked",
    qn = "heading_level",
    $n = "l",
    Wn = "cl",
    Yn = (function (i) {
      function n(e) {
        var t = i.call(this, e) || this;
        return t.upgrade(), t;
      }
      return (
        nt(n, i),
        (n.prototype._upgrade = function (e, t) {
          this.data[t] ||
            (this.data[e] &&
              ((this.data[t] = this.data[e]), delete this.data[e]));
        }),
        (n.prototype.upgrade = function () {}),
        (n.prototype.set_content = function (e) {
          return this.set_string(Bn, e);
        }),
        (n.prototype.get_content = function () {
          return this.get_string(Bn);
        }),
        (n.prototype.set_note = function (e) {
          return this.set_string(Un, e);
        }),
        (n.prototype.get_note = function () {
          return this.get_string(Un);
        }),
        (n.prototype.set_checked = function (e) {
          return this.set_bool(Gn, e);
        }),
        (n.prototype.is_checked = function () {
          return this.get_bool(Gn);
        }),
        (n.prototype.set_checkbox = function (e) {
          return this.set_bool(jn, e);
        }),
        (n.prototype.has_checkbox = function () {
          return this.get_bool(jn);
        }),
        (n.prototype.set_heading = function (e) {
          return this.set_int(qn, e);
        }),
        (n.prototype.is_heading = function () {
          return bool(this.get_heading());
        }),
        (n.prototype.get_heading = function () {
          return this.get_int(qn);
        }),
        (n.prototype.has_color_label = function () {
          return bool(this.get_color_label());
        }),
        (n.prototype.get_color_label = function () {
          return this.get_int(Wn);
        }),
        (n.prototype.set_color_label = function (e) {
          return this.set_int(Wn, e);
        }),
        (n.prototype.set_list_style = function (e) {
          return this.set_int($n, e);
        }),
        (n.prototype.get_list_style = function () {
          return this.get_int($n);
        }),
        (n.prototype.is_numbered_list = function () {
          return this.get_int($n) !== fe;
        }),
        (n.prototype.merge = function (e) {
          var t = new n();
          return (
            (function e() {
              for (var t = arguments, i = 1; i < t.length; i++)
                for (var n in t[i])
                  t[i].hasOwnProperty(n) && (t[0][n] = t[i][n]);
              return t[0];
            })(t.data, this.data, e.data),
            t
          );
        }),
        (n.prototype.clone = function () {
          return new n(this.write());
        }),
        n
      );
    })(oi),
    Kn = (function (t) {
      function e() {
        var e = t.call(this, new vt()) || this;
        return (
          (e.nodes = {}),
          (e.size = 0),
          (e.root = e.create_node("root")),
          (e.version = 0),
          (e.user_version = 0),
          (e.available = !1),
          e
        );
      }
      return (
        nt(e, t),
        (e.prototype.get_size = function () {
          return this.size;
        }),
        (e.prototype.get_root = function () {
          return this.root;
        }),
        (e.prototype.get_first_level = function () {
          return this.root.get_children().array();
        }),
        (e.prototype.is_available = function () {
          return this.available;
        }),
        (e.prototype.set_available = function (e) {
          this.available != e &&
            ((this.available = e), this.trigger("available_change"));
        }),
        (e.prototype.get_version = function () {
          return this.version;
        }),
        (e.prototype.set_version = function (e) {
          this.version = e;
        }),
        (e.prototype.get_user_version = function () {
          return this.user_version;
        }),
        (e.prototype.set_user_version = function (e) {
          this.user_version = e;
        }),
        (e.prototype.create_node = function (e) {
          void 0 === e && (e = null), (kt(e) && bool(e)) || (e = Yt());
          var t = new zn(this, e);
          return (
            (this.nodes[e] = t), this.size++, this.trigger("node_create", t), t
          );
        }),
        (e.prototype.remove_node = function (e) {
          e.remove(), delete this.nodes[e.get_id()], this.size--;
        }),
        (e.prototype.find_node = function (e) {
          return this.nodes[e];
        }),
        (e.prototype.get_nodes = function () {
          return this.nodes;
        }),
        (e.prototype.traverse_parent = function (e, t, i) {
          for (
            ;
            e && (!i || !e.is_root()) && (!(e = e.get_parent()) || !1 !== t(e));

          );
        }),
        (e.prototype.traverse_tree_bfs = function (e, t) {
          return this.traverse_tree(!0, e, t);
        }),
        (e.prototype.traverse_tree_dfs = function (e, t) {
          return this.traverse_tree(!1, e, t);
        }),
        (e.prototype.traverse_tree = function (e, t, i) {
          return (
            t || (t = this.get_root()),
            Ct(e, t, function (e) {
              var t = i(e);
              return (
                "break" !== t &&
                ("continue" !== t ? e.get_children().array() : void 0)
              );
            })
          );
        }),
        (e.prototype.serialize = function () {
          var t = [];
          return (
            Object.each(
              this.nodes,
              function (e) {
                t.push(e.serialize());
              },
              this,
            ),
            {
              version: this.version,
              user_version: this.user_version,
              available: this.available,
              nodes: t,
            }
          );
        }),
        (e.prototype.deserialize = function (e) {
          var t = this;
          each(e.nodes, this.deserialize_node.bind(this)),
            each(e.nodes, function (e) {
              t.find_node(e.id).post_deserialize_local(e);
            }),
            this.set_version(e.version),
            this.set_user_version(e.user_version),
            this.set_available(e.available);
        }),
        (e.prototype.merge = function (e) {
          var t = this;
          each(e.nodes, this.deserialize_node.bind(this)),
            each(e.nodes, function (e) {
              t.find_node(e.id).post_deserialize_merge(e);
            }),
            this.set_version(e.version);
        }),
        (e.prototype.deserialize_node = function (e) {
          var t = this.find_node(e.id);
          return t || (t = this.create_node(e.id)), t.deserialize(e), t;
        }),
        e
      );
    })(mt),
    Vn = (function (s) {
      function e(e, t, i, n) {
        var o = s.call(this, e, t, i, n) || this;
        return (
          (o.user_data = ""),
          (o.user_data_obj = new Zn(o.user_data)),
          (o.node_collection = new Kn()),
          o
        );
      }
      return (
        nt(e, s),
        (e.prototype.get_type = function () {
          return "document";
        }),
        (e.prototype.get_node_collection = function () {
          return this.node_collection;
        }),
        (e.prototype.get_user_data = function () {
          return this.user_data;
        }),
        (e.prototype.get_user_data_object = function () {
          return this.user_data_obj;
        }),
        (e.prototype.set_user_data = function (e) {
          bool(e) || (e = ""),
            this.user_data !== e &&
              ((this.user_data = e),
              (this.user_data_obj = new Zn(e)),
              this.userspace.trigger("document_user_data_change", this));
        }),
        (e.prototype.serialize = function () {
          var e = s.prototype.serialize.call(this);
          return (e.user_data = this.user_data), e;
        }),
        (e.prototype.deserialize = function (e) {
          s.prototype.deserialize.call(this, e),
            this.set_user_data(e.user_data);
        }),
        e
      );
    })(ti),
    Xn = {
      SYNC_CALENDAR: "sc",
      LAST_ACCESS: "la",
      LAYOUT: "lo",
      SHOW_CHECKED: "c",
      SHOW_NOTES: "n",
      ARCHIVED: "a",
      TEXT_DIRECTION: "td",
    },
    Zn = (function (t) {
      function e(e) {
        return t.call(this, e) || this;
      }
      return (
        nt(e, t),
        (e.prototype.set_sync_calendar = function (e) {
          return this.set_bool(Xn.SYNC_CALENDAR, e);
        }),
        (e.prototype.get_sync_calendar = function () {
          return this.get_bool(Xn.SYNC_CALENDAR);
        }),
        (e.prototype.set_last_access = function (e) {
          return this.set_int(Xn.LAST_ACCESS, e);
        }),
        (e.prototype.get_last_access = function () {
          return this.get_int(Xn.LAST_ACCESS);
        }),
        (e.prototype.set_layout = function (e) {
          return this.set_string(Xn.LAYOUT, e);
        }),
        (e.prototype.get_layout = function () {
          return this.get_string(Xn.LAYOUT);
        }),
        (e.prototype.setTextDirection = function (e) {
          return this.set_string(Xn.TEXT_DIRECTION, e);
        }),
        (e.prototype.getTextDirection = function () {
          return this.get_string(Xn.TEXT_DIRECTION);
        }),
        (e.prototype.set_checked_items_visibility = function (e) {
          return this.set_string(Xn.SHOW_CHECKED, e);
        }),
        (e.prototype.get_checked_items_visibility = function () {
          return this.get_string(Xn.SHOW_CHECKED);
        }),
        (e.prototype.set_notes_visibility = function (e) {
          return this.set_string(Xn.SHOW_NOTES, e);
        }),
        (e.prototype.get_notes_visibility = function () {
          return this.get_string(Xn.SHOW_NOTES);
        }),
        (e.prototype.set_archived = function (e) {
          return this.set_bool(Xn.ARCHIVED, e);
        }),
        (e.prototype.get_archived = function () {
          return this.get_bool(Xn.ARCHIVED);
        }),
        (e.prototype.clone = function () {
          return new e(this.write());
        }),
        (e.DATA_KEYS = function () {
          return Xn;
        }),
        e
      );
    })(oi),
    Jn = "add",
    Qn = "remove",
    eo = "edit",
    to = "move",
    io = "collapse",
    no = "userdata",
    oo = function e(t) {
      this.action = t;
    },
    so = (function (t) {
      function e(e) {
        return t.call(this, e) || this;
      }
      return (
        nt(e, t),
        (e.deserialize = function (e, t) {
          return t.action === eo
            ? ro.deserialize(e, t)
            : t.action === to
            ? ao.deserialize(e, t)
            : null;
        }),
        e
      );
    })(oo),
    ro = (function (o) {
      function n(e, t, i) {
        var n = o.call(this, eo) || this;
        return (n.file = e), (n.titleFrom = t), (n.titleTo = i), n;
      }
      return (
        nt(n, o),
        (n.prototype.apply = function () {
          this.file.set_title(this.titleTo);
        }),
        (n.prototype.revert = function () {
          this.file.set_title(this.titleFrom);
        }),
        (n.prototype.serialize = function () {
          return {
            action: this.action,
            file_id: this.file.get_id(),
            title_from: this.titleFrom,
            title_to: this.titleTo,
          };
        }),
        (n.prototype.net_serialize = function () {
          return {
            action: this.action,
            type: this.file.get_type(),
            file_id: this.file.get_server_id(),
            title: this.titleTo,
          };
        }),
        (n.deserialize = function (e, t) {
          var i = e.find_file(t.file_id);
          return i ? new n(i, t.title_from, t.title_to) : null;
        }),
        n
      );
    })(so),
    ao = (function (r) {
      function s(e, t, i, n, o) {
        var s = r.call(this, to) || this;
        return (
          (s.file = e),
          (s.parentOld = t),
          (s.indexOld = i),
          (s.parentNew = n),
          (s.indexNew = o),
          s
        );
      }
      return (
        nt(s, r),
        (s.prototype.apply = function () {
          this.attach(this.file, this.parentNew, this.indexNew);
        }),
        (s.prototype.revert = function () {
          this.attach(this.file, this.parentOld, this.indexOld);
        }),
        (s.prototype.attach = function (e, t, i) {
          t ? t.attach_child(i, e) : e.detach();
        }),
        (s.prototype.serialize_parent = function (e) {
          return e ? e.get_id() : "";
        }),
        (s.prototype.serialize = function () {
          return {
            action: this.action,
            file_id: this.file.get_id(),
            parent_old_id: this.serialize_parent(this.parentOld),
            index_old: this.indexOld,
            parent_new_id: this.serialize_parent(this.parentNew),
            index_new: this.indexNew,
          };
        }),
        (s.prototype.net_serialize_parent = function (e) {
          return e ? e.get_server_id() : "";
        }),
        (s.prototype.net_serialize = function () {
          return {
            action: this.action,
            type: this.file.get_type(),
            file_id: this.file.get_server_id(),
            parent_id: this.net_serialize_parent(this.parentNew),
            index: this.indexNew,
          };
        }),
        (s.deserialize = function (e, t) {
          var i = e.find_file(t.file_id);
          if (!i) return null;
          var n = e.find_file(t.parent_old_id),
            o = e.find_file(t.parent_new_id);
          return new s(i, n, t.index_old, o, t.index_new);
        }),
        s
      );
    })(so),
    _o = (function (o) {
      function n(e, t, i) {
        var n = o.call(this, no) || this;
        return (n.document = e), (n.oldUserData = t), (n.newUserData = i), n;
      }
      return (
        nt(n, o),
        (n.prototype.apply = function () {
          if (this.oldUserData != this.document.get_user_data()) {
            var t = Zn.read(this.oldUserData),
              i = Zn.read(this.document.get_user_data()),
              n = Zn.read(this.newUserData);
            Object.each(Zn.DATA_KEYS(), function (e) {
              n[e] != t[e] && (i[e] = n[e]);
            }),
              (this.newUserData = Zn.write(i));
          }
          this.document.set_user_data(this.newUserData);
        }),
        (n.prototype.revert = function () {
          this.document.set_user_data(this.oldUserData);
        }),
        (n.prototype.serialize = function () {
          return {
            file_id: this.document.get_id(),
            old_user_data: this.oldUserData,
            new_user_data: this.newUserData,
          };
        }),
        (n.prototype.net_serialize = function () {
          return {
            file_id: this.document.get_server_id(),
            user_data: this.newUserData,
          };
        }),
        (n.deserialize = function (e, t) {
          var i = e.find_file(t.file_id);
          return i ? new n(i, t.old_user_data, t.new_user_data) : null;
        }),
        n
      );
    })(oo),
    co = (function (n) {
      function o(e, t) {
        var i = n.call(this, io) || this;
        return (
          (i.file = e), (i.collapsed = t), i.file.set_collapsed(i.collapsed), i
        );
      }
      return (
        nt(o, n),
        (o.prototype.apply = function () {}),
        (o.prototype.revert = function () {}),
        (o.prototype.serialize = function () {
          return { file_id: this.file.get_id(), collapsed: this.collapsed };
        }),
        (o.prototype.net_serialize = function () {
          return {
            file_id: this.file.get_server_id(),
            collapsed: this.collapsed,
          };
        }),
        (o.deserialize = function (e, t) {
          var i = e.find_file(t.file_id);
          return i ? new o(i, t.collapsed) : null;
        }),
        o
      );
    })(oo),
    lo = { EDIT: "e", MOVE: "m" },
    uo = (function (t) {
      function e(e) {
        return t.call(this, e) || this;
      }
      return (
        nt(e, t),
        (e.deserialize = function (e, t) {
          return t.action === lo.EDIT
            ? ho.deserialize(e, t)
            : t.action === lo.MOVE
            ? po.deserialize(e, t)
            : null;
        }),
        e
      );
    })(oo),
    ho = (function (o) {
      function n(e, t, i) {
        var n = o.call(this, lo.EDIT) || this;
        return (n.bookmark = e), (n.dataOld = t), (n.dataNew = i), n;
      }
      return (
        nt(n, o),
        (n.prototype.apply = function () {
          this.bookmark.set_data(this.dataNew);
        }),
        (n.prototype.revert = function () {
          this.bookmark.set_data(this.dataOld);
        }),
        (n.prototype.serialize = function () {
          return {
            action: this.action,
            id: this.bookmark.get_id(),
            data_old: this.dataOld,
            data_new: this.dataNew,
          };
        }),
        (n.prototype.net_serialize = function () {
          return {
            a: this.action,
            id: this.bookmark.get_server_id(),
            d: this.dataNew,
          };
        }),
        (n.deserialize = function (e, t) {
          var i = e.find_bookmark(t.id);
          return (
            i || (i = e.create_bookmark(t.id)), new n(i, t.data_old, t.data_new)
          );
        }),
        n
      );
    })(uo),
    po = (function (o) {
      function n(e, t, i) {
        var n = o.call(this, lo.MOVE) || this;
        return (n.bookmark = e), (n.indexOld = t), (n.indexNew = i), n;
      }
      return (
        nt(n, o),
        (n.prototype.apply = function () {
          this.indexNew < 0
            ? this.bookmark.detach()
            : this.bookmark.userspace.root_bookmark.attach_child(
                this.indexNew,
                this.bookmark,
              );
        }),
        (n.prototype.revert = function () {
          this.indexOld < 0
            ? this.bookmark.detach()
            : this.bookmark.userspace.root_bookmark.attach_child(
                this.indexOld,
                this.bookmark,
              );
        }),
        (n.prototype.serialize = function () {
          return {
            action: this.action,
            id: this.bookmark.get_id(),
            index_old: this.indexOld,
            index_new: this.indexNew,
          };
        }),
        (n.prototype.net_serialize = function () {
          return {
            a: this.action,
            id: this.bookmark.get_server_id(),
            i: this.indexNew,
          };
        }),
        (n.deserialize = function (e, t) {
          var i = e.find_bookmark(t.id);
          return (
            i || (i = e.create_bookmark(t.id)),
            new n(i, t.index_old, t.index_new)
          );
        }),
        n
      );
    })(uo),
    fo = (function () {
      function e() {
        this.actions = [];
      }
      return (
        (e.prototype.push_action = function (e) {
          e && this.actions.push(e);
        }),
        (e.prototype.apply_all = function () {
          Array.each(this.actions, function (e) {
            e.apply();
          });
        }),
        (e.prototype.revert_all = function () {
          Array.eachReverse(this.actions, function (e) {
            e.revert();
          });
        }),
        (e.prototype.prune = function () {}),
        (e.prototype.clear_actions = function (e) {
          this.actions.splice(0, e);
        }),
        (e.prototype.get_actions = function () {
          return this.actions;
        }),
        (e.prototype.has_changes = function () {
          return 0 < this.actions.length;
        }),
        e
      );
    })(),
    go = (function (i) {
      function e(e) {
        var t = i.call(this) || this;
        return (t.userspace = e), (t.newDocuments = []), (t.newFolders = []), t;
      }
      return (
        nt(e, i),
        (e.prototype.push_new_file = function (e) {
          e instanceof Vn
            ? this.newDocuments.push(e)
            : e instanceof ii
            ? this.newFolders.push(e)
            : assert_not_reached();
        }),
        (e.prototype.get_new_documents = function () {
          return this.newDocuments;
        }),
        (e.prototype.get_new_folders = function () {
          return this.newFolders;
        }),
        (e.prototype.has_changes = function () {
          return (
            i.prototype.has_changes.call(this) ||
            0 < this.newDocuments.length ||
            0 < this.newFolders.length
          );
        }),
        (e.prototype.serialize = function () {
          var t = [];
          Array.each(this.actions, function (e) {
            t.push(e.serialize());
          });
          var i = [];
          return (
            Array.each(this.newDocuments, function (e) {
              i.push(e.get_id());
            }),
            Array.each(this.newFolders, function (e) {
              i.push(e.get_id());
            }),
            { actions: t, new_files: i }
          );
        }),
        (e.prototype.deserialize = function (e) {
          var i = this;
          (this.newDocuments = []),
            (this.newFolders = []),
            (this.actions = []),
            Array.each(e.actions, function (e) {
              var t = so.deserialize(i.userspace, e);
              t && i.actions.push(t);
            }),
            Array.each(e.new_files, function (e) {
              var t = i.userspace.find_file(e);
              i.push_new_file(t);
            });
        }),
        e
      );
    })(fo),
    mo = (function () {
      function e(e) {
        (this.userspace = e),
          (this.bookmark_changes = new fo()),
          (this.collapse_changes = new fo()),
          (this.document_user_data_changes = new fo());
      }
      return (
        (e.prototype.serialize = function () {
          return {
            bookmark_changes: {
              actions: this.bookmark_changes.get_actions().map(function (e) {
                return e.serialize();
              }),
            },
            collapse_changes: {
              actions: this.collapse_changes.get_actions().map(function (e) {
                return e.serialize();
              }),
            },
            document_user_data_changes: {
              actions: this.document_user_data_changes
                .get_actions()
                .map(function (e) {
                  return e.serialize();
                }),
            },
          };
        }),
        (e.prototype.deserialize = function (e) {
          var t = this;
          e.bookmark_changes &&
            Array.each(e.bookmark_changes.actions, function (e) {
              t.bookmark_changes.push_action(uo.deserialize(t.userspace, e));
            }),
            e.collapse_changes &&
              Array.each(e.collapse_changes.actions, function (e) {
                t.collapse_changes.push_action(co.deserialize(t.userspace, e));
              }),
            e.document_user_data_changes &&
              Array.each(e.document_user_data_changes.actions, function (e) {
                t.document_user_data_changes.push_action(
                  _o.deserialize(t.userspace, e),
                );
              });
        }),
        e
      );
    })(),
    vo = (function (t) {
      function e() {
        var e = t.call(this, new vt()) || this;
        return (
          (e.files = {}),
          (e.server_files = {}),
          (e.namespaces = {}),
          (e.bookmarks = {}),
          (e.server_bookmarks = {}),
          (e.root_namespace = e.create_namespace()),
          (e.root_file = e.create_folder("root_file")),
          (e.root_bookmark = new si(e)),
          e.root_namespace.set_root_file(e.root_file),
          (e.changes = new go(e)),
          (e.user_changes = new mo(e)),
          (e.userspace_version = 0),
          (e.available = !1),
          e
        );
      }
      return (
        nt(e, t),
        (e.prototype.get_root_namespace = function () {
          return this.root_namespace;
        }),
        (e.prototype.get_root_bookmark = function () {
          return this.root_bookmark;
        }),
        (e.prototype.create_namespace = function (e) {
          return (kt(e) && bool(e)) || (e = Kt()), this._make_namespace(e);
        }),
        (e.prototype.find_namespace = function (e) {
          return this.namespaces[e];
        }),
        (e.prototype.find_or_create_namespace = function (e) {
          var t = this.find_namespace(e);
          return t || (t = this.create_namespace(e)), t;
        }),
        (e.prototype.get_namespaces = function () {
          return this.namespaces;
        }),
        (e.prototype.remove_namespace = function (e) {
          delete this.namespaces[e.get_id()];
        }),
        (e.prototype._make_namespace = function (e) {
          var t = new ni(this, e);
          return (
            (this.namespaces[e] = t), this.trigger("namespace_create", t), t
          );
        }),
        (e.prototype.create_bookmark = function (e, t) {
          (kt(e) && bool(e)) || (e = Kt());
          var i = new ri(this, e, t);
          return (
            (this.bookmarks[i.get_id()] = i).has_server_id() &&
              (this.server_bookmarks[i.get_server_id()] = i),
            this.trigger("bookmark_create", i),
            i
          );
        }),
        (e.prototype.find_bookmark = function (e) {
          return this.bookmarks[e];
        }),
        (e.prototype.find_server_bookmark = function (e) {
          return this.server_bookmarks[e];
        }),
        (e.prototype._find_bookmark = function (e, t) {
          var i = null;
          return (
            !i && e && (i = this.find_bookmark(e)),
            !i && t && (i = this.find_server_bookmark(t)),
            i
          );
        }),
        (e.prototype.remove_bookmark = function (e) {
          e.remove(),
            delete this.bookmarks[e.get_id()],
            e.has_server_id() &&
              delete this.server_bookmarks[e.get_server_id()];
        }),
        (e.prototype.bookmark_change_server_id = function (e, t, i) {
          t && delete this.server_bookmarks[t],
            i && (this.server_bookmarks[i] = e);
        }),
        (e.prototype.get_root_file = function () {
          return this.root_file;
        }),
        (e.prototype.create_folder = function (e, t) {
          return this._make_folder(this.root_namespace, e, t);
        }),
        (e.prototype.create_document = function (e, t) {
          return this._make_document(this.root_namespace, e, t);
        }),
        (e.prototype.create_linkfile = function (e, t) {
          return this._make_linkfile(this.root_namespace, e, t);
        }),
        (e.prototype.remove_file = function (e) {
          e.remove(),
            delete this.files[e.get_id()],
            e.has_server_id() && delete this.server_files[e.get_server_id()];
        }),
        (e.prototype.find_file = function (e) {
          return this.files[e];
        }),
        (e.prototype.find_server_file = function (e) {
          return this.server_files[e];
        }),
        (e.prototype.get_files = function () {
          return this.files;
        }),
        (e.prototype.get_bookmarks = function () {
          return this.bookmarks;
        }),
        (e.prototype.get_ts = function () {
          return this.ts;
        }),
        (e.prototype.set_ts = function (e) {
          this.ts = e;
        }),
        (e.prototype.get_userspace_version = function () {
          return this.userspace_version;
        }),
        (e.prototype.set_userspace_version = function (e) {
          this.userspace_version = e;
        }),
        (e.prototype.is_available = function () {
          return this.available;
        }),
        (e.prototype.set_available = function (e) {
          this.available = e;
        }),
        (e.prototype._make_folder = function (e, t, i) {
          (kt(t) && bool(t)) || (t = Kt());
          var n = new ii(this, e, t, i);
          return this._created_file(n), n;
        }),
        (e.prototype._make_document = function (e, t, i) {
          (kt(t) && bool(t)) || (t = Kt());
          var n = new Vn(this, e, t, i);
          return this._created_file(n), n;
        }),
        (e.prototype._make_linkfile = function (e, t, i) {
          (kt(t) && bool(t)) || (t = Kt());
          var n = new fi(this, e, t, i);
          return this._created_file(n), n;
        }),
        (e.prototype._created_file = function (e) {
          (this.files[e.get_id()] = e).has_server_id() &&
            (this.server_files[e.get_server_id()] = e),
            this.trigger("file_create", e);
        }),
        (e.prototype.file_change_server_id = function (e, t, i) {
          t && delete this.server_files[t], i && (this.server_files[i] = e);
        }),
        (e.prototype.namespace_id_change = function (e, t) {
          (this.namespaces[t] = this.namespaces[e]), delete this.namespaces[e];
        }),
        (e.prototype._find_file = function (e, t) {
          var i = null;
          return (
            !i && e && (i = this.find_file(e)),
            !i && t && (i = this.find_server_file(t)),
            i
          );
        }),
        (e.prototype.traverse_tree_bfs = function (e, t) {
          return this.traverse_tree(!0, e, t);
        }),
        (e.prototype.traverse_tree_dfs = function (e, t) {
          return this.traverse_tree(!1, e, t);
        }),
        (e.prototype.traverse_tree = function (e, t, i) {
          return (
            t || (t = this.get_root_file()),
            Ct(e, t, function (e) {
              if (e instanceof fi && !(e = e.get_target_file())) return null;
              var t = i(e);
              return (
                "break" !== t &&
                ("continue" !== t
                  ? e instanceof ii
                    ? e.get_children().array()
                    : null
                  : void 0)
              );
            })
          );
        }),
        (e.prototype.serialize = function () {
          var e = this.userspace_version,
            t = this.available,
            i = this.root_namespace.get_id(),
            n = [];
          Object.each(this.namespaces, function (e) {
            n.push(e.serialize());
          });
          var o = [];
          Object.each(this.files, function (e) {
            o.push(e.serialize());
          });
          var s = this.root_bookmark.serialize();
          return {
            userspace_version: e,
            available: t,
            root_namespace_id: i,
            namespaces: n,
            files: o,
            bookmarks: s,
          };
        }),
        (e.prototype.deserialize = function (e) {
          var t = this,
            i = e.userspace_version,
            n = e.available,
            o = e.root_namespace_id,
            s = e.namespaces,
            r = e.files,
            a = e.bookmarks;
          each(
            this.files,
            function (e) {
              e.is_root() || this.remove_file(e);
            },
            this,
          ),
            assert_equal(Object.keys(this.files).length, 1),
            each(
              this.namespaces,
              function (e) {
                e.is_root() || this.remove_namespace(e);
              },
              this,
            ),
            assert_equal(Object.keys(this.namespaces).length, 1);
          var _ = "";
          o && this.root_namespace.set_id(o),
            each(s, function (e) {
              e.namespace_id === o && (_ = e.root_file_server_id),
                t.find_or_create_namespace(e.namespace_id).deserialize(e);
            }),
            _ && this.root_file.set_server_id(_),
            each(r, function (e) {
              t.deserialize_file(e);
            }),
            each(s, function (e) {
              t.find_namespace(e.namespace_id).post_deserialize(e);
            }),
            each(r, function (e) {
              t._find_file(e.id, e.server_id).post_deserialize(e);
            }),
            this.update_linkfiles(),
            assert_equal(Object.keys(this.namespaces).length, s.length),
            this.root_bookmark.deserialize(a),
            this.set_userspace_version(i),
            this.set_available(n);
        }),
        (e.prototype.deserialize_namespaces = function (e) {
          var i = this;
          each(e, function (e) {
            var t = i.find_or_create_namespace(e.namespace_id);
            t.deserialize(e),
              each(e.files, function (e) {
                (e.namespace_id = t.get_id()), i.deserialize_file(e);
              }),
              t.post_deserialize(e),
              each(e.files, function (e) {
                i._find_file(e.id, e.server_id).post_deserialize(e);
              });
          }),
            this.update_linkfiles();
        }),
        (e.prototype.update_linkfiles = function () {
          Object.each(this.files, function (e) {
            e instanceof fi && e.update_target_namespace();
          });
        }),
        (e.prototype.deserialize_file = function (e) {
          var t = this.find_namespace(e.namespace_id),
            i = this._find_file(e.id, e.server_id);
          return (
            i
              ? i.set_namespace(t)
              : "folder" === e.type
              ? (i = this._make_folder(t, e.id, e.server_id))
              : "document" === e.type
              ? (i = this._make_document(t, e.id, e.server_id))
              : "linkfile" === e.type
              ? (i = this._make_linkfile(t, e.id, e.server_id))
              : assert_not_reached(e.type),
            i.deserialize(e),
            i
          );
        }),
        (e.prototype.deserialize_bookmark = function (e) {
          var t = this._find_bookmark(e.id, e.server_id);
          return (
            t || (t = this.create_bookmark(e.id, e.server_id)),
            t.deserialize(e),
            t
          );
        }),
        (e.prototype.deserialize_namespace = function (e) {
          var t = this._make_namespace(e.namespace_id);
          return t.deserialize(e), t.post_deserialize(e), t;
        }),
        (e.prototype.deserialize_new_share = function (e) {
          var t = this.deserialize_namespace(e.namespace);
          t.update_children(), (e.linkfile.type = "linkfile");
          var i = this.deserialize_file(e.linkfile),
            n = t.get_root_file(),
            o = n.get_index(),
            s = n.get_parent();
          return (
            n.detach(),
            s && s.attach_child(o, i),
            i.post_deserialize(e.linkfile),
            t
          );
        }),
        (e.prototype.are_all_documents_ready = function () {
          var t = !0;
          return (
            this.traverse_tree_bfs(null, function (e) {
              if (e instanceof Vn) {
                if (e.get_user_data_object().get_archived()) return;
                if (!e.get_node_collection().is_available())
                  return (t = !1), "break";
              }
            }),
            t
          );
        }),
        e
      );
    })(mt),
    yo = (function () {
      function e(e, t, i) {
        (this.env = e),
          (this.version = 1),
          (this.crypto_key = t),
          (this.enable = i) && log("OFFLINE ENABLED");
      }
      return (
        (e.prototype.is_enabled = function () {
          return this.enable;
        }),
        (e.prototype.async_get_userdata = function (e) {
          this.get("userdata", e);
        }),
        (e.prototype.async_save_userdata = function (e, t) {
          this.set("userdata", e, t);
        }),
        (e.prototype.async_get_userspace = function (e) {
          this.get("userspace", e);
        }),
        (e.prototype.async_save_userspace = function (e, t) {
          this.set("userspace", e, t);
        }),
        (e.prototype.async_clear_userspace = function (e) {
          this.async_save_userspace(null, e);
        }),
        (e.prototype.async_get_document = function (e, t) {
          this.get("document-" + e, t);
        }),
        (e.prototype.async_save_document = function (e, t, i) {
          this.set("document-" + e, t, i);
        }),
        (e.prototype.async_clear_document = function (e, t) {
          this.async_save_document(e, null, t);
        }),
        (e.prototype.get = function (i, n) {
          this.enable
            ? this.env.get_user_data(i, function (e, t) {
                if (e)
                  return (
                    console.error("An error occured while reading " + i, e), n()
                  );
                try {
                  return t && (t = JSON.parse(t)), n(t);
                } catch (e) {
                  return (
                    console.error("Failed to read local value for " + i, e), n()
                  );
                }
              })
            : wt(n);
        }),
        (e.prototype.set = function (e, t, i) {
          this.enable
            ? t
              ? ((t = (t = JSON.stringify(t)).replace(
                  /[\u2028\u2029]/g,
                  function (e) {
                    return "\\u" + e.charCodeAt(0).toString(16);
                  },
                )),
                this.env.set_user_data(e, t, i))
              : this.env.delete_user_data(e, i)
            : wt(i);
        }),
        (e.prototype.encrypt = function (e) {
          return xi.AES.encrypt(e, this.crypto_key);
        }),
        (e.prototype.decrypt = function (e) {
          return xi.AES.decrypt(e, this.crypto_key);
        }),
        e
      );
    })(),
    bo = (function () {
      function c() {
        (this.id = ""),
          (this.meta = ""),
          (this.collapsed = !1),
          (this.created_ts = 0),
          (this.edited_ts = 0),
          (this.attached_ts = 0),
          (this.children = []),
          (this.loc_ids = []),
          (this.sync_attempt = 0);
      }
      return (
        (c.prototype.serialize = function () {
          return {
            id: this.id,
            meta: this.meta,
            collapsed: this.collapsed,
            created_ts: this.created_ts,
            edited_ts: this.edited_ts,
            attached_ts: this.attached_ts,
            children: this.children,
            loc_ids: this.loc_ids,
            sync_attempt: this.sync_attempt,
          };
        }),
        (c.deserialize = function (e) {
          var t = new c();
          return (
            (t.id = e.id),
            (t.meta = e.meta),
            (t.collapsed = e.collapsed),
            (t.created_ts = e.created_ts),
            (t.edited_ts = e.edited_ts),
            (t.attached_ts = e.attached_ts),
            (t.children = e.children),
            (t.loc_ids = e.loc_ids),
            (t.sync_attempt = e.sync_attempt),
            t
          );
        }),
        (c.from_node = function (e) {
          var t = new c();
          return (
            (t.id = e.get_id()),
            (t.meta = e.get_meta()),
            (t.collapsed = e.is_collapsed()),
            (t.created_ts = e.get_created_ts()),
            (t.edited_ts = e.get_edited_ts()),
            (t.attached_ts = e.get_attached_ts()),
            (t.children = []),
            (t.loc_ids = []),
            (t.sync_attempt = e.sync_attempt),
            e.get_children().each(function (e) {
              t.children.push(e.get_id()), t.loc_ids.push(e.get_loc_id());
            }),
            t
          );
        }),
        (c.from_server = function (e) {
          var t = e.id,
            i = e.meta,
            n = e.created_ts,
            o = e.edited_ts,
            s = e.attached_ts,
            r = e.collapsed,
            a = e.children,
            _ = new c();
          return (
            (_.id = t),
            (_.meta = i),
            (_.collapsed = r),
            (_.created_ts = n),
            (_.edited_ts = o),
            (_.attached_ts = s),
            (_.children = []),
            (_.loc_ids = []),
            each(a, function (e) {
              _.children.push(e), _.loc_ids.push("");
            }),
            _
          );
        }),
        c
      );
    })(),
    wo = (function () {
      function n() {
        (this.nodes = {}), (this.root = "");
      }
      return (
        (n.prototype.add_node = function (e) {
          this.nodes[e.id] = e;
        }),
        (n.from_node_collection = function (e) {
          var i = new n();
          return (
            e.traverse_tree_bfs(null, function (e) {
              var t = bo.from_node(e);
              i.add_node(t);
            }),
            (i.root = e.get_root().get_id()),
            i
          );
        }),
        (n.from_server_load = function (e, t) {
          var i = new n();
          return (
            each(e, function (e) {
              var t = bo.from_server(e);
              i.add_node(t);
            }),
            (i.root = t),
            i
          );
        }),
        (n.prototype.serialize = function () {
          var t = { root: this.root, nodes: [] };
          return (
            Object.each(this.nodes, function (e) {
              t.nodes.push(e.serialize());
            }),
            t.nodes.sort(function (e, t) {
              return e.id < t.id ? -1 : e.id > t.id ? 1 : 0;
            }),
            t
          );
        }),
        (n.deserialize = function (e) {
          var t = new n();
          return (
            (t.root = e.root),
            Array.each(e.nodes, function (e) {
              t.add_node(bo.deserialize(e));
            }),
            t
          );
        }),
        (n.prototype.encode = function () {
          for (
            var t = this, e = [], i = this.nodes[this.root], n = [i];
            0 < n.length;

          ) {
            var o = n.shift();
            if (o) {
              var s = o.meta;
              o === i && (s = ""), "{}" === s && (s = "");
              var r = [o.id, o.children.join(","), s];
              e.push(r),
                Array.each(o.children, function (e) {
                  n.push(t.nodes[e]);
                });
            }
          }
          return JSON.stringify(e);
        }),
        (n.prototype.hash = function () {
          return ei(this.encode());
        }),
        n
      );
    })(),
    ko = (function () {
      function _() {
        (this.added = []),
          (this.removed = []),
          (this.meta = []),
          (this.location = []),
          (this.collapse = []),
          (this.created = {}),
          (this.ts = Date.now());
      }
      return (
        (_.merge_diffs = function (e) {
          var i = new _(),
            t = {},
            n = {},
            o = {},
            s = {},
            r = {};
          return (
            Array.each(e, function (e) {
              Array.each(e.added, function (e) {
                t[e] = !0;
              }),
                Array.each(e.removed, function (e) {
                  n[e] = !0;
                }),
                Array.each(e.meta, function (e) {
                  var t = e.id;
                  o.hasOwnProperty(t)
                    ? (o[t].meta_new = e.meta_new)
                    : (o[t] = {
                        id: t,
                        meta_old: e.meta_old,
                        meta_new: e.meta_new,
                      });
                }),
                Array.each(e.location, function (e) {
                  var t = e.id;
                  s.hasOwnProperty(t)
                    ? ((s[t].parent_new = e.parent_new),
                      (s[t].index_new = e.index_new),
                      (s[t].loc_id_new = e.loc_id_new))
                    : (s[t] = {
                        id: t,
                        parent_old: e.parent_old,
                        index_old: e.index_old,
                        loc_id_old: e.loc_id_old,
                        parent_new: e.parent_new,
                        index_new: e.index_new,
                        loc_id_new: e.loc_id_new,
                      });
                }),
                Object.each(e.created, function (e, t) {
                  r[t] = e;
                });
            }),
            Object.each(t, function (e, t) {
              i.added.push(t);
            }),
            Object.each(n, function (e, t) {
              i.removed.push(t);
            }),
            Object.each(o, function (e) {
              i.meta.push(e);
            }),
            Object.each(s, function (e) {
              i.location.push(e);
            }),
            (i.created = r),
            i
          );
        }),
        (_.make_diff = function (e, t, d) {
          var f = new _(),
            g = e,
            m = t,
            i = {},
            n = function (e) {
              var t = e.id;
              i[t] = t;
            };
          Object.each(g.nodes, n), Object.each(m.nodes, n);
          var v = {},
            y = {};
          return (
            Object.each(i, function (e) {
              var n = g.nodes[e],
                o = m.nodes[e],
                t = void 0 !== d && o && o.sync_attempt <= d;
              if (
                (n ||
                  ((t = !1),
                  f.make_add_diff(e),
                  (n = bo.deserialize({
                    id: e,
                    meta: "",
                    collapsed: !1,
                    children: [],
                    loc_ids: [],
                    created_ts: 0,
                    edited_ts: 0,
                    attached_ts: 0,
                    sync_attempt: 0,
                  })),
                  (f.created[e] = o.created_ts)),
                o ||
                  ((t = !1),
                  f.make_remove_diff(e),
                  (o = bo.deserialize({
                    id: e,
                    meta: "",
                    collapsed: !1,
                    children: [],
                    loc_ids: [],
                    created_ts: 0,
                    edited_ts: 0,
                    attached_ts: 0,
                    sync_attempt: 0,
                  })),
                  (f.created[e] = n.created_ts)),
                !t)
              ) {
                n.meta !== o.meta && f.make_meta_diff(e, n.meta, o.meta),
                  n.collapsed !== o.collapsed &&
                    f.make_collapse_diff(e, n.collapsed, o.collapsed);
                var s = [],
                  r = [],
                  a = {},
                  _ = {};
                Array.each(n.children, function (e, t) {
                  var i = {
                    parent: n.id,
                    id: e,
                    index: t,
                    loc_id: n.loc_ids[t],
                  };
                  s.push(i), (a[e] = i);
                }),
                  Array.each(o.children, function (e, t) {
                    var i = {
                      parent: o.id,
                      id: e,
                      index: t,
                      loc_id: o.loc_ids[t],
                    };
                    r.push(i), (_[e] = i);
                  });
                var i = [],
                  c = [];
                Array.each(s, function (e) {
                  _[e.id] ? i.push(e) : (v[e.id] = e);
                }),
                  Array.each(r, function (e) {
                    a[e.id] ? c.push(e) : (y[e.id] = e);
                  }),
                  assert_equal(
                    i.length,
                    c.length,
                    "Both lists should have equal lengths",
                  );
                for (var l = Math.min(i.length, c.length), u = 0; u < l; u++) {
                  var h = i[u],
                    p = c[u];
                  h.id !== p.id && ((v[h.id] = h), (y[p.id] = p));
                }
              }
            }),
            Object.each(i, function (e) {
              var t = v[e],
                i = y[e];
              (t || i) &&
                (t || (t = { parent: "", index: 0, loc_id: "" }),
                i || (i = { parent: "", index: 0, loc_id: "" }),
                f.make_location_diff(
                  e,
                  t.parent,
                  i.parent,
                  t.index,
                  i.index,
                  t.loc_id,
                  i.loc_id,
                ));
            }),
            f
          );
        }),
        (_.prototype.revert = function (e) {
          this.apply(e, !0);
        }),
        (_.prototype.apply = function (l, u, e) {
          var i = this;
          void 0 === u && (u = !1), void 0 === e && (e = !1);
          var h = function (e) {
            var t = l.find_node(e);
            return (
              t ||
                ((t = l.create_node(e)),
                i.created[e] && t.set_created_ts(i.created[e])),
              t
            );
          };
          u
            ? Array.each(this.removed, function (e) {
                h(e);
              })
            : Array.each(this.added, function (e) {
                h(e);
              }),
            Array.each(this.meta, function (e) {
              var t = e.id,
                i = e.meta_old,
                n = e.meta_new,
                o = h(t);
              u ? o.set_meta(i) : o.set_meta(n);
            }),
            e && this.apply_collapse(l, u),
            Array.each(this.location, function (e) {
              var t = e.id;
              h(t).detach();
            }),
            u ? this.sort_backward() : this.sort_forward(),
            Array.each(this.location, function (e) {
              var t,
                i = e.id,
                n = e.parent_old,
                o = e.parent_new,
                s = e.index_old,
                r = e.index_new,
                a = e.loc_id_old,
                _ = e.loc_id_new,
                c = h(i);
              u
                ? n && (t = l.find_node(n)) && t.attach_child(s, c, a)
                : o && (t = l.find_node(o)) && t.attach_child(r, c, _);
            });
        }),
        (_.prototype.revert_collapse = function (e) {
          this.apply_collapse(e, !0);
        }),
        (_.prototype.apply_collapse = function (s, r) {
          Array.each(this.collapse, function (e) {
            var t = e.id,
              i = e.collapse_old,
              n = e.collapse_new,
              o = s.find_node(t);
            o && (r ? o.set_collapsed(i, !0) : o.set_collapsed(n, !0));
          });
        }),
        (_.prototype.apply_timestamps = function (i) {
          var n = this;
          Array.each(this.meta, function (e) {
            var t = e.id;
            i.find_node(t).set_edited_ts(n.ts);
          }),
            Array.each(this.location, function (e) {
              var t = e.id;
              i.find_node(t).set_attached_ts(n.ts);
            });
        }),
        (_.prototype.sort_forward = function () {
          this.location.sort(function (e, t) {
            return e.parent_new !== t.parent_new
              ? Et(e.parent_new, t.parent_new)
              : e.index_new - t.index_new;
          });
        }),
        (_.prototype.sort_backward = function () {
          this.location.sort(function (e, t) {
            return e.parent_old !== t.parent_old
              ? Et(e.parent_old, t.parent_old)
              : e.index_old - t.index_old;
          });
        }),
        (_.prototype.has_difference = function () {
          return (
            0 <
            this.added.length +
              this.removed.length +
              this.meta.length +
              this.location.length
          );
        }),
        (_.prototype.has_collapse_difference = function () {
          return 0 < this.collapse.length;
        }),
        (_.prototype.make_add_diff = function (e) {
          this.added.push(e);
        }),
        (_.prototype.make_remove_diff = function (e) {
          this.removed.push(e);
        }),
        (_.prototype.make_meta_diff = function (e, t, i) {
          var n = { id: e };
          t && (n.meta_old = t), i && (n.meta_new = i), this.meta.push(n);
        }),
        (_.prototype.make_location_diff = function (e, t, i, n, o, s, r) {
          var a = { id: e };
          t && ((a.parent_old = t), (a.index_old = n), (a.loc_id_old = s)),
            i && ((a.parent_new = i), (a.index_new = o), (a.loc_id_new = r)),
            this.location.push(a);
        }),
        (_.prototype.make_collapse_diff = function (e, t, i) {
          var n = { id: e, collapse_old: t, collapse_new: i };
          this.collapse.push(n);
        }),
        (_.prototype.net_serialize_old = function () {
          return {
            added: this.added,
            removed: this.removed,
            meta: this.meta,
            location: this.location,
            created: this.created,
          };
        }),
        (_.prototype.net_serialize = function () {
          var s = {
              nodes: [],
              added: [],
              removed: [],
              meta: [],
              location: [],
              timestamps: [],
            },
            r = {};
          return (
            Array.each(this.added, function (e) {
              r[e] = 1;
            }),
            Array.each(this.removed, function (e) {
              r[e] = 1;
            }),
            Array.each(this.meta, function (e) {
              r[e.id] = 1;
            }),
            Array.each(this.location, function (e) {
              r[e.id] = 1;
              var t = e.parent_new;
              t && (r[t] = 1);
            }),
            Object.each(r, function (e, t) {
              s.nodes.push(t);
            }),
            s.nodes.sort(Et),
            Array.each(s.nodes, function (e, t) {
              r[e] = t;
            }),
            Array.each(this.added, function (e) {
              s.added.push(r[e]);
            }),
            Array.each(this.removed, function (e) {
              s.removed.push(r[e]);
            }),
            Array.each(this.meta, function (e) {
              var t = e.id,
                i = e.meta_new;
              s.meta.push({ i: r[t], meta: i });
            }),
            Array.each(this.location, function (e) {
              var t = e.id,
                i = e.parent_new,
                n = e.index_new,
                o = -1;
              i && r.hasOwnProperty(i) && (o = r[i]),
                s.location.push({ i: r[t], parent: o, index: n });
            }),
            Object.each(this.created, function (e, t) {
              s.timestamps.push({ i: r[t], c: e });
            }),
            s
          );
        }),
        (_.prototype.net_serialize_collapse = function () {
          return this.collapse.map(function (e) {
            return { node_id: e.id, collapsed: e.collapse_new };
          });
        }),
        (_.net_deserialize = function (e, t) {
          var i = new _();
          if (
            (e.added && (i.added = e.added),
            e.removed && (i.removed = e.removed),
            e.meta && (i.meta = e.meta),
            e.location && (i.location = e.location),
            e.created && (i.created = e.created),
            t && (i.ts = t) && t < 1583645827108)
          ) {
            var a = {};
            Array.each(i.location, function (e) {
              var t = e.parent_old,
                i = e.index_old;
              if (t) {
                var n = a[t];
                n || (a[t] = n = []);
                for (var o = 0, s = 0, r = n; s < r.length; s++) {
                  r[s] <= i && o++;
                }
                0 < o && (e.index_old = i + o), n.push(i);
              }
            });
          }
          return i;
        }),
        _
      );
    })();
  window.DYNALIST.TCollectionDiff = ko;
  var Eo = (function () {
      function e() {
        this.events = [];
      }
      return (
        (e.prototype.init = function () {}),
        (e.prototype.load = function () {
          this.hook_events();
        }),
        (e.prototype.unload = function () {
          this.unhook_events();
        }),
        (e.prototype.make_context_on_off = function (e) {
          return this.make_context(e, e.on, e.off);
        }),
        (e.prototype.make_context_event_listener = function (e) {
          return this.make_context(
            e,
            e.addEventListener,
            e.removeEventListener,
          );
        }),
        (e.prototype.make_context = function (e, t, i) {
          return { ctx: e, hook: t, unhook: i };
        }),
        (e.prototype.register_array_on_off = function (e) {
          var i = this;
          each(e, function (e) {
            var t = e.shift();
            i.register(t, t.on, t.off, e);
          });
        }),
        (e.prototype.register_array_event_listener = function (e) {
          var i = this;
          each(e, function (e) {
            var t = e.shift();
            i.register(t, t.addEventListener, t.removeEventListener, e);
          });
        }),
        (e.prototype.register_with_context_array = function (t, e) {
          var i = this;
          each(e, function (e) {
            i.register(t.ctx, t.hook, t.unhook, e);
          });
        }),
        (e.prototype.register_event_on_off = function (e) {
          for (var t = [], i = 1; i < arguments.length; i++)
            t[i - 1] = arguments[i];
          var n = Array.apply([], arguments);
          n.splice(0, 1), this.register(e, e.on, e.off, n);
        }),
        (e.prototype.register_event_listener = function (e) {
          for (var t = [], i = 1; i < arguments.length; i++)
            t[i - 1] = arguments[i];
          var n = Array.apply([], arguments);
          n.splice(0, 1),
            this.register(e, e.addEventListener, e.removeEventListener, n);
        }),
        (e.prototype.register_event = function (e, t, i) {
          for (var n = [], o = 3; o < arguments.length; o++)
            n[o - 3] = arguments[o];
          var s = Array.apply([], arguments);
          s.splice(0, 3), this.register(e, t, i, s);
        }),
        (e.prototype.register = function (e, t, i, n) {
          this.events.push({ ctx: e, hook: t, unhook: i, args: n });
        }),
        (e.prototype.hook_events = function () {
          each(this.events, function (e) {
            e.hook.apply(e.ctx, e.args);
          });
        }),
        (e.prototype.unhook_events = function () {
          each(this.events, function (e) {
            e.unhook.apply(e.ctx, e.args);
          });
        }),
        (e.prototype.clear = function () {
          this.events = [];
        }),
        e
      );
    })(),
    Co = (function () {
      function e() {
        this.handlers = [];
      }
      return (
        (e.prototype.init = function () {}),
        (e.prototype.load = function () {
          this.hook_events();
        }),
        (e.prototype.unload = function () {
          this.unhook_events();
        }),
        (e.prototype.register = function (e, t, i, n) {
          this.handlers.push({
            events: e,
            name: t,
            callback: i,
            ctx: n,
            ref: null,
          });
        }),
        (e.prototype.hook_events = function () {
          each(this.handlers, function (e) {
            e.ref = e.events.on(e.name, e.callback, e.ctx);
          });
        }),
        (e.prototype.unhook_events = function () {
          each(this.handlers, function (e) {
            e.ref && (e.events.offref(e.ref), delete e.ref);
          });
        }),
        (e.prototype.clear = function () {
          this.handlers = [];
        }),
        e
      );
    })(),
    To = (function () {
      function n(e, t, i) {
        (this.app = t),
          (this.app_document = i),
          (this._submodules = []),
          (this._parent = null),
          (this._is_init = !1),
          (this._is_loaded = !1),
          (this._name = e),
          (this._logger_name = ""),
          (this._logger_enabled = !1);
      }
      return (
        (n.prototype.get_app = function () {
          return this.app;
        }),
        (n.prototype.get_app_document = function () {
          return this.app_document;
        }),
        (n.prototype._init_dependencies = function () {}),
        (n.prototype._init_fields = function () {}),
        (n.prototype._init_before = function () {}),
        (n.prototype._init_after = function () {}),
        (n.prototype.init = function () {
          var e = this;
          if (this._is_init)
            console.error(
              "Attempted to initialize already initialized module",
              this,
            );
          else {
            (this._is_init = !0),
              this._parent &&
                ((this._logger_name = this._parent._logger_name),
                (this._logger_enabled = this._parent._logger_enabled)),
              this._name && (this._logger_name += "[" + this._name + "]"),
              this.log_error("init dependencies", function () {
                e._init_dependencies();
              }),
              this.log_error("init fields", function () {
                e._init_fields();
              }),
              this.log_error("init before", function () {
                e._init_before();
              });
            for (var t = 0; t < this._submodules.length; t++)
              this._submodules[t].init();
            this.log_error("init after", function () {
              e._init_after();
            });
          }
        }),
        (n.prototype._load = function () {}),
        (n.prototype._post_load = function () {}),
        (n.prototype.load = function () {
          var e = this;
          if (this._is_loaded)
            console.error("Attempted to load already loaded module", this);
          else {
            (this._is_loaded = !0),
              this.log_error("load", function () {
                e._load();
              });
            for (var t = 0; t < this._submodules.length; t++)
              this._submodules[t].load();
            this.log_error("post load", function () {
              e._post_load();
            });
          }
        }),
        (n.prototype._pre_unload = function () {}),
        (n.prototype._unload = function () {}),
        (n.prototype.unload = function () {
          var e = this;
          if (this._is_loaded) {
            this.log_error("pre unload", function () {
              e._pre_unload();
            });
            for (var t = this._submodules.length - 1; 0 <= t; t--)
              this._submodules[t].unload();
            this.log_error("unload", function () {
              e._unload();
            }),
              (this._is_loaded = !1);
          } else
            console.error("Attempted to unload not-yet-loaded module", this);
        }),
        (n.prototype.submodule = function (e) {
          return (
            this._submodules.push(e),
            e instanceof n && e.set_module_parent(this),
            e
          );
        }),
        (n.prototype.set_module_parent = function (e) {
          this._parent = e;
        }),
        (n.prototype.set_logger = function (e) {
          this._logger_enabled = e;
          for (var t = 0; t < this._submodules.length; t++) {
            var i = this._submodules[t];
            i instanceof n && i.set_logger(e);
          }
        }),
        (n.prototype.debounce = function (e, t, i, n, o) {
          var s = window.debounce(e, t, i, n, o);
          return (
            (s.init = function () {}),
            (s.load = function () {
              this.enable();
            }),
            (s.unload = function () {
              this.cancel(), this.disable();
            }),
            this.submodule(s)
          );
        }),
        (n.prototype.set_timeout = function (e, t) {
          var i = this;
          return window.setTimeout(function () {
            i._is_loaded && e();
          }, t);
        }),
        (n.prototype.queue = function (e) {
          return this.set_timeout(e, 0);
        }),
        (n.prototype.log = function () {
          for (var e = [], t = 0; t < arguments.length; t++)
            e[t] = arguments[t];
          if (this._logger_enabled) {
            for (var i = e.length, n = [this._logger_name], o = 0; o < i; o++)
              n.push(e[o]);
            console.log.apply(console, n);
          }
        }),
        (n.prototype.log_error = function (t, e) {
          try {
            e();
          } catch (e) {
            throw (this.log("Module error", t, e), e);
          }
        }),
        (n.prototype.print_module = function (t) {
          for (var i = [], e = t; 0 < e; e--) i.push("  ");
          return (
            i.push(this.constructor.name + "\n"),
            Array.each(this._submodules, function (e) {
              e instanceof Eo ||
                (e instanceof n && i.push(e.print_module(t + 1)));
            }),
            i.join("")
          );
        }),
        n
      );
    })(),
    Oo = (function (n) {
      function e(e, t) {
        var i = n.call(this, "IntervalManager", e, t) || this;
        return (
          (i.timeout_ids = []), (i.interval_ids = []), (i.intervals = []), i
        );
      }
      return (
        nt(e, n),
        (e.prototype._load = function () {
          var n = this;
          Array.each(this.intervals, function (e) {
            var t = e.callback,
              i = e.timeout;
            n.set_interval(t, i);
          });
        }),
        (e.prototype._unload = function () {
          Array.each(this.timeout_ids, function (e) {
            clearTimeout(e);
          }),
            Array.each(this.interval_ids, function (e) {
              clearInterval(e);
            }),
            (this.timeout_ids = []),
            (this.interval_ids = []);
        }),
        (e.prototype.register_interval = function (e, t) {
          this.intervals.push({ callback: e, timeout: t }),
            this._is_loaded && this.set_interval(e, t);
        }),
        (e.prototype.set_timeout = function (e, t) {
          var i = this,
            n = window.setTimeout(function () {
              i.timeout_ids.remove(n), e();
            }, t);
          return this.timeout_ids.push(n), n;
        }),
        (e.prototype.set_interval = function (e, t) {
          var i = window.setInterval(e, t);
          return this.interval_ids.push(i), i;
        }),
        (e.prototype.clear_interval = function (e) {
          clearInterval(e);
          var t = this.interval_ids.indexOf(e);
          -1 !== t && this.interval_ids.splice(t, 1);
        }),
        e
      );
    })(To),
    xo = (function () {
      function e(e, t) {
        (this.document_server_id = e), (this.network = t);
      }
      return (
        (e.prototype.set_document_server_id = function (e) {
          this.document_server_id = e;
        }),
        (e.prototype.load = function (e, t) {
          var i = this,
            n = { file_id: this.document_server_id };
          this.network.bundle(
            "/doc/load",
            n,
            function (e) {
              t(null, e);
            },
            function (e) {
              i.network.record_error("doc-load", n, e), t(e);
            },
            e,
          );
        }),
        (e.prototype.get_version_history = function (e, t) {
          var i = { file_id: this.document_server_id, version: e };
          this.network.enqueue(
            "/doc/history",
            i,
            function (e) {
              t(null, e);
            },
            function (e) {
              t(e);
            },
          );
        }),
        (e.prototype.sync_actions = function (e, t, i, n, o, s, r) {
          var a = this,
            _ = {
              file_id: this.document_server_id,
              diff2: e,
              collapse_changes: t,
              event_changes: i,
              user_version: o,
              version: n,
            };
          this.network.bundle(
            "/doc/update",
            _,
            function (e) {
              r(null, e);
            },
            function (e) {
              a.network.record_error("doc-update", _, e), r(e);
            },
            s,
          );
        }),
        e
      );
    })(),
    Ao = (function () {
      function e(e) {
        (this.callback = e),
          (this.timer = null),
          (this.tick = 0),
          (this.request_manual_tick = debounce(this.manual_tick, 0)),
          (this.focus = !0);
      }
      return (
        (e.prototype.start = function () {
          var e = this;
          this.stop(),
            (this.timer = setInterval(function () {
              e.timer_call();
            }, 2e4));
        }),
        (e.prototype.stop = function () {
          this.timer && (clearInterval(this.timer), (this.timer = null));
        }),
        (e.prototype.manual_tick = function () {
          this.callback({});
        }),
        (e.prototype.timer_call = function () {
          var t = this,
            i = {};
          Object.each(oe, function (e) {
            t.tick % se[e] == 0 && (i[e] = !0);
          }),
            this.callback(i),
            this.tick++;
        }),
        (e.prototype.set_focus = function (e) {
          this.focus = e;
        }),
        (e.prototype.has_focus = function () {
          return this.focus;
        }),
        e
      );
    })(),
    Do = (function () {
      function e(e, t, i) {
        (this.sync_timer = e),
          (this.callback = t),
          (this.has_changes = i),
          (this.sync_count = 0),
          (this.active = !1),
          (this.force = !1);
      }
      return (
        (e.prototype.force_run = function () {
          this.force = !0;
        }),
        (e.prototype.tick = function (e) {
          var t = !1;
          if (this.has_changes() || this.force)
            (t = !(this.force = !1)), (this.sync_count = 0);
          else {
            var i = oe.ACTIVE_NORMAL,
              n = 10 <= this.sync_count;
            this.is_active() && this.sync_timer.has_focus()
              ? n && (i = oe.ACTIVE_SLEEPING)
              : (i = n ? oe.PASSIVE_SLEEPING : oe.PASSIVE_NORMAL),
              (t = bool(e[i])),
              this.sync_count++;
          }
          t && this.callback();
        }),
        (e.prototype.set_active = function (e) {
          this.active = e;
        }),
        (e.prototype.is_active = function () {
          return this.active;
        }),
        e
      );
    })(),
    So = (function () {
      function e(e, t, i, n) {
        (this.min = e || 0),
          (this.max = t || Number.MAX_VALUE),
          (this.base = i || 1e3),
          (this.jitter = n || !0),
          (this.count = 0),
          (this.next_ts = Date.now());
      }
      return (
        (e.prototype.success = function () {
          (this.count = 0), (this.next_ts = Date.now() + this.get_timeout());
        }),
        (e.prototype.fail = function () {
          this.count++, (this.next_ts = Date.now() + this.get_timeout());
        }),
        (e.prototype.get_timeout = function () {
          if (0 === this.count) return this.min;
          var e = this.count - 1,
            t = this.base * Math.pow(2, e);
          if (this.jitter) {
            t *= 0.5 + 0.5 * Math.random();
          }
          return (t = Math.floor(Math.min(this.max, this.min + t)));
        }),
        (e.prototype.get_next_ts = function () {
          return this.next_ts;
        }),
        e
      );
    })(),
    No = (function (i) {
      function e(e) {
        var t = i.call(this, new vt()) || this;
        return (
          (t.working = !1),
          (t.build = ""),
          (t.prevent_multi = e),
          DYNALIST.OFFLINE && (t.offline = !0),
          (t.connected = !0),
          (t.ping_when_disconnected = !0),
          (t.ping_timer = null),
          (t.queue = []),
          (t.errors = []),
          (t.timer = null),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype.get_errors = function () {
          return this.errors;
        }),
        (e.prototype.ping = function () {
          this.enqueue("/ping", {});
        }),
        (e.prototype.enqueue_promise = function (e, t, i) {
          var n = new Zousan();
          return (
            this.enqueue(
              e,
              t,
              function () {
                n.resolve.apply(n, arguments);
              },
              function () {
                n.reject.apply(n, arguments);
              },
              i,
            ),
            n
          );
        }),
        (e.prototype.enqueue = function (e, t, i, n, o) {
          (this.prevent_multi && this.working) ||
            (this.queue.push({
              url: e,
              data: t,
              success: i,
              error: n,
              options: o,
            }),
            this.run());
        }),
        (e.prototype.run = function () {
          var n = this;
          if (!this.working && 0 !== this.queue.length) {
            this.timer && (clearTimeout(this.timer), (this.timer = null));
            var e = this.queue.shift(),
              t = e.url,
              i = e.data,
              o = e.success,
              s = e.error,
              r = e.options;
            if (((this.working = !0), this.offline))
              return (
                console.log("Net (offline):", " -> " + t, i),
                void this.handle_error("offline", s)
              );
            !(function e(t, i, n, o, s) {
              if (!(s = s || {}).raw) {
                var r = DYNALIST.DEPLOY_BUILD;
                r && (i._build = r);
              }
              var a = "/api" + t;
              DYNALIST.IS_STANDALONE_MODE && (a = d + a),
                Re && ((s.headers = s.headers || {}), (s.headers.DYS = Re)),
                Me(
                  a,
                  i,
                  function (e, t, i) {
                    unsafe(function () {
                      var e = i.getResponseHeader("DYS");
                      e && (Re = e);
                    }),
                      n && n(e, t, i);
                  },
                  o,
                  s,
                );
            })(
              t,
              i,
              function (e) {
                return n.handle_response(e, o, s);
              },
              function (e, t, i) {
                return n.handle_error(t, s);
              },
              r,
            );
          }
        }),
        (e.prototype.handle_response = function (e, t, i) {
          (this.working = !1),
            this.connected ||
              ((this.connected = !0),
              this.trigger("connected"),
              this.ping_timer &&
                (clearInterval(this.ping_timer), (this.ping_timer = null)));
          try {
            if (e) {
              var n = e._mv,
                o = DYNALIST.VERSION;
              o && n && o < n && this.trigger("network_deprecated");
              var s = e._b;
              return (
                s &&
                  this.build !== s &&
                  ((this.build = s), this.trigger("build_changed", s)),
                e._code === ue && this.trigger("network_deprecated"),
                e._code === _e && this.trigger("network_logged_out"),
                void (e._code === ae ? t && t(e) : i && i(e))
              );
            }
            i && i({ _code: le });
          } catch (e) {
            wt(function () {
              throw e;
            });
          } finally {
            this.run();
          }
        }),
        (e.prototype.handle_error = function (e, t) {
          var i = this;
          this.working = !1;
          try {
            var n = ce;
            switch (e) {
              case "offline":
              case "timeout":
              case "error":
              case "abort":
                n = ce;
                break;
              case "parsererror":
                n = le;
            }
            n === ce &&
              this.connected &&
              ((this.connected = !1),
              this.trigger("disconnected"),
              this.ping_timer && clearInterval(this.ping_timer),
              this.ping_when_disconnected &&
                (this.ping_timer = setInterval(function () {
                  0 === i.queue.length && i.ping();
                }, 3e4))),
              t && t({ _code: n });
          } finally {
            this.run();
          }
        }),
        (e.prototype.record_error = function (e, t, i) {
          this.errors.push({ source: e, request: t, error: i }),
            5 < this.errors.length &&
              this.errors.splice(0, this.errors.length - 5);
        }),
        (e.prototype.get_is_connected = function () {
          return this.connected;
        }),
        e
      );
    })(mt),
    Io = (function (_) {
      function r(e, t) {
        var i = _.call(this, e) || this;
        return (
          (i.timeout = t),
          (i.bundle_queue = []),
          (i.request_dispatch = debounce(i.dispatch, 0)),
          i
        );
      }
      return (
        nt(r, _),
        (r.prototype.bundle = function (e, t, i, n, o) {
          var s = {
            path: "/api" + e,
            data: JSON.stringify(t),
            success: i,
            error: n,
          };
          o !== r.PRIORITY.HIGH
            ? (this.bundle_queue.push(s),
              8 <= this.bundle_queue.length
                ? (this.dispatch(), this.request_dispatch.cancel())
                : this.request_dispatch())
            : this._dispatch([s]);
        }),
        (r.prototype.dispatch = function () {
          this._dispatch(this.bundle_queue), (this.bundle_queue = []);
        }),
        (r.prototype._dispatch = function (o) {
          var s = this;
          if (!(o.length <= 0)) {
            var t = [],
              i = 0;
            each(o, function (e) {
              t.push({ path: e.path, data: e.data, compressed: e.compressed }),
                (i += e.data.length);
            });
            var e = { bundle: t },
              n = "/bundle_binary";
            (e = JSON.stringify(e)),
              (e = Fe.compressToUint8Array(e)),
              102400 < i && (n = "/bundle_binary_large");
            var r = {
                timeout: this.timeout,
                contentType: "application/octet-stream",
                raw: !0,
              },
              a = function (t) {
                o.map(function (e) {
                  s.handle_error(t, e.error);
                });
              };
            _.prototype.enqueue.call(
              this,
              n,
              e,
              function (e) {
                if (e && e.bundle && e.bundle.length == o.length) {
                  var t = e.bundle;
                  if (t) {
                    var i = 0,
                      n = function () {
                        if (i < o.length) {
                          setTimeout(n, 50);
                          var e = JSON.parse(t[i].data);
                          s.handle_response(e, o[i].success, o[i].error), i++;
                        }
                      };
                    n();
                  }
                } else a(null);
              },
              a,
              r,
            );
          }
        }),
        (r.PRIORITY = { LOW: 0, HIGH: 1 }),
        r
      );
    })(No),
    Lo = (function (n) {
      function e(e, t) {
        var i = n.call(this, "DocumentController", e, t) || this;
        return (
          (i.events = i.submodule(new Co())),
          (i.request_save_local = i.debounce(i.save_local.bind(i), 1e3)),
          (i.request_sync_debounced = i.debounce(
            i.sync.bind(i, "timer"),
            5e3,
            !0,
          )),
          (i.request_rename_document_from_root = i.debounce(
            i.rename_document_from_root.bind(i),
            500,
            !0,
          )),
          (i.request_update_document_root_title = i.debounce(
            i.update_document_root_title.bind(i),
            0,
          )),
          i
        );
      }
      return (
        nt(e, n),
        (e.prototype._init_dependencies = function () {
          (this.db = this.app.db),
            (this.userspace = this.app.userspace.get_userspace()),
            (this.userspaceController = this.app.userspace.controller),
            (this.document = this.app_document.document),
            (this.nodeCollection = this.document.get_node_collection()),
            (this.push = this.userspaceController.push);
        }),
        (e.prototype._init_fields = function () {
          (this.history = new ct(this, this.nodeCollection)),
            (this.net = new xo(
              this.document.get_server_id(),
              this.app.network,
            )),
            (this.syncManager = this.userspaceController.get_sync_manager()),
            (this.syncComponent = new ft(this, this.syncManager)),
            (this.syncTimerHandler = new Do(
              this.userspaceController.sync_timer,
              this.timer_callback.bind(this),
              this.timer_has_changes.bind(this),
            )),
            (this.backoff = new So(0, 3e5, 2e3, !0)),
            (this.localLoaded = !1),
            (this.saved = !0),
            (this.synced = !0),
            (this.fullSynced = !0),
            (this.remoteSynced = !0),
            (this.saveDisabled = !1),
            (this.lastSyncAttempt = 0),
            (this.currentSyncAttempt = 0),
            (this.nextSyncAttempt = 1),
            (this.isRenamingTitleFromRoot = !1),
            (this.needInitialCalendarSync = !1),
            (this.isInitialCalendarSync = !1),
            (this.lastSyncDataPushTs = 0),
            (this.syncingChanges = !1),
            (this.syncing = !1),
            (this.syncMarkedDirty = !1),
            (this.lastSync = wo.from_node_collection(this.nodeCollection)),
            (this.fullReload = !1);
        }),
        (e.prototype._init_after = function () {
          var t = this;
          this.events.register(
            this.userspace,
            "file_server_id_change",
            this.on_file_server_id_changed,
            this,
          ),
            this.events.register(
              this.userspace,
              "file_title_change",
              this.on_file_title_changed,
              this,
            ),
            this.events.register(
              this.nodeCollection,
              "node_create",
              this.on_node_changed,
              this,
            ),
            this.events.register(
              this.nodeCollection,
              "node_content_change",
              this.on_node_changed,
              this,
            );
          var i = this.app.userspace.view.linkIndex,
            e = function (e) {
              i.documentNodeChanged(t.document, e);
            },
            n = function () {
              i.documentChanged(t.document);
            };
          this.events.register(this.nodeCollection, "node_content_change", e),
            this.events.register(this.nodeCollection, "node_note_change", e),
            this.events.register(this.nodeCollection, "attach", n),
            this.events.register(this.nodeCollection, "detach", n),
            this.document.has_server_id() &&
              this.push.register_document(
                this.document.get_server_id(),
                this.on_push_received.bind(this),
              );
        }),
        (e.prototype._load = function () {
          this.request_sync();
        }),
        (e.prototype.get_history = function () {
          return this.history;
        }),
        (e.prototype.is_read_only = function () {
          return this.document.get_namespace().get_permission() <= ee;
        }),
        (e.prototype.is_still_attached = function () {
          return (
            !!this.app.config.isAnonymousView() || this.document.is_attached()
          );
        }),
        (e.prototype.set_focus = function (e) {
          this.syncTimerHandler.set_active(e);
        }),
        (e.prototype.get_net_priority = function () {
          return this.app.get_current_app_document() === this.app_document
            ? Io.PRIORITY.HIGH
            : Io.PRIORITY.LOW;
        }),
        (e.prototype.get_sync_component = function () {
          return this.syncComponent;
        }),
        (e.prototype.get_sync_manager = function () {
          return this.syncManager;
        }),
        (e.prototype.retry_load = function () {
          this.request_sync();
        }),
        (e.prototype.get_net = function () {
          return this.net;
        }),
        (e.prototype.on_file_server_id_changed = function (e) {
          e === this.document &&
            (this.net.set_document_server_id(e.get_server_id()),
            this.push.register_document(
              this.document.get_server_id(),
              this.on_push_received.bind(this),
            ));
        }),
        (e.prototype.on_file_title_changed = function (e) {
          e === this.document && this.request_update_document_root_title();
        }),
        (e.prototype.on_node_changed = function (e) {
          if (this.document.has_server_id()) {
            var t = this.document.get_server_id() + "/" + e.get_id();
            this.userspaceController.node_change_events.trigger(
              t,
              this.document,
              e,
            );
          }
        }),
        (e.prototype.update_document_root_title = function () {
          if (!this.isRenamingTitleFromRoot) {
            var e = this.nodeCollection.get_root(),
              t = e.get_meta_object();
            if (t.get_content() !== this.document.get_title()) {
              this.nodeCollection.trigger("net_sync_before");
              var i = t.clone().set_content(this.document.get_title()).write();
              e.set_meta(i), this.nodeCollection.trigger("net_sync_after");
            }
          }
        }),
        (e.prototype.rename_document_from_root = function () {
          this.isRenamingTitleFromRoot = !1;
          var e = this.nodeCollection
            .get_root()
            .get_meta_object()
            .get_content();
          "" !== e &&
            this.document.get_title() !== e &&
            this.userspaceController.rename_file(this.document, e);
        }),
        (e.prototype.queue_rename_document_from_root = function () {
          var e = this.nodeCollection
            .get_root()
            .get_meta_object()
            .get_content();
          "" !== e &&
            this.document.get_title() !== e &&
            ((this.isRenamingTitleFromRoot = !0),
            this.request_rename_document_from_root());
        }),
        (e.prototype.get_db = function () {
          return this.db;
        }),
        (e.prototype.request_sync = function () {
          this.syncTimerHandler.force_run(),
            this.userspaceController.sync_timer.request_manual_tick();
        }),
        (e.prototype.sync_callback = function (e) {
          this.syncTimerHandler.tick(e);
        }),
        (e.prototype.timer_callback = function () {
          this.sync("timer");
        }),
        (e.prototype.timer_has_changes = function () {
          return (
            !this.document_local_loaded ||
            !this.document_remote_loaded ||
            !this.document_synced ||
            this.syncComponent.has_error()
          );
        }),
        (e.prototype.create_node = function (e) {
          if ((void 0 === e && (e = null), !this.is_read_only())) {
            e && this.nodeCollection.find_node(e) && (e = null);
            var t = this.nodeCollection.create_node(e);
            return (
              t.set_created_ts(Wt()),
              t.set_edited_ts(Wt()),
              t.set_attached_ts(Wt()),
              t.set_sync_attempt(this.nextSyncAttempt),
              t
            );
          }
        }),
        (e.prototype.edit_meta = function (e, t) {
          this.is_read_only() ||
            (e.get_meta() !== t &&
              (e.set_meta(t),
              e.set_edited_ts(Wt()),
              e.set_sync_attempt(this.nextSyncAttempt),
              this.set_dirty(!0),
              e.is_root() && this.queue_rename_document_from_root()));
        }),
        (e.prototype.attach_node = function (e, t, i) {
          if (
            !this.is_read_only() &&
            (e.get_parent() !== t || e.get_loc_id() !== i)
          ) {
            var n = e.get_parent();
            t ? t.attach_child_at(i, e) : e.detach(),
              e.set_attached_ts(Wt()),
              t && t.set_sync_attempt(this.nextSyncAttempt),
              n && n.set_sync_attempt(this.nextSyncAttempt),
              e.set_sync_attempt(this.nextSyncAttempt),
              this.set_dirty(!0);
          }
        }),
        (e.prototype.set_node_collapse = function (e, t, i) {
          e.is_collapsed() !== t &&
            (e.is_root() ||
              (e.set_collapsed(t, i),
              e.set_sync_attempt(this.nextSyncAttempt),
              this.set_dirty(!1)));
        }),
        (e.prototype.clone_from_nodes = function (e, i, n, t) {
          var o = this;
          void 0 === t && (t = !1);
          var s = {};
          if (!i) return s;
          if (1 === e.length && t) {
            var r = e[0];
            (s[r.get_id()] = i.get_id()),
              this.edit_meta(i, r.get_meta()),
              this.clone_node_children(r, i, s);
          } else
            Array.each(e, function (e) {
              var t = o.clone_node_self(e, i, n, s);
              o.clone_node_children(e, t, s), n++;
            });
          return s;
        }),
        (e.prototype.clone_node_children = function (e, t, n) {
          for (
            var o = this,
              s = [{ node_from: e, node_to: t }],
              i = function () {
                var e = s.pop(),
                  t = e.node_from,
                  i = e.node_to;
                t.get_children().each(function (e) {
                  var t = o.clone_node_self(e, i, i.num_children(), n);
                  s.push({ node_from: e, node_to: t });
                }),
                  r.set_node_collapse(i, t.is_collapsed(), !0);
              },
              r = this;
            0 < s.length;

          )
            i();
        }),
        (e.prototype.clone_node_self = function (e, t, i, n) {
          var o = this.create_node(e.get_id());
          n[e.get_id()] = o.get_id();
          var s = t.generate_loc_id(i);
          return (
            this.attach_node(o, t, s),
            this.edit_meta(o, e.get_meta()),
            o.set_created_ts(e.get_created_ts()),
            o
          );
        }),
        (e.prototype.import_portable_nodes = function (e) {
          this.is_read_only() ||
            !e ||
            e.length <= 0 ||
            this._import_portable_nodes(e, this.nodeCollection.get_root());
        }),
        (e.prototype._import_portable_nodes = function (e, o) {
          var s = this;
          Array.each(e, function (e, t) {
            var i = s.create_node();
            e.node = i;
            var n = o.generate_loc_id(t);
            s.attach_node(i, o, n), s._import_portable_node(e, i);
          });
        }),
        (e.prototype._import_portable_node = function (e, t) {
          var i = t.get_meta_object().clone();
          i.set_content(e.content),
            e.checkbox && i.set_checkbox(e.checkbox),
            e.checked && i.set_checked(e.checked),
            e.heading && i.set_heading(e.heading),
            e.color_label && i.set_color_label(e.color_label),
            e.list_style && i.set_list_style(e.list_style),
            e.note && i.set_note(e.note);
          var n = i.write();
          this.edit_meta(t, n),
            this._import_portable_nodes(e.children, t),
            e.collapsed && this.set_node_collapse(t, !0, !0);
        }),
        (e.prototype.clean_nodes = function () {
          var t = this,
            i = [];
          Object.each(this.nodeCollection.get_nodes(), function (e) {
            e.is_root() || e.has_parent() || !e.is_expired(re) || i.push(e);
          }),
            Array.each(i, function (e) {
              t.nodeCollection.remove_node(e);
            });
        }),
        (e.prototype.get_node_time = function (e, t, i, n) {
          void 0 === t && (t = !1),
            void 0 === i && (i = !1),
            void 0 === n && (n = null);
          var o = null;
          if (t) {
            var s = function (e) {
              !o && e instanceof fn && (o = e);
            };
            e.get_content_parse_tree().traverse(s),
              e.get_note_parse_tree().traverse(s);
          }
          var r = e.get_id();
          if (o) {
            var a = o.startTime,
              _ = o.endTime;
            return (
              o.isAllDay && ((a = zi(new Date(a))), (_ = zi(new Date(_)))),
              { id: r, start_ts: a, end_ts: _, allday: o.isAllDay }
            );
          }
          if (i && n) {
            var c = new Yn(n),
              l = /!\([^)]+\)/;
            if (c.get_content().match(l) || c.get_note().match(l))
              return { id: r, delete: !0 };
          }
          return null;
        }),
        (e.prototype.set_initial_calendar_sync = function () {
          (this.needInitialCalendarSync = !0),
            this.set_dirty(!1),
            this.request_sync();
        }),
        Object.defineProperty(e.prototype, "document_local_loaded", {
          get: function () {
            return this.localLoaded;
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(e.prototype, "document_remote_loaded", {
          get: function () {
            return (
              !this.document.has_server_id() ||
              this.nodeCollection.is_available()
            );
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(e.prototype, "document_saved", {
          get: function () {
            return this.saved;
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(e.prototype, "document_synced", {
          get: function () {
            return this.synced;
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(e.prototype, "fully_synced", {
          get: function () {
            return this.document_synced && this.fullSynced;
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(e.prototype, "working", {
          get: function () {
            return this.syncComponent.is_working();
          },
          enumerable: !0,
          configurable: !0,
        }),
        (e.prototype.set_dirty = function (e) {
          e &&
            (this.syncing && (this.syncMarkedDirty = !0),
            (this.saved = !1),
            (this.synced = !1)),
            (this.fullSynced = !1),
            this.update_sync_state(),
            this.request_save_local(),
            this.request_sync_debounced();
        }),
        (e.prototype._start_working = function () {
          this.syncComponent.set_working(!0);
        }),
        (e.prototype._end_working = function () {
          this.syncComponent.set_working(!1);
        }),
        (e.prototype.on_push_received = function (e, t) {
          (t && t <= this.nodeCollection.get_version()) ||
            (this.document_synced && this.sync("push"));
        }),
        (e.prototype.sync = function (e) {
          var t = "timer" === e,
            i = "user" === e;
          this.syncComponent.set_passive(t),
            this.is_still_attached() &&
              (this.syncComponent.is_working() ||
                this.syncComponent.is_disabled() ||
                (this.syncComponent.clear_error(),
                this.document_local_loaded
                  ? (this.document_saved || this.request_save_local().flush(),
                    (!i && Date.now() < this.backoff.get_next_ts()) ||
                      (this.document_remote_loaded && !this.fullReload
                        ? this.document.has_server_id() &&
                          this.userspaceController.is_sync_allowed() &&
                          (this.push.ensure_connected(),
                          (t &&
                            this.remoteSynced &&
                            this.push.is_online() &&
                            this.fully_synced) ||
                            this.save_remote())
                        : this.load_remote()))
                  : this.load_local()));
        }),
        (e.prototype.load_local = function () {
          var n = this;
          this._start_working(),
            this.db.async_get_document(this.document.get_id(), function (e) {
              if ((n._end_working(), e)) {
                (n.lastSyncAttempt = e.last_sync_attempt || 0),
                  (n.nextSyncAttempt = e.next_sync_attempt || 1),
                  n.nodeCollection.deserialize(e.nodes),
                  (n.lastSync = wo.deserialize(e.last_sync));
                var t = wo.from_node_collection(n.nodeCollection),
                  i = ko.make_diff(n.lastSync, t);
                (n.synced =
                  !i.has_difference() && !i.has_collapse_difference()),
                  n.synced && n.prune_node_collection();
              }
              (n.localLoaded = !0), n.update_sync_state(), n.sync("user");
            });
        }),
        (e.prototype.debug_load_local = function () {
          this.db.async_get_document(this.document.get_id(), function (e) {
            log(e);
          });
        }),
        (e.prototype.load_remote = function () {
          var s = this;
          this._start_working(),
            this.net.load(this.get_net_priority(), function (e, t) {
              if ((s._end_working(), e || !t))
                return (
                  !1 !== navigator.onLine && s.backoff.fail(),
                  void s.syncComponent.set_error("Failed to sync with server")
                );
              s.backoff.success(), (s.fullReload = !1);
              try {
                var i = wo.from_node_collection(s.nodeCollection),
                  n = ko.make_diff(s.lastSync, i);
                n.revert(s.nodeCollection);
                var o = wo.from_server_load(t.nodes, t.root_node_server_id);
                ko.make_diff(s.lastSync, o).apply(s.nodeCollection, !1, !0),
                  Object.each(o.nodes, function (e) {
                    var t = s.nodeCollection.find_node(e.id);
                    t &&
                      (t.set_created_ts(e.created_ts),
                      t.set_edited_ts(e.edited_ts),
                      t.set_attached_ts(e.attached_ts));
                  }),
                  (s.lastSync = wo.from_node_collection(s.nodeCollection)),
                  n.apply(s.nodeCollection),
                  s.nodeCollection.set_version(t.version),
                  s.nodeCollection.set_user_version(t.user_version),
                  s.nodeCollection.set_available(!0),
                  s.update_document_root_title();
              } catch (e) {
                s.syncComponent.handle_sync_exception(e), track_error(e);
              }
              s.request_save_local().flush(),
                s.update_sync_state(),
                s.timer_has_changes() && s.request_sync();
            });
        }),
        (e.prototype.clear_local_data = function () {
          (this.saveDisabled = !0),
            this.db.async_clear_document(this.document.get_id());
        }),
        (e.prototype.save_local = function () {
          if (!this.saveDisabled) {
            if (this.db.is_enabled()) {
              var e = {
                nodes: this.nodeCollection.serialize(),
                last_sync: this.lastSync.serialize(),
                last_sync_attempt: this.lastSyncAttempt,
                next_sync_attempt: this.nextSyncAttempt,
              };
              this.db.async_save_document(this.document.get_id(), e);
            }
            (this.saved = !0), this.update_sync_state();
          }
        }),
        (e.prototype.save_remote = function () {
          var d = this;
          (this.currentSyncAttempt = this.nextSyncAttempt),
            this.nextSyncAttempt++;
          var e = wo.from_node_collection(this.nodeCollection),
            t = ko.make_diff(this.lastSync, e, this.lastSyncAttempt);
          (this.syncingSnapshot = e),
            (this.syncingChanges =
              t.has_difference() || t.has_collapse_difference());
          var i = null,
            n = null;
          this.syncingChanges &&
            (t.has_difference() && (t.sort_forward(), (i = t.net_serialize())),
            t.has_collapse_difference() && (n = t.net_serialize_collapse()));
          var o = this.document.get_user_data_object().get_sync_calendar(),
            s = [];
          o &&
            (this.needInitialCalendarSync
              ? (each(this.nodeCollection.get_nodes(), function (e) {
                  var t = d.get_node_time(e, !0);
                  t && s.push(t);
                }),
                (this.isInitialCalendarSync = !0))
              : each(t.meta, function (e) {
                  var t = e.id,
                    i = d.nodeCollection.find_node(t);
                  if (i) {
                    var n = d.get_node_time(
                      i,
                      bool(e.meta_new),
                      !0,
                      e.meta_old,
                    );
                    n && s.push(n);
                  }
                }));
          var r = this.nodeCollection.get_version(),
            a = this.nodeCollection.get_user_version(),
            _ = this.get_net_priority();
          this.document_synced || (this.lastSyncDataPushTs = Date.now()),
            i && this.log("Sync diff", i),
            s && this.log("Sync events", s),
            this._start_working(),
            (this.syncing = !0),
            this.net.sync_actions(i, n, s, r, a, _, function (e, t) {
              d._end_working(), (d.syncing = !1);
              var i = d.syncMarkedDirty;
              if ((i && (d.syncMarkedDirty = !1), e || !t))
                return (
                  (d.remoteSynced = !1),
                  d.backoff.fail(),
                  void d.syncComponent.set_error("Failed to sync with server")
                );
              d.backoff.success();
              try {
                var n = d.syncingChanges;
                if (t.full_reload)
                  return (d.fullReload = !0), void d.request_sync();
                if (t.try_again) {
                  var o = wo.from_node_collection(d.nodeCollection),
                    s = ko.make_diff(d.lastSync, o, d.lastSyncAttempt);
                  n = !0;
                  var r = t.diffs,
                    a = t.diffs_ts;
                  if (r && 0 < r.length) {
                    d.nodeCollection.trigger("net_sync_before"),
                      s.revert(d.nodeCollection);
                    for (var _ = 0; _ < r.length; _++) {
                      var c = ko.net_deserialize(r[_], a[_]);
                      c.apply(d.nodeCollection),
                        c.apply_timestamps(d.nodeCollection);
                    }
                    var l = d.lastSync,
                      u = (d.lastSync = wo.from_node_collection(
                        d.nodeCollection,
                      ));
                    if (l && l.nodes && u && u.nodes)
                      for (var h in l.nodes)
                        l.nodes.hasOwnProperty(h) &&
                          u.nodes.hasOwnProperty(h) &&
                          (u.nodes[h].collapsed = l.nodes[h].collapsed);
                    s.apply(d.nodeCollection),
                      d.nodeCollection.trigger("net_sync_after");
                  }
                } else
                  (d.synced = !0),
                    (d.fullSynced = !0),
                    (d.syncingChanges = !1),
                    (d.lastSync = d.syncingSnapshot),
                    (d.lastSyncAttempt = d.currentSyncAttempt),
                    d.isInitialCalendarSync &&
                      ((d.isInitialCalendarSync = !1),
                      (d.needInitialCalendarSync = !1)),
                    i && d.set_dirty(!0),
                    d.history.prune(),
                    d.clean_nodes();
                if (t.hash) {
                  var p = t.hash === d.lastSync.hash();
                  n &&
                    log(
                      'Document "' + d.document.get_title() + '" hash check:',
                      p ? "Success" : "Failed!",
                    ),
                    p || d.syncComponent.handle_hash_check_fail();
                }
                t.collapse_changes &&
                  Array.each(t.collapse_changes, function (e) {
                    var t = e.node_id,
                      i = e.collapsed,
                      n = d.nodeCollection.find_node(t);
                    n && n.set_collapsed(i);
                    var o = d.lastSync.nodes[t];
                    o && (o.collapsed = i);
                  }),
                  d.nodeCollection.set_version(t.version),
                  d.nodeCollection.set_user_version(t.user_version);
              } catch (e) {
                d.syncComponent.handle_sync_exception(e), track_error(e);
              }
              d.request_save_local().flush(),
                d.update_sync_state(),
                (d.remoteSynced = !bool(t.try_again)),
                t.try_again && d.request_sync();
            });
        }),
        (e.prototype.update_sync_state = function () {
          var e = pt;
          this.document_synced || (e = this.db.is_enabled() ? ht : ut),
            this.document_saved || (e = ut),
            (this.document_local_loaded && this.document_remote_loaded) ||
              (e = lt),
            this.syncComponent.set_sync_state(e);
        }),
        (e.prototype.prune_node_collection = function () {
          var i = this,
            n = {};
          this.nodeCollection.traverse_tree_bfs(null, function (e) {
            n[e.get_id()] = e;
          });
          var o = [];
          Object.each(this.nodeCollection.get_nodes(), function (e) {
            var t = e.get_id();
            n[t] || o.push(t);
          }),
            Array.each(o, function (e) {
              var t = i.nodeCollection.find_node(e);
              t && i.nodeCollection.remove_node(t);
            });
        }),
        e
      );
    })(To),
    Mo = (function (t) {
      function e(e) {
        return t.call(this, "DocumentManager", e, null) || this;
      }
      return (
        nt(e, t),
        (e.prototype._init_dependencies = function () {
          (this.userspace = this.app.userspace.userspace),
            (this.controller = this.app.userspace.controller);
        }),
        (e.prototype._init_fields = function () {
          (this.timer = 0), (this.timeout = 5e3);
        }),
        (e.prototype._load = function () {
          this.set_timer();
        }),
        (e.prototype._unload = function () {
          this.clear_timer();
        }),
        (e.prototype.set_timer = function () {
          this.clear_timer(),
            (this.timer = window.setInterval(
              this.tick.bind(this),
              this.timeout,
            ));
        }),
        (e.prototype.clear_timer = function () {
          this.timer && (clearInterval(this.timer), (this.timer = null));
        }),
        (e.prototype.reset_timeout = function (e) {
          this.timeout !== e && ((this.timeout = e), this.set_timer());
        }),
        (e.prototype.tick = function () {
          var t = this;
          if (
            (this.userspace.traverse_tree_bfs(null, function (e) {
              e instanceof Vn && t.check_and_unload_archived_document(e);
            }),
            this.app.env.is("web"))
          ) {
            var e = this.controller.get_sync_manager().get_sync_state();
            if (e === pt || e === ht) {
              var i = 0;
              this.userspace.traverse_tree_bfs(null, function (e) {
                if (e instanceof Vn) {
                  if (e.get_user_data_object().get_archived()) return;
                  if (t.app.find_app_document(e)) return;
                  if ((t.app.find_or_add_app_document(e), 5 <= ++i))
                    return "break";
                }
              }),
                0 < i ? this.reset_timeout(5e3) : this.reset_timeout(3e4);
            }
          } else this.request_load_all();
        }),
        (e.prototype.request_load_document = function (e) {
          this.app.find_or_add_app_document(e), this.reset_timeout(5e3);
        }),
        (e.prototype.request_load_all = function () {
          var t = this;
          this.userspace.traverse_tree_bfs(null, function (e) {
            if (e instanceof Vn) {
              if (e.get_user_data_object().get_archived()) return;
              t.app.find_or_add_app_document(e);
            }
          });
        }),
        (e.prototype.check_and_unload_archived_document = function (e) {
          if (e.get_user_data_object().get_archived()) {
            var t = this.app.find_app_document(e);
            t &&
              t !== this.app.get_current_app_document() &&
              t.controller.fully_synced &&
              this.app.remove_app_document(e);
          }
        }),
        e
      );
    })(To),
    Ro = (function () {
      function e(e) {
        (this.socket = null),
          (this.queues = {}),
          (this.backoff = new So(1e3, 3e5, 5e3, !0)),
          (this.supported = bool(window.WebSocket)),
          (this.is_enabled = !1),
          (this.allowed = e),
          (this.flush_timer = 0),
          (this.lastActiveTs = 0),
          (this.heartbeatTimer = 0),
          (this.requestRegisterAll = debounce(
            this.register_all.bind(this),
            100,
            !1,
          ));
      }
      return (
        (e.prototype.ensure_connected = function () {
          if (this.supported && this.allowed)
            try {
              this.is_connected() || this.connect();
            } catch (e) {
              trace("Failed to connect", e);
            }
        }),
        (e.prototype.connect = function () {
          var t = this;
          (this.socket && this.socket.readyState === WebSocket.CONNECTING) ||
            (this.disconnect(),
            Date.now() < this.backoff.get_next_ts() ||
              ((this.socket = new WebSocket(o)),
              (this.socket.onopen = function () {
                log("Push service: connected"),
                  (t.lastActiveTs = Date.now()),
                  t.backoff.success(),
                  t.requestRegisterAll(),
                  clearTimeout(t.flush_timer),
                  (t.flush_timer = 0),
                  t.flush(),
                  t.setupHeartbeat();
              }),
              (this.socket.onmessage = function (e) {
                (t.lastActiveTs = Date.now()), t.handle_message(e);
              }),
              (this.socket.onclose = function () {
                t.backoff.fail(), t.disconnect();
              }),
              (this.socket.onerror = function () {
                t.backoff.fail(), t.disconnect();
              })));
        }),
        (e.prototype.setupHeartbeat = function () {
          var e = this;
          this.heartbeatTimer && window.clearTimeout(this.heartbeatTimer),
            (this.heartbeatTimer = window.setTimeout(function () {
              if (((e.heartbeatTimer = 0), e.lastActiveTs + 3e5 < Date.now()))
                return (
                  log("Push service: heartbeat timed out"), void e.disconnect()
                );
              e.is_connected() &&
                (e.socket.send(JSON.stringify({ ping: 1 })),
                e.setupHeartbeat());
            }, 3e4));
        }),
        (e.prototype.disconnect = function () {
          this.socket &&
            (log("Push service: disconnected"), this.socket.close()),
            (this.socket = null),
            (this.is_enabled = !1),
            Object.each(this.queues, function (e) {
              e.registered = !1;
            });
        }),
        (e.prototype.is_online = function () {
          return this.is_connected() && this.is_enabled;
        }),
        (e.prototype.is_connected = function () {
          return this.socket && this.socket.readyState === WebSocket.OPEN;
        }),
        (e.prototype.register_userspace = function (e, i) {
          this.register("u-" + e, function (e, t) {
            i(e.substr(2), t);
          });
        }),
        (e.prototype.register_namespace = function (e, i) {
          this.register("n-" + e, function (e, t) {
            i(e.substr(2), t);
          });
        }),
        (e.prototype.register_document = function (e, i) {
          this.register("d-" + e, function (e, t) {
            i(e.substr(2), t);
          });
        }),
        (e.prototype.register = function (e, t) {
          (this.queues[e] = { registered: !1, callback: t }),
            this.requestRegisterAll();
        }),
        (e.prototype.register_all = function () {
          if (this.is_connected()) {
            var i = {},
              n = !1;
            Object.each(this.queues, function (e, t) {
              e.registered || ((i[t] = 1), (n = !0), (e.registered = !0));
            }),
              n && this.socket.send(JSON.stringify({ watch: i }));
          }
        }),
        (e.prototype.handle_message = function (e) {
          var t = this;
          if ("{}" !== e.data)
            try {
              var i = JSON.parse(e.data);
              i.enabled
                ? (this.is_enabled = i.enabled)
                : i.flush
                ? (clearTimeout(this.flush_timer),
                  (this.flush_timer = 0),
                  i.timeout
                    ? (this.flush_timer = window.setTimeout(function () {
                        return t.flush();
                      }, i.timeout))
                    : this.flush())
                : i.push && this.push(i.push, i.version);
            } catch (e) {
              console.error(e);
            }
        }),
        (e.prototype.flush = function () {
          Object.each(this.queues, function (e, t) {
            e.callback(t);
          });
        }),
        (e.prototype.push = function (e, t) {
          var i = this.queues[e];
          i && i.callback(e, t);
        }),
        e
      );
    })(),
    Po = (function () {
      function e(e) {
        this.network = e;
      }
      return (
        (e.prototype.load = function (e, t) {
          var i = this,
            n = { file_server_id: e };
          this.network.enqueue(
            "/file/load",
            n,
            function (e) {
              i._translate_namespaces(e.namespaces), t(null, e);
            },
            function (e) {
              i.network.record_error("userspace-load", n, e), t(e);
            },
          );
        }),
        (e.prototype.sync_new_files = function (e, t, i) {
          var n = this,
            o = { folder_count: e, document_count: t };
          this.network.enqueue(
            "/file/create",
            o,
            function (e) {
              i(null, e);
            },
            function (e) {
              n.network.record_error("userspace-newfiles", o, e), i(e);
            },
          );
        }),
        (e.prototype.sync_actions = function (e, t, i, n, o, s, r, a) {
          var _ = this,
            c = [],
            l = [],
            u = [],
            h = n.map(function (e) {
              return e.net_serialize();
            });
          each(e, function (e) {
            c.push(e.net_serialize());
          }),
            each(t, function (e) {
              l.push(e.net_serialize());
            }),
            each(i, function (e) {
              u.push(e.net_serialize());
            }),
            0 === c.length && (c = void 0),
            0 === l.length && (l = void 0),
            0 === u.length && (u = void 0);
          var p = { pv: 1, o: r, b: l, v: s, fc: c, cc: u, dudc: h, n: o };
          this.network.enqueue(
            "/file/update",
            p,
            function (e) {
              e.nn && _._translate_namespaces(e.nn), a(null, e);
            },
            function (e) {
              _.network.record_error("userspace-update", p, e), a(e);
            },
          );
        }),
        (e.prototype._translate_namespaces = function (e) {
          each(
            e,
            function (t) {
              var i = [];
              each(t.folders, function (e) {
                (e.type = "folder"),
                  (e.namespace_id = t.namespace_id),
                  i.push(e);
              }),
                delete t.folders,
                each(t.documents, function (e) {
                  (e.type = "document"),
                    (e.namespace_id = t.namespace_id),
                    i.push(e);
                }),
                delete t.documents,
                each(t.linkfiles, function (e) {
                  (e.type = "linkfile"),
                    (e.namespace_id = t.namespace_id),
                    i.push(e);
                }),
                delete t.linkfiles,
                (t.files = i);
            },
            this,
          );
        }),
        e
      );
    })(),
    Fo = "You have unsaved changes.",
    Ho = (function (i) {
      function e(e) {
        var t = i.call(this, "UserspaceController", e) || this;
        return (
          (t.request_save = t.debounce(t.save.bind(t), 1e3)),
          (t.request_sync_manager_update = t.debounce(
            t.sync_manager_update.bind(t),
            0,
          )),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          (this.db = this.app.db),
            (this.userspace = this.app.userspace.get_userspace());
        }),
        (e.prototype._init_fields = function () {
          (this.node_change_events = new vt()),
            (this.changes = this.userspace.changes),
            (this.user_changes = this.userspace.user_changes),
            (this.net = new Po(this.app.network)),
            (this.sync_manager = new gt(this.request_sync_manager_update)),
            (this.sync_component = new ft(this, this.sync_manager)),
            (this.sync_timer = new Ao(this.sync_callback.bind(this))),
            (this.sync_timer_handler = new Do(
              this.sync_timer,
              this.timer_callback.bind(this),
              this.timer_has_changes.bind(this),
            )),
            (this.backoff = new So(0, 3e5, 2e3, !0)),
            (this.push = new Ro(!0)),
            (this.local_loaded = !1),
            (this.saved = !0),
            (this.save_disabled = !1),
            (this.use_wifi_only = !1),
            this.push.register_userspace(
              this.app.config.get_identity(),
              this.on_userspace_push_received.bind(this),
            );
        }),
        (e.prototype._init_after = function () {
          this.userspace.on(
            "namespace_create",
            this.on_namespace_changed,
            this,
          ),
            this.userspace.on(
              "namespace_id_change",
              this.on_namespace_changed,
              this,
            ),
            this.userspace.on(
              "file_title_change",
              this.on_file_title_changed,
              this,
            ),
            this.app.network.on(
              "network_deprecated",
              this.on_network_deprecated,
              this,
            ),
            this.app.network.on(
              "network_logged_out",
              this.on_network_logged_out,
              this,
            ),
            (window.onbeforeunload = this.on_before_unload.bind(this));
        }),
        (e.prototype._load = function () {
          this.sync_timer_handler.set_active(!0),
            this.sync_timer.start(),
            this.sync_timer.request_manual_tick();
        }),
        (e.prototype._unload = function () {
          this.sync_timer.stop();
        }),
        (e.prototype.test_error = function () {
          wt(function () {
            throw new Error();
          });
        }),
        (e.prototype.get_sync_component = function () {
          return this.sync_component;
        }),
        (e.prototype.get_sync_manager = function () {
          return this.sync_manager;
        }),
        (e.prototype.create_document = function (e, t, i) {
          if (this.userspace_remote_loaded) {
            var n = this.userspace.create_document();
            return (
              this.push_new_file(n),
              e && this.attach_file(n, e, t),
              i && this.rename_file(n, i),
              this.request_sync(),
              n
            );
          }
        }),
        (e.prototype.create_folder = function (e, t, i) {
          if (this.userspace_remote_loaded) {
            var n = this.userspace.create_folder();
            return (
              this.push_new_file(n),
              e && this.attach_file(n, e, t),
              i && this.rename_file(n, i),
              n
            );
          }
        }),
        (e.prototype.set_folder_collapse = function (e, t) {
          if (this.userspace_remote_loaded && e.is_collapsed() !== t) {
            var i = new co(e, t);
            this.push_collapse_change(i);
          }
        }),
        (e.prototype.edit_document_user_data = function (e, t) {
          if (this.userspace_remote_loaded) {
            var i = e.get_user_data();
            if (i !== t) {
              var n = new _o(e, i, t);
              this.push_document_user_data_change(n);
            }
          }
        }),
        (e.prototype.rename_file = function (e, t) {
          if (this.userspace_remote_loaded) {
            var i = e.get_title();
            if (i !== t) {
              var n = new ro(e, i, t);
              this.push_change(n);
            }
          }
        }),
        (e.prototype.detach_file = function (e) {
          var i = this;
          if (
            this.userspace_remote_loaded &&
            e.has_parent() &&
            !e.is_namespace_root()
          ) {
            var t = new ao(e, e.get_parent(), e.get_index(), null, 0);
            this.push_change(t),
              this.userspace.traverse_tree_bfs(e, function (e) {
                if (e instanceof Vn) {
                  var t = e.get_user_data_object().clone();
                  t.set_sync_calendar(!1),
                    i.edit_document_user_data(e, t.write());
                }
              });
          }
        }),
        (e.prototype.attach_file = function (e, t, i) {
          if (
            this.userspace_remote_loaded &&
            !(
              e.is_namespace_root() ||
              (e.get_parent() === t && e.get_index() === i) ||
              e === t ||
              t.has_ancestor(e)
            )
          ) {
            var n = new ao(e, e.get_parent(), e.get_index(), t, i);
            this.push_change(n),
              e.is_namespace_root() ||
                e.get_namespace() === t.get_namespace() ||
                e.set_namespace_recursive(t.get_namespace());
          }
        }),
        (e.prototype.create_bookmark = function (e, t) {
          if (this.userspace_remote_loaded) {
            var i = this.userspace.create_bookmark();
            return (
              0 <= e && this.move_bookmark(i, e),
              t && this.edit_bookmark(i, t),
              i
            );
          }
        }),
        (e.prototype.edit_bookmark = function (e, t) {
          if (this.userspace_remote_loaded) {
            var i = e.get_data();
            i !== t && this.push_bookmark_change(new ho(e, i, t));
          }
        }),
        (e.prototype.move_bookmark = function (e, t) {
          if (this.userspace_remote_loaded) {
            var i = e.get_index();
            i !== t && this.push_bookmark_change(new po(e, i, t));
          }
        }),
        (e.prototype.remove_bookmark = function (e) {
          this.move_bookmark(e, -1);
        }),
        (e.prototype.retry_load = function () {
          this.sync("user");
        }),
        (e.prototype.get_net = function () {
          return this.net;
        }),
        (e.prototype.set_focus = function (e) {
          this.sync_timer.set_focus(e);
        }),
        (e.prototype.apply_server_namespace_change = function (e, t, i, n, o) {
          var s = this.userspace.find_namespace(e);
          if ((s || (s = this.userspace.create_namespace(e)), t)) {
            var r = this.userspace.find_server_file(t);
            s.set_root_file(r);
          }
          s.set_version(i),
            s.set_permission(n),
            this.check_namespace_hash(s, o);
        }),
        (e.prototype.apply_server_update = function (e, t, i, n, o, s, r, a) {
          var _ = this.userspace.find_server_file(i);
          _ ||
            ("folder" === t
              ? (_ = this.userspace.create_folder(null, i))
              : "document" === t
              ? (_ = this.userspace.create_document(null, i))
              : "linkfile" === t &&
                (_ = this.userspace.create_linkfile(null, i)));
          var c = this.userspace.find_namespace(n);
          if (e === Jn)
            _.set_namespace(c), _ instanceof fi && _.set_target_namespace_id(a);
          else if (e === Qn)
            _.get_namespace() === c &&
              _.set_namespace(this.userspace.get_root_namespace());
          else if (e === to) {
            if (o && "" !== o) {
              var l = this.userspace.find_server_file(o);
              l && l instanceof ii
                ? (_.detach(), l.attach_child(s, _))
                : assert_not_reached();
            } else _.detach();
            _.has_parent() && _.set_namespace(_.get_parent().get_namespace());
          } else e === eo && _.set_title(r);
        }),
        (e.prototype.check_namespace_hash = function (e, t) {
          var i = t === e.hash();
          log(
            "Namespace " + e.get_id() + " hash check:",
            i ? "Success" : "Failed!",
          ),
            i || this.sync_component.handle_hash_check_fail();
        }),
        (e.prototype.push_change = function (e) {
          this.userspace_remote_loaded &&
            (e.apply(), this.changes.push_action(e), this.set_dirty(!0));
        }),
        (e.prototype.push_bookmark_change = function (e) {
          this.userspace_remote_loaded &&
            (e.apply(),
            this.user_changes.bookmark_changes.push_action(e),
            this.set_dirty(!0));
        }),
        (e.prototype.push_collapse_change = function (e) {
          this.userspace_remote_loaded &&
            (e.apply(),
            this.user_changes.collapse_changes.push_action(e),
            this.set_dirty(!1));
        }),
        (e.prototype.push_document_user_data_change = function (e) {
          this.userspace_remote_loaded &&
            (e.apply(),
            this.user_changes.document_user_data_changes.push_action(e),
            this.set_dirty(!1));
        }),
        (e.prototype.push_new_file = function (e) {
          this.userspace_remote_loaded &&
            (this.changes.push_new_file(e), this.set_dirty(!0));
        }),
        (e.prototype.sync_callback = function (t) {
          this.sync_timer_handler.tick(t),
            Object.each(this.app.get_app_documents(), function (e) {
              e.controller.sync_callback(t);
            });
        }),
        (e.prototype.timer_callback = function () {
          this.sync("timer");
        }),
        (e.prototype.timer_has_changes = function () {
          return (
            !this.userspace_local_loaded ||
            !this.userspace_remote_loaded ||
            this.sync_component.has_error() ||
            this.changes.has_changes() ||
            this.user_changes.bookmark_changes.has_changes() ||
            this.user_changes.document_user_data_changes.has_changes()
          );
        }),
        (e.prototype.request_sync = function () {
          this.sync_timer_handler.force_run(),
            this.sync_timer.request_manual_tick();
        }),
        Object.defineProperty(e.prototype, "userspace_local_loaded", {
          get: function () {
            return this.local_loaded;
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(e.prototype, "userspace_remote_loaded", {
          get: function () {
            return this.userspace.is_available();
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(e.prototype, "userspace_saved", {
          get: function () {
            return this.saved;
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(e.prototype, "userspace_synced", {
          get: function () {
            return (
              !this.changes.has_changes() &&
              !this.user_changes.bookmark_changes.has_changes()
            );
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(e.prototype, "fully_synced", {
          get: function () {
            return (
              this.userspace_synced &&
              !this.user_changes.collapse_changes.has_changes() &&
              !this.user_changes.document_user_data_changes.has_changes()
            );
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(e.prototype, "working", {
          get: function () {
            return this.sync_component.is_working();
          },
          enumerable: !0,
          configurable: !0,
        }),
        (e.prototype.set_dirty = function (e) {
          e && (this.saved = !1), this.update_sync_state(), this.request_save();
        }),
        (e.prototype.is_sync_allowed = function () {
          return (
            !this.app.config.is_demo_view() &&
            (this.app.env.is("mobile") && this.use_wifi_only
              ? !this.app.env.is_using_cell_network()
              : !this.app.env.is("desktop") ||
                !bool(this.app.env.get_env_data("disable-sync", !1)))
          );
        }),
        (e.prototype._start_working = function () {
          this.sync_component.set_working(!0);
        }),
        (e.prototype._end_working = function () {
          this.sync_component.set_working(!1);
        }),
        (e.prototype.on_push_received = function (e, t) {
          var i = this.userspace.find_namespace(e);
          i && ((t && t <= i.get_version()) || this.sync("push"));
        }),
        (e.prototype.on_userspace_push_received = function (e, t) {
          (t && t <= this.userspace.get_userspace_version()) ||
            this.sync("push");
        }),
        (e.prototype.sync = function (e) {
          var t = "timer" === e,
            i = "user" === e;
          this.sync_component.set_passive(t),
            this.sync_component.is_working() ||
              this.sync_component.is_disabled() ||
              (this.sync_component.clear_error(),
              this.userspace_local_loaded
                ? (!i && Date.now() < this.backoff.get_next_ts()) ||
                  (this.userspace_remote_loaded
                    ? this.userspace.get_root_file().has_server_id()
                      ? (this.userspace_saved || this.request_save().flush(),
                        this.app.config.isAnonymousView() ||
                          (this.is_sync_allowed()
                            ? (this.push.ensure_connected(),
                              (t &&
                                this.push.is_online() &&
                                this.fully_synced) ||
                                this.save_remote())
                            : this.push.disconnect()))
                      : this.load_remote_root_file_id()
                    : this.load_remote())
                : this.load_local());
        }),
        (e.prototype.load_local = function () {
          var t = this;
          this._start_working(),
            this.db.async_get_userspace(function (e) {
              t._end_working(),
                e &&
                  (t.userspace.deserialize(e.userspace),
                  t.changes.deserialize(e.changes),
                  t.user_changes.deserialize(e)),
                (t.local_loaded = !0),
                t.update_sync_state(),
                t.sync("user");
            });
        }),
        (e.prototype.load_remote_root_file_id = function () {
          var n = this;
          this._start_working(),
            this.net.load(null, function (e, t) {
              if ((n._end_working(), e || !t))
                return (
                  n.backoff.fail(),
                  void n.sync_component.set_error("Failed to sync with server")
                );
              n.backoff.success();
              try {
                var i = t.root_namespace_id;
                each(t.namespaces, function (e) {
                  if (e.namespace_id === i) {
                    var t = e.root_file_server_id;
                    t && n.userspace.get_root_file().set_server_id(t);
                  }
                }),
                  n.request_save().flush();
              } catch (e) {
                n.sync_component.handle_sync_exception(e), track_error(e);
              }
            });
        }),
        (e.prototype.debug_load_local = function () {
          this.db.async_get_userspace(function (e) {
            log(e);
          });
        }),
        (e.prototype.load_remote = function () {
          var o = this,
            e = null;
          this.app.config.isAnonymousView() &&
            (e = this.app.config.get_autoload_document_server_id()),
            this._start_working(),
            this.net.load(e, function (e, t) {
              if ((o._end_working(), e || !t))
                return (
                  o.backoff.fail(),
                  void o.sync_component.set_error("Failed to sync with server")
                );
              o.backoff.success();
              try {
                var i = {
                  userspace_version: t.v,
                  available: !0,
                  root_namespace_id: t.root_namespace_id,
                  namespaces: t.namespaces,
                  files: [],
                  bookmarks: t.b,
                };
                if (
                  (each(t.namespaces, function (e) {
                    each(e.files, function (e) {
                      i.files.push(e);
                    });
                  }),
                  o.userspace.deserialize(i),
                  each(t.namespaces, function (e) {
                    if (e.hash) {
                      var t = o.userspace.find_namespace(e.namespace_id);
                      o.check_namespace_hash(t, e.hash);
                    }
                  }),
                  o.request_save().flush(),
                  o.app.config.is_demo_view())
                ) {
                  var n = o.userspace.get_root_namespace();
                  n && n.set_permission(te);
                }
                t.last_file_server_id &&
                  (o.app.config.get_autoload_document_server_id() ||
                    o.app.config.set_autoload_document_server_id(
                      t.last_file_server_id,
                    ));
              } catch (e) {
                o.sync_component.handle_sync_exception(e), track_error(e);
              }
              o.update_sync_state(), o.sync("user");
            });
        }),
        (e.prototype.clear_local_data = function () {
          (this.save_disabled = !0), this.db.async_clear_userspace();
        }),
        (e.prototype.save = function () {
          if (!this.save_disabled) {
            try {
              var e = this.user_changes.serialize(),
                t = {
                  userspace: this.userspace.serialize(),
                  changes: this.changes.serialize(),
                  bookmark_changes: e.bookmark_changes,
                  collapse_changes: e.collapse_changes,
                  document_user_data_changes: e.document_user_data_changes,
                };
              this.db.async_save_userspace(t), (this.saved = !0);
            } catch (e) {
              this.sync_component.handle_sync_exception(e), track_error(e);
            }
            this.update_sync_state();
          }
        }),
        (e.prototype.save_remote = function () {
          var e = this.changes.get_new_documents().length,
            t = this.changes.get_new_folders().length;
          0 < e || 0 < t
            ? this._save_remote_new_files(e, t)
            : this._save_remote_changes();
        }),
        (e.prototype._save_remote_new_files = function (e, t) {
          var o = this;
          this._start_working(),
            this.net.sync_new_files(t, e, function (e, t) {
              if ((o._end_working(), e || !t))
                return (
                  o.backoff.fail(),
                  void o.sync_component.set_error("Failed to create new files")
                );
              o.backoff.success();
              try {
                var i = o.changes.get_new_documents(),
                  n = o.changes.get_new_folders();
                each(
                  t.folders,
                  function (e) {
                    var t = n.pop();
                    t && t.set_server_id(e);
                  },
                  o,
                ),
                  each(
                    t.documents,
                    function (e) {
                      var t = i.pop();
                      t && t.set_server_id(e);
                    },
                    o,
                  );
              } catch (e) {
                o.sync_component.handle_sync_exception(e), track_error(e);
              }
              o.request_save().flush(), o.update_sync_state(), o.sync("user");
            });
        }),
        (e.prototype._save_remote_changes = function () {
          var o = this,
            e = this.changes.get_actions();
          this.syncing_actions = e.length;
          var t = this.user_changes.bookmark_changes.get_actions();
          this.syncing_bookmark_actions = t.length;
          var i = this.user_changes.collapse_changes.get_actions();
          this.syncing_collapse_actions = i.length;
          var n = this.user_changes.document_user_data_changes.get_actions();
          this.syncing_document_user_data_actions = n.length;
          var s = {};
          Object.each(this.userspace.get_namespaces(), function (e) {
            s[e.get_id()] = e.get_version();
          });
          var r = this.userspace.get_userspace_version(),
            a = null;
          this.app.with_current_app_document(function (e) {
            a = e.document.get_server_id();
          }),
            this._start_working(),
            this.net.sync_actions(e, t, i, n, s, r, a, function (e, t) {
              if ((o._end_working(), e || !t))
                return (
                  !1 !== navigator.onLine && o.backoff.fail(),
                  void o.sync_component.set_error("Failed to create new files")
                );
              o.backoff.success();
              try {
                o.userspace.set_userspace_version(t.v),
                  o.user_changes.bookmark_changes.clear_actions(
                    o.syncing_bookmark_actions,
                  ),
                  (o.syncing_bookmark_actions = 0),
                  o.user_changes.collapse_changes.clear_actions(
                    o.syncing_collapse_actions,
                  ),
                  (o.syncing_collapse_actions = 0),
                  o.userspace.trigger("net_sync_before"),
                  o.changes.revert_all(),
                  t.nr &&
                    each(t.nr, function (e) {
                      var t = o.userspace.find_namespace(e.namespace_id);
                      if (t) {
                        Object.each(o.userspace.get_files(), function (e) {
                          e.get_namespace() === t &&
                            e.set_namespace(o.userspace.get_root_namespace());
                        }),
                          o.userspace.remove_namespace(t);
                        var i = t.get_linkfile();
                        i && i.update_target_namespace();
                      }
                    }),
                  each(t.fc, function (e) {
                    o.apply_server_update(
                      e.action,
                      e.type,
                      e.file_id,
                      e.namespace_id,
                      e.parent_id,
                      e.index,
                      e.title,
                      e.target_namespace_id,
                    );
                  }),
                  t.nc &&
                    each(t.nc, function (e) {
                      o.apply_server_namespace_change(
                        e.namespace_id,
                        e.root_file_server_id,
                        e.version,
                        e.permission,
                        e.hash,
                      );
                    }),
                  t.nn &&
                    (o.userspace.deserialize_namespaces(t.nn),
                    each(t.nn, function (e) {
                      if (e.hash) {
                        var t = o.userspace.find_or_create_namespace(
                          e.namespace_id,
                        );
                        o.check_namespace_hash(t, e.hash);
                      }
                    })),
                  o.userspace.update_linkfiles(),
                  t.try_again ||
                    (o.changes.clear_actions(o.syncing_actions),
                    (o.syncing_actions = 0)),
                  t.cc &&
                    each(t.cc, function (e) {
                      var t = e.file_id,
                        i = e.collapsed,
                        n = o.userspace.find_server_file(t);
                      n && n instanceof ii && n.set_collapsed(i);
                    }),
                  t.us_try_again &&
                    o.user_changes.document_user_data_changes.revert_all(),
                  t.dudc &&
                    each(t.dudc, function (e) {
                      var t = e.file_id,
                        i = e.user_data,
                        n = o.userspace.find_server_file(t);
                      n && n instanceof Vn && n.set_user_data(i);
                    }),
                  t.us_try_again
                    ? o.user_changes.document_user_data_changes.apply_all()
                    : (o.user_changes.document_user_data_changes.clear_actions(
                        o.syncing_document_user_data_actions,
                      ),
                      (o.syncing_document_user_data_actions = 0)),
                  o.changes.apply_all(),
                  t.nb &&
                    each(t.nb, function (e, t) {
                      var i = o.userspace.find_bookmark(t);
                      i ? i.set_server_id(e) : assert_not_reached();
                    }),
                  t.b &&
                    (o.user_changes.bookmark_changes.revert_all(),
                    o.userspace.get_root_bookmark().deserialize(t.b),
                    o.user_changes.bookmark_changes.apply_all()),
                  o.userspace.trigger("net_sync_after");
              } catch (e) {
                o.sync_component.handle_sync_exception(e), track_error(e);
              }
              o.request_save().flush(), o.update_sync_state();
            });
        }),
        (e.prototype.sync_manager_update = function () {
          this.userspace.trigger("sync_state_change", this.sync_manager);
        }),
        (e.prototype.update_sync_state = function () {
          var e = pt;
          this.userspace_synced || (e = this.db.is_enabled() ? ht : ut),
            this.userspace_saved || (e = ut),
            (this.userspace_local_loaded && this.userspace_remote_loaded) ||
              (e = lt),
            this.sync_component.set_sync_state(e);
        }),
        (e.prototype.get_sync_state = function () {
          if (!this.userspace_local_loaded || !this.userspace_remote_loaded)
            return lt;
          var e = pt;
          return (
            this.userspace_synced || (e = ht),
            this.userspace_saved || (e = ut),
            e
          );
        }),
        (e.prototype.on_before_unload = function (e) {
          if (!this.app.config.is_demo_view()) {
            var t = !1;
            if (
              (Array.each(this.sync_manager.get_components(), function (e) {
                if (e.get_sync_state() === ut) return !(t = !0);
              }),
              t)
            )
              return (e = e || window.event) && (e.returnValue = Fo), Fo;
            window.onbeforeunload = null;
          }
        }),
        (e.prototype.on_namespace_changed = function (e) {
          this.push.register_namespace(
            e.get_id(),
            this.on_push_received.bind(this),
          );
        }),
        (e.prototype.on_file_title_changed = function (e) {
          e.has_server_id() &&
            this.node_change_events.trigger(e.get_server_id(), e);
        }),
        (e.prototype.on_network_deprecated = function () {
          this.sync_timer.stop(), this.sync_manager.set_disabled(!0);
        }),
        (e.prototype.on_network_logged_out = function () {
          this.app.env.is("web")
            ? this.app.userspace.ui.popup_message_manager.display_logged_out_popup()
            : this.app.env.set_env_data_session(null, function () {
                return window.location.reload();
              });
        }),
        (e.prototype.set_use_wifi_only = function (e) {
          this.use_wifi_only = e;
        }),
        e
      );
    })(To),
    zo = (function () {
      function i(e) {
        this.nodes = e || [];
      }
      return (
        (i.prototype.get_nodes = function () {
          return this.nodes;
        }),
        (i.prototype.has_nodes = function () {
          return 0 < this.nodes.length;
        }),
        (i.select_content = function (e, t) {
          return i.select_content_range(e, t, t);
        }),
        (i.select_content_range = function (e, t, i) {
          return new Uo(e, t, i);
        }),
        (i.select_note = function (e, t) {
          return i.select_note_range(e, t, t);
        }),
        (i.select_note_range = function (e, t, i) {
          return new jo(e, t, i);
        }),
        (i.select_multi_nodes = function (e, t, i) {
          return 0 === e.length ? qo : new Go(e, t, i);
        }),
        (i.select_multi_nodes_from_parent = function (e, t, i) {
          for (var n = [], o = t; o <= i; o++) {
            var s = e.get_child(o);
            s && n.push(s);
          }
          return this.select_multi_nodes(n, n[0], n[n.length - 1]);
        }),
        (i.select_multi_nodes_from_parent_all = function (e) {
          return this.select_multi_nodes_from_parent(
            e,
            0,
            e.num_children() - 1,
          );
        }),
        (i.select_multi_node = function (e) {
          return e ? new Go([e], e, e) : qo;
        }),
        i
      );
    })(),
    Bo = (function (o) {
      function t(e, t, i) {
        var n = o.call(this, [e]) || this;
        return (n.node = e), (n.posStart = t), (n.posEnd = i), n;
      }
      return (
        nt(t, o),
        (t.prototype.get_node = function () {
          return this.node;
        }),
        (t.prototype.is_caret_selection = function () {
          return this.get_position_start() === this.get_position_end();
        }),
        (t.prototype.get_text_length = function () {
          return this.get_text().length;
        }),
        (t.prototype._normalize_position = function (e) {
          var t = this.get_text_length();
          return -1 === e && (e = t), t < e && (e = t), e;
        }),
        (t.prototype.get_position_start = function () {
          return this._normalize_position(this.posStart);
        }),
        (t.prototype.get_position_end = function () {
          return this._normalize_position(this.posEnd);
        }),
        (t.prototype.is_start = function () {
          return this.get_position_start() <= 0;
        }),
        (t.prototype.is_end = function () {
          return this.posEnd >= this.get_text_length();
        }),
        (t.prototype.is_selecting_all = function () {
          return this.is_start() && this.is_end();
        }),
        (t.prototype.split_text = function () {
          var e = this.get_text();
          return {
            first: e.slice(0, this.get_position_start()),
            second: e.slice(this.get_position_end()),
          };
        }),
        (t.prototype.get_selected_text = function () {
          return this.get_text().substring(
            this.get_position_start(),
            this.get_position_end(),
          );
        }),
        (t.prototype.equals = function (e) {
          return (
            e instanceof t &&
            e.node === this.node &&
            e.posStart === this.posStart &&
            e.posEnd === this.posEnd
          );
        }),
        t
      );
    })(zo),
    Uo = (function (n) {
      function t(e, t, i) {
        return n.call(this, e, t, i) || this;
      }
      return (
        nt(t, n),
        (t.prototype.get_text = function () {
          return this.node.get_meta_object().get_content();
        }),
        (t.prototype.equals = function (e) {
          return e instanceof t && n.prototype.equals.call(this, e);
        }),
        t
      );
    })(Bo),
    jo = (function (n) {
      function t(e, t, i) {
        return n.call(this, e, t, i) || this;
      }
      return (
        nt(t, n),
        (t.prototype.get_text = function () {
          return this.node.get_meta_object().get_note();
        }),
        (t.prototype.equals = function (e) {
          return e instanceof t && n.prototype.equals.call(this, e);
        }),
        t
      );
    })(Bo),
    Go = (function (o) {
      function s(e, t, i) {
        var n = o.call(this, e) || this;
        return (n.fromNode = t), (n.toNode = i), n;
      }
      return (
        nt(s, o),
        (s.prototype.get_from_node = function () {
          return this.fromNode;
        }),
        (s.prototype.get_to_node = function () {
          return this.toNode;
        }),
        (s.prototype.get_first_node = function () {
          return this.nodes[0];
        }),
        (s.prototype.get_last_node = function () {
          return this.nodes[this.nodes.length - 1];
        }),
        (s.prototype.is_node_inside = function (e) {
          return this.nodes.contains(e);
        }),
        (s.prototype.equals = function (e) {
          if (!(e instanceof s)) return !1;
          var t = this.nodes,
            i = e.nodes;
          if (i.length !== t.length) return !1;
          for (var n = 0; n < t.length; n++) if (t[n] !== i[n]) return !1;
          return !0;
        }),
        s
      );
    })(zo),
    qo = new ((function (e) {
      function t() {
        return e.call(this, []) || this;
      }
      return (
        nt(t, e),
        (t.prototype.equals = function (e) {
          return e instanceof t;
        }),
        t
      );
    })(zo))(),
    $o = (function (i) {
      function e(e, t) {
        return i.call(this, "FileUploader", e, t) || this;
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          this.document_ui = this.app_document.ui;
        }),
        (e.prototype._init_fields = function () {}),
        (e.prototype.upload_files = function (e, t, i) {
          if (1 === e.length) {
            var n = e[0];
            return (
              this.upload_file(n, t, i),
              { filename: n.get_name(), is_image: n.is_image() }
            );
          }
        }),
        (e.prototype.upload_file = function (e, t, i) {
          var n = this,
            o = this.document_ui,
            s = e.is_image(),
            r = e.get_name(),
            a = "/uploads/upload_multipart",
            _ = new FormData();
          _.append("file", e.get_file(), r),
            DYNALIST.IS_STANDALONE_MODE && (a = d + a);
          var c = (function e() {
            var t = {},
              i = Pe();
            return i && (t.DYS = i), t;
          })();
          $.ajax({
            data: _,
            url: a,
            xhr: function () {
              var e = $.ajaxSettings.xhr();
              return (
                e.upload &&
                  e.upload.addEventListener(
                    "progress",
                    function (e) {
                      e.lengthComputable &&
                        "drop" === t &&
                        n.document_ui.update_drop_to_upload_progress(
                          e.loaded,
                          e.total,
                        );
                    },
                    !1,
                  ),
                e
              );
            },
            headers: c,
            cache: !1,
            contentType: !1,
            processData: !1,
            type: "POST",
            success: function (e) {
              "paste" === t || "toolbar" === t
                ? o.done_pasting_to_upload(e, i)
                : "drop" === t && o.done_dropping_to_upload(e, r, s);
            },
            error: function (e, t, i) {
              o.upload_failed(e);
            },
          });
        }),
        e
      );
    })(To),
    Wo = (function () {
      function e(e, t) {
        (this.file = e), (this.name = t || e.name);
      }
      return (
        (e.prototype.get_file = function () {
          return this.file;
        }),
        (e.prototype.get_name = function () {
          return this.name;
        }),
        (e.prototype.is_image = function () {
          return !!this.file.type && this.file.type.startsWith("image/");
        }),
        e
      );
    })(),
    Yo = /[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,\-.\/:;<=>?@\[\]^_`{|}~]/,
    Ko = /\s/,
    Vo = /[\u3040-\u30ff\u3400-\u4dbf\u4e00-\u9fff\uf900-\ufaff\uff66-\uff9f]/,
    Xo = new RegExp("(^|\\s+|" + Yo.source + ")"),
    Zo = new RegExp("($|\\s+|" + Yo.source + ")"),
    Jo = {
      "time:": 1,
      "since:": 1,
      "until:": 1,
      "within:": 1,
      "edited:": 1,
      "created:": 1,
      "is:": 1,
      "has:": 1,
      "color:": 1,
      "heading:": 1,
      "parent:": 1,
      "ancestor:": 1,
    },
    Qo = function (e, t) {
      var i = Pi(e, t);
      if (0 === i) {
        var n = Ri(e);
        n && (i = n[0]);
      }
      return i;
    },
    es = function (e, t) {
      var i = Qo(t);
      if (0 === i) return !1;
      e.set_time_range(i, null);
    },
    ts = function (e, t) {
      var i = Qo(t, "always");
      if (0 === i) return !1;
      e.set_time_range(null, i);
    },
    is = function (e, t) {
      var i = new Date(),
        n = new Date(
          i.getFullYear(),
          i.getMonth(),
          i.getDate(),
          0,
          0,
          0,
          0,
        ).getTime(),
        o = n + 864e5;
      if (("today" === t && e.set_time_range(n, o), "0d" === t))
        e.set_time_range(i, o);
      else {
        var s = Pi(t, "future");
        if (0 === s) return !1;
        s < i.getTime() ? e.set_time_range(s, o) : e.set_time_range(n, s);
      }
    },
    ns = function (e, t) {
      t.startsWith("-") || (t = "-" + t);
      var i = Qo(t);
      if (0 === i) return !1;
      e.set_time_range(i, null);
    },
    os = function (e, t) {
      var i = Te[t];
      if (void 0 === i) return !1;
      e.set_color_label(i);
    },
    ss = function (e, t) {
      var i = parseInt(t);
      if (i < 0 || 3 < i) return !1;
      e.set_heading(i);
    },
    rs = function (e, t) {
      e.set_parent_query(t);
    },
    as = function (e, t) {
      e.setAncestorQuery(t);
    },
    _s = function (e, t, i, n) {
      return !(i && t <= i) && !(n && n <= e);
    },
    cs = (function () {
      function e(e, t, i, n) {
        (this.query = e),
          (this.q = e),
          i || (this.q = this.q.toLowerCase()),
          (this.full = t),
          (this.exact = i),
          (this.not = n),
          (this.time_from = null),
          (this.time_to = null),
          (this.color_label = null),
          (this.heading = null),
          (this.parent_query = null),
          this.match_prefix_query("since:", "time:", es),
          this.match_prefix_query("until:", "time:", ts),
          this.match_prefix_query("within:", "time:", is),
          "has:date" === this.q && (this.q = "time:"),
          this.match_prefix_query("edited:", "edited:", ns),
          this.match_prefix_query("created:", "created:", ns),
          this.match_prefix_query("color:", "color:", os),
          this.match_prefix_query("heading:", "heading:", ss),
          this.match_prefix_query("parent:", "parent:", rs),
          this.match_prefix_query("ancestor:", "ancestor:", as);
      }
      return (
        (e.prototype.match_prefix_query = function (e, t, i) {
          if (this.q.startsWith(e)) {
            var n = this.q.substr(e.length);
            !1 !== i(this, n) && (this.q = t);
          }
        }),
        (e.prototype.set_time_range = function (e, t) {
          (this.time_from = e), (this.time_to = t);
        }),
        (e.prototype.set_color_label = function (e) {
          this.color_label = e;
        }),
        (e.prototype.set_heading = function (e) {
          this.heading = e;
        }),
        (e.prototype.set_parent_query = function (e) {
          this.parent_query = e;
        }),
        (e.prototype.setAncestorQuery = function (e) {
          this.ancestorQuery = e;
        }),
        (e.prototype.extract_time = function (e) {
          var t = e.node,
            i = [],
            n = function (e) {
              e instanceof fn && i.push(e);
            };
          return (
            t.get_content_parse_tree().traverse(n),
            t.get_note_parse_tree().traverse(n),
            i
          );
        }),
        (e.prototype.match = function (t) {
          var i = this,
            e = [],
            n = [],
            o = t.node,
            s = !1;
          if ("time:" === this.q) {
            var r = this.time_from,
              a = this.time_to,
              _ = this.extract_time(t);
            Array.each(_, function (e) {
              if ((s = _s(e.startTime, e.endTime, r, a))) return !1;
            });
          } else if ("edited:" === this.q) {
            var c = this.time_from,
              l = this.time_to,
              u = o.get_edited_ts();
            s = _s(u, u, c, l);
          } else if ("created:" === this.q) {
            (c = this.time_from), (l = this.time_to);
            var h = o.get_created_ts();
            s = _s(h, h, c, l);
          } else if ("is:completed" === this.q)
            for (; o && !o.is_root(); ) {
              if (o.get_meta_object().is_checked()) {
                s = !0;
                break;
              }
              o = o.get_parent();
            }
          else if ("has:checkbox" === this.q || "is:checklist" === this.q)
            s = o.get_meta_object().has_checkbox();
          else if ("has:note" === this.q) s = bool(t.note);
          else if ("has:color" === this.q) {
            var p = o.get_meta_object().get_color_label();
            s = 0 !== p;
          } else if ("has:children" === this.q) {
            var d = o.get_children().length();
            s = 0 < d;
          } else if ("is:heading" === this.q) {
            var f = o.get_meta_object().get_heading();
            s = 0 !== f;
          } else if ("color:" === this.q) {
            p = o.get_meta_object().get_color_label();
            s = p === this.color_label;
          } else if ("heading:" == this.q) {
            f = o.get_meta_object().get_heading();
            s = f === this.heading;
          } else if ("parent:" === this.q)
            if (o.has_parent()) {
              var g = o.get_parent().get_meta_object().get_content();
              s = g.toLowerCase().contains(this.parent_query);
            } else s = !1;
          else if ("ancestor:" === this.q) {
            (s = !1),
              o.get_node_collection().traverse_parent(
                o,
                function (e) {
                  if (
                    e
                      .get_meta_object()
                      .get_content()
                      .toLowerCase()
                      .contains(i.ancestorQuery)
                  )
                    return !(s = !0);
                },
                !1,
              );
          } else
            "note" !== this.where_in && (e = this.match_all(t.content)),
              "title" !== this.where_in && (n = this.match_all(t.note)),
              (s = 0 < e.length || 0 < n.length);
          return this.not
            ? !s
            : (s &&
                (Array.each(e, function (e) {
                  t.content_matches.push(e);
                }),
                Array.each(n, function (e) {
                  t.note_matches.push(e);
                })),
              s);
        }),
        (e.prototype.match_all = function (e) {
          this.exact || (e = e.toLowerCase());
          var t = [];
          if ("" === e.trim()) return t;
          if (this.full)
            for (
              var i = new RegExp(
                  Xo.source + "(" + Dt(this.q) + ")" + Zo.source,
                  "g",
                ),
                n = void 0;
              null !== (n = i.exec(e));

            ) {
              var o = n.index + n[0].indexOf(n[2]);
              t.push([o, o + n[2].length]);
            }
          else
            for (var s = 0; 0 <= (s = e.indexOf(this.q, s)); )
              t.push([s, s + this.q.length]), s++;
          return t;
        }),
        e
      );
    })(),
    ls = function (e, t) {
      return e[0] - t[0];
    },
    us = function (e) {
      if (0 === e.length) return e;
      e.sort(ls);
      for (var t = [e[0]], i = 1; i < e.length; i++) {
        var n = t.last();
        n[1] < e[i][0] ? t.push(e[i]) : n[1] < e[i][1] && (n[1] = e[i][1]);
      }
      return t;
    };
  var hs = (function () {
      function e(e) {
        (this.content_matches = []),
          (this.note_matches = []),
          (this.node = e),
          (this.content = e.get_meta_object().get_content()),
          (this.note = e.get_meta_object().get_note());
      }
      return (
        (e.prototype.collapse_overlaps = function () {
          (this.content_matches = us(this.content_matches)),
            (this.note_matches = us(this.note_matches));
        }),
        (e.prototype.get_content = function () {
          return this.content;
        }),
        (e.prototype.get_note = function () {
          return this.note;
        }),
        (e.prototype.get_content_matches = function () {
          return this.content_matches;
        }),
        (e.prototype.get_note_matches = function () {
          return this.note_matches;
        }),
        e
      );
    })(),
    ps = (function () {
      function e() {
        this.terms = [];
      }
      return (
        (e.prototype.addTerm = function (e) {
          this.terms.push(e);
        }),
        (e.prototype.match_node = function (e) {
          if (0 === this.terms.length) return null;
          for (var t = new hs(e), i = 0; i < this.terms.length; i++)
            if (!this.terms[i].match(t)) return null;
          return t.collapse_overlaps(), t;
        }),
        e
      );
    })(),
    ds = function (e, t) {
      for (var i = [], n = 0; n < e.length; n++) {
        var o = e[n];
        o instanceof cs ? i.push(o) : t(o, i);
      }
      return i;
    },
    fs = /(^| )(-?"[^"]*")( |$)/,
    gs = function (e, t) {
      for (var i; null !== (i = fs.exec(e)); ) {
        0 != i.index && t.push(e.substr(0, i.index).trim());
        var n = i[2].trim(),
          o = "-" == n.charAt(0);
        o && (n = n.substr(1)),
          2 < n.length &&
            t.push(new cs(n.substring(1, n.length - 1), !0, !0, o)),
          (e = e.substr(i.index + i[0].length).trim());
      }
      0 < e.length && t.push(e.trim());
    },
    ms = function (e, t) {
      if (0 !== e.length)
        for (var i = e.split(" "), n = 0; n < i.length; n++) {
          var o = i[n];
          if (0 !== o.length)
            if (n < i.length - 1 && Jo[o]) i[n + 1] = o + i[n + 1];
            else {
              var s = 1 < o.length && "-" == o.charAt(0);
              s && (o = o.substr(1));
              var r = 0 < o.length && ["#", "@"].contains(o.charAt(0));
              s && (r = !1), t.push(new cs(o, r, !1, s));
            }
        }
    },
    vs = (function () {
      function e() {
        (this.query = ""),
          (this.searching = !1),
          (this.partial_last = !1),
          (this.matchers = []),
          (this.force_show_completed = !1);
      }
      return (
        (e.prototype.is_searching = function () {
          return this.searching;
        }),
        (e.prototype.get_query = function () {
          return this.query;
        }),
        (e.prototype.parse = function (e, t) {
          if ((void 0 === t && (t = !1), !t && this.query === e)) return !1;
          if (
            ((this.query = e),
            (this.searching = "" !== e),
            (this.partial_last =
              !(0 < e.length) || " " !== e.charAt(e.length - 1)),
            (this.matchers = []),
            (this.force_show_completed = !1),
            !this.searching)
          )
            return !0;
          var i = ds([e], gs);
          i = ds(i, ms);
          var n = new ps();
          this.matchers.push(n);
          for (var o = "", s = 0; s < i.length; s++) {
            var r = i[s];
            r.query &&
              ("is:completed" === r.q && (this.force_show_completed = !0),
              "in:title" !== r.q
                ? "in:note" !== r.q
                  ? "OR" !== r.query
                    ? (o && (r.where_in = o),
                      n.addTerm(r),
                      this.partial_last && s === i.length - 1 && (r.full = !1))
                    : ((n = new ps()), this.matchers.push(n))
                  : (o = "note")
                : (o = "title"));
          }
          return !0;
        }),
        (e.prototype.match_node = function (e) {
          for (var t = 0; t < this.matchers.length; t++) {
            var i = this.matchers[t].match_node(e);
            if (i) return i;
          }
          return null;
        }),
        e
      );
    })();
  function ys(e) {
    for (var t = e.toLowerCase(), i = [], n = 0, o = 0; o < t.length; o++) {
      var s = t.charAt(o);
      Ko.test(s)
        ? (n !== o && i.push(t.substring(n, o)), (n = o + 1))
        : (Yo.test(s) || Vo.test(s)) &&
          (n !== o && i.push(t.substring(n, o)), i.push(s), (n = o + 1));
    }
    return (
      n !== t.length && i.push(t.substring(n, t.length)),
      { query: e, tokens: i, fuzzy: t.split("") }
    );
  }
  function bs(e, t, i) {
    for (
      var n = t.toLowerCase(), o = 0, s = 0, r = [], a = 0;
      a < e.length;
      a++
    ) {
      var _ = e[a],
        c = n.indexOf(_, s);
      if (-1 === c) return null;
      var l = t.charAt(c);
      if (0 < c && !Yo.test(l) && !Vo.test(l)) {
        var u = t.charAt(c - 1);
        if (
          (l.toLowerCase() !== l && u.toLowerCase() !== u) ||
          (l.toUpperCase() !== l && !Yo.test(u) && !Vo.test(u))
        )
          if (i) {
            if (c !== s) {
              (s += _.length), a--;
              continue;
            }
          } else o += 1;
      }
      if (0 === r.length) r.push([c, c + _.length]);
      else {
        var h = r[r.length - 1];
        h[1] < c ? r.push([c, c + _.length]) : (h[1] = c + _.length);
      }
      s = c + _.length;
    }
    var p = 0;
    (p -= Math.max(0, r.length - 1)), (p -= o / 10);
    var d = r[0][0];
    return (
      (p -= (r[r.length - 1][1] - d + 1 - e.join("").length) / 100),
      (p -= d / 1e3),
      { matches: r, score: (p -= n.length / 1e4) }
    );
  }
  function ws(e, t) {
    var i = bs(e.tokens, t, !1);
    return i || bs(e.fuzzy, t, !0);
  }
  function ks(e) {
    e.sort(function (e, t) {
      return t.match.score - e.match.score;
    });
  }
  try {
    window.WeakMap = WeakMap;
  } catch (e) {
    window.WeakMap = Cs;
    var Es = Object.defineProperty,
      Cs = (function () {
        function e() {
          this._ = "_weakmap_" + Os++;
        }
        return (
          (e.prototype.delete = function (e) {
            return this.has(e) && delete e[this._];
          }),
          (e.prototype.get = function (e) {
            return this.has(e) ? e[this._] : void 0;
          }),
          (e.prototype.has = function (e) {
            return Object.hasOwnProperty.call(e, this._);
          }),
          (e.prototype.set = function (e, t) {
            return Es(e, this._, { configurable: !0, value: t }), this;
          }),
          e
        );
      })();
  }
  var Ts = (function () {
      function e() {
        this.map = new WeakMap();
      }
      return (
        (e.prototype.get = function (e) {
          return this.map.get(e);
        }),
        (e.prototype.set = function (e, t) {
          return this.map.set(e, t), this;
        }),
        (e.prototype.has = function (e) {
          return this.map.has(e);
        }),
        (e.prototype.delete = function (e) {
          return this.map.delete(e);
        }),
        e
      );
    })(),
    Os = 0,
    xs = (function () {
      function e() {
        this._ = "_weakmap_" + Os++;
      }
      return (
        (e.prototype.get = function (e) {
          return this.has(e) ? e[this._] : void 0;
        }),
        (e.prototype.set = function (e, t) {
          return (
            Object.defineProperty(e, this._, { configurable: !0, value: t }),
            this
          );
        }),
        (e.prototype.has = function (e) {
          return Object.hasOwnProperty.call(e, this._);
        }),
        (e.prototype.delete = function (e) {
          return this.has(e) && delete e[this._];
        }),
        e
      );
    })();
  function As() {
    return window.WeakMap ? new Ts() : new xs();
  }
  var Ds = As(),
    Ss = (function () {
      function e(e) {
        (this.token = e), (this.disabled = !1), (this.select_whole = !1);
      }
      return (
        (e.prototype.get_token = function () {
          return this.token;
        }),
        (e.prototype.set_disabled = function (e) {
          return (this.disabled = e), this;
        }),
        (e.prototype.is_disabled = function () {
          return this.disabled;
        }),
        (e.prototype.set_select_whole = function (e) {
          return (this.select_whole = e), this;
        }),
        (e.prototype.is_select_whole = function () {
          return this.select_whole;
        }),
        e
      );
    })(),
    Ns = function e(t, i) {
      (this.parse_tree = t), (this.matches = i);
    },
    Is = (function () {
      function e(e) {
        this.render_options = e;
      }
      return (
        (e.prototype.render_parse_tree = function (t, i, e) {
          if ((i.empty(), t)) {
            var n = new Ns(t, e);
            try {
              var o = this._render(n, t);
              o &&
                (Array.isArray(o)
                  ? o.forEach(function (e) {
                      return i.appendChild(e);
                    })
                  : i.appendChild(o)),
                i.appendChild(document.createTextNode("\n"));
            } catch (e) {
              console.error(e), log(t), track_error(e);
            }
          }
        }),
        (e.prototype.render_formatted = function (e, t, i) {
          var n = Hn.parse_text(e);
          this.render_parse_tree(n, t, i);
        }),
        (e.prototype._render_element = function (e, t) {
          var i = t.tag,
            n = t.classes,
            o = t.attrs,
            s = t.inner,
            r = t.ctx,
            a = document.createElement(i);
          return (
            o && a.setAttrs(o),
            n && a.addClasses(n),
            r && a.setCtx(r),
            s instanceof Yi && (s = this._render(e, s)),
            s &&
              (s instanceof Element
                ? a.append(s)
                : Array.isArray(s)
                ? s.forEach(function (e) {
                    return a.append(e);
                  })
                : isString(s) && a.setText(s)),
            a
          );
        }),
        (e.prototype._render_span = function (e, t) {
          return (t.tag = "span"), this._render_element(e, t);
        }),
        (e.prototype._render_anchor = function (e, t) {
          t.tag = "a";
          var i = t.attrs || {};
          return ((t.attrs = i).tabindex = -1), this._render_element(e, t);
        }),
        (e.prototype._render_img = function (e, t) {
          return (t.tag = "img"), this._render_element(e, t);
        }),
        (e.prototype._render_link = function (e, t, i) {
          var n = i.attrs || {};
          i.attrs = n;
          var o = i.classes || [];
          i.classes = o;
          var s = t.override_text || t.text;
          return (
            (i.inner = this._render_text(e, s, t.text_token)),
            (n.href = t.url),
            o.push("node-link"),
            (i.ctx = new Ss(t.token).set_disabled(!0)),
            this._render_anchor(e, i)
          );
        }),
        (e.prototype._render_formatted_block = function (e, t, i) {
          var n = t.inner;
          return (
            isString(n) && (n = this._render_text(e, n, t.token)),
            this._render_span(e, {
              inner: n,
              ctx: new Ss(t.token),
              classes: [i],
            })
          );
        }),
        (e.prototype._get_matches = function (e, t) {
          if (!e.matches) return null;
          var i = t.start,
            n = t.end,
            o = (function e(t, i) {
              for (var n = 0, o = 0, s = []; n < t.length && o < i.length; ) {
                var r = t[n],
                  a = i[o];
                r[1] <= a[0]
                  ? n++
                  : a[1] <= r[0]
                  ? o++
                  : (s.push([Math.max(r[0], a[0]), Math.min(r[1], a[1])]),
                    r[1] < a[1] ? n++ : o++);
              }
              return s;
            })(e.matches, [[i, n]]);
          return 0 === o.length ? null : o;
        }),
        (e.prototype._render_text = function (e, t, i) {
          var n = this._get_matches(e, i);
          return n ? this._render_matched_text(e, i, n) : t;
        }),
        (e.prototype._render_matched_text = function (s, r, e) {
          var a = this,
            _ = r.start,
            c = [];
          return (
            zt(r.start, r.end, e, function (e, t, i) {
              var n = r.substring(t - _, i - _),
                o = [];
              e && o.push("search-match"),
                c.push(a._render_span(s, { inner: n.string, classes: o }));
            }),
            c
          );
        }),
        (e.prototype._render = function (i, t) {
          var n = this;
          if (t instanceof Qi)
            return this._render_formatted_block(i, t, "node-bold");
          if (t instanceof en)
            return this._render_formatted_block(i, t, "node-italics");
          if (t instanceof tn)
            return this._render_formatted_block(i, t, "node-inline-code");
          if (t instanceof nn) {
            var e = this._render_formatted_block(i, t, "node-multiline-code"),
              o = e.find("span");
            if (o) {
              var s = o.getText(),
                r = s.indexOf("\n");
              if (-1 !== r) {
                var a = s.substr(0, r).trim();
                a.match(/^[a-z]*$/) &&
                  ((s = s.substr(r + 1)),
                  o.setText(s),
                  a && o.addClass("language-" + a.trim()));
              }
              !(function e(t) {
                Li ||
                  ((Li = wi()),
                  vi(Ni + "libs/highlightjs/highlightjs.min.css"),
                  mi(Ni + "libs/highlightjs/highlightjs.min.js", Li)),
                  Li.push(function () {
                    t(window.hljs);
                  });
              })(function (e) {
                e.highlightBlock(o);
              });
              var _ = e.createEl("button", {
                cls: "node-multiline-code-copy-btn",
                text: "Copy",
              });
              Ds.set(_, s);
            }
            return e;
          }
          if (t instanceof on)
            return this._render_formatted_block(i, t, "node-strike-through");
          if (t instanceof sn)
            return this._render_formatted_block(i, t, "node-highlight");
          if (t instanceof pn)
            return (
              ((d = this._render_anchor(i, {
                inner: this._render_text(i, t.tag, t.token),
                classes: ["node-tag", "js-prevent-default"],
                attrs: { href: "#", title: "Filter " + t.tag },
                ctx: new Ss(t.token).set_disabled(!0),
              }))._block = t),
              d
            );
          if (t instanceof rn && (g = this._get_matches(i, t.token))) {
            var c = this._get_matches(i, t.text_token),
              l = this._get_matches(i, t.url_token);
            if (!c || (l && t.text !== t.url))
              return this._render_anchor(i, {
                inner: this._render_text(i, t.token.string, t.token),
                attrs: { title: t.text, href: t.url, target: "_blank" },
                ctx: new Ss(t.token).set_disabled(!0),
              });
          }
          if (t instanceof un) {
            var u = {
              inner: this._render_text(i, t.text, t.text_token),
              classes: ["node-inline-item", "node-inline-image"],
              attrs: { title: t.text, href: t.url, target: "_blank" },
              ctx: new Ss(t.token).set_disabled(!0),
            };
            return (
              this.render_options.inline_images &&
                ((u.inner = this._render_img(i, {
                  classes: ["node-displayed-image"],
                  attrs: { src: t.url },
                })),
                (u.classes = ["node-displayed-image-link"])),
              this._render_anchor(i, u)
            );
          }
          if (t instanceof an) {
            var h = ["node-link-internal", "js-prevent-default"];
            return (
              t.is_displayed && h.push("node-inline-item", "is-displayed"),
              t.has_zoom_node && h.push("has-zoomNode"),
              this._render_link(i, t, { classes: h })
            );
          }
          if (t instanceof _n) {
            h = [];
            return (
              t.is_upload && h.push("node-inline-item", "node-upload-link"),
              this._render_link(i, t, {
                classes: h,
                attrs: { target: "_blank" },
              })
            );
          }
          if (t instanceof fn) {
            if ((g = this._get_matches(i, t.token)))
              return this._render_matched_text(i, t.token, g);
            h = ["node-inline-item", "node-time"];
            t.recurrence && h.push("is-recurring"),
              t.startTime < Date.now() && h.push("is-overdue");
            var p = this.render_options.date_format;
            this.render_options.date_format_without_time &&
              /!\(\d{4}-\d{2}-\d{2}(\)|\s+\|)/.test(t.inner.text) &&
              (p = this.render_options.date_format_without_time);
            var d,
              f = t.format(this.render_options.use_24_hours, p);
            return (
              ((d = this._render_span(i, {
                inner: f,
                classes: h,
                attrs: { contenteditable: "true" },
                ctx: new Ss(t.token).set_disabled(!0),
              }))._block = t),
              d
            );
          }
          if (t instanceof Ji) {
            var g;
            if ((g = this._get_matches(i, t.token)))
              return this._render_matched_text(i, t.token, g);
            var m = this._render_span(i, {
                classes: ["node-latex"],
                attrs: { title: t.latex },
                ctx: new Ss(t.token).set_select_whole(!0),
              }),
              v = t.latex || "";
            return (
              (function e(t) {
                Ii ||
                  ((Ii = wi()),
                  vi(Ni + "libs/katex/katex.min.css"),
                  mi(Ni + "libs/katex/katex.min.js", Ii)),
                  Ii.push(function () {
                    t(window.katex);
                  });
              })(function (e) {
                try {
                  e.render(v, m, { throwOnError: !1 });
                } catch (e) {
                  console.error(e), m.setText(t.token.string);
                }
              }),
              m
            );
          }
          if (t instanceof Xi)
            return this._render_span(i, {
              inner: this._render_text(i, t.text, t.token),
              ctx: new Ss(t.token),
            });
          if (t instanceof Vi) {
            var y = [];
            return (
              each(t.items, function (e) {
                var t = n._render(i, e);
                t &&
                  (Array.isArray(t)
                    ? t.forEach(function (e) {
                        return y.push(e);
                      })
                    : y.push(t));
              }),
              y
            );
          }
          return null;
        }),
        e
      );
    })(),
    Ls = (function (t) {
      function n(e) {
        return t.call(this, "UrlManager", e, null) || this;
      }
      return (
        nt(n, t),
        (n.prototype._init_dependencies = function () {
          (this.userspace_ui = this.app.userspace.ui),
            (this.userspace_view = this.app.userspace.view),
            (this.userspace_controller = this.app.userspace.controller),
            (this.userspace = this.app.userspace.get_userspace());
        }),
        (n.prototype._init_fields = function () {
          (this.is_demo = this.app.config.is_demo_view()),
            (this.working = !1),
            (this.state = {});
        }),
        (n.prototype._load = function () {
          this.state = n.parse_dynalist_url(window.location.href);
        }),
        (n.prototype.get_is_working = function () {
          return this.working;
        }),
        (n.prototype.get_state = function () {
          return this.state;
        }),
        (n.prototype.is_global_search = function () {
          return !this.state.document_server_id && this.state.search_query;
        }),
        (n.prototype.is_flat_search = function () {
          return this.state.flat && this.state.search_query;
        }),
        (n.prototype.parse_url_and_apply_state = function (e, t) {
          var i = n.parse_dynalist_url(e);
          this.apply_state(i, t);
        }),
        (n.prototype.update_state = function (e, t) {
          var i = this.get_state();
          (i = n.update_state(i, e)), this.apply_state(i, t);
        }),
        (n.prototype.update_window_title = function (e) {
          var t = e.document_server_id,
            i = e.zoom_node_id,
            n = e.search_query,
            o = e.flat,
            s = this.userspace.find_server_file(t),
            r = ["Dynalist"];
          if (s) {
            var a = s.get_node_collection().find_node(i);
            r.push(s.get_title()), a && r.push(a.get_clean_title());
          } else
            n &&
              (o
                ? r.push('Flat search results for "' + n + '"')
                : r.push('Search results for "' + n + '"'));
          var _ = r.reverse().join(" - ");
          (function e() {
            return DYNALIST && "dev" === DYNALIST.DEPLOY_BUILD;
          })() && (_ = "[DEV] " + _),
            (document.title = _),
            this.app.env.is("desktop") && this.app.env.set_title(_);
        }),
        (n.prototype.apply_state = function (e, t) {
          if (!this.working) {
            var i = {
              replace: !(this.working = !0),
              animate: !0,
              force_push: !1,
            };
            t && (i = Object.assign(i, t));
            try {
              (e = this._execute_apply(e, i.animate)),
                (this.state = e),
                this._update_url(e, i.replace, i.force_push);
            } finally {
              this.working = !1;
            }
          }
        }),
        (n.prototype._execute_apply = function (e, t) {
          var i = e.success_code,
            n = e.error_code,
            o = e.document_server_id,
            s = e.zoom_node_id,
            r = e.focus_node_id,
            a = e.search_query,
            _ = e.mindmap,
            c = e.flat,
            l = e.sort,
            u = null,
            h = null,
            p = null,
            d = null;
          (o &&
            ((u = this.userspace.find_server_file(o)) ||
              (u = this.userspace.find_file(o))),
          u && !u.is_attached() && ((u = null), (o = "")),
          u)
            ? ((h = (b = u.get_node_collection()).get_root()),
              s && (p = b.find_node(s)),
              p === h && (s = ""),
              r && (d = b.find_node(r)))
            : (s = "");
          if (
            ((r = ""),
            i && this.userspace_ui.show_popup_success(i),
            n && this.userspace_ui.show_popup_error(n),
            !o && a)
          )
            this.userspace_ui.global_search.open(a);
          else {
            this.userspace_ui.global_search.close();
            var f = !1;
            if (
              (this.app.with_current_app_document(function (e) {
                e.document !== u && (e.ui.before_navigate(), (f = !0));
              }),
              this.app.switch_document(u),
              u)
            ) {
              var g = this.app.get_current_app_document(),
                m = g.view,
                v = g.ui,
                y = g.controller,
                b = u.get_node_collection();
              _
                ? v.mindmap_ui.render(p)
                : (v.mindmap_ui.exit_mindmap_view(),
                  p
                    ? m.apply_zoom_node(p, t)
                    : y.document_remote_loaded &&
                      (m.apply_zoom_node(b.get_root(), t), (s = "")),
                  f && v.after_navigate(),
                  d && v.apply_focus_node(d),
                  c
                    ? v.flat_search.open(a || "", l)
                    : (v.flat_search.close(), v.search_in_document(a)));
            }
          }
          return {
            document_server_id: o,
            zoom_node_id: s,
            focus_node_id: r,
            search_query: a,
            mindmap: _,
            flat: c,
            sort: l,
          };
        }),
        (n.prototype._update_url = function (e, t, i) {
          void 0 === t && (t = !1),
            void 0 === i && (i = !1),
            this.update_window_title(e);
          var n = this.create_url_from_state(e),
            o = document.title;
          history &&
            history.pushState &&
            (n !== this._get_current_path() || i) &&
            (t ? history.replaceState({}, o, n) : history.pushState({}, o, n));
        }),
        (n.prototype.switch_document = function (e, t, i) {
          var n = e ? e.get_server_id() : "";
          this.apply_state({ document_server_id: n, zoom_node_id: t }, i);
        }),
        (n.prototype.zoom_node = function (e) {
          var t = e ? e.get_id() : "",
            i = this.state.document_server_id;
          this.apply_state({ document_server_id: i, zoom_node_id: t });
        }),
        (n.prototype.set_search_query = function (e) {
          var t = this.state,
            i = t.document_server_id,
            n = t.zoom_node_id,
            o = t.search_query,
            s = t.flat,
            r = t.sort,
            a = bool(e) === bool(o);
          this.apply_state(
            {
              document_server_id: i,
              zoom_node_id: n,
              search_query: e,
              flat: s,
              sort: r,
            },
            { replace: a },
          );
        }),
        (n.prototype.set_flat_search_sort = function (e) {
          var t = this.state,
            i = t.document_server_id,
            n = t.search_query,
            o = t.flat;
          this.apply_state({
            document_server_id: i,
            search_query: n,
            flat: o,
            sort: e,
          });
        }),
        (n.prototype.set_global_search_query = function (e) {
          this.apply_state({ search_query: e });
        }),
        (n.prototype.create_absolute_url_from_state = function (e) {
          return this.create_url_from_state(e, !0);
        }),
        (n.prototype.create_url_from_state = function (e, t) {
          var i = !t && DYNALIST.IS_STANDALONE_MODE;
          return n.create_url_from_state(e, i, t, this.is_demo);
        }),
        (n.prototype.push_current_state = function () {
          this.apply_state(this.state, { animate: !1, force_push: !0 });
        }),
        (n.prototype._get_current_path = function () {
          return window.location.pathname + window.location.hash;
        }),
        (n.create_url_from_state = function (e, t, i, n) {
          var o = e.document_server_id,
            s = e.zoom_node_id,
            r = e.focus_node_id,
            a = e.search_query,
            _ = e.mindmap,
            c = e.flat,
            l = e.sort,
            u = "";
          if (t) {
            var h = {};
            o && (h.d = o), (u += "?" + He.encode_url_query(h));
          } else {
            if (o) u += (n ? f : "/d/") + encodeURIComponent(o);
            else u += n ? f : "/";
          }
          if (s || r || a || _ || c || l) {
            var p = { mindmap: _, flat: c, z: s, f: r, q: a, sort: l };
            u += "#" + He.encode_url_query(p);
          }
          return i ? d + u : u;
        }),
        (n.parse_dynalist_url = function (t) {
          var e,
            i = "",
            n = "",
            o = "",
            s = "",
            r = "",
            a = null,
            _ = !1,
            c = !1,
            l = "",
            u = "",
            h = {},
            p = {};
          try {
            (u = (e = He.decode_url(t)).path), (h = e.query), (p = e.hash);
          } catch (e) {
            console.error("Failed to parse URL " + t);
          }
          if (
            DYNALIST.IS_STANDALONE_MODE &&
            (u.startsWith("app://") ||
              u.startsWith("http://localhost") ||
              u.startsWith("ionic://localhost"))
          );
          else {
            (u.startsWith("http://") || u.startsWith("https://")) &&
              (u = u.replace(/^https?:\/\//, ""));
            for (
              var d = (u = u.startsWith(g)
                  ? u.substr(g.length)
                  : u.substr(u.indexOf("/"))).split("/"),
                f = ["", "d", "demo", "index.html"];
              d.length && f.contains(d[0]);

            )
              d.shift();
            1 <= d.length && d[0] && (i = d[0]);
          }
          return (
            each(h, function (e, t) {
              "success" === t
                ? (s = e)
                : "error" === t
                ? (r = e)
                : "d" === t && (i = e);
            }),
            each(p, function (e, t) {
              "z" === t
                ? (n = e)
                : "f" === t
                ? (o = e)
                : "q" === t
                ? (a = e)
                : "mindmap" === t
                ? (_ = !0)
                : "flat" === t
                ? (c = !0)
                : "sort" === t && (l = e);
            }),
            {
              success_code: s,
              error_code: r,
              document_server_id: i,
              zoom_node_id: n,
              focus_node_id: o,
              search_query: a,
              mindmap: _,
              flat: c,
              sort: l,
            }
          );
        }),
        (n.update_state = function (e, t) {
          return Object.assign({}, e, t);
        }),
        n
      );
    })(To),
    Ms = (function (n) {
      function i(e, t, i) {
        return n.call(this, e, t, i) || this;
      }
      return (
        nt(i, n),
        (i.prototype._init_dependencies = function () {}),
        (i.prototype._init_fields = function () {
          (this.tags = {}), (this.is_initialized = !1);
        }),
        (i.prototype._initialize = function () {}),
        (i.prototype.initialize = function () {
          this.is_initialized ||
            ((this.is_initialized = !0), this._initialize());
        }),
        (i.prototype.get_tags = function () {
          return this.tags;
        }),
        (i.mergeCase = function (o) {
          var e = Object.keys(o),
            s = {};
          Array.each(e, function (e) {
            var t = e.toLowerCase(),
              i = o[e];
            if (t in s) {
              var n = s[t];
              (n.count += i), i > n.max && ((n.max = i), (n.tag = e));
            } else s[t] = { tag: e, count: i, max: i };
          });
          var t = {};
          return (
            Object.each(s, function (e) {
              t[e.tag] = e.count;
            }),
            t
          );
        }),
        (i.prototype.get_suggestions = function (e) {
          this.is_initialized || this.initialize();
          var n = [],
            o = e.toLowerCase(),
            t = this.tags;
          return (
            (t = i.mergeCase(t)),
            each(t, function (e, t) {
              var i = t.toLowerCase();
              (i === o && 1 === e) ||
                (i.startsWith(o) && n.push({ content: t, count: e }));
            }),
            n.sort(function (e, t) {
              return t.count - e.count;
            }),
            n.map(function (e) {
              return e.content;
            })
          );
        }),
        (i.prototype._combine_tag_maps = function (n, e, o) {
          void 0 === o && (o = !1),
            each(e, function (e, t) {
              var i = n[t] || 0;
              0 !== (i += o ? -e : e) ? (n[t] = i) : delete n[t];
            });
        }),
        (i.prototype.get_is_initialized = function () {
          return this.is_initialized;
        }),
        i
      );
    })(To),
    Rs = (function (n) {
      function e(e, t) {
        var i = n.call(this, "DocumentTagCounter", e, t) || this;
        return (
          (i.node_available_change_events = i.submodule(new Eo())),
          (i.request_recalculate = i.debounce(
            i.initialize_tag_map.bind(i),
            12e4,
          )),
          i
        );
      }
      return (
        nt(e, n),
        (e.prototype._init_before = function () {
          (this.userspace = this.app.userspace.get_userspace()),
            (this.node_change_events = new Eo()),
            (this.node_collection =
              this.app_document.document.get_node_collection()),
            (this.userspace_tag_counter = this.app.userspace.view.tag_counter);
        }),
        (e.prototype._init_after = function () {
          this.node_available_change_events.register_event_on_off(
            this.node_collection,
            "available_change",
            this.available_changed,
            this,
          );
        }),
        (e.prototype._pre_unload = function () {
          this.is_initialized &&
            this.userspace.trigger("document_tag_counter_update", this.tags);
        }),
        (e.prototype._initialize = function () {
          this.start_listening_for_changes(), this.initialize_tag_map();
        }),
        (e.prototype.available_changed = function () {
          this.app_document.controller.document_remote_loaded &&
            this.userspace_tag_counter.get_is_initialized() &&
            this.initialize();
        }),
        (e.prototype.node_content_changed = function (e, t) {
          this._update_tag_map_with_diff(
            t.old_content_parse_tree || Hn.parse_text(t.old_content),
            e.get_content_parse_tree(),
          );
        }),
        (e.prototype.node_note_changed = function (e, t) {
          this._update_tag_map_with_diff(
            t.old_note_parse_tree || Hn.parse_text(t.old_note),
            e.get_note_parse_tree(),
          );
        }),
        (e.prototype.request_initialize = function () {
          this.app_document.controller.document_remote_loaded &&
            this.initialize();
        }),
        (e.prototype._update_tag_map_with_diff = function (e, t) {
          var i = this.count_tags(t),
            n = this.count_tags(e);
          this._combine_tag_maps(i, n, !0),
            Object.isEmpty(i) ||
              (this._combine_tag_maps(this.tags, i),
              this.userspace.trigger("document_tag_counter_update", null, i));
        }),
        (e.prototype.start_listening_for_changes = function () {
          var e = this.node_change_events.make_context_on_off(
            this.node_collection,
          );
          this.node_change_events.register_with_context_array(e, [
            ["node_content_change", this.node_content_changed, this],
            ["node_note_change", this.node_note_changed, this],
            ["attach", this.request_recalculate, this],
            ["detach", this.request_recalculate, this],
          ]),
            this.node_change_events.hook_events();
        }),
        (e.prototype.initialize_tag_map = function () {
          var e = this.tags;
          (this.tags = {}),
            this.node_collection.traverse_tree_bfs(
              null,
              this._count_tag_in_node.bind(this),
            ),
            this.userspace.trigger("document_tag_counter_update", e, this.tags);
        }),
        (e.prototype._count_tag_in_node = function (e) {
          var t = this.count_tags(e.get_content_parse_tree()),
            i = this.count_tags(e.get_note_parse_tree());
          this._combine_tag_maps(this.tags, t),
            this._combine_tag_maps(this.tags, i);
        }),
        (e.prototype.count_tags = function (e) {
          var i = {};
          return (
            e &&
              e.traverse(function (e) {
                if (e instanceof pn) {
                  var t = e.get_tag();
                  i[t] = (i[t] || 0) + 1;
                }
              }),
            i
          );
        }),
        e
      );
    })(Ms),
    Ps = {},
    Fs = {},
    Hs = {},
    zs = (function () {
      function e(e) {
        this.default_value = e;
      }
      return (
        (e.prototype.get_default = function () {
          return this.default_value;
        }),
        (e.prototype.is_allowed = function (e) {
          return !0;
        }),
        e
      );
    })(),
    Bs = (function (n) {
      function e(e, t) {
        var i = n.call(this, t) || this;
        return (i.allowed_values = e), i;
      }
      return (
        nt(e, n),
        (e.prototype.is_allowed = function (e) {
          return this.allowed_values.contains(e);
        }),
        e
      );
    })(zs),
    Us = (function (o) {
      function e(e, t, i) {
        var n = o.call(this, [e, t], i) || this;
        return (n.true_value = e), (n.false_value = t), n;
      }
      return (
        nt(e, o),
        (e.prototype.get_boolean_value = function (e) {
          return e === this.true_value;
        }),
        (e.prototype.get_value_from_boolean = function (e) {
          return e ? this.true_value : this.false_value;
        }),
        e
      );
    })(Bs);
  function js(e, t, i) {
    return new Us(e, t, i ? e : t);
  }
  function Gs(e) {
    return js(Fs.ON, Fs.OFF, e);
  }
  function qs(e) {
    return js(Fs.SHOW, Fs.HIDE, e);
  }
  (Fs.ON = "on"),
    (Fs.OFF = "off"),
    (Fs.SHOW = "show"),
    (Fs.HIDE = "hide"),
    (Fs.YES = "yes"),
    (Fs.NO = "no"),
    (Ps.ANY = "any"),
    (Ps.THEME = "appearance.theme"),
    (Hs[Ps.THEME] = new Bs(
      [
        "autodetect",
        "default",
        "dark",
        "sepia",
        "scifi",
        "sakura",
        "christmas",
        "darkgold",
      ],
      "autodetect",
    )),
    (Ps.FONT = "appearance.font"),
    (Hs[Ps.FONT] = new Bs(
      [
        "arial",
        "helvetica",
        "roboto_light",
        "lora",
        "calibri",
        "calibri_light",
        "whitney",
        "whitney_light",
        "consolas",
        "system",
        "inter",
      ],
      "whitney",
    )),
    (Ps.EA_FONT = "appearance.eastern_asian_font"),
    (Hs[Ps.EA_FONT] = new Bs(
      [
        "yahei",
        "kaiti",
        "meiryo",
        "ms_pmincho",
        "hira_kaku",
        "hira_mincho",
        "malgun",
        "batang",
      ],
      "yahei",
    )),
    (Ps.DYSLEXIA_FONT = "dyslexia_font"),
    (Fs.DYSLEXIA_FONT = { OPEN_DYSLEXIC: "open_dyslexic", NONE: "none" }),
    (Hs[Ps.DYSLEXIA_FONT] = new Bs(
      [Fs.DYSLEXIA_FONT.OPEN_DYSLEXIC, Fs.DYSLEXIA_FONT.NONE],
      Fs.DYSLEXIA_FONT.NONE,
    )),
    (Ps.FONT_SIZE = "font_size"),
    (Fs.FONT_SIZE = { SMALL: "small", MEDIUM: "medium", LARGE: "large" }),
    (Hs[Ps.FONT_SIZE] = new Bs(
      [Fs.FONT_SIZE.SMALL, Fs.FONT_SIZE.MEDIUM, Fs.FONT_SIZE.LARGE],
      Fs.FONT_SIZE.MEDIUM,
    )),
    (Ps.DISPLAY_DENSITY = "display_density"),
    (Fs.DISPLAY_DENSITY = {
      COMPACT: "compact",
      COZY: "cozy",
      COMFORTABLE: "comfortable",
    }),
    (Hs[Ps.DISPLAY_DENSITY] = new Bs(
      [
        Fs.DISPLAY_DENSITY.COMPACT,
        Fs.DISPLAY_DENSITY.COZY,
        Fs.DISPLAY_DENSITY.COMFORTABLE,
      ],
      Fs.DISPLAY_DENSITY.COZY,
    )),
    (Ps.SHOW_HELP = "ui.shortcut_help"),
    (Hs[Ps.SHOW_HELP] = qs(!0)),
    (Ps.DOC_BORDER = "doc_border"),
    (Hs[Ps.DOC_BORDER] = qs(!1)),
    (Ps.SHOW_CHECKED = "show_checked"),
    (Hs[Ps.SHOW_CHECKED] = qs(!0)),
    (Ps.NOTE_DISPLAY = "show_notes"),
    (Fs.NOTE_DISPLAY = { SHOW: "show", TEASER: "teaser", HIDE: "hide" }),
    (Hs[Ps.NOTE_DISPLAY] = new Bs(
      [Fs.NOTE_DISPLAY.SHOW, Fs.NOTE_DISPLAY.TEASER, Fs.NOTE_DISPLAY.HIDE],
      Fs.NOTE_DISPLAY.SHOW,
    )),
    (Ps.TAG_BACKGROUND = "tag_bg"),
    (Hs[Ps.TAG_BACKGROUND] = Gs(!1)),
    (Ps.CENTER_DOCUMENT = "center_doc"),
    (Hs[Ps.CENTER_DOCUMENT] = Gs(!0)),
    (Ps.EXPORT_VISIBLE_ONLY = "export_visible_only"),
    (Hs[Ps.EXPORT_VISIBLE_ONLY] = Gs(!1)),
    (Ps.TIME_FORMAT = "time_format"),
    (Fs.TIME_FORMAT = { FORMAT_12H: "12h", FORMAT_24H: "24h" }),
    (Hs[Ps.TIME_FORMAT] = new Bs(
      [Fs.TIME_FORMAT.FORMAT_12H, Fs.TIME_FORMAT.FORMAT_24H],
      Fs.TIME_FORMAT.FORMAT_12H,
    )),
    (Ps.FIRST_DAY_OF_WEEK = "start_day"),
    (Fs.FIRST_DAY_OF_WEEK = {
      SATURDAY: "saturday",
      MONDAY: "monday",
      SUNDAY: "sunday",
    }),
    (Hs[Ps.FIRST_DAY_OF_WEEK] = new Bs(
      [
        Fs.FIRST_DAY_OF_WEEK.SATURDAY,
        Fs.FIRST_DAY_OF_WEEK.MONDAY,
        Fs.FIRST_DAY_OF_WEEK.SUNDAY,
      ],
      Fs.FIRST_DAY_OF_WEEK.SUNDAY,
    )),
    (Ps.SHORTCUT_OVERRIDE = "shortcut_override"),
    (Hs[Ps.SHORTCUT_OVERRIDE] = new zs("")),
    (Ps.FINISHED_ONBOARDING = "finished_onboarding"),
    (Hs[Ps.FINISHED_ONBOARDING] = (function e(t) {
      return js(Fs.YES, Fs.NO, t);
    })(!0)),
    (Ps.USE_BULLET_TO_ZOOM = "use_bullet_to_zoom"),
    (Hs[Ps.USE_BULLET_TO_ZOOM] = Gs(!1)),
    (Ps.HIGHLIGHT_OVERDUE = "highlight_overdue"),
    (Hs[Ps.HIGHLIGHT_OVERDUE] = Gs(!1)),
    (Ps.SPELLCHECK = "editor.spellcheck"),
    (Hs[Ps.SPELLCHECK] = Gs(!1)),
    (Ps.CURRENT_NODE_HIGHLIGHT = "ui.current_highlight"),
    (Hs[Ps.CURRENT_NODE_HIGHLIGHT] = Gs(!1));
  var $s = [];
  each(r, function (e) {
    $s.push(e);
  }),
    (Ps.KEYBOARD_LAYOUT = "keyboard_layout"),
    (Hs[Ps.KEYBOARD_LAYOUT] = new Bs($s, r.ENGLISH)),
    (Ps.UPLOAD_PERMISSION = "upload_permission"),
    (Hs[Ps.UPLOAD_PERMISSION] = js("public", "private", !1)),
    (Ps.SHOW_TIMEZONE_IN_DATE = "show_timezone"),
    (Hs[Ps.SHOW_TIMEZONE_IN_DATE] = Gs(!1)),
    (Ps.DISPLAY_IMAGES_INLINE = "display_images_inline"),
    (Hs[Ps.DISPLAY_IMAGES_INLINE] = Gs(!1)),
    (Ps.MOVE_ITEM_SEND_TO_POSITION = "move_item_sent_to_position"),
    (Hs[Ps.MOVE_ITEM_SEND_TO_POSITION] = new Bs(["bottom", "top"], "bottom")),
    (Ps.GCAL_SYNC_CALENDAR_ID = "sync_calendar_id"),
    (Hs[Ps.GCAL_SYNC_CALENDAR_ID] = new zs("")),
    (Ps.GCAL_SYNC_CALENDAR_NAME = "sync_calendar_name"),
    (Hs[Ps.GCAL_SYNC_CALENDAR_NAME] = new zs("")),
    (Ps.ONLY_USE_WIFI_TO_SYNC = "only_use_wifi_to_sync"),
    (Hs[Ps.ONLY_USE_WIFI_TO_SYNC] = Gs(!1)),
    (Ps.CUSTOM_DATE_DISPLAY_FORMAT = "custom_date_display_format"),
    (Hs[Ps.CUSTOM_DATE_DISPLAY_FORMAT] = new zs("")),
    (Ps.CUSTOM_DATE_DISPLAY_FORMAT_NO_TIME =
      "custom_date_display_format_no_time"),
    (Hs[Ps.CUSTOM_DATE_DISPLAY_FORMAT_NO_TIME] = new zs("")),
    (Ps.GLOBAL_TAG_AUTOCOMPLETE = "global_tag_autocomplete"),
    (Hs[Ps.GLOBAL_TAG_AUTOCOMPLETE] = Gs(!1)),
    (Ps.UNINDENT_IN_PLACE = "unindent_in_place"),
    (Hs[Ps.UNINDENT_IN_PLACE] = Gs(!1)),
    (Ps.AUTO_FOCUS_FIRST_ITEM = "auto_focus_first_item"),
    (Hs[Ps.AUTO_FOCUS_FIRST_ITEM] = Gs(!1)),
    (Ps.INBOX_LOCATION = "inbox_location"),
    (Hs[Ps.INBOX_LOCATION] = new zs("")),
    (Ps.INBOX_MOVE_POSITION = "inbox_move_position"),
    (Hs[Ps.INBOX_MOVE_POSITION] = new Bs(["bottom", "top"], "bottom")),
    (Ps.SHOW_SEARCH_TIPs = "show_search_tips"),
    (Hs[Ps.SHOW_SEARCH_TIPs] = Gs(!0)),
    (Ps.USE_TRUE_BLACK = "use_true_black"),
    (Hs[Ps.USE_TRUE_BLACK] = Gs(!1)),
    (Ps.SHOW_VERSION_HISTORY_AFTER = "show_version_history_after"),
    (Hs[Ps.SHOW_VERSION_HISTORY_AFTER] = Gs(!0)),
    (Ps.SHOW_CLEANUP_NEWLINES_OPTION = "show_cleanup_newlines_option"),
    (Hs[Ps.SHOW_CLEANUP_NEWLINES_OPTION] = Gs(!1)),
    (Ps.CUSTOM_CSS = "custom_css"),
    (Hs[Ps.CUSTOM_CSS] = new zs("")),
    (Ps.WORKFLOWY_SHORTCUTS = "workflowy_shortcuts"),
    (Hs[Ps.WORKFLOWY_SHORTCUTS] = Gs(!1)),
    (Ps.SPELLCHECKER_LANGUAGE = "spellchecker_language"),
    (Hs[Ps.SPELLCHECKER_LANGUAGE] = new zs("")),
    (Ps.RECURRENCE_CHECKED_BEHAVIOR = "recurrence_check_behavior"),
    (Hs[Ps.RECURRENCE_CHECKED_BEHAVIOR] = new Bs(
      ["new_instance", "update_existing"],
      "new_instance",
    )),
    (Ps.MOBILE_TOOLBAR_OPTIONS_ORDER = "mobile_toolbar_options_order"),
    (Hs[Ps.MOBILE_TOOLBAR_OPTIONS_ORDER] = new zs("")),
    (Ps.EMAIL_STRIP_FOOTER = "email_strip_footer"),
    (Hs[Ps.EMAIL_STRIP_FOOTER] = new Bs(["on", "off", "only_nonempty"], "on")),
    (Ps.RIGHT_TO_LEFT = "right_to_left"),
    (Hs[Ps.RIGHT_TO_LEFT] = Gs(!1)),
    (Ps.WORD_COUNT = "word_count"),
    (Hs[Ps.WORD_COUNT] = Gs(!1)),
    (Ps.SHOW_BACKLINKS = "show_backlinks"),
    (Hs[Ps.SHOW_BACKLINKS] = Gs(!1));
  var Ws = (function () {
      function e() {
        (this.preferences = {}),
          (this.events = new vt(this)),
          (this.first_set = !0);
      }
      return (
        (e.prototype.set = function (e, t) {
          var i = Hs[e];
          i &&
            (i.is_allowed(t) || (t = i.get_default()),
            this.preferences[e] !== t &&
              (t !== i.get_default() || this.preferences.hasOwnProperty(e)) &&
              ((this.preferences[e] = t),
              this.events.trigger(e, t),
              this.events.trigger(Ps.ANY, e, t, !1)));
        }),
        (e.prototype.set_boolean = function (e, t) {
          var i = Hs[e];
          if (!(i instanceof Us))
            throw new Error(e + " is not a boolean preference");
          var n = i.get_value_from_boolean(t);
          this.set(e, n);
        }),
        (e.prototype.toggle_boolean = function (e) {
          var t = Hs[e];
          if (!(t instanceof Us))
            throw new Error(e + " is not a boolean preference");
          var i = t.get_boolean_value(this.get(e));
          this.set(e, t.get_value_from_boolean(!i));
        }),
        (e.prototype.get = function (e) {
          var t = Hs[e];
          if (this.preferences.hasOwnProperty(e)) {
            var i = this.preferences[e];
            if (t.is_allowed(i)) return i;
          }
          return t.get_default();
        }),
        (e.prototype.get_boolean = function (e) {
          var t = Hs[e];
          if (!(t instanceof Us))
            throw new Error(e + " is not a boolean preference");
          var i = this.get(e);
          return t.get_boolean_value(i);
        }),
        (e.prototype.is_boolean = function (e) {
          return Hs[e] instanceof Us;
        }),
        (e.prototype.set_all = function (e) {
          if (this.first_set) return (this.first_set = !1), this.init_all(e);
          this._set_all(e);
        }),
        (e.prototype.init_all = function (e) {
          var t = this;
          for (var i in (this.events.disable_for(function () {
            return t._set_all(e);
          }),
          Hs))
            if (Hs.hasOwnProperty(i)) {
              var n = this.get(i);
              this.events.trigger(i, n), this.events.trigger(Ps.ANY, i, n, !0);
            }
        }),
        (e.prototype._set_all = function (e) {
          for (var t in (e = e || {}))
            if (e.hasOwnProperty(t)) {
              var i = e[t];
              this.set(t, i);
            }
        }),
        (e.prototype.get_all = function () {
          var e = {};
          for (var t in this.preferences)
            this.preferences.hasOwnProperty(t) && (e[t] = this.preferences[t]);
          return e;
        }),
        e
      );
    })(),
    Ys =
      -1 !== navigator.appVersion.indexOf("Win")
        ? "Windows"
        : -1 !== navigator.appVersion.indexOf("Mac")
        ? "MacOS"
        : -1 !== navigator.appVersion.indexOf("X11")
        ? "Linux"
        : -1 !== navigator.appVersion.indexOf("Linux")
        ? "Linux"
        : "Unknown OS";
  var Ks = (function e() {
      return navigator.userAgent || navigator.vendor || window.opera;
    })(),
    Vs =
      /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(
        Ks,
      ) ||
      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(
        Ks.substr(0, 4),
      ),
    Xs =
      ("MacIntel" === navigator.platform &&
        navigator.maxTouchPoints &&
        2 < navigator.maxTouchPoints) ||
      (/iPad|iPhone|iPod/.test(Ks) && !window.MSStream),
    Zs =
      (document.documentElement.style,
      -1 < Ks.toLowerCase().indexOf("firefox")),
    Js = -1 < Ks.toLowerCase().indexOf("edge"),
    Qs = -1 !== Ks.indexOf("Safari") && -1 === Ks.indexOf("Chrome");
  (function e() {
    return "ontouchstart" in window || navigator.maxTouchPoints;
  })();
  var er = "Windows" == Ys ? "\r\n" : "\n",
    tr = (function () {
      try {
        return (
          localStorage.setItem("foo", "bar"), localStorage.removeItem("foo"), !0
        );
      } catch (e) {
        return !1;
      }
    })(),
    ir = new ((function () {
      function e(e) {
        if (((this.key = e), (this.data = null), tr))
          try {
            this.data = JSON.parse(localStorage.getItem(this.key));
          } catch (e) {
            console.error(e);
          }
        null === this.data && (this.data = {});
      }
      return (
        (e.prototype.get_object = function () {
          return this.data;
        }),
        (e.prototype.save_object = function () {
          if (tr)
            try {
              localStorage.setItem(this.key, JSON.stringify(this.data));
            } catch (e) {
              console.error(e);
            }
        }),
        (e.prototype.get_property = function (e, t) {
          var i = this.data[e];
          return void 0 === i ? t : i;
        }),
        (e.prototype.set_property = function (e, t) {
          (this.data[e] = t), this.save_object();
        }),
        e
      );
    })())("dynalist"),
    nr = (function () {
      function e(e) {
        (this.localstorage_object = e), (this.key = "document-zoom-levels");
      }
      return (
        (e.prototype.get_zoom_level_for_doc = function (e) {
          return this.localstorage_object.get_property(this.key, {})[e];
        }),
        (e.prototype.set_zoom_level_for_doc = function (e, t) {
          var i = this.localstorage_object.get_property(this.key, {});
          (i[e] = t), this.localstorage_object.set_property(this.key, i);
        }),
        (e.prototype.delete_zoom_level_for_doc = function (e) {
          var t = this.localstorage_object.get_property(this.key, {});
          delete t[e], this.localstorage_object.set_property(this.key, t);
        }),
        e
      );
    })(),
    or = (function () {
      function e(e) {
        (this.localstorage_object = e), (this.key = "userspace-file-nav-width");
      }
      return (
        (e.prototype.get_width = function () {
          return this.localstorage_object.get_property(this.key, w);
        }),
        (e.prototype.set_width = function (e) {
          this.localstorage_object.set_property(this.key, e);
        }),
        e
      );
    })(),
    sr = (function () {
      function e(e) {
        (this.localstorage_object = e), (this.key = "file-pane-expanded-state");
      }
      return (
        (e.prototype.is_expanded = function () {
          return this.localstorage_object.get_property(this.key, !0);
        }),
        (e.prototype.set_expanded_state = function (e) {
          this.localstorage_object.set_property(this.key, e);
        }),
        e
      );
    })(),
    rr = (function () {
      function e(e) {
        (this.localstorage_object = e), (this.key = "active-pane");
      }
      return (
        (e.prototype.set_pane_name = function (e) {
          this.localstorage_object.set_property(this.key, e);
        }),
        (e.prototype.get_pane_name = function () {
          return this.localstorage_object.get_property(this.key, "file");
        }),
        e
      );
    })(),
    ar = new nr(ir),
    _r = new sr(ir),
    cr = new or(ir),
    lr = new rr(ir),
    ur = function (e, t) {
      return e.localeCompare(t);
    };
  try {
    var hr = new Intl.Collator(void 0, {
      usage: "sort",
      sensitivity: "base",
      numeric: !0,
      ignorePunctuation: !0,
    });
    ur = hr.compare;
  } catch (e) {
    console.error(e);
  }
  var pr = (function () {
      function o() {}
      return (
        (o.alphabetical = function (e, t) {
          var i = e.get_meta_object(),
            n = t.get_meta_object(),
            o = i.get_content(),
            s = n.get_content();
          return o !== s ? ur(o, s) : 0;
        }),
        (o.alphabetical_reverse = function (e, t) {
          return -o.alphabetical(e, t);
        }),
        (o.checked = function (e, t) {
          var i = e.get_meta_object(),
            n = t.get_meta_object(),
            o = i.is_checked();
          return o !== n.is_checked() ? (o ? 1 : -1) : 0;
        }),
        (o.checked_reverse = function (e, t) {
          return -o.checked(e, t);
        }),
        (o.edited = function (e, t) {
          var i = e.get_edited_ts(),
            n = t.get_edited_ts();
          return i !== n ? i - n : 0;
        }),
        (o.edited_reverse = function (e, t) {
          return -o.edited(e, t);
        }),
        (o.created = function (e, t) {
          var i = e.get_created_ts(),
            n = t.get_created_ts();
          return i !== n ? i - n : 0;
        }),
        (o.created_reverse = function (e, t) {
          return -o.created(e, t);
        }),
        (o.date = function (e, t) {
          var i = o.get_first_date_timestamp(e, !1),
            n = o.get_first_date_timestamp(t, !1);
          return i !== n ? i - n : 0;
        }),
        (o.date_reverse = function (e, t) {
          var i = o.get_first_date_timestamp(e, !0),
            n = o.get_first_date_timestamp(t, !0);
          return i !== n ? n - i : 0;
        }),
        (o.current_reverse = function (e, t) {
          var i = e.get_index(),
            n = t.get_index();
          return i !== n ? n - i : 0;
        }),
        (o.get_first_date_timestamp = function (e, t) {
          var i = 0,
            n = function (e) {
              0 === i && e instanceof fn && (i = e.startTime);
            };
          return (
            e.get_content_parse_tree().traverse(n),
            e.get_note_parse_tree().traverse(n),
            0 !== i ? i : t ? 0 : Number.MAX_VALUE
          );
        }),
        o
      );
    })(),
    dr = (function (n) {
      function e(e, t) {
        var i = n.call(this, "DocumentView", e, t) || this;
        return (
          (i.events = i.submodule(new Eo())),
          (i.tag_counter = i.submodule(new Rs(e, t))),
          i
        );
      }
      return (
        nt(e, n),
        (e.prototype._init_dependencies = function () {
          (this.document = this.app_document.document),
            (this.node_collection = this.document.get_node_collection()),
            (this.ui = null),
            (this.controller = this.app_document.controller),
            (this.userspace_view = this.app.userspace.view),
            (this.history = this.controller.get_history());
        }),
        (e.prototype._init_fields = function () {
          (this.loaded_callback = []),
            (this.last_edit_selection = null),
            (this.document_view_states = {}),
            (this.convertDocumentInfo = {
              document: null,
              node: null,
              index: -1,
            });
        }),
        (e.prototype._init_after = function () {
          this.events.register_event_on_off(
            this.node_collection,
            "available_change",
            this.available_change,
            this,
          );
        }),
        (e.prototype.current_selection = function () {
          return this.ui ? this.ui.selection().get() : qo;
        }),
        (e.prototype.load_ui = function (e) {
          this.ui = e;
        }),
        (e.prototype.unload_ui = function () {
          this.ui = null;
        }),
        (e.prototype.set_loaded_callback = function (e) {
          null === this.loaded_callback ? e() : this.loaded_callback.push(e),
            this.available_change();
        }),
        (e.prototype.available_change = function () {
          var t = this;
          this.controller.document_remote_loaded &&
            this.set_timeout(function () {
              var e = t.loaded_callback;
              e &&
                ((t.loaded_callback = null),
                Array.each(e, function (e) {
                  return e();
                })),
                t.userspace_view.request_check_if_all_documents_are_loaded(),
                t.userspace_view.linkIndex.documentChanged(t.document);
            }, 0);
        }),
        (e.prototype.get_history = function () {
          return this.history;
        }),
        (e.prototype.exec = function (e) {
          return this.history.exec(this.ui ? this.ui.selection() : null, e);
        }),
        (e.prototype.set_last_view_state = function (e, t) {
          this.document_view_states[e] = t;
        }),
        (e.prototype.get_last_view_state = function (e) {
          var t = this.document_view_states[e];
          return t && t.timestamp < Date.now() - 6e5
            ? (delete this.document_view_states[e], null)
            : t;
        }),
        (e.prototype.ensure_editable = function (e) {
          if ((void 0 === e && (e = !1), !this.controller.is_read_only())) {
            var t = this.ui.current_root_node_state;
            if (t) {
              var i = t.get_node();
              if (
                (e || i.is_root()) &&
                null === t.visibleFirstChildIgnoreCollapse()
              ) {
                var n = this.controller.create_node();
                this.exec(function (e) {
                  e.attach(n, i, i.get_children().length()),
                    e.setNewSelection(zo.select_content(n, 0));
                });
              }
            }
          }
        }),
        (e.prototype.zoom_out = function () {
          this.ui.current_root.has_parent() &&
            this.zoom_node(this.ui.current_root.get_parent());
        }),
        (e.prototype.zoom_in = function () {
          var e = this.current_selection();
          e instanceof Bo && this.zoom_node(e.get_node());
        }),
        (e.prototype.zoom_node = function (e) {
          this.userspace_view.get_url_manager().zoom_node(e);
        }),
        (e.prototype.apply_zoom_node = function (e, t) {
          void 0 === t && (t = !0);
          var i = this.ui.selection(),
            n = i.get();
          if (
            (e.has_ancestor(this.node_collection.get_root()) ||
              (e = this.node_collection.get_root()),
            this.ui.current_root !== e)
          ) {
            var o = this.ui.current_root;
            this.ui.set_current_root(e, t),
              this.ui.wordCounter.recalculate(),
              e.is_root()
                ? ar.delete_zoom_level_for_doc(this.document.get_server_id())
                : ar.set_zoom_level_for_doc(
                    this.document.get_server_id(),
                    e.get_id(),
                  ),
              Vs ||
                ((n !== qo ||
                  this.app.preferences.get_boolean(Ps.AUTO_FOCUS_FIRST_ITEM)) &&
                  (i.apply(n),
                  i.synchronize(),
                  i.is_selecting() ||
                    ((n =
                      o && o.has_ancestor(e)
                        ? zo.select_content(o, -1)
                        : zo.select_content(e, -1)),
                    i.apply(n))));
          }
        }),
        (e.prototype.split_node = function () {
          if (!this.controller.is_read_only()) {
            var e = this.current_selection();
            if (e instanceof Uo) {
              var n = e.get_node(),
                o = this.ui.get_node_state(n),
                s = n.get_meta_object().get_content(),
                r = n.get_meta_object().has_checkbox(),
                a = this.controller.create_node(),
                _ = e.get_position_start(),
                c = e.get_position_end();
              this.exec(function (e) {
                if (_ === c && _ >= s.length)
                  return (
                    !n.has_parent() ||
                    o.is_current_root() ||
                    o.hasVisibleChildren()
                      ? e.attach(a, n, 0)
                      : e.attach(a, n.get_parent(), n.get_index() + 1),
                    e.edit(a, function (e) {
                      return e.set_checkbox(r);
                    }),
                    void e.setNewSelection(zo.select_content(a, 0))
                  );
                var t = s.slice(0, _),
                  i = s.slice(c);
                o.is_current_root()
                  ? (e.attach(a, n, 0),
                    e.edit(a, function (e) {
                      e.set_content(i), e.set_checkbox(r);
                    }),
                    e.edit(n, function (e) {
                      e.set_content(t);
                    }),
                    e.setNewSelection(zo.select_content(a, 0)))
                  : (e.attach(a, n.get_parent(), n.get_index()),
                    e.edit(a, function (e) {
                      e.set_content(t), e.set_checkbox(r);
                    }),
                    e.edit(n, function (e) {
                      e.set_content(i);
                    }),
                    e.setNewSelection(zo.select_content(0 === _ ? a : n, 0)));
              });
            } else
              e instanceof Go && this.detach_nodes_for_selection_restore_one();
          }
        }),
        (e.prototype.merge_nodes = function (r, a, e) {
          var t = !r.has_children(),
            i = !a.has_children(),
            _ = e;
          (t || i) &&
            (i ? t || (_ = !0) : (_ = !1),
            this.exec(function (e) {
              var t = r.get_meta_object(),
                i = a.get_meta_object(),
                n = t.get_content(),
                o = i.get_content(),
                s = null;
              (s =
                n && !o
                  ? t.clone()
                  : !n && o
                  ? i.clone()
                  : t.merge(i)).set_content(n + o),
                _
                  ? (e.detach(a),
                    e.edit(r, function () {
                      return s;
                    }),
                    e.setNewSelection(
                      zo.select_content(
                        r,
                        r.get_meta_object().get_content().length,
                      ),
                    ))
                  : (e.detach(r),
                    e.edit(a, function () {
                      return s;
                    }),
                    e.setNewSelection(
                      zo.select_content(
                        a,
                        r.get_meta_object().get_content().length,
                      ),
                    ));
            }));
        }),
        (e.prototype.merge_nodes_left = function (e, t) {
          this.merge_nodes(e, t, !0);
        }),
        (e.prototype.merge_nodes_right = function (e, t) {
          this.merge_nodes(e, t, !1);
        }),
        (e.prototype.combine_with_before = function () {
          if (!this.controller.is_read_only()) {
            var e = this.current_selection();
            if (e instanceof Uo && e.is_caret_selection()) {
              var t = e.get_node(),
                i = this.ui.get_node_state(t).visiblePrev(),
                n = t.prev();
              !t.has_children() && i
                ? this.merge_nodes_left(i, t)
                : n
                ? this.merge_nodes_right(n, t)
                : t.has_parent() &&
                  !this.ui.get_node_state(t.get_parent()).is_current_root() &&
                  this.merge_nodes_left(t.get_parent(), t);
            }
          }
        }),
        (e.prototype.combine_with_after = function () {
          if (!this.controller.is_read_only()) {
            var e = this.current_selection();
            if (e instanceof Uo && e.is_caret_selection()) {
              var t = e.get_node(),
                i = this.ui.get_node_state(t).visibleNext();
              i && this.merge_nodes_right(t, i);
            }
          }
        }),
        (e.prototype.move_with_direction = function (e) {
          if (!this.controller.is_read_only()) {
            var t = this.current_selection().get_nodes();
            if (0 !== t.length) {
              var i, n;
              if ("up" === e) {
                var o = t[0],
                  s = this.ui.get_node_state(o).visiblePrevSibling();
                if (s) (i = s.get_parent()), (n = s.get_index());
                else if (o.has_parent()) {
                  var r = o.get_parent();
                  if ((c = this.ui.get_node_state(r)).is_current_root()) return;
                  var a = c.visiblePrevSibling();
                  a && !this.ui.get_node_state(a).ui_collapsed
                    ? (n = (i = a).num_children())
                    : r.has_parent() &&
                      ((i = r.get_parent()), (n = r.get_index()));
                }
              } else if ("down" === e) {
                o = t.last();
                var _ = this.ui.get_node_state(o).visibleNextSibling();
                if (_) (i = _.get_parent()), (n = _.get_index() + 1);
                else if (o.has_parent()) {
                  var c;
                  r = o.get_parent();
                  if ((c = this.ui.get_node_state(r)).is_current_root()) return;
                  var l = c.visibleNextSibling();
                  l && !this.ui.get_node_state(l).ui_collapsed
                    ? ((i = l), (n = 0))
                    : r.has_parent() &&
                      ((i = r.get_parent()), (n = r.get_index() + 1));
                }
              }
              i && this.move_nodes(t, i, n);
            }
          }
        }),
        (e.prototype.move_up = function () {
          this.move_with_direction("up");
        }),
        (e.prototype.move_down = function () {
          this.move_with_direction("down");
        }),
        (e.prototype.move_nodes = function (n, o, s, r) {
          this.controller.is_read_only() ||
            (n &&
              0 !== n.length &&
              this.exec(function (t) {
                if (
                  (n.forEach(function (e) {
                    e.is_root() ||
                      o === e ||
                      o.has_ancestor(e) ||
                      t.attach(e, o, s);
                  }),
                  r)
                ) {
                  var e = n[0],
                    i = n[n.length - 1];
                  t.setNewSelection(zo.select_multi_nodes(n, e, i));
                }
              }));
        }),
        (e.prototype.indent = function () {
          if (!this.controller.is_read_only()) {
            var e = this.current_selection().get_nodes();
            if (0 !== e.length) {
              var t = e[0];
              if (!t.is_root()) {
                var i = this.ui.get_node_state(t).visiblePrevSibling();
                if (i) {
                  var n = i.get_children().length();
                  this.set_node_collapse(i, !1, !0),
                    this.exec(function (t) {
                      e.forEach(function (e) {
                        t.attach(e, i, n);
                      });
                    });
                }
              }
            }
          }
        }),
        (e.prototype.unindent = function () {
          var o = this;
          if (!this.controller.is_read_only()) {
            var s = this.current_selection(),
              r = s.get_nodes();
            if (0 !== r.length) {
              var e = r[0];
              if (!e.is_root()) {
                var a = e.get_parent();
                if (a) {
                  var _ = a.get_parent();
                  if (_) {
                    var c = a.get_index() + 1;
                    this.ui.get_node_state(_).is_current_root_in_ancestor() ||
                      this.zoom_node(_),
                      this.exec(function (t) {
                        if (
                          (t.setOldSelection(s),
                          r.forEach(function (e) {
                            t.attach(e, _, c);
                          }),
                          o.app.preferences.get_boolean(Ps.UNINDENT_IN_PLACE))
                        ) {
                          var i = r.last();
                          if (!i.is_last()) {
                            var e = a
                                .get_children()
                                .array()
                                .slice(i.get_index() + 1),
                              n = r.last().num_children();
                            e.forEach(function (e) {
                              t.attach(e, i, n);
                            });
                          }
                        }
                        t.setNewSelection(s);
                      });
                  }
                }
              }
            }
          }
        }),
        (e.prototype._detach_nodes = function (t, e) {
          var i = this;
          e.forEach(function (e) {
            e.get_parent() &&
              (i.ui.get_node_state(e).is_current_root_in_descendant() &&
                i.zoom_node(e.get_parent()),
              t.detach(e));
          });
        }),
        (e.prototype.detach_nodes_for_selection = function (e) {
          this.detach_nodes(this.current_selection().get_nodes(), e);
        }),
        (e.prototype.detach_nodes_for_selection_restore_one = function () {
          this.detach_nodes_restore_one(this.current_selection().get_nodes());
        }),
        (e.prototype.detach_nodes = function (o, s, r) {
          var a = this;
          if (
            (void 0 === r && (r = !1),
            !this.controller.is_read_only() && 0 !== o.length)
          ) {
            var _ = o[0],
              c = o[o.length - 1];
            this.exec(function (e) {
              a._detach_nodes(e, o);
              var t = a.ui.get_node_state(_).visiblePrev(),
                i = a.ui.get_node_state(c).visibleNextNonChild();
              t && t.is_root() && (t = null), i && i.is_root() && (i = null);
              var n = qo;
              r ||
                (!t || (!s && i)
                  ? i && (n = zo.select_content(i, 0))
                  : (n = zo.select_content(t, -1))),
                e.setNewSelection(n);
            });
          }
        }),
        (e.prototype.detach_nodes_restore_one = function (i) {
          var n = this;
          if (!this.controller.is_read_only() && 0 !== i.length) {
            var e = i[0],
              o = e.get_parent(),
              s = e.get_index();
            this.exec(function (e) {
              n._detach_nodes(e, i);
              var t = n.controller.create_node();
              e.attach(t, o, s), e.setNewSelection(zo.select_content(t, 0));
            });
          }
        }),
        (e.prototype.detach_checked_nodes = function (e) {
          var t = this;
          if (!this.controller.is_read_only()) {
            var i = [];
            this.recurse_children(e, function (e) {
              if (e.get_meta_object().is_checked()) return i.push(e), !0;
            }),
              0 !== i.length &&
                this.exec(function (e) {
                  t._detach_nodes(e, i);
                });
          }
        }),
        (e.prototype.pre_edit = function () {
          this.last_edit_selection = this.current_selection();
        }),
        (e.prototype.removeSelectionText = function (o) {
          if (o instanceof Bo) {
            var s = o.get_node(),
              r = o.get_position_start();
            this.exec(function (n) {
              n.setOldSelection(o),
                n.edit(s, function (e) {
                  var t = o.get_text(),
                    i = t.substr(0, r) + t.substr(o.get_position_end());
                  o instanceof Uo
                    ? (e.set_content(i),
                      n.setNewSelection(zo.select_content(s, r)))
                    : o instanceof Bo &&
                      (e.set_note(i), n.setNewSelection(zo.select_note(s, r)));
                });
            });
          }
        }),
        (e.prototype.edit_content = function (t, i, n) {
          this.exec(function (e) {
            e.edit(t, function (e) {
              return e.set_content(i);
            }),
              n && e.setNewSelection(n);
          });
        }),
        (e.prototype.edit_note = function (t, i, n) {
          this.exec(function (e) {
            e.edit(t, function (e) {
              return e.set_note(i);
            }),
              n && e.setNewSelection(n);
          });
        }),
        (e.prototype.onContentChanged = function (e, o) {
          var t = this;
          this.controller.is_read_only() ||
            (this.ui.selection().synchronize(),
            this.exec(function (n) {
              n.setOldSelection(t.last_edit_selection),
                n.edit(e, function (e) {
                  var t = e.get_content();
                  e.set_content(o);
                  var i = o.length - t.length;
                  1 === Math.abs(i) &&
                    n.setMergeInfo({ increase: 0 < i, note: !1 });
                });
            }));
        }),
        (e.prototype.onNoteChanged = function (e, o) {
          var t = this;
          this.controller.is_read_only() ||
            (this.ui.selection().synchronize(),
            this.exec(function (n) {
              n.setOldSelection(t.last_edit_selection),
                n.edit(e, function (e) {
                  var t = e.get_note();
                  e.set_note(o);
                  var i = o.length - t.length;
                  1 === Math.abs(i) &&
                    n.setMergeInfo({ increase: 0 < i, note: !0 });
                });
            }));
        }),
        (e.prototype.edit_content_and_note = function (e, t, i) {
          this.ui.selection().auto_update(),
            this.edit_nodes_meta([e], function (e) {
              return e.set_content(t).set_note(i);
            });
        }),
        (e.prototype.edit_nodes_meta = function (e, i) {
          this.controller.is_read_only() ||
            (0 !== e.length &&
              this.exec(function (t) {
                each(e, function (e) {
                  t.edit(e, i);
                });
              }));
        }),
        (e.prototype.sort_nodes = function (e, t) {
          if (0 !== e.length) {
            for (
              var i = e.clone().sort(t), n = -1, o = -1, s = 0;
              s < e.length;
              s++
            )
              e[s] != i[s] && (n < 0 && (n = s), (o = s));
            if (-1 !== n) {
              var r = e[n],
                a = i.slice(n, o + 1);
              this.move_nodes(a, r.get_parent(), r.get_index(), !0);
            }
          }
        }),
        (e.prototype.clone_nodes = function (e, n, o) {
          var s = this;
          if (e && n && 0 !== e.length) {
            var r = [];
            this.exec(function (i) {
              e.forEach(function (e) {
                var t = s._clone_node_and_children(i, e);
                i.attach(t, n, o), r.push(t);
              }),
                i.setNewSelection(zo.select_content(r[0], -1));
            });
            for (var t = 0; t < e.length; t++)
              this._clone_collapse_state(e[t], r[t]);
          }
        }),
        (e.prototype._clone_node = function (e, t) {
          var i = this.controller.create_node();
          return e.editMeta(i, i.get_meta(), t.get_meta()), i;
        }),
        (e.prototype._clone_node_and_children = function (i, e) {
          var n = this,
            o = this._clone_node(i, e);
          return (
            e.get_children().each(function (e) {
              var t = n._clone_node_and_children(i, e);
              i.attach(t, o, 0);
            }),
            o
          );
        }),
        (e.prototype._clone_collapse_state = function (e, t) {
          this.controller.set_node_collapse(t, e.is_collapsed(), !0);
          for (var i = e.num_children(), n = 0; n < i; n++) {
            var o = e.get_child(n),
              s = t.get_child(n);
            this._clone_collapse_state(o, s);
          }
        }),
        (e.prototype.set_node_collapse = function (e, t, i) {
          if (!t || !e.is_root()) {
            if (this.ui.is_searching()) {
              var n = this.ui.get_node_state(e);
              this.ui.node_view.set_node_search_collapse(n, t, !i);
            }
            e.is_collapsed() !== t &&
              this.controller.set_node_collapse(e, t, i);
          }
        }),
        (e.prototype.toggle_selection_collapse = function () {
          var e = this.current_selection();
          e instanceof Bo
            ? this.toggle_node_collapse(e.get_node())
            : e instanceof Go && this.toggle_nodes_collapse(e.get_nodes(), !1);
        }),
        (e.prototype.toggle_node_collapse = function (e) {
          var t = !this.ui.get_node_state(e).ui_collapsed;
          this.set_node_collapse(e, t);
        }),
        (e.prototype.toggle_nodes_collapse = function (e, t, i) {
          var n = !this.is_every_node_collapsed(e);
          this.set_nodes_collapse(e, n, t, i);
        }),
        (e.prototype.flatten_nodes_descendants = function (e) {
          var t = [];
          each(e, function (e) {
            e.has_children() &&
              e.get_children().each(function (e) {
                t.push(e);
              });
          });
          for (var i = []; 0 < t.length; ) {
            var n = t.pop();
            n.has_children() &&
              (i.push(n),
              n.get_children().each(function (e) {
                t.push(e);
              }));
          }
          return i;
        }),
        (e.prototype.set_nodes_collapse = function (e, t, i, n) {
          var o = this,
            s = 0;
          each(e, function (e) {
            o.set_node_collapse(e, t, n || 5 < s), s++;
          }),
            i &&
              each(this.flatten_nodes_descendants(e), function (e) {
                o.set_node_collapse(e, t, !0);
              });
        }),
        (e.prototype.is_every_node_collapsed = function (e) {
          var t = this;
          return e.every(function (e) {
            return !t.ui.get_node_state(e).hasVisibleChildren();
          });
        }),
        (e.prototype.recursive_uncheck = function (e) {
          var t = [];
          this.node_collection.traverse_tree_bfs(e, function (e) {
            t.push(e);
          }),
            this.edit_nodes_meta(t, function (e) {
              return e.set_checked(!1);
            });
        }),
        (e.prototype.expandToLevel = function (e) {
          var t = this.ui.selection().get().get_nodes(),
            i = this.ui.context_menu_node;
          0 === t.length && i && (t = [i]);
          for (var n = t; 0 < e; ) {
            n = [];
            for (var o = 0, s = t; o < s.length; o++) {
              var r = s[o],
                a = r.get_children().array();
              (n = n.concat(a)), this.set_node_collapse(r, !1, !1);
            }
            e--, (t = n);
          }
          this.set_nodes_collapse(n, !0, !1, !1);
        }),
        (e.prototype.toggle_checked = function (e) {
          if (0 !== e.length && !this.controller.is_read_only()) {
            var t = !e.every(function (e) {
              return e.get_meta_object().is_checked();
            });
            return this.set_checked(e, t);
          }
        }),
        (e.prototype.set_checked = function (e, i) {
          var n = this;
          if (0 !== e.length && !this.controller.is_read_only()) {
            var o = this.userspace_view.get_is_pro(),
              s =
                "new_instance" ===
                this.app.preferences.get(Ps.RECURRENCE_CHECKED_BEHAVIOR),
              r = !1;
            return (
              this.exec(function (t) {
                e.forEach(function (e) {
                  if (!e.is_root() || !i) {
                    if (o)
                      if (n.performCompletion(t, e, s)) return void (r = !0);
                    t.edit(e, function (e) {
                      return e.set_checked(i);
                    });
                  }
                });
              }),
              r
            );
          }
        }),
        (e.prototype.performCompletion = function (e, t, i) {
          if (!t.is_root() && !t.get_meta_object().is_checked()) {
            var n = null,
              o = function (e) {
                n || (e instanceof fn && (n = e));
              };
            t.get_content_parse_tree().traverse(o);
            var s = null !== n;
            if ((s || t.get_note_parse_tree().traverse(o), n && n.recurrence)) {
              var r,
                a = n.startTime,
                _ = n.endTime;
              if (
                ((r = n.isAllDay
                  ? (zi(new Date(_)) - zi(new Date(a))) / 864e5 - 1
                  : _ - a),
                n.recurrence.reset)
              )
                if (Bi(a)) {
                  var c = new Date();
                  c.setHours(0), c.setMinutes(0), (a = c.getTime());
                } else a = Date.now();
              var l,
                u = n.recurrence.get_next_recurrence(a);
              l = n.isAllDay ? (0 < r ? Ui(u, r) : u) : u + r;
              var h = this.generate_date_markdown(
                  u,
                  l,
                  n.isAllDay,
                  n.recurrence,
                ),
                p = s
                  ? t.get_meta_object().get_content()
                  : t.get_meta_object().get_note(),
                d = p.substr(0, n.token.start) + h + p.substr(n.token.end);
              if (
                (e.edit(t, function (e) {
                  s ? e.set_content(d) : e.set_note(d);
                }),
                i)
              ) {
                var f = this.controller.create_node(),
                  g = t.get_meta_object().clone();
                g.set_checked(!0),
                  e.edit(f, function () {
                    return g;
                  }),
                  e.attach(f, t.get_parent(), t.get_index());
              }
              return !0;
            }
          }
        }),
        (e.prototype.toggleCheckbox = function (e) {
          if (0 !== e.length) {
            var t = !e.every(function (e) {
              return e.get_meta_object().has_checkbox();
            });
            this.setCheckbox(e, t);
          }
        }),
        (e.prototype.toggleChildrenCheckbox = function (e) {
          var i = this;
          if (0 !== e.length) {
            for (var t = [], n = 0, o = e; n < o.length; n++) {
              var s = o[n];
              t = t.concat(s.get_children().array());
            }
            var r = [];
            this.recurse_children(t, function (e) {
              e.get_meta_object().has_checkbox() || r.push(e);
            }),
              0 < r.length
                ? this.exec(function (t) {
                    r.forEach(function (e) {
                      t.edit(e, function (e) {
                        return e.set_checkbox(!0);
                      });
                    });
                  })
                : this.exec(function (t) {
                    i.recurse_children(e, function (e) {
                      t.edit(e, function (e) {
                        return e.set_checkbox(!1);
                      });
                    });
                  });
          }
        }),
        (e.prototype.setCheckbox = function (e, t) {
          this.edit_nodes_meta(e, function (e) {
            return e.set_checkbox(t);
          });
        }),
        (e.prototype.toggle_list_style = function (e) {
          if (0 !== e.length) {
            var t = e.every(function (e) {
              return e.get_meta_object().is_numbered_list();
            })
              ? fe
              : ge;
            this.set_list_style(e, t);
          }
        }),
        (e.prototype.set_list_style = function (e, t) {
          this.edit_nodes_meta(e, function (e) {
            return e.set_list_style(t);
          });
        }),
        (e.prototype.cycle_heading_level = function (e) {
          0 !== e.length &&
            this.edit_nodes_meta(e, function (e) {
              var t = (e.get_heading() + 1) % 4;
              return e.set_heading(t);
            });
        }),
        (e.prototype.toggle_heading_level = function (e, t) {
          if (0 !== e.length) {
            var i = e.every(function (e) {
              return e.get_meta_object().get_heading() === t;
            })
              ? 0
              : t;
            this.set_heading_level(e, i);
          }
        }),
        (e.prototype.set_heading_level = function (e, t) {
          this.edit_nodes_meta(e, function (e) {
            return e.set_heading(t);
          });
        }),
        (e.prototype.cycle_color_label = function (e) {
          0 !== e.length &&
            this.edit_nodes_meta(e, function (e) {
              var t = (e.get_color_label() + 1) % 7;
              return e.set_color_label(t);
            });
        }),
        (e.prototype.toggle_color_label = function (e, t) {
          if (0 !== e.length) {
            var i = e.every(function (e) {
              return e.get_meta_object().get_color_label() === t;
            })
              ? 0
              : t;
            this.set_color_label(e, i);
          }
        }),
        (e.prototype.set_color_label = function (e, t) {
          this.edit_nodes_meta(e, function (e) {
            return e.set_color_label(t);
          });
        }),
        (e.prototype.paste_portable_nodes = function (r) {
          var a = this;
          if (!this.controller.is_read_only() && r && !(r.length <= 0)) {
            this.ui.selection().synchronize();
            var e = this.current_selection();
            if (
              (e instanceof Go &&
                (this.detach_nodes_for_selection_restore_one(),
                (e = this.current_selection())),
              e instanceof Uo)
            ) {
              var _ = e.get_node(),
                c = _.get_parent(),
                l = e.split_text();
              if (c) {
                for (
                  var u = null,
                    h = function (e, t, i) {
                      var n = i.get_meta_object().clone();
                      n.set_content(t.content),
                        t.checkbox && n.set_checkbox(t.checkbox),
                        t.checked && n.set_checked(t.checked),
                        t.heading && n.set_heading(t.heading),
                        t.color_label && n.set_color_label(t.color_label),
                        t.list_style && n.set_list_style(t.list_style),
                        t.note && n.set_note(t.note);
                      var o = i.get_meta(),
                        s = n.write();
                      o !== s && e.editMeta(i, o, s);
                    },
                    p = function (i, e, n) {
                      e.children.forEach(function (e, t) {
                        (e.node = a.controller.create_node()),
                          (u = e.node),
                          i.attach(e.node, n, t),
                          h(i, e, e.node),
                          p(i, e, e.node);
                      });
                    },
                    t = function (e) {
                      e.collapsed && a.set_node_collapse(e.node, !0, !0),
                        each(e.children, t);
                    },
                    i = this.exec(function (e) {
                      (u = _),
                        (r[0].node = _),
                        (r[0].content = l.first + r[0].content);
                      for (var t = Pt(r); 0 < t.children.length; )
                        t = Pt(t.children);
                      var i = Mt(t.content).length;
                      (t.content += l.second),
                        h(e, r[0], _),
                        p(e, r[0], _),
                        assert_not_null(c);
                      for (
                        var n = _.get_index() + 1, o = 1;
                        o < r.length;
                        o++
                      ) {
                        var s = r[o];
                        (s.node = a.controller.create_node()),
                          (u = s.node),
                          e.attach(s.node, c, n),
                          h(e, s, s.node),
                          p(e, s, s.node);
                      }
                      e.setNewSelection(zo.select_content(u, i));
                    }),
                    n = 0;
                  n < r.length;
                  n++
                )
                  t(r[n]);
                if (this.ui) {
                  for (var o = u, s = o.get_parent(); s && s !== c; )
                    s.is_collapsed() && (o = s), (s = s.get_parent());
                  if (o !== u) {
                    var d = zo.select_content(o, -1);
                    i.setNewSelection(d), this.ui.selection().apply(d);
                  }
                }
              }
            }
          }
        }),
        (e.prototype.paste_as_plain_text = function (c) {
          var l = this;
          if (!this.controller.is_read_only()) {
            this.ui.selection().synchronize();
            var u = It(Lt(c)).split("\n"),
              i = 9999;
            each(u, function (e) {
              if ("" !== e.trim()) {
                for (var t = 0; " " === e.charAt(t) && t < e.length; ) t++;
                t < i && (i = t);
              }
            }),
              0 < i &&
                1 < u.length &&
                (u = u.map(function (e) {
                  return e.substr(i);
                }));
            var e = this.current_selection();
            if (
              (e instanceof Go &&
                (this.detach_nodes_for_selection_restore_one(),
                (e = this.current_selection())),
              e instanceof Uo)
            ) {
              var n = e.get_node(),
                o = n.get_parent(),
                s = e.split_text();
              o &&
                this.exec(function (r) {
                  u[0] = s.first + u[0];
                  var e = u[u.length - 1].length;
                  (u[u.length - 1] = u[u.length - 1] + s.second),
                    r.edit(n, function (e) {
                      return e.set_content(u[0]);
                    });
                  var a = n;
                  assert_not_null(o);
                  for (
                    var _ = [
                        { parent: o, index: n.get_index() + 1, indent: 0 },
                      ],
                      t = function (e) {
                        var t = u[e],
                          i = Mt(t);
                        if ("" === i.trim() && e < u.length - 1)
                          return "continue";
                        var n = t.length - i.length,
                          o = l.controller.create_node();
                        if (
                          (r.edit(o, function (e) {
                            return e.set_content(i);
                          }),
                          n > _.peek().indent)
                        )
                          assert_not_null(a),
                            _.push({ parent: a, index: 0, indent: n }),
                            r.attach(o, a, 0);
                        else {
                          for (; n < _.peek().indent; ) _.pop();
                          var s = _.peek();
                          s.parent || trace(c, new Error()),
                            r.attach(o, s.parent, s.index);
                        }
                        a = o;
                      },
                      i = 1;
                    i < u.length;
                    i++
                  )
                    t(i);
                  r.setNewSelection(zo.select_content(a, e));
                });
            }
          }
        }),
        (e.prototype.receive_inbox = function (t, i, n) {
          var o = this.controller.create_node();
          this.exec(function (e) {
            n ? e.attach(o, t, 0) : e.attach(o, t, t.get_children().length()),
              e.edit(o, function (e) {
                return e.set_content(i);
              });
          }),
            this.controller.request_sync();
        }),
        (e.prototype.fix_ending_newlines = function () {
          var e = this;
          this.exec(function (o) {
            e.node_collection.traverse_tree_bfs(null, function (e) {
              var t = e.get_meta_object(),
                i = t.get_content(),
                n = t.get_note();
              i.endsWith("\n") && (i = i.substring(0, i.length - 1)),
                n.endsWith("\n") && (n = n.substring(0, n.length - 1)),
                o.edit(e, function (e) {
                  return e.set_content(i).set_note(n);
                });
            });
          });
        }),
        (e.prototype.recurse_children = function (e, t) {
          for (var i = e.clone(); 0 < i.length; ) {
            var n = i.pop();
            t.call(this, n) ||
              n.get_children().each(
                function (e) {
                  i.push(e);
                },
                this,
                !0,
              );
          }
        }),
        (e.prototype.attemptConvertDocumentToNode = function (e, t, i) {
          (this.convertDocumentInfo = { document: e, node: t, index: i }),
            fish(".confirm-convert-document .FileName").setText(
              Rt(e.get_title(), 50) || c,
            ),
            this.app.userspace.ui.open_modal("confirm-convert-document");
        }),
        (e.prototype.convertDocumentToNode = function () {
          var e = this.convertDocumentInfo,
            t = e.document,
            i = e.node,
            n = e.index;
          if (t && i && -1 !== n) {
            var o = this.controller.clone_from_nodes(
              [t.get_node_collection().get_root()],
              i,
              n,
            );
            this.app.userspace.view.delete_file(t),
              this.userspace_view.fixLinks(
                t.get_server_id(),
                this.document.get_server_id(),
                o,
              ),
              (this.convertDocumentInfo = {
                document: null,
                node: null,
                index: -1,
              });
          }
        }),
        (e.prototype.replaceTextOccurrences = function (e, t, i, n) {
          var o = this;
          if (t !== i) {
            var s = 0,
              r = new RegExp(Dt(t), n ? "g" : "ig"),
              a = function (e) {
                return (
                  (r.lastIndex = 0),
                  e.replace(r, function () {
                    return (s += 1), i;
                  })
                );
              };
            this.exec(function (s) {
              o.node_collection.traverse_tree_bfs(e, function (e) {
                var t = e.get_meta_object().get_content(),
                  i = a(t),
                  n = e.get_meta_object().get_note(),
                  o = a(n);
                (i === t && o === n) ||
                  s.edit(e, function (e) {
                    return e.set_content(i).set_note(o);
                  });
              });
            }),
              this.ui.onSearchReplaceSuccess(s, t, i);
          }
        }),
        (e.prototype.rename_tag = function (_, c) {
          var l = this;
          _ !== c &&
            this.exec(function (a) {
              l.node_collection.traverse_tree_bfs(null, function (e) {
                var t = e.get_meta_object().get_content(),
                  i = e.get_content_parse_tree(),
                  n = l._replace_tag_util(i, t, _, c),
                  o = e.get_meta_object().get_note(),
                  s = e.get_note_parse_tree(),
                  r = l._replace_tag_util(s, o, _, c);
                (n === t && r === o) ||
                  a.edit(e, function (e) {
                    return e.set_content(n).set_note(r);
                  });
              });
            });
        }),
        (e.prototype._replace_tag_util = function (e, t, i, n) {
          var o = [];
          if (
            (e.traverse(function (e) {
              e instanceof pn && e.tag === i && o.push(e.token);
            }),
            0 === o.length)
          )
            return t;
          o.sort(function (e, t) {
            return e.start - t.start;
          });
          var s = [],
            r = 0;
          return (
            Array.each(o, function (e) {
              s.push(t.substring(r, e.start)), s.push(n), (r = e.end);
            }),
            s.push(t.substring(r, t.length)),
            s.join("")
          );
        }),
        (e.prototype.toggle_checked_items_visibility = function () {
          var e = ["", "show", "hide"],
            t = this.document
              .get_user_data_object()
              .get_checked_items_visibility(),
            i = e.indexOf(t),
            n = e[(i + 1) % e.length];
          this.userspace_view.set_document_checked_user_data(this.document, n);
        }),
        (e.prototype.toggle_notes_visibility = function () {
          var e = ["", "show", "teaser", "hide"],
            t = this.document.get_user_data_object().get_notes_visibility(),
            i = e.indexOf(t),
            n = e[(i + 1) % e.length];
          this.userspace_view.set_document_notes_user_data(this.document, n);
        }),
        (e.prototype.apply_delimiter_to_current_selection = function (e) {
          var i = this,
            t = this.ui.selection().get();
          if ((this.pre_edit(), t instanceof Bo)) {
            var n = t.get_node(),
              o = t.get_text(),
              s = t.get_position_start(),
              r = t.get_position_end(),
              a = this._get_info_after_toggling_delimiter(e, o, s, r),
              _ = a.new_text,
              c = a.new_start,
              l = a.new_end;
            t instanceof jo
              ? this.edit_note(n, _, zo.select_note_range(n, c, l))
              : this.edit_content(n, _, zo.select_content_range(n, c, l));
          } else if (t instanceof Go) {
            var u = [];
            this.node_collection.traverse_tree_bfs(t.get_nodes(), function (e) {
              var t = i.ui.node_view.get_node_state(e).is_visible();
              if ((t && u.push(e), !t || e.is_collapsed())) return "continue";
            }),
              this._toggle_nodes_delimiter(e, u);
          }
        }),
        (e.prototype._toggle_nodes_delimiter = function (s, e) {
          var r = this;
          if (e && 0 !== e.length) {
            var a = e.some(function (e) {
              var t = e.get_meta_object().get_content();
              return !r._is_surrounded_by_delimiters(s, t);
            });
            this.exec(function (o) {
              e.forEach(function (e) {
                var t = e.get_meta_object().get_content();
                if (a !== r._is_surrounded_by_delimiters(s, t)) {
                  var i = e.get_meta_object().get_content(),
                    n = r._get_info_after_toggling_delimiter(
                      s,
                      i,
                      0,
                      i.length,
                    ).new_text;
                  o.edit(e, function (e) {
                    return e.set_content(n);
                  });
                }
              });
            });
          }
        }),
        (e.prototype._get_info_after_toggling_delimiter = function (
          e,
          t,
          i,
          n,
        ) {
          var o = e.length,
            s = "",
            r = -1,
            a = -1;
          return (
            (a = this._is_surrounded_by_delimiters(e, t, i - o, n + o)
              ? ((s =
                  t.substring(0, i - o) +
                  t.substring(i, n) +
                  t.substring(n + o)),
                (r = i - o),
                n - o)
              : this._is_surrounded_by_delimiters(e, t, i, n)
              ? ((s =
                  t.substring(0, i) +
                  t.substring(i + o, n - o) +
                  t.substring(n)),
                (r = i),
                n - 2 * o)
              : ((s =
                  i === n
                    ? t.substring(0, i) + e + e + t.substring(n)
                    : (" " === t.charAt(i) && i++,
                      " " === t.charAt(n - 1) && n--,
                      t.substring(0, i) +
                        e +
                        t.substring(i, n) +
                        e +
                        t.substring(n))),
                (r = i + o),
                n + o)),
            { new_text: s, new_start: r, new_end: a }
          );
        }),
        (e.prototype._is_surrounded_by_delimiters = function (e, t, i, n) {
          return (
            (i = i || 0),
            !((n = n || t.length) - i < 2 * e.length) &&
              !(i < 0 || n > t.length) &&
              t.startsWith(e, i) &&
              t.endsWith(e, n)
          );
        }),
        (e.prototype.generate_date_markdown = function (e, t, o, i) {
          var n = this.app.preferences.get_boolean(Ps.SHOW_TIMEZONE_IN_DATE);
          function s(e, t) {
            var i = Si(e),
              n = "YYYY-MM-DD";
            return o || ((n += " HH:mm"), t && (n += " Z")), i.format(n);
          }
          var r = [];
          return (
            r.push("!("),
            r.push(s(e, n)),
            e < t && (r.push(" - "), r.push(s(t, n))),
            null !== i &&
              (r.push(" | "),
              i.reset && r.push("~"),
              r.push(i.get_markdown_string())),
            r.push(")"),
            r.join("")
          );
        }),
        (e.prototype.formatLink = function () {
          var e = this.ui.selection().get();
          if ((this.pre_edit(), e instanceof Bo)) {
            var t = e.get_node(),
              i = e.get_text(),
              n = e.get_position_start(),
              o = e.get_position_end(),
              s =
                i.substring(0, n) +
                "[" +
                i.substring(n, o) +
                "]()" +
                i.substring(o),
              r = void 0;
            (r = n === o ? n + 1 : o + 3),
              e instanceof jo
                ? this.edit_note(t, s, zo.select_note(t, r))
                : this.edit_content(t, s, zo.select_content(t, r));
          }
        }),
        e
      );
    })(To);
  function fr(e) {
    return !!e.type.startsWith("touch") || gr(e.originalEvent);
  }
  function gr(e) {
    return 0 === e.button;
  }
  function mr(e, t) {
    for (var i = 0, n = 0; e && e !== t; )
      (i += e.offsetTop), (n += e.offsetLeft), (e = e.offsetParent);
    return { top: i, left: n };
  }
  var vr = {};
  function yr(e) {
    return void 0 === vr[e] && (vr[e] = $(e)), vr[e];
  }
  function br(e, t) {
    return kr(
      { top: e.pageY, bottom: e.pageY, left: e.pageX, right: e.pageX },
      t,
    );
  }
  var wr = 5;
  function kr(e, t, i) {
    (i = i || {}), $(t).show();
    var n = i.gap || 0,
      o = i.preference || "bottom",
      s = i.offsetParent || t.offsetParent || document.documentElement,
      r = i.horizontalAlignment || "left",
      a = s.scrollTop + wr,
      _ = s.scrollTop + s.clientHeight - wr,
      c = Math.min(e.top, _),
      l = Math.max(e.bottom, a),
      u = t.offsetHeight,
      h = u + n <= e.top - a,
      p = u + n <= _ - e.bottom,
      d = 0,
      f = "";
    f =
      !h || ("top" !== o && p)
        ? !p || ("bottom" !== o && h)
          ? ((d = s.clientHeight < u + n ? a : "top" === o ? a + n : _ - u),
            "overlap")
          : ((d = l + n), "bottom")
        : ((d = c - n - u), "top");
    var g = s.scrollLeft + wr,
      m = s.scrollLeft + s.clientWidth - wr,
      v = t.offsetWidth,
      y = "left" === r ? e.left : e.right - v;
    return (
      m - v < y && (y = m - v),
      y < g && (y = g),
      (t.style.top = d + "px"),
      (t.style.left = y + "px"),
      { top: d, left: y, vresult: f }
    );
  }
  function Er(e) {
    return e <= window.pageYOffset + window.innerHeight;
  }
  function Cr(e, t, i, n, o, s) {
    var r = i;
    Er(r + s) ||
      (r = 0 < n - s - 0.5 ? n - s - 0.5 : window.innerHeight - s - 10);
    var a = t + 0.5;
    return (
      (function e(t) {
        return t <= window.pageXOffset + window.innerWidth;
      })(a + o) || (a = 0 < e - o - 3 ? e - o - 3 : window.innerWidth - o - 10),
      { top: r, left: a }
    );
  }
  function Tr(e, t, i, n) {
    var o = $(e),
      s = o.offset(),
      r = 0;
    if (!n) {
      var a = document.createElement("span");
      e.parentNode.insertBefore(a, e);
      var _ = $(a).offset();
      a.detach(), (r = _.left - s.left) < 0 && (r = 0);
    }
    var c = document.body.createEl("div");
    $(c).css({
      width: o.width(),
      height: o.height(),
      font: o.css("font"),
      fontFamily: o.css("fontFamily"),
      fontSize: o.css("fontSize"),
      whiteSpace: "pre-wrap",
      wordWrap: "break-word",
      overflowY: "auto",
      position: "fixed",
      top: 0,
      left: 0,
      padding: 0,
      zIndex: 666,
    });
    var l = c.createEl("span");
    0 < r &&
      ($(l).css({ width: r + "px", height: "1px", display: "inline-block" }),
      l.setText(" "));
    var u = c.createEl("span"),
      h = c.createEl("span", { text: "​" }),
      p = c.createEl("span"),
      d = t - s.left,
      f = i - s.top,
      g = o.text(),
      m = 0,
      v = g.length,
      y = 0;
    if ((u.setText(g), u.offsetWidth <= d || u.offsetHeight <= f))
      return c.detach(), v;
    u.setText("x");
    for (
      var b = u.offsetHeight, w = l.offsetLeft, k = l.offsetLeft;
      1 < v - m;

    ) {
      (y = Math.round((m + v) / 2)),
        u.setText(g.slice(0, y)),
        p.setText(g.slice(y + 1));
      var E = h.offsetLeft - w,
        C = h.offsetTop - k;
      C + b < f ? (m = y) : f < C ? (v = y) : E < d ? (m = y) : (v = y);
    }
    u.setText(g.slice(0, m));
    var T = h.offsetLeft - w;
    u.setText(g.slice(0, v));
    var O = h.offsetLeft - w;
    return c.detach(), Math.abs(T - d) <= Math.abs(O - d) ? m : v;
  }
  function Or(e, t) {
    void 0 === t && (t = !0);
    var i = window.getSelection();
    if (0 === i.rangeCount) return null;
    var n = i.getRangeAt(0).cloneRange();
    n.collapse(t);
    var o = { node: n.startContainer, offset: n.startOffset };
    return Xs
      ? (function e(t, i) {
          if (!t.contains(i.node)) return null;
          var n = [],
            o = i.node;
          for (; o !== t; ) {
            var s = o.parentNode,
              r = s.indexOf(o);
            n.push(r), (o = s);
          }
          n.reverse();
          var a = t.cloneNode(!0);
          t.parentNode.insertBefore(a, t), (o = a);
          for (var _ = 0; _ < n.length; _++) o = o.childNodes[n[_]];
          var c = xr(a, { node: o, offset: i.offset });
          return a.detach(), c;
        })(e, o)
      : xr(e, o);
  }
  function xr(e, t) {
    if (!e.contains(t.node)) return null;
    var i = document.createRange();
    i.setStart(t.node, t.offset), i.setEnd(e, e.childNodes.length);
    var n = i.getClientRects(),
      o = n[0];
    o && 0 === o.width && 1 < n.length && (o = n[1]);
    var s = document.createElement("span"),
      r = document.createElement("span"),
      a = document.createElement("br");
    (s.textContent = r.textContent = ""),
      (s.style.verticalAlign = "top"),
      (r.style.verticalAlign = "bottom"),
      i.insertNode(s),
      s.parentNode.insertBefore(r, s.nextSibling),
      (r.textContent = "\ufeff");
    var _ = r.offsetHeight;
    0 === _ && (_ = 4);
    var c = _ / 2;
    r.textContent = "";
    var l = !1,
      u = s.offsetLeft - e.offsetLeft,
      h = r.offsetTop - e.offsetLeft;
    if (s.offsetLeft === e.offsetLeft && s.offsetTop - e.offsetTop > c) l = !0;
    else {
      var p = r.getBoundingClientRect();
      l = !!(o && o.top >= p.bottom);
    }
    l && r.parentNode.insertBefore(a, r);
    var d = s.offsetTop - e.offsetTop < c,
      f = e.offsetTop + e.offsetHeight - (r.offsetTop + _) < c;
    return (
      s.detach(),
      r.detach(),
      a.detach(),
      e.normalize(),
      { isFirst: d, isLast: f, isLineEnding: l, left: u, top: h }
    );
  }
  function Ar(e) {
    if (!e) return null;
    var t = window.getSelection();
    if (0 === t.rangeCount) return null;
    var i = t.getRangeAt(0),
      n = {
        startNode: i.startContainer,
        endNode: i.endContainer,
        startOffset: i.startOffset,
        endOffset: i.endOffset,
        current: 0,
        start: 0,
        end: 0,
      };
    return (
      (function e(t, i) {
        if (3 === t.nodeType && t instanceof Text)
          i.startNode === t && (i.start = i.current + i.startOffset),
            i.endNode === t && (i.end = i.current + i.endOffset),
            (i.current += t.data.length);
        else {
          for (var n = t.childNodes, o = n.length, s = 0; s < o; ++s)
            i.startNode === t && i.startOffset === s && (i.start = i.current),
              i.endNode === t && i.endOffset === s && (i.end = i.current),
              e(n[s], i);
          i.startNode === t && i.startOffset === o && (i.start = i.current),
            i.endNode === t && i.endOffset === o && (i.end = i.current);
        }
      })(e, n),
      { start: n.start, end: n.end }
    );
  }
  function Dr(e) {
    if (!e) return null;
    var t = 0,
      i = 0,
      n = window.getSelection();
    if (0 === n.rangeCount || !e || !e.childNodes) return null;
    var o = n.getRangeAt(0),
      s = (function e(t) {
        var i = [];
        if (3 == t.nodeType) i.push(t);
        else
          for (var n = t.childNodes, o = 0, s = n.length; o < s; ++o)
            i.push.apply(i, e(n[o]));
        return i;
      })(e);
    if (0 < s.length) {
      var r = o.startContainer,
        a = o.endContainer,
        _ = o.startOffset,
        c = o.endOffset;
      3 !== e.nodeType &&
        (r === e && (r = s[0]),
        a === e && ((a = s[s.length - 1]), (c *= a.data.length)));
      var l = 0;
      Array.each(s, function (e) {
        if ((e === r && (t = l + _), e === a)) return (i = l + c), !1;
        l += e.data.length;
      });
    }
    return { start: t, end: i };
  }
  function Sr(e, t) {
    return -1 === t
      ? 3 === e.nodeType
        ? e.nodeValue.length
        : e.childNodes.length
      : t;
  }
  function Nr(e, t, i) {
    try {
      e.focus({ preventScroll: !0 });
      var n = e;
      e.hasChildNodes() && (n = e.childNodes[0]),
        (t = Sr(n, t)),
        (i = Sr(n, i)),
        window.getSelection().setBaseAndExtent(n, t, n, i);
    } catch (e) {
      console.error(e);
    }
  }
  function Ir(e) {
    Nr(e, 0, -1);
  }
  function Lr() {
    var e = window.getSelection();
    0 < e.rangeCount && e.removeAllRanges();
  }
  var Mr,
    Rr,
    Pr = (function (n) {
      function e(e, t) {
        var i = n.call(this, "DocumentDomEvents", e, t) || this;
        return (
          (i.events = i.submodule(new Eo())),
          (i.request_update_search = i.debounce(
            i.update_search.bind(i),
            20,
            !0,
          )),
          (i.request_document_scrolled = i.debounce(
            i.on_document_container_scroll.bind(i),
            500,
            !0,
          )),
          (i.request_synchronize = i.debounce(i.on_synchronize.bind(i), 20)),
          i
        );
      }
      return (
        nt(e, n),
        (e.prototype._init_dependencies = function () {
          (this.keymap = this.app.keymap),
            (this.ui = this.app_document.ui),
            (this.view = this.app_document.view),
            (this.controller = this.app_document.controller),
            (this.userspace = this.app.userspace.get_userspace()),
            (this.userspace_ui = this.app.userspace.ui),
            (this.userspace_view = this.app.userspace.view),
            (this.drag_manager = this.ui.drag_manager),
            (this.drag_to_select = this.ui.drag_to_select),
            (this.userspace_drag_manager = this.app.userspace.ui.drag_manager);
        }),
        (e.prototype._init_fields = function () {
          (this.waiting_for_image = !1),
            (this.file_drop_counter = 0),
            (this.is_dragging_local_file = !1),
            (this.drag_enter_target = null),
            (this.is_dragging_to_scroll = !1),
            (this.is_finger_on_bullet = !1),
            (this.node_content_change_timer = 0),
            (this.double_click_time = 0),
            (this.second_menu_hover_timeout = 0),
            (this.selection_before_blur = null),
            (this.refocus_selection = null);
        }),
        (e.prototype._init_after = function () {
          this.register_web_events(),
            this.app.env.is("mobile") &&
              this.events.register_event_listener(
                document,
                "resume",
                this.on_app_resume.bind(this),
              ),
            this.update_search_debounce_timeout();
        }),
        (e.prototype._unload = function () {
          clearTimeout(this.node_content_change_timer);
        }),
        (e.prototype.register_web_events = function () {
          var t = this,
            e = this.events.make_context_on_off(yr(".AppContainer")),
            i = this.events.make_context_on_off(yr(".Document-rootNode")),
            n = this.events.make_context_on_off(yr(".AppHeader"));
          this.events.make_context_on_off(yr(".node-toolbar"));
          this.events.register_array_on_off([
            [
              $("#retry-doc-view-connect"),
              "click",
              this.on_retry_click.bind(this),
            ],
            [
              $(".MobileHeader-searchbar, .DocumentSearch"),
              "propertychange change keyup keydown input paste",
              this.on_search_changed.bind(this),
            ],
            [
              $(".MobileHeader-searchbar"),
              "focus",
              this.on_mobile_searchbar_focus.bind(this),
            ],
            [
              $(".MobileHeader-searchbar"),
              "blur",
              this.on_mobile_searchbar_blur.bind(this),
            ],
            [
              $(".MobileHeader-option--clearSearch"),
              "click",
              this.on_mobile_search_clear.bind(this),
            ],
            [
              $(".js-perform-global-search"),
              "click",
              this.on_global_search_click.bind(this),
            ],
            [
              $(".js-perform-flat-search"),
              "click",
              this.on_flat_search_click.bind(this),
            ],
            [
              $(".node-toolbar"),
              "mousedown",
              this.on_node_toolbar_mousedown.bind(this),
            ],
            [
              $(".MenuItem.mod-contains-second-level"),
              "click",
              this.on_invoke_second_level_menu.bind(this),
            ],
            [
              $(".MenuItem.mod-contains-second-level"),
              "mouseenter",
              this.on_second_level_menu_parent_mouseenter.bind(this),
            ],
            [
              $(".MenuItem.mod-contains-second-level"),
              "mouseleave",
              this.on_second_level_menu_parent_mouseleave.bind(this),
            ],
            [
              $(
                ".ContextMenu:not(.mod-second-level-menu) .MenuItem:not(.mod-contains-second-level)",
              ),
              "mouseenter",
              this.on_non_second_level_menu_mouseenter.bind(this),
            ],
            [
              $(".ContextMenu.mod-second-level-menu"),
              "mouseenter",
              this.on_second_level_menu_mouseenter.bind(this),
            ],
            [
              $(".MenuItem--collapse, .MenuItem--expand"),
              "click",
              this.on_node_collapse.bind(this),
            ],
            [
              $(".MenuItem--collapseAll, .MenuItem--expandAll"),
              "click",
              this.on_toggle_descendants_collapse.bind(this),
            ],
            [$(".MenuItem--zoomIn"), "click", this.on_node_zoom.bind(this)],
            [
              $(".MenuItem--deleteNode"),
              "click",
              this.on_node_delete.bind(this),
            ],
            [
              $(".MenuItem--deleteCheckedNodes"),
              "click",
              this.on_delete_checked_nodes.bind(this),
            ],
            [
              $(".MenuItem--sortTitleAsc"),
              "click",
              this.on_sort_title_asc.bind(this),
            ],
            [
              $(".MenuItem--sortTitleDesc"),
              "click",
              this.on_sort_title_desc.bind(this),
            ],
            [
              $(".MenuItem--sortDateAsc"),
              "click",
              this.on_sort_date_asc.bind(this),
            ],
            [
              $(".MenuItem--sortDateDesc"),
              "click",
              this.on_sort_date_desc.bind(this),
            ],
            [
              $(".MenuItem--sortEditedTimeDesc"),
              "click",
              this.on_sort_edited_time_desc.bind(this),
            ],
            [
              $(".MenuItem--sortEditedTimeAsc"),
              "click",
              this.on_sort_edited_time_asc.bind(this),
            ],
            [
              $(".MenuItem--sortCheckedStatusAsc"),
              "click",
              this.on_sort_checked_status_asc.bind(this),
            ],
            [
              $(".MenuItem--sortCheckedStatusDesc"),
              "click",
              this.on_sort_checked_status_desc.bind(this),
            ],
            [
              $(".MenuItem--sortCreatedTimeDesc"),
              "click",
              this.on_sort_created_time_desc.bind(this),
            ],
            [
              $(".MenuItem--sortCreatedTimeAsc"),
              "click",
              this.on_sort_created_time_asc.bind(this),
            ],
            [
              $(".MenuItem--expandToLevel"),
              "click",
              this.onExpandToLevel.bind(this),
            ],
            [
              $(".MenuItem--collapseSiblings, .MenuItem--expandSiblings"),
              "click",
              this.onToggleSiblings.bind(this),
            ],
            [
              $(".MenuItem--searchReplace"),
              "click",
              this.onSearchReplaceMenuOptionClick.bind(this),
            ],
            [
              $(".MenuItem--reverseCurrent"),
              "click",
              this.on_sort_reverse_current.bind(this),
            ],
            [$(".MenuItem--indent"), "click", this.on_node_indent.bind(this)],
            [
              $(".MenuItem--unindent"),
              "click",
              this.on_node_unindent.bind(this),
            ],
            [
              $(".MenuItem--moveNode"),
              "click",
              this.on_move_node_click.bind(this),
            ],
            [
              $(".MenuItem--insertTemplate"),
              "click",
              this.onInsertTemplateClick.bind(this),
            ],
            [
              $(".MenuItem--addNote"),
              "click",
              this.on_node_add_note.bind(this),
            ],
            [
              $(
                ".NodeMenu .MenuItem--showCheckbox, .NodeMenu .MenuItem--hideCheckbox",
              ),
              "click",
              this.onToggleCheckbox.bind(this),
            ],
            [
              $(
                ".NodeMenu .MenuItem--addCheckboxToChildren, .NodeMenu .MenuItem--removeCheckboxFromChildren",
              ),
              "click",
              this.onToggleChildrenCheckbox.bind(this),
            ],
            [
              $(
                ".NodeMenu .MenuItem--makeNumberedList, .NodeMenu .MenuItem--unmakeNumberedList",
              ),
              "click",
              this.on_toggle_ordered_list.bind(this),
            ],
            [
              $(".NodeMenu .MenuItem--shareRootNode"),
              "click",
              this.on_share_root_node.bind(this),
            ],
            [
              $(".NodeMenu .MenuItem--getLink"),
              "click",
              this.on_get_link.bind(this),
            ],
            [
              $(".NodeMenu .MenuItem--showReferences"),
              "click",
              this.onShowReferences.bind(this),
            ],
            [
              $(".NodeMenu .MenuItem--exportNode"),
              "click",
              this.on_export_node.bind(this),
            ],
            [
              $(".NodeMenu .MenuItem--setAsInbox"),
              "click",
              this.on_set_as_inbox.bind(this),
            ],
            [
              $(".MenuItem--check, .MenuItem--uncheck"),
              "click",
              this.on_node_toggle_check.bind(this),
            ],
            [
              $(".NodeMenu .set-heading-level"),
              "click",
              this.on_set_heading_level.bind(this),
            ],
            [
              $(".NodeMenu .set-color-label"),
              "click",
              this.on_set_color_label.bind(this),
            ],
            [
              $(".Document-bottomSpace"),
              "click",
              this.on_document_end_mouseup.bind(this),
            ],
            [
              $(".js-focus-before"),
              "focus",
              this.on_document_focus_before.bind(this),
            ],
            [
              $(".js-focus-after"),
              "focus",
              this.on_document_focus_after.bind(this),
            ],
            [
              $(".DocumentTools-filterView"),
              "click",
              this.on_filter_view_click.bind(this),
            ],
            [
              this.ui.get_searchbar_el(),
              "focus",
              this.on_searchbar_focus.bind(this),
            ],
            [
              this.ui.get_searchbar_el(),
              "blur",
              this.on_searchbar_blur.bind(this),
            ],
            [
              $(".DocumentSearch-clear"),
              "click",
              this.on_search_clear.bind(this),
            ],
            [
              $(".DocumentSearch-icon"),
              "click",
              this.on_show_search_click.bind(this),
            ],
            [
              $(".DocumentContainer"),
              "scroll",
              this.on_document_container_scroll.bind(this),
            ],
            [
              $(".DocumentContainer"),
              "scroll resize",
              this.on_document_container_updated.bind(this),
            ],
            [
              $(".search-tip"),
              "mousedown",
              function (e) {
                e.preventDefault();
              },
            ],
            [
              $(".search-tip-shortcut-ref-link"),
              "click",
              function () {
                window.open(
                  "http://help.dynalist.io/article/93-search-operators-reference",
                  "_blank",
                );
              },
            ],
            [
              $(".MobileHeader-moreOption--toggleChecked"),
              "click",
              this.on_toggle_checked_header_option_click.bind(this),
            ],
            [
              $(".MobileHeader-moreOption--toggleNotes"),
              "click",
              this.on_toggle_notes_header_option_click.bind(this),
            ],
            [
              $(".file-attachment-upload"),
              "change",
              this.on_upload_file_attachment.bind(this),
            ],
            [
              $(".js-search-replace-all"),
              "click",
              this.onReplaceAllClick.bind(this),
            ],
            [
              $(".confirm-convert-document-btn"),
              "click",
              this.onConfirmConvertDocument.bind(this),
            ],
          ]),
            this.events.register_with_context_array(e, [
              ["mousedown", this.on_document_mousedown.bind(this)],
              ["mouseup", this.on_document_mouseup.bind(this)],
              [
                "mouseenter",
                ".node-inline-image",
                this.on_image_mouseenter.bind(this),
              ],
              [
                "mouseleave",
                ".node-inline-image",
                this.on_image_mouseleave.bind(this),
              ],
              ["dragenter", this.on_document_dragenter.bind(this)],
              ["dragleave", this.on_document_dragleave.bind(this)],
              ["dragover", this.on_document_dragover.bind(this)],
              ["drop", this.on_document_drop.bind(this)],
              ["click", ".js-undo", this.onUndoClick.bind(this)],
            ]),
            this.events.register_with_context_array(i, [
              [
                "mousedown",
                ".Node-renderedContent",
                this.on_node_rendered_mousedown.bind(this),
              ],
              [
                "mousedown",
                ".Node-renderedNote",
                this.on_note_rendered_mousedown.bind(this),
              ],
              ["mousedown", ".Node", this.on_node_border_mousedown.bind(this)],
              [
                "mousedown",
                ".Node-self",
                this.on_node_border_mousedown.bind(this),
              ],
              ["focus", ".Node-content", this.on_node_focus.bind(this)],
              ["blur", ".Node-content", this.on_node_blur.bind(this)],
              ["focus", ".Node-note", this.on_note_focus.bind(this)],
              ["blur", ".Node-note", this.on_note_blur.bind(this)],
              [
                "dragstart",
                ".Node-content",
                this.on_node_drag_start.bind(this),
              ],
              ["drop", ".Node-content", this.on_node_drop.bind(this)],
              ["click", ".Node-openNote", this.on_open_note_click.bind(this)],
              [
                "click",
                ".node-backlink-counter",
                this.onBacklinkCounterClick.bind(this),
              ],
              ["mouseenter", ".Node-self", this.on_node_mouseenter.bind(this)],
              ["mouseleave", ".Node-self", this.on_node_mouseleave.bind(this)],
              ["click", ".Node-bullet", this.on_node_bullet_click.bind(this)],
              [
                "mousedown",
                ".Node-content, .Node-note",
                this.on_node_mousedown.bind(this),
              ],
              [
                "keydown keyup mousedown",
                ".Node-content, .Node-note",
                this.on_synchronize.bind(this),
              ],
              [
                "blur keydown paste input compositionend",
                ".Node-content",
                this.on_node_content_change.bind(this),
              ],
              [
                "blur keydown paste input",
                ".Node-note",
                this.on_note_content_change.bind(this),
              ],
              [
                "contextmenu",
                ".Node-bullet",
                this.on_node_bullet_context_menu.bind(this),
              ],
              [
                "mousedown contextmenu",
                ".node-icon.mod-menu",
                this.on_node_bullet_context_menu.bind(this),
              ],
              [
                "click",
                ".node-icon.mod-zoom",
                this.on_node_zoom_icon_click.bind(this),
              ],
              [
                "click",
                ".node-icon.mod-expand-collapse",
                this.on_node_toggle_collapsed_icon_click.bind(this),
              ],
              [
                "click",
                ".node-icon.mod-bookmark",
                this.on_node_bookmark_icon_click.bind(this),
              ],
              [
                "touchstart",
                ".node-icon",
                this.on_mobile_node_toggle_collapsed_touchstart.bind(this),
              ],
              [
                "touchmove",
                ".node-icon",
                this.on_mobile_node_toggle_collapsed_touchmove.bind(this),
              ],
              [
                "touchend",
                ".node-icon",
                this.on_mobile_node_toggle_collapsed_touchend.bind(this),
              ],
              [
                "click",
                ".Node-checkbox",
                this.on_node_checkbox_click.bind(this),
              ],
              [
                "click",
                ".node-link-internal",
                this.on_node_link_internal_click.bind(this),
              ],
              [
                "click",
                ".node-link, .node-inline-image",
                this.on_node_link_click.bind(this),
              ],
              [
                "click",
                ".Node-self .node-tag",
                this.on_node_tag_click.bind(this),
              ],
              ["mousedown", ".node-tag", this.on_node_tag_mousedown.bind(this)],
              [
                "mousedown",
                ".node-multiline-code-copy-btn",
                this.onCopyCodeBlock.bind(this),
              ],
            ]),
            this.events.register_with_context_array(n, [
              [
                "click",
                ".MobileHeader-option--undo",
                this.on_undo_touch.bind(this),
              ],
              [
                "click",
                ".MobileHeader-option--redo",
                this.on_redo_touch.bind(this),
              ],
              [
                "click",
                ".MobileHeader-option--selectMultiple",
                this.onSelectMultipleTouch.bind(this),
              ],
              [
                "click",
                ".MobileHeader-option--searchInDocument",
                this.on_search_touch.bind(this),
              ],
              [
                "click",
                ".MobileHeader-option--toggleReadMode, .AppHeader-lockMode",
                this.onToggleReadMode.bind(this),
              ],
            ]);
          var o = this.events.make_context_on_off($(window));
          this.events.register_with_context_array(o, [
            ["beforeprint", this.on_before_print.bind(this)],
          ]);
          var s = this.events.make_context_on_off($(document));
          this.events.register_with_context_array(s, [
            ["selectionchange", this.request_synchronize],
          ]);
          var r = window.matchMedia("print");
          this.events.register_event(
            r,
            r.addListener,
            r.removeListener,
            function (e) {
              e.matches && t.on_before_print();
            },
          );
        }),
        (e.prototype.selection = function () {
          return this.ui.selection();
        }),
        (e.prototype.on_synchronize = function () {
          this.selection().synchronize(), this.view.pre_edit();
        }),
        (e.prototype.on_before_print = function () {
          this.ui.node_view.update_node_rendering(!0);
        }),
        (e.prototype.on_node_content_change = function (i) {
          var n = this,
            e = this.selection().get();
          if (e instanceof Uo) {
            var o = e.get_node();
            if (o) {
              var s = !1,
                t = i.originalEvent;
              if (Vs && "compositionend" === t.type)
                t.data.endsWith("\n") && (s = !0);
              this.queue(function () {
                var e = n.ui.get_node_state(o),
                  t = e.get_content_on_ui();
                s && t.endsWith("\n") && (t = t.substr(0, t.length - 1)),
                  n.ui.run_edit(function () {
                    n.view.onContentChanged(o, t);
                  }),
                  s &&
                    (n.ui.key_events.on_keydown_enter(i),
                    n.ui.node_view.update_content(e));
              });
            }
          }
        }),
        (e.prototype.on_note_content_change = function () {
          var e = this,
            t = this.selection().get();
          if (t instanceof jo) {
            var i = t.get_node();
            i &&
              this.queue(function () {
                e.ui.run_edit(function () {
                  e.view.onNoteChanged(
                    i,
                    e.ui.get_node_state(i).get_note_text_on_ui(),
                  );
                });
              });
          }
        }),
        (e.prototype._activate_block_from_location = function (e, t, i) {
          for (
            var n = t.target, o = Ei(t), s = o.x, r = o.y;
            n &&
            !n.hasCtx() &&
            !n.hasClass("Node-renderedContent") &&
            !n.hasClass("Node-renderedNote");

          )
            n = n.parentElement;
          var a = -1,
            _ = -1;
          if (n && n.hasCtx()) {
            var c = n.getCtx();
            if (c instanceof Ss) {
              var l = c;
              if (l.is_disabled()) return;
              var u = l.get_token();
              if (l.is_select_whole()) (a = u.start), (_ = u.end);
              else {
                var h = (function e(t, i) {
                  if (document.caretPositionFromPoint) {
                    if ((n = document.caretPositionFromPoint(t, i)))
                      return { element: n.offsetNode, offset: n.offset };
                  } else if (document.caretRangeFromPoint) {
                    var n;
                    if ((n = document.caretRangeFromPoint(t, i)))
                      return {
                        element: n.startContainer,
                        offset: n.startOffset,
                      };
                  }
                  return null;
                })(s, r);
                a = _ =
                  h && h.element.parentNode === n
                    ? u.start + h.offset
                    : u.start + Tr(n, s, r, !1);
              }
            }
          }
          return i
            ? zo.select_note_range(e, a, _)
            : zo.select_content_range(e, a, _);
        }),
        (e.prototype.handle_node_mousedown_modifier = function (e, t) {
          var i =
            this.userspace_ui.is_mobile_device() || this.app.env.is("mobile");
          if (this.keymap.match_modifiers([ye]))
            return this._shift_click_to(t) ? (e.preventDefault(), !1) : void 0;
          var n = this.keymap.match_modifiers([we]) && !i,
            o = i && this.ui.isMobileMultiselect;
          return n || o
            ? this.ui.toggleSelectNode(t)
              ? (e.preventDefault(), o && this.ui.node_toolbar.update(), !1)
              : void 0
            : null;
        }),
        (e.prototype.on_node_rendered_mousedown = function (e) {
          var t = this;
          if (fr(e)) {
            var i = this.ui.get_node_from_el(e.target),
              n = this.handle_node_mousedown_modifier(e, i);
            if (null !== n) return n;
            var o = this._activate_block_from_location(i, e, !1);
            o &&
              (this.drag_to_select.drag_to_select_start(i, o),
              this.ui.should_allow_edit() &&
                (this.ui.get_node_state(i).set_ui_content_rendered(!1),
                Xs && this.selection().apply(o),
                (this.app.env.is("mobile") ||
                  this.userspace_ui.is_mobile_device()) &&
                  (this.refocus_selection = o),
                this.queue(function () {
                  t.selection().apply(o), (t.refocus_selection = null);
                })));
          }
        }),
        (e.prototype.on_note_rendered_mousedown = function (e) {
          var t = this;
          if (fr(e)) {
            var i = this.ui.get_node_from_el(e.target),
              n = this.handle_node_mousedown_modifier(e, i);
            if (null !== n) return n;
            var o = this._activate_block_from_location(i, e, !0);
            o &&
              (this.drag_to_select.drag_to_select_start(i, o),
              this.ui.should_allow_edit() &&
                (this.ui.get_node_state(i).set_ui_note_rendered(!1),
                Xs && this.selection().apply(o),
                (this.app.env.is("mobile") ||
                  this.userspace_ui.is_mobile_device()) &&
                  (this.refocus_selection = o),
                this.queue(function () {
                  t.selection().apply(o), (t.refocus_selection = null);
                })));
          }
        }),
        (e.prototype._shift_click_to = function (e) {
          var t = this.selection(),
            i = t.get(),
            n = null;
          if (i instanceof Bo) n = i.get_node();
          else {
            if (!(i instanceof Go)) return !1;
            n = i.get_from_node();
          }
          return (
            !(!n || e === n) &&
            (this.ui.blur_cursor(), t.apply(t.select_between(n, e)), !0)
          );
        }),
        (e.prototype.on_node_focus = function (e) {
          var i = this;
          e.stopImmediatePropagation(),
            this.ui.view_state_manager.clear_saved_view_state(),
            wt(function () {
              i.selection().auto_update(),
                i.ui.request_show_current_node_highlight();
              var e = i.selection().get();
              if (e instanceof Uo) {
                var t = e.get_node();
                i.ui.get_node_state(t).set_ui_editing(!0),
                  i.ui.view_state_manager.save_view_state(),
                  i.ui.node_toolbar.request_update(),
                  Vs && i.app.scope.fix_scope_to_editor();
              }
            }),
            this.on_image_mouseleave();
        }),
        (e.prototype.on_node_blur = function (e) {
          var t = e.currentTarget,
            i = this.ui.get_node_from_el(t);
          if (i && !this.ui.clipboard.get_is_pasting()) {
            this.ui.on_document_blur();
            var n = this.selection();
            if (!n.is_working()) {
              var o = n.get();
              (this.selection_before_blur = o) instanceof Go ||
                n.set_no_select(),
                Lr();
            }
            this.ui.get_node_state(i).set_ui_editing(!1),
              this.ui.hide_current_node_highlight(),
              this.ui.node_toolbar.request_update();
          }
          null != this.refocus_selection &&
            (this.selection().apply(this.refocus_selection),
            (this.refocus_selection = null));
        }),
        (e.prototype.on_note_focus = function () {
          var i = this;
          this.ui.view_state_manager.clear_saved_view_state(),
            wt(function () {
              i.selection().auto_update(),
                i.ui.request_show_current_node_highlight();
              var e = i.selection().get();
              if (e instanceof jo) {
                var t = e.get_node();
                i.ui.get_node_state(t).set_ui_editing_note(!0),
                  i.ui.view_state_manager.save_view_state();
              }
            }),
            this.on_image_mouseleave();
        }),
        (e.prototype.on_note_blur = function (e) {
          var t = e.currentTarget,
            i = this.ui.get_node_from_el(t);
          if (i && !this.ui.clipboard.get_is_pasting()) {
            this.ui.on_document_blur();
            var n = this.selection();
            if (!n.is_working()) {
              var o = n.get();
              (this.selection_before_blur = o) instanceof Go ||
                n.set_no_select(),
                Lr();
            }
            this.ui.get_node_state(i).set_ui_editing_note(!1),
              this.ui.hide_current_node_highlight();
          }
          null != this.refocus_selection &&
            (this.selection().apply(this.refocus_selection),
            (this.refocus_selection = null));
        }),
        (e.prototype.on_node_drag_start = function (e) {
          if (this.controller.is_read_only()) e.preventDefault();
          else {
            var t = e.originalEvent.dataTransfer;
            t.effectAllowed = "move";
            var i = t.getData("text/html"),
              n = createEl("div");
            (n.innerHTML = i), t.setData("text/html", n.getText());
          }
        }),
        (e.prototype.on_node_drop = function () {
          this.drag_to_select.drag_to_select_end();
        }),
        (e.prototype.on_node_mouseenter = function (e) {
          if (!Vs) {
            var t = e.currentTarget,
              i = this.ui.get_node_from_el(t);
            i &&
              (i !== this.ui.current_root &&
                this.ui.get_node_state(i).set_ui_hovering_bullet(!0),
              this.ui.display_menu_icons_for_node(i));
          }
        }),
        (e.prototype.on_node_mouseleave = function (e) {
          if (!Vs) {
            var t = e.currentTarget,
              i = this.ui.get_node_from_el(t);
            i &&
              (this.ui.get_node_state(i).set_ui_hovering_bullet(!1),
              this.ui.reset_menu_icons());
          }
        }),
        (e.prototype.on_node_bullet_click = function (e) {
          if (
            fr(e) &&
            !this.drag_to_select.is_dragging_to_select() &&
            !this.keymap.match_modifiers([we])
          ) {
            var t = e.currentTarget,
              i = this.ui.get_node_from_el(t),
              n = this.ui.is_using_bullet_to_zoom();
            if (i) {
              if (n) this.view.zoom_node(i), e.stopPropagation();
              else if (i.has_children()) {
                var o = performance.now();
                if (this.double_click_time && o <= this.double_click_time) {
                  var s = i.is_collapsed();
                  this.view.set_nodes_collapse(
                    i.get_children().array(),
                    s,
                    !0,
                    !0,
                  ),
                    (this.double_click_time = 0);
                } else
                  this.ui.move_selection_up_if_under_node(i),
                    this.view.toggle_node_collapse(i),
                    (this.double_click_time = o + k);
              }
              e.preventDefault();
            }
          }
        }),
        (e.prototype.on_node_bullet_context_menu = function (e) {
          var t = this,
            i = e.currentTarget,
            n = this.ui.get_node_from_el(i);
          if (n)
            if (Vs) e.preventDefault();
            else {
              var o = $(i).parents(".Node").get(0).getBoundingClientRect().top,
                s = i.getBoundingClientRect().left + 10,
                r = this.ui.selection().get();
              wt(function () {
                t.ui.show_node_menu(n, r, o, s);
              }),
                "contextmenu" === e.type && e.preventDefault();
            }
        }),
        (e.prototype.on_document_end_mouseup = function (e) {
          if (
            (e.preventDefault(), !this.drag_manager.get_new_parent_for_node())
          ) {
            var t = this.ui.current_root,
              i = this.ui.get_node_state(t).visibleLastDescendent();
            if (i) {
              var n = this.selection();
              if (this.keymap.match_modifiers([ye])) {
                var o = n.get();
                if (!(o instanceof Bo)) return;
                var s = o.get_node();
                if (i !== s)
                  return (
                    this.ui.blur_cursor(),
                    n.apply(n.select_between(s, i)),
                    e.preventDefault(),
                    !1
                  );
              } else n.set_cursor_to_end_of_node(i);
            } else this.view.ensure_editable(!0);
          }
        }),
        (e.prototype.on_document_focus_before = function (e) {
          e.preventDefault(), e.stopPropagation();
          var t = this.selection(),
            i = this.selection_before_blur;
          t.is_selecting() && (i = t.get()), t.apply(i), this.view.unindent();
        }),
        (e.prototype.on_document_focus_after = function (e) {
          e.preventDefault(), e.stopPropagation();
          var t = this.selection(),
            i = this.selection_before_blur;
          t.is_selecting() && (i = t.get()), t.apply(i), this.view.indent();
        }),
        (e.prototype.on_document_mouseup = function (e) {
          fr(e) && this.drag_to_select.drag_to_select_end();
        }),
        (e.prototype.on_document_mousedown = function () {
          this.controller.is_read_only() &&
            !this.drag_to_select.is_dragging_to_select() &&
            (this.selection().deselect_nodes(), Lr());
        }),
        (e.prototype.on_node_mousedown = function (e) {
          if (fr(e)) {
            var t = this.ui.get_node_from_el(e.target),
              i = this.handle_node_mousedown_modifier(e, t);
            if (null !== i) return i;
            this.drag_to_select.drag_to_select_start(t);
          }
        }),
        (e.prototype.on_node_border_mousedown = function (e) {
          var t = this;
          if (fr(e)) {
            var i = e.currentTarget;
            if (i === e.target) {
              var n = this.ui.get_node_from_el(i),
                o = this.handle_node_mousedown_modifier(e, n);
              if (null !== o) return o;
              var s = zo.select_content(n, 0);
              this.selection().apply(s),
                this.queue(function () {
                  t.selection().apply(s);
                });
            }
          }
        }),
        (e.prototype.on_invoke_second_level_menu = function (e) {
          this.ui.show_second_level_node_menu(e.currentTarget);
        }),
        (e.prototype.on_second_level_menu_parent_mouseenter = function (e) {
          this.ui.start_second_level_menu_hover_timeout(e.currentTarget);
        }),
        (e.prototype.on_second_level_menu_parent_mouseleave = function () {
          this.ui.clear_set_second_level_menu_hover_timeout();
        }),
        (e.prototype.on_non_second_level_menu_mouseenter = function () {
          this.ui.start_second_level_menu_disappear_timeout();
        }),
        (e.prototype.on_second_level_menu_mouseenter = function () {
          this.ui.clear_second_level_menu_disappear_timeout();
        }),
        (e.prototype.on_node_collapse = function () {
          this.view.toggle_selection_collapse(),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_node_zoom = function () {
          var e = this.ui.get_context_menu_node();
          e && this.view.zoom_node(e), this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_node_delete = function () {
          this.ui.get_context_menu_node() &&
            this.view.detach_nodes_for_selection(!0),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_delete_checked_nodes = function () {
          var e = this.ui.get_context_menu_node();
          e && this.view.detach_checked_nodes([e]),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_sort_title_asc = function () {
          var e = this._get_nodes_for_sorting();
          this.view.sort_nodes(e, pr.alphabetical),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_sort_date_asc = function () {
          var e = this._get_nodes_for_sorting();
          this.view.sort_nodes(e, pr.date),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_sort_date_desc = function () {
          var e = this._get_nodes_for_sorting();
          this.view.sort_nodes(e, pr.date_reverse),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_sort_title_desc = function () {
          var e = this._get_nodes_for_sorting();
          this.view.sort_nodes(e, pr.alphabetical_reverse),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_sort_edited_time_desc = function () {
          var e = this._get_nodes_for_sorting();
          this.view.sort_nodes(e, pr.edited_reverse),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_sort_edited_time_asc = function () {
          var e = this._get_nodes_for_sorting();
          this.view.sort_nodes(e, pr.edited),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_sort_checked_status_asc = function () {
          var e = this._get_nodes_for_sorting();
          this.view.sort_nodes(e, pr.checked),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_sort_checked_status_desc = function () {
          var e = this._get_nodes_for_sorting();
          this.view.sort_nodes(e, pr.checked_reverse),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_sort_created_time_desc = function () {
          var e = this._get_nodes_for_sorting();
          this.view.sort_nodes(e, pr.created_reverse),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_sort_created_time_asc = function () {
          var e = this._get_nodes_for_sorting();
          this.view.sort_nodes(e, pr.created),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.onExpandToLevel = function (e) {
          var t = e.currentTarget,
            i = parseInt(t.getAttr("data-level"), 10);
          isNaN(i) && (i = 1),
            this.view.expandToLevel(i),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.onToggleSiblings = function (e) {
          var t = this.ui.get_context_menu_node();
          if (t.has_parent()) {
            var i = t.get_parent().get_children();
            this.view.toggle_nodes_collapse(i.array(), !0),
              this.userspace_ui.hide_context_menu();
          } else this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.onSearchReplaceMenuOptionClick = function () {
          this.ui.openSearchReplaceModal(),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_sort_reverse_current = function () {
          var e = this._get_nodes_for_sorting();
          this.view.sort_nodes(e, pr.current_reverse),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype._get_nodes_for_sorting = function () {
          var e = this.ui.get_context_menu_node(),
            t = this.ui.current_root,
            i = [];
          e.is_root() || e === t
            ? (i = [e])
            : (i = this.selection().get().get_nodes());
          return 1 === i.length ? i[0].get_children().array() : i;
        }),
        (e.prototype.on_node_indent = function () {
          this.view.indent(), this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_node_unindent = function () {
          this.view.unindent(), this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_move_node_click = function () {
          var e = this.selection().get().get_nodes();
          this.userspace_ui.hide_context_menu(),
            this.ui.node_mover.openWithNodes(e);
        }),
        (e.prototype.onInsertTemplateClick = function () {
          var e = this.selection().get().get_nodes();
          this.userspace_ui.hide_context_menu(),
            this.ui.templateFinder.openWithNodes(e);
        }),
        (e.prototype.on_node_add_note = function () {
          var e = this.ui.get_context_menu_node();
          e && this.ui.show_note_for_node(e),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_toggle_descendants_collapse = function () {
          var e = this.ui.get_context_menu_node(),
            t = this.ui.get_node_state(e);
          if (e) {
            var i = this.selection().get(),
              n = [e];
            e.is_root() || t.is_current_root()
              ? (n = e.get_children().array())
              : i instanceof Go && (n = i.get_nodes()),
              this.view.toggle_nodes_collapse(n, !0);
          }
          this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.onToggleCheckbox = function () {
          var e = this.ui.get_context_menu_node(),
            t = this.selection().get().get_nodes();
          e.is_root() && (t = [e]),
            this.view.toggleCheckbox(t),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.onToggleChildrenCheckbox = function () {
          var e = this.ui.get_context_menu_node(),
            t = this.selection().get().get_nodes();
          e.is_root() && (t = [e]),
            this.view.toggleChildrenCheckbox(t),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_toggle_ordered_list = function () {
          var e = this.ui.get_context_menu_node(),
            t = this.selection().get().get_nodes();
          e.is_root() && (t = [e]),
            this.view.toggle_list_style(t),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_node_toggle_check = function () {
          this.view.toggle_checked(this.selection().get().get_nodes()),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_share_root_node = function () {
          var e = this.ui.get_context_menu_node();
          this.userspace_ui.hide_context_menu(),
            e &&
              this.app_document.document
                .get_node_collection()
                .find_node(e.get_id()) &&
              this.userspace_ui.open_sharing_modal_for_file(
                this.app_document.document,
              );
        }),
        (e.prototype.on_get_link = function () {
          var e = this.ui.get_context_menu_node();
          e && this.ui.open_copy_link_popup(e),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.onShowReferences = function () {
          var e = this.ui.get_context_menu_node();
          e && this.ui.showNodeReferences(e),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_export_node = function () {
          var e = this.ui.get_context_menu_node();
          if (e) {
            var t = this.selection().get().get_nodes();
            e.is_root() && (t = [e]),
              this.userspace_ui.export_manager.use_normal_container(),
              this.userspace_ui.export_manager.export_node(
                t,
                this.app_document.get_document(),
              ),
              this.userspace_ui.open_modal("export");
          }
          this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_set_as_inbox = function () {
          var e = this.ui.get_context_menu_node();
          if (
            (this.userspace_view.set_inbox_location_pref(
              e,
              this.app_document.document,
            ),
            e)
          ) {
            var t = e.get_meta_object().get_content();
            this.userspace_ui.popup_message_manager.display_set_inbox_popup(t);
          }
          this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_set_heading_level = function (e) {
          var t = e.currentTarget,
            i = parseInt($(t).data("level"), 10);
          isNaN(i) && (i = 0),
            this.view.toggle_heading_level(
              this.selection().get().get_nodes(),
              i,
            ),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_set_color_label = function (e) {
          var t = e.currentTarget,
            i = parseInt(t.getAttribute("data-color"), 10);
          isNaN(i) && (i = 0),
            this.view.toggle_color_label(this.selection().get().get_nodes(), i),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_node_zoom_icon_click = function (e) {
          var t = e.currentTarget,
            i = this.ui.get_node_from_el(t);
          this.view.zoom_node(i), e.preventDefault();
        }),
        (e.prototype.on_node_toggle_collapsed_icon_click = function (e) {
          var t = e.currentTarget,
            i = this.ui.get_node_from_el(t);
          this.ui.move_selection_up_if_under_node(i),
            this.view.toggle_node_collapse(i),
            e.preventDefault();
        }),
        (e.prototype.on_node_bookmark_icon_click = function (e) {
          this.app.userspace.view.bookmark_current_root_node(),
            e.preventDefault();
        }),
        (e.prototype.on_mobile_node_toggle_collapsed_touchstart = function (e) {
          var t = e.currentTarget;
          t.addClass("is-being-tapped"),
            wt(function () {
              t.addClass("is-tapped");
            }),
            (this.is_dragging_to_scroll = !1);
        }),
        (e.prototype.on_mobile_node_toggle_collapsed_touchmove = function (e) {
          this.is_dragging_to_scroll = !0;
          var t = e.currentTarget;
          t.removeClass("is-being-tapped"),
            wt(function () {
              t.removeClass("is-tapped");
            });
        }),
        (e.prototype.on_mobile_node_toggle_collapsed_touchend = function (e) {
          var t = this;
          if (!this.is_dragging_to_scroll) {
            var i = e.currentTarget;
            if (
              (i.removeClass("is-being-tapped"),
              wt(function () {
                i.removeClass("is-tapped");
              }),
              Vs)
            ) {
              e.stopPropagation(), this.selection().deselect();
              var n = this.ui.scrollbox.get_scroll();
              this.set_timeout(function () {
                return t.ui.scrollbox.set_scroll(n, !1);
              }, 10),
                this.on_node_toggle_collapsed_icon_click(e);
            }
          }
        }),
        (e.prototype.on_node_checkbox_click = function (e) {
          var t = e.currentTarget,
            i = this.ui.get_node_from_el(t);
          i && this.view.toggle_checked([i]);
        }),
        (e.prototype.on_image_mouseenter = function (e) {
          var t = this,
            i = e.currentTarget;
          this.waiting_for_image = !0;
          var n = i.getAttribute("href"),
            o = i.getText(),
            s = i.getBoundingClientRect(),
            r = fish("#inline-image-preview"),
            a = fish("#image-preview-loader"),
            _ = fish("#image-preview-fail"),
            c = setTimeout(function () {
              kr(s, a, { gap: 8 }),
                $(a).on("mouseenter", function () {
                  $(t).hide();
                });
            }, 100);
          yr("#inline-image-preview")
            .attr({ src: n, alt: o })
            .off("load")
            .on("load", function () {
              clearTimeout(c),
                $(a).hide(),
                t.waiting_for_image &&
                  (kr(s, r, { gap: 8 }), (t.waiting_for_image = !1));
            })
            .off("error")
            .on("error", function () {
              clearTimeout(c),
                yr("#image-preview-fail").hide(),
                t.waiting_for_image &&
                  (kr(s, _, { gap: 8 }),
                  $(_).on("mouseenter", function () {
                    $(t).hide();
                  }),
                  (t.waiting_for_image = !1));
            })
            .on("mouseenter", function () {
              $(t).hide();
            });
        }),
        (e.prototype.on_image_mouseleave = function () {
          (this.waiting_for_image = !1),
            yr(
              "#inline-image-preview, #image-preview-loader, #image-preview-fail",
            ).hide();
        }),
        (e.prototype.on_retry_click = function () {
          this.controller.retry_load();
        }),
        (e.prototype.update_search_debounce_timeout = function () {
          var e = this.ui.get_node_collection().get_size();
          e = Math.clamp(e, 0, 2e4);
          var t = 20 * Math.sqrt(Math.sqrt(e));
          this.request_update_search.set_timeout(t);
        }),
        (e.prototype.on_search_changed = function () {
          this.request_update_search();
        }),
        (e.prototype.update_search = function () {
          var e = this.ui.getSearchTerm();
          this.userspace_ui.is_searching_globally_on_mobile()
            ? this.ui.update_clear_search(e)
            : (this.update_search_debounce_timeout(),
              this.userspace_view.get_url_manager().set_search_query(e));
        }),
        (e.prototype.on_node_tag_mousedown = function (e) {
          e.altKey && e.preventDefault();
        }),
        (e.prototype.onCopyCodeBlock = function (e) {
          e.preventDefault(),
            e.stopPropagation(),
            Bt(Ds.get(e.currentTarget) || "")
              ? this.userspace_ui.popup_message_manager.displayDismissibleMessage(
                  "The code snippet was successfully copied.",
                )
              : this.userspace_ui.popup_message_manager.display_error_popup(
                  "Dynalist cannot copy the code snippet because your browser does not support it. Please manually copy.",
                );
        }),
        (e.prototype.on_node_tag_click = function (e) {
          if (
            (e.preventDefault(), !this.drag_to_select.is_dragging_to_select())
          ) {
            e.stopPropagation();
            var t = e.currentTarget;
            if (e.altKey) this.ui.remove_node_inline_element(t);
            else {
              var i = this.ui.view_state_manager,
                n = i.get_current_view_state();
              n.selection === qo &&
                (n.selection = this.selection().getPrevSelection() || qo);
              var o = $(t).text() + " ",
                s = this.ui.get_current_searchbar(),
                r = s.value,
                a = "";
              if (r.toLowerCase().contains(o.toLowerCase())) {
                if (
                  "" === (a = r.replace(new RegExp(Dt(o) + "\\s*", "gi"), ""))
                )
                  return void this.ui.exit_document_search();
              } else
                this.ui.is_searching()
                  ? (this.ui.show_document_searchbar(),
                    r.endsWith(" ") || (r += " "),
                    (a = r + o))
                  : (this.ui.show_document_searchbar(),
                    (a = o),
                    i.setSavedViewState(n));
              (s.value = a), s.dispatchEvent(new Event("change"));
            }
          }
        }),
        (e.prototype.on_search_clear = function () {
          this.ui.exit_document_search();
        }),
        (e.prototype.on_show_search_click = function () {
          this.ui.show_document_searchbar();
        }),
        (e.prototype.on_searchbar_focus = function () {
          this.ui.push_scope_document_search();
        }),
        (e.prototype.on_searchbar_blur = function (e) {
          var t = e.currentTarget;
          "" === $(t).val() && this.ui.start_blur_searchbar_timeout(),
            this.ui.pop_scope_document_search();
        }),
        (e.prototype.on_filter_view_click = function () {
          yr(".view-filter").toggle();
        }),
        (e.prototype.on_undo_touch = function () {
          this.selection().synchronize(),
            this.view.get_history().undo(this.ui.selection());
        }),
        (e.prototype.on_redo_touch = function () {
          this.selection().synchronize(),
            this.view.get_history().redo(this.ui.selection());
        }),
        (e.prototype.on_search_touch = function () {
          this.userspace_ui.enter_document_search_on_mobile();
        }),
        (e.prototype.onSelectMultipleTouch = function () {
          this.ui.toggleMobileMultiselect(), this.ui.node_toolbar.update();
        }),
        (e.prototype.onToggleReadMode = function () {
          this.ui.toggleReadMode();
        }),
        (e.prototype.on_node_toolbar_mousedown = function (e) {
          fr(e) && (e.stopPropagation(), e.preventDefault());
        }),
        (e.prototype.on_document_container_scroll = function () {
          this.userspace_ui.reposition_document_tools(),
            this.ui.on_document_scrolled();
        }),
        (e.prototype.on_document_container_updated = function () {
          this.ui.node_view.update_node_rendering();
        }),
        (e.prototype.on_node_link_click = function (e) {
          this.drag_to_select.is_dragging_to_select() ||
            (e.stopPropagation(), this.on_image_mouseleave());
        }),
        (e.prototype.on_node_link_internal_click = function (e) {
          var n = this;
          if (
            !this.drag_to_select.is_dragging_to_select() &&
            !this.app.config.isAnonymousView()
          ) {
            e.preventDefault(), e.stopPropagation();
            var o = e.currentTarget.href,
              s = this.userspace_view.get_url_manager();
            wt(function () {
              var e = Ls.parse_dynalist_url(o),
                t = e.document_server_id;
              if (t) {
                var i = n.userspace.find_server_file(t);
                if ((i || (i = n.userspace.find_file(t)), !i))
                  return void window.open(o, "_blank");
              }
              s.apply_state(e);
            });
          }
        }),
        (e.prototype.on_open_note_click = function (e) {
          if (!this.drag_to_select.is_dragging_to_select()) {
            var t = e.currentTarget,
              i = this.ui.get_node_from_el(t);
            this.ui.show_note_for_node(i);
          }
        }),
        (e.prototype.onBacklinkCounterClick = function (e) {
          if (!this.drag_to_select.is_dragging_to_select()) {
            var t = e.currentTarget,
              i = this.ui.get_node_from_el(t);
            i && this.ui.showNodeReferences(i);
          }
        }),
        (e.prototype.on_document_dragenter = function (e) {
          if (Zs) {
            if (null !== this.drag_enter_target) return;
            this.drag_enter_target = e.currentTarget;
          } else this.file_drop_counter += 1;
        }),
        (e.prototype.on_document_dragleave = function (e) {
          if (Zs) {
            if (this.drag_enter_target !== e.currentTarget) return;
            (this.drag_enter_target = null),
              this.is_dragging_local_file &&
                ((this.is_dragging_local_file = !1),
                this.userspace_ui.close_modals());
          } else
            (this.file_drop_counter -= 1),
              0 === this.file_drop_counter &&
                this.is_dragging_local_file &&
                ((this.is_dragging_local_file = !1),
                this.userspace_ui.close_modals());
        }),
        (e.prototype.on_document_dragover = function (e) {
          this._is_dragging_file(e) &&
            (this.is_dragging_local_file ||
              ((this.is_dragging_local_file = !0),
              this.userspace_ui.open_modal("file-drop"),
              yr(".modal.file-drop").removeClass("is-uploading is-processing")),
            e.preventDefault(),
            e.stopPropagation());
        }),
        (e.prototype.on_document_drop = function (e) {
          var t = e.originalEvent.dataTransfer;
          if (t.files && 0 !== t.files.length)
            if (
              (e.preventDefault(),
              e.stopPropagation(),
              (this.is_dragging_local_file = !1),
              (this.file_drop_counter = 0),
              this.userspace_view.get_is_pro())
            ) {
              var i = [];
              Array.each(t.files, function (e) {
                e && i.push(new Wo(e));
              }),
                this.ui.drop_to_upload_files(i);
            } else this.userspace_ui.open_modal("file-upload-upsell");
        }),
        (e.prototype.on_app_resume = function () {
          var e = this;
          this.queue(function () {
            e.controller.request_sync();
          });
        }),
        (e.prototype.on_mobile_searchbar_focus = function () {
          this.ui.push_scope_document_search();
        }),
        (e.prototype.on_mobile_searchbar_blur = function (e) {
          var t = e.currentTarget;
          "" === $(t).val() && this.ui.exit_document_search(),
            this.ui.pop_scope_document_search();
        }),
        (e.prototype.on_mobile_search_clear = function () {
          this.ui.clear_mobile_search();
        }),
        (e.prototype.on_global_search_click = function () {
          this.ui.start_global_search();
        }),
        (e.prototype.on_flat_search_click = function () {
          this.ui.start_flat_search();
        }),
        (e.prototype.on_toggle_checked_header_option_click = function () {
          this.view.toggle_checked_items_visibility(),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_toggle_notes_header_option_click = function () {
          this.view.toggle_notes_visibility(),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_upload_file_attachment = function (e) {
          var t = this,
            i = e.currentTarget.files,
            n = [],
            o = this.selection().get();
          if (
            (this.selection().is_selecting() ||
              (o = this.selection_before_blur),
            Array.each(i, function (e) {
              e && n.push(new Wo(e));
            }),
            1 === n.length)
          ) {
            if (o instanceof Bo) {
              var s = this.ui.file_uploader.upload_files(n, "toolbar", o),
                r = s.filename,
                a = s.is_image;
              wt(function () {
                t.selection().apply(o),
                  t.ui.insert_uploaded_file_placeholder_text(r, a);
              });
            }
          } else
            this.userspace_ui.display_error({
              title: "Too many files",
              message: "Please upload one file at a time.",
            });
        }),
        (e.prototype.onReplaceAllClick = function () {
          this.ui.searchReplaceAll();
        }),
        (e.prototype.onConfirmConvertDocument = function (e) {
          e.preventDefault(),
            this.view.convertDocumentToNode(),
            this.userspace_ui.close_modals();
        }),
        (e.prototype.onUndoClick = function (e) {
          e.preventDefault(),
            this.ui.selection().synchronize(),
            this.view.get_history().undo(this.ui.selection());
        }),
        (e.prototype._is_dragging_file = function (e) {
          var t = e.originalEvent.dataTransfer;
          return (
            null != t.types &&
            (t.types.contains("Files") ||
              t.types.contains("application/x-moz-file"))
          );
        }),
        e
      );
    })(To);
  ((Rr = Mr || (Mr = {})).ANY = "any"),
    (Rr.EDITOR = "editor"),
    (Rr.DOCUMENT_SEARCH = "document-search"),
    (Rr.FILE_FINDER = "file-finder"),
    (Rr.NODE_FINDER = "node-finder"),
    (Rr.NODE_MOVER = "node-mover"),
    (Rr.TEMPLATE_FINDER = "template-finder"),
    (Rr.CUSTOMIZE_SHORTCUT = "customize-shortcut"),
    (Rr.POPUP = "popup"),
    (Rr.GLOBAL_SEARCH = "global-search"),
    (Rr.DOCUMENT_FLAT_SEARCH = "document-flat-search"),
    (Rr.FILE_RENAME = "file-rename"),
    (Rr.DATE_PICKER = "datepicker"),
    (Rr.INBOX_CAPTURE = "inbox-capture");
  var Fr = (function () {
      function e(e) {
        this.name = e;
      }
      return (
        (e.prototype.on_push = function () {}),
        (e.prototype.on_pop = function () {
          return null;
        }),
        (e.prototype.get_name = function () {
          return this.name;
        }),
        e
      );
    })(),
    Hr = (function (n) {
      function e(e, t) {
        var i = n.call(this, e) || this;
        return (i.callback = t), i;
      }
      return (
        nt(e, n),
        (e.prototype.on_pop = function () {
          return this.callback();
        }),
        e
      );
    })(Fr),
    zr = (function () {
      function e() {
        (this.scopes = []), this.push_scope(new Fr(Mr.EDITOR));
      }
      return (
        (e.prototype.push_scope = function (e) {
          this.scopes.push(e), e.on_push();
        }),
        (e.prototype.pop_scope = function (e) {
          if (this.is_current_scope(Mr.EDITOR)) return !1;
          if (0 < this.scopes.length) {
            if (!e) return (e = this.scopes.pop()).on_pop();
            if (0 <= this.scopes.indexOf(e))
              return this.scopes.remove(e), e.on_pop();
          }
          return !1;
        }),
        (e.prototype.get_current_scope = function () {
          return 0 < this.scopes.length
            ? this.scopes[this.scopes.length - 1]
            : null;
        }),
        (e.prototype.is_current_scope = function (e) {
          return this.get_current_scope().get_name() === e;
        }),
        (e.prototype.fix_scope_to_editor = function () {
          for (
            ;
            !this.is_current_scope(Mr.EDITOR) && !1 !== this.pop_scope();

          );
        }),
        e
      );
    })(),
    Br = [
      "",
      "",
      "",
      "CANCEL",
      "",
      "",
      "HELP",
      "",
      "BACK_SPACE",
      "TAB",
      "",
      "",
      "CLEAR",
      "ENTER",
      "ENTER_SPECIAL",
      "",
      "SHIFT",
      "CONTROL",
      "ALT",
      "PAUSE",
      "CAPS_LOCK",
      "KANA",
      "EISU",
      "JUNJA",
      "FINAL",
      "HANJA",
      "",
      "ESCAPE",
      "CONVERT",
      "NONCONVERT",
      "ACCEPT",
      "MODECHANGE",
      "SPACE",
      "PAGE_UP",
      "PAGE_DOWN",
      "END",
      "HOME",
      "LEFT",
      "UP",
      "RIGHT",
      "DOWN",
      "SELECT",
      "PRINT",
      "EXECUTE",
      "PRINTSCREEN",
      "INSERT",
      "DELETE",
      "",
      "0",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "COLON",
      "SEMICOLON",
      "LESS_THAN",
      "EQUALS",
      "GREATER_THAN",
      "QUESTION_MARK",
      "AT",
      "A",
      "B",
      "C",
      "D",
      "E",
      "F",
      "G",
      "H",
      "I",
      "J",
      "K",
      "L",
      "M",
      "N",
      "O",
      "P",
      "Q",
      "R",
      "S",
      "T",
      "U",
      "V",
      "W",
      "X",
      "Y",
      "Z",
      "OS_KEY",
      "",
      "CONTEXT_MENU",
      "",
      "SLEEP",
      "NUMPAD0",
      "NUMPAD1",
      "NUMPAD2",
      "NUMPAD3",
      "NUMPAD4",
      "NUMPAD5",
      "NUMPAD6",
      "NUMPAD7",
      "NUMPAD8",
      "NUMPAD9",
      "MULTIPLY",
      "ADD",
      "SEPARATOR",
      "SUBTRACT",
      "DECIMAL",
      "DIVIDE",
      "F1",
      "F2",
      "F3",
      "F4",
      "F5",
      "F6",
      "F7",
      "F8",
      "F9",
      "F10",
      "F11",
      "F12",
      "F13",
      "F14",
      "F15",
      "F16",
      "F17",
      "F18",
      "F19",
      "F20",
      "F21",
      "F22",
      "F23",
      "F24",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "NUM_LOCK",
      "SCROLL_LOCK",
      "WIN_OEM_FJ_JISHO",
      "WIN_OEM_FJ_MASSHOU",
      "WIN_OEM_FJ_TOUROKU",
      "WIN_OEM_FJ_LOYA",
      "WIN_OEM_FJ_ROYA",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "CIRCUMFLEX",
      "EXCLAMATION",
      "DOUBLE_QUOTE",
      "HASH",
      "DOLLAR",
      "PERCENT",
      "AMPERSAND",
      "UNDERSCORE",
      "OPEN_PAREN",
      "CLOSE_PAREN",
      "ASTERISK",
      "PLUS",
      "PIPE",
      "HYPHEN_MINUS",
      "OPEN_CURLY_BRACKET",
      "CLOSE_CURLY_BRACKET",
      "TILDE",
      "",
      "",
      "",
      "",
      "VOLUME_MUTE",
      "VOLUME_DOWN",
      "VOLUME_UP",
      "",
      "",
      "SEMICOLON",
      "EQUALS",
      "COMMA",
      "MINUS",
      "PERIOD",
      "SLASH",
      "BACK_QUOTE",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "OPEN_BRACKET",
      "BACK_SLASH",
      "CLOSE_BRACKET",
      "QUOTE",
      "",
      "META",
      "ALTGR",
      "",
      "WIN_ICO_HELP",
      "WIN_ICO_00",
      "",
      "WIN_ICO_CLEAR",
      "",
      "",
      "WIN_OEM_RESET",
      "WIN_OEM_JUMP",
      "WIN_OEM_PA1",
      "WIN_OEM_PA2",
      "WIN_OEM_PA3",
      "WIN_OEM_WSCTRL",
      "WIN_OEM_CUSEL",
      "WIN_OEM_ATTN",
      "WIN_OEM_FINISH",
      "WIN_OEM_COPY",
      "WIN_OEM_AUTO",
      "WIN_OEM_ENLW",
      "WIN_OEM_BACKTAB",
      "ATTN",
      "CRSEL",
      "EXSEL",
      "EREOF",
      "PLAY",
      "ZOOM",
      "",
      "PA1",
      "WIN_OEM_CLEAR",
      "",
    ],
    Ur = [
      "",
      "",
      "",
      "CANCEL",
      "",
      "",
      "HELP",
      "",
      "⌫",
      "Tab",
      "",
      "",
      "CLEAR",
      "↵",
      "ENTER_SPECIAL",
      "",
      "SHIFT",
      "CONTROL",
      "ALT",
      "PAUSE",
      "CAPS_LOCK",
      "KANA",
      "EISU",
      "JUNJA",
      "FINAL",
      "HANJA",
      "",
      "Esc",
      "CONVERT",
      "NONCONVERT",
      "ACCEPT",
      "MODECHANGE",
      "Space",
      "Page Up",
      "Page Down",
      "End",
      "Home",
      "←",
      "↑",
      "→",
      "↓",
      "SELECT",
      "PRINT",
      "EXECUTE",
      "PRINTSCREEN",
      "Ins",
      "Del",
      "",
      "0",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "COLON",
      ";",
      "LESS_THAN",
      "EQUALS",
      "GREATER_THAN",
      "QUESTION_MARK",
      "AT",
      "A",
      "B",
      "C",
      "D",
      "E",
      "F",
      "G",
      "H",
      "I",
      "J",
      "K",
      "L",
      "M",
      "N",
      "O",
      "P",
      "Q",
      "R",
      "S",
      "T",
      "U",
      "V",
      "W",
      "X",
      "Y",
      "Z",
      "OS_KEY",
      "",
      "CONTEXT_MENU",
      "",
      "SLEEP",
      "Num",
      "NumPad 1",
      "NumPad 2",
      "NumPad 3",
      "NumPad 4",
      "NumPad 5",
      "NumPad 6",
      "NumPad 7",
      "NumPad 8",
      "NumPad 9",
      "MULTIPLY",
      "ADD",
      "SEPARATOR",
      "SUBTRACT",
      "DECIMAL",
      "DIVIDE",
      "F1",
      "F2",
      "F3",
      "F4",
      "F5",
      "F6",
      "F7",
      "F8",
      "F9",
      "F10",
      "F11",
      "F12",
      "F13",
      "F14",
      "F15",
      "F16",
      "F17",
      "F18",
      "F19",
      "F20",
      "F21",
      "F22",
      "F23",
      "F24",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "NUM_LOCK",
      "SCROLL_LOCK",
      "WIN_OEM_FJ_JISHO",
      "WIN_OEM_FJ_MASSHOU",
      "WIN_OEM_FJ_TOUROKU",
      "WIN_OEM_FJ_LOYA",
      "WIN_OEM_FJ_ROYA",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "CIRCUMFLEX",
      "EXCLAMATION",
      "DOUBLE_QUOTE",
      "HASH",
      "DOLLAR",
      "PERCENT",
      "AMPERSAND",
      "UNDERSCORE",
      "OPEN_PAREN",
      "CLOSE_PAREN",
      "ASTERISK",
      "PLUS",
      "PIPE",
      "HYPHEN_MINUS",
      "OPEN_CURLY_BRACKET",
      "CLOSE_CURLY_BRACKET",
      "TILDE",
      "",
      "",
      "",
      "",
      "VOLUME_MUTE",
      "VOLUME_DOWN",
      "VOLUME_UP",
      "",
      "",
      ";",
      "=",
      ",",
      "-",
      ".",
      "/",
      "`",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "[",
      "\\",
      "]",
      "QUOTE",
      "",
      "META",
      "ALTGR",
      "",
      "WIN_ICO_HELP",
      "WIN_ICO_00",
      "",
      "WIN_ICO_CLEAR",
      "",
      "",
      "WIN_OEM_RESET",
      "WIN_OEM_JUMP",
      "WIN_OEM_PA1",
      "WIN_OEM_PA2",
      "WIN_OEM_PA3",
      "WIN_OEM_WSCTRL",
      "WIN_OEM_CUSEL",
      "WIN_OEM_ATTN",
      "WIN_OEM_FINISH",
      "WIN_OEM_COPY",
      "WIN_OEM_AUTO",
      "WIN_OEM_ENLW",
      "WIN_OEM_BACKTAB",
      "ATTN",
      "CRSEL",
      "EXSEL",
      "EREOF",
      "PLAY",
      "ZOOM",
      "",
      "PA1",
      "WIN_OEM_CLEAR",
      "",
    ];
  function jr(e) {
    return Ur[e] ? Ur[e] : "KEYCODE_" + e;
  }
  var Gr,
    qr,
    $r,
    Wr,
    Yr = (function () {
      function _(e, t) {
        var i = this;
        (this.$element = e),
          (this.scope = t),
          (this.event_handlers = {}),
          (this.event_handlers.keydown = []),
          (this.event_handlers.keyup = []),
          this.$element.on("keydown", function (e) {
            return i.on_key_event(e, "keydown");
          }),
          this.$element.on("keyup", function (e) {
            return i.on_key_event(e, "keyup");
          });
      }
      return (
        (_.prototype.on_key_event = function (t, e) {
          var i = this,
            n = (function e(t) {
              return (
                "number" != typeof t.which && (t.which = t.keyCode), t.which
              );
            })(t),
            o = (function e(t) {
              return Br[t] ? Br[t] : "KEYCODE_" + t;
            })(n),
            s = this.modifiers;
          if ((this.update_modifiers(t), !this.is_modifier_key(o))) {
            Xs &&
              (n === l.ESC &&
                "" === this.modifiers &&
                s === _.compile_modifiers([we]) &&
                ((this.modifiers = s), (n = l.PERIOD)),
              "" === s &&
                this.modifiers === _.compile_modifiers([ye]) &&
                (this.modifiers = ""));
            var r = this.get_event_handlers(e, n);
            return each(r, function (e) {
              if (!1 === e.func(t, n, i.modifiers)) return !1;
            });
          }
        }),
        (_.prototype.update_modifiers = function (e) {
          this.modifiers = this.get_event_modifiers(e);
        }),
        (_.prototype.get_event_handlers = function (e, t) {
          var i = this.scope.get_current_scope().get_name(),
            n = this.modifiers,
            o = this.event_handlers[e],
            s = [],
            r = [];
          return (
            Array.each(o, function (e) {
              (e.key && e.key !== t) ||
                (null !== e.modifiers && e.modifiers !== n) ||
                (e.scopes.contains(i)
                  ? s.push(e)
                  : e.scopes.contains(Mr.ANY) && r.push(e));
            }),
            s.concat(r)
          );
        }),
        (_.prototype.on = function (e, t, i, n, o) {
          var s = null;
          t && (s = _.compile_modifiers(t)), o || (o = Mr.ANY);
          var r = {
            modifiers: s,
            key: i,
            func: n,
            scope: o,
            scopes: Array.isArray(o) ? o : [o],
          };
          return this.event_handlers[e].push(r), r;
        }),
        (_.prototype.off = function (e, t, i, n, o) {
          t && (t = _.compile_modifiers(t));
          for (var s = this.event_handlers[e], r = s.length - 1; 0 <= r; r--) {
            var a = s[r];
            a.modifiers === t &&
              a.key === i &&
              a.func === n &&
              a.scope === o &&
              s.splice(r, 1);
          }
        }),
        (_.prototype.offref = function (e, t) {
          this.event_handlers[e].remove(t);
        }),
        (_.prototype.get_event_modifiers = function (e) {
          var t = [];
          return (
            e.ctrlKey && t.push(ve),
            e.metaKey && t.push(ke),
            e.altKey && t.push(be),
            e.shiftKey && t.push(ye),
            _.compile_modifiers(t)
          );
        }),
        (_.compile_modifiers = function (e) {
          return (e = e.map(function (e) {
            return e === we ? ("MacOS" == Ys ? ke : ve) : e;
          }))
            .sort()
            .join(",");
        }),
        (_.decompile_modifiers = function (e) {
          return e
            .split(",")
            .map(function (e) {
              return "MacOS" == Ys && e === ke
                ? we
                : "MacOS" != Ys && e === ve
                ? we
                : e;
            })
            .filter(function (e) {
              return e;
            });
        }),
        (_.prototype.is_modifier_key = function (e) {
          return (
            "CONTROL" === e ||
            "ALT" === e ||
            "SHIFT" === e ||
            "OS_KEY" === e ||
            "META" === e
          );
        }),
        (_.prototype.match_modifiers = function (e) {
          return this.modifiers === _.compile_modifiers(e);
        }),
        (_.prototype.clear_last_modifiers = function () {
          this.modifiers = "";
        }),
        _
      );
    })(),
    Kr = (function (n) {
      function e(e, t) {
        var i = n.call(this, "DocumentDragManager", e, t) || this;
        return (
          (i.events = i.submodule(new Eo())),
          (i.interval_manager = i.submodule(new Oo(e, t))),
          i
        );
      }
      return (
        nt(e, n),
        (e.prototype._init_dependencies = function () {
          (this.ui = this.app_document.ui),
            (this.document_view = this.app_document.view),
            (this.controller = this.app_document.controller),
            (this.userspace_ui = this.app.userspace.ui);
        }),
        (e.prototype._init_fields = function () {
          (this.mouse_events = new Eo()),
            (this.touch_events = new Eo()),
            (this.new_parent_for_node = null),
            (this.new_index_for_node = null),
            (this.start_pos = null),
            (this.dragged_nodes_selection = null),
            (this.left_pane_el = yr(".LeftPaneContainer")),
            (this.node_el_with_divider = null),
            (this.drag_indicator = createEl("div", { cls: "drag-indicator" })),
            (this.file_being_dragged = null),
            (this.is_dragging = !1),
            (this.touch_drag_timer = 0),
            (this.scroll_amount = 0),
            (this.scroll_timer = 0);
        }),
        (e.prototype._init_after = function () {
          var e = document;
          this.mouse_events.register_event_listener(
            e,
            "mousemove",
            this.on_mousemove.bind(this),
          ),
            this.mouse_events.register_event_listener(
              e,
              "mouseup",
              this.on_mouseup.bind(this),
            ),
            this.touch_events.register_event_listener(
              e,
              "touchmove",
              this.on_touchmove.bind(this),
              { passive: !1 },
            ),
            this.touch_events.register_event_listener(
              e,
              "touchend",
              this.on_touchend.bind(this),
            );
          var t = this.events.make_context_on_off(fish(".Document"));
          this.events.register_with_context_array(t, [
            ["mousedown", ".Node-bullet", this.on_mousedown.bind(this)],
            ["touchstart", ".Node-bullet", this.on_touchstart.bind(this)],
            [
              "mouseenter",
              ".Node-bullet",
              this.on_node_bullet_mouseenter.bind(this),
            ],
            [
              "mouseleave",
              ".Node-bullet",
              this.on_node_bullet_mouseleave.bind(this),
            ],
          ]);
        }),
        (e.prototype.on_mousedown = function (e, t) {
          if (gr(e) && !Vs && this.drag_init(t)) {
            e.preventDefault();
            var i = Ci(e);
            (this.start_pos = i), this.mouse_events.hook_events();
          }
        }),
        (e.prototype.on_mousemove = function (e) {
          var t = Ci(e);
          !this.is_dragging &&
            ki(this.start_pos, t) > _ &&
            ((this.is_dragging = !0), this.drag_start()),
            this.is_dragging && this.drag_move(e, t, !1);
        }),
        (e.prototype.on_mouseup = function (e) {
          gr(e) &&
            (this.drag_end(e),
            (this.is_dragging = !1),
            (this.start_pos = null),
            this.mouse_events.unhook_events());
        }),
        (e.prototype.on_touchstart = function (e, t) {
          var i = this;
          if (Vs && this.drag_init(t)) {
            var n = Ti(e);
            (this.start_pos = n),
              this.touch_events.hook_events(),
              clearTimeout(this.touch_drag_timer),
              (this.touch_drag_timer = this.set_timeout(function () {
                (i.is_dragging = !0),
                  i.drag_start(),
                  i.userspace_ui.vibrate_phone();
              }, I));
          }
        }),
        (e.prototype.on_touchmove = function (e) {
          var t = Ti(e);
          this.is_dragging
            ? (e.preventDefault(), this.drag_move(e, t, !0))
            : ki(this.start_pos, t) > u &&
              ((this.start_pos = null),
              this.touch_events.unhook_events(),
              clearTimeout(this.touch_drag_timer));
        }),
        (e.prototype.on_touchend = function (e) {
          if (!this.is_dragging && Vs) {
            e.stopPropagation(), e.preventDefault();
            var t = this.ui.get_node_from_el(e.target);
            t && this.document_view.zoom_node(t);
          }
          this.drag_end(e),
            (this.is_dragging = !1),
            (this.start_pos = null),
            this.touch_events.unhook_events(),
            clearTimeout(this.touch_drag_timer);
        }),
        (e.prototype.on_node_bullet_mouseenter = function (e, t) {
          var i = this.ui.get_node_from_el(t),
            n = this.selection().get();
          n instanceof Go &&
            n.is_node_inside(i) &&
            !this.controller.is_read_only() &&
            this.userspace_ui.set_cursor_state(Se);
        }),
        (e.prototype.on_node_bullet_mouseleave = function () {
          this.userspace_ui.set_cursor_state(De);
        }),
        (e.prototype.drag_init = function (e) {
          if (this.controller.is_read_only()) return !1;
          var t = this.ui.get_node_from_el(e);
          return !!t && (this.start_drag_node(t), !0);
        }),
        (e.prototype.drag_start = function () {
          this.userspace_ui.set_cursor_state(Ne);
        }),
        (e.prototype.drag_move = function (e, t, i) {
          var n = this.ui.selection(),
            o = n.get();
          o !== this.dragged_nodes_selection &&
            n.apply(this.dragged_nodes_selection);
          var s =
            this.app.keymap.get_event_modifiers(e) ===
            Yr.compile_modifiers([we]);
          this.drag_nodes(t),
            this.show_drag_indicator(t, i, o.get_nodes().length, s);
        }),
        (e.prototype.drag_end = function (e) {
          this.edge_scroll_stop(),
            this.userspace_ui.set_cursor_state(De),
            this.end_drag_node(e),
            this.userspace_ui.drag_manager.end_drag_file(),
            this.userspace_ui.drag_manager.hide_drop_indicator_for_node();
        }),
        (e.prototype.end_drag_node = function (e) {
          if (!this.controller.is_read_only()) {
            this.hide_node_divider(), this.hide_drag_indicator();
            var t = this.new_parent_for_node,
              i = this.new_index_for_node;
            if (null !== this.dragged_nodes_selection) {
              if (t) {
                var n =
                    this.app.keymap.get_event_modifiers(e) ===
                    Yr.compile_modifiers([we]),
                  o = this.selection(),
                  s = o.get();
                if (s instanceof Go)
                  if (n) {
                    var r = s.get_nodes();
                    this.document_view.clone_nodes(r, t, i);
                  } else
                    this.document_view.move_nodes(s.get_nodes(), t, i),
                      o.apply(s);
              }
              return (
                (this.dragged_nodes_selection = null),
                this.reset(),
                e.stopPropagation(),
                !1
              );
            }
            if (this.file_being_dragged && t) {
              var a = this.file_being_dragged;
              return (
                this.document_view.attemptConvertDocumentToNode(a, t, i),
                this.reset(),
                e.stopPropagation(),
                !1
              );
            }
            this.reset();
          }
        }),
        (e.prototype.is_dragging_node = function () {
          return this.is_dragging && null !== this.dragged_nodes_selection;
        }),
        (e.prototype.get_new_parent_for_node = function () {
          return this.new_parent_for_node;
        }),
        (e.prototype.selection = function () {
          return this.ui.selection();
        }),
        (e.prototype.get_dragged_nodes = function () {
          return this.dragged_nodes_selection
            ? this.dragged_nodes_selection.get_nodes()
            : [];
        }),
        (e.prototype.under_current_selection = function (t) {
          return this.get_dragged_nodes().some(function (e) {
            return t === e || t.has_ancestor(e);
          });
        }),
        (e.prototype.node_drop_location = function (a, _) {
          var c = this;
          this.file_being_dragged ||
            this.userspace_ui.drag_manager.hide_drop_indicator_for_node();
          for (var l = null, u = this.ui.current_root; u; ) {
            var e = u;
            if (
              ((u = null),
              e.get_children().each(function (e) {
                if (!c.under_current_selection(e)) {
                  var t = c.ui.get_node_state(e);
                  if (t.is_visible() && t.dom.cursor_hit_node(null, _)) {
                    if (((u = e), t.dom.cursor_hit_node_children(null, _)))
                      return !1;
                    var i = $(t.dom.self_el),
                      n = i.offset().top + i.height() / 2;
                    if (_ < n) {
                      l = { node_state: t, position: "first" };
                      var o = c.ui.get_node_state(t.visiblePrev()),
                        s = t.visiblePrevSibling();
                      o &&
                        s &&
                        o.node === s &&
                        o.dom.cursor_hit_inner_children(a) &&
                        !o.hasVisibleChildren() &&
                        (l = { node_state: o, position: "inner" });
                    } else if (
                      t.dom.cursor_hit_node_self(null, _) &&
                      t.hasVisibleChildren()
                    ) {
                      var r = t.visibleFirstChild();
                      if (c.under_current_selection(r)) return !1;
                      l = {
                        node_state: c.ui.get_node_state(r),
                        position: "first",
                      };
                    } else
                      l =
                        t.dom.cursor_hit_inner_children(a) &&
                        !t.hasVisibleChildren()
                          ? { node_state: t, position: "inner" }
                          : { node_state: t, position: "second" };
                    return !1;
                  }
                }
              }),
              l)
            )
              break;
          }
          return l;
        }),
        (e.prototype.drag_nodes = function (e) {
          if (this.is_dragging_node() || this.file_being_dragged) {
            this.edge_scroll_stop(), this.hide_node_divider();
            var t = this.get_dragged_nodes();
            if (
              !(e.x < this.left_pane_el.width()) ||
              this.userspace_ui.is_mobile_view()
            ) {
              this.check_edge_scroll(e.y);
              var i = this.node_drop_location(e.x, e.y);
              if (i) {
                var n = i.node_state;
                if (!n.get_node() || !n.get_node().has_parent()) return;
                var o = i.position,
                  s = n.get_node(),
                  r = s.get_index(),
                  a = !0,
                  _ = s;
                if (!this.file_being_dragged) {
                  var c = this.dragged_nodes_selection.get_first_node(),
                    l = this.dragged_nodes_selection.get_last_node(),
                    u = this.ui.get_node_state(c).visiblePrevSibling(),
                    h = this.ui.get_node_state(l).visibleNextSibling();
                  "second" == o &&
                  c.prev() &&
                  c.prev() === _ &&
                  this.ui.get_node_state(c.prev()).hasVisibleChildren()
                    ? (a = !1)
                    : u === _ && "second" === o
                    ? (a = !1)
                    : h === _ && "first" === o
                    ? (a = !1)
                    : (_ !== c && _ !== l) || (a = !1);
                }
                if (a) {
                  var p = null,
                    d = "top";
                  if ("first" === o) {
                    var f = n.visiblePrevSibling();
                    f
                      ? ((p = this.ui.get_node_state(f)), (d = "bottom"))
                      : (p = n),
                      (this.new_parent_for_node = s.get_parent()),
                      (this.new_index_for_node = r);
                  } else if ("second" === o)
                    (p = n),
                      (d = "bottom"),
                      (this.new_parent_for_node = s.get_parent()),
                      (this.new_index_for_node = r + 1);
                  else if ("inner" === o) {
                    this.new_parent_for_node = s;
                    var g = this.app.preferences.get(
                      Ps.MOVE_ITEM_SEND_TO_POSITION,
                    );
                    "bottom" === g
                      ? (this.new_index_for_node = s.num_children())
                      : "top" === g && (this.new_index_for_node = 0),
                      (p = n),
                      (d = "inner");
                  }
                  this.show_node_divider(p, d);
                }
              } else this.reset();
            } else
              this.userspace_ui.drag_manager.show_drop_indicator_for_node(
                this.app_document.get_document(),
                t,
                e,
              );
          }
        }),
        (e.prototype.start_drag_node = function (e) {
          if (e) {
            var t = this.selection().get();
            t instanceof Go && t.is_node_inside(e)
              ? (this.dragged_nodes_selection = t)
              : (this.dragged_nodes_selection = zo.select_multi_node(e));
          }
        }),
        (e.prototype.reset = function () {
          this.new_parent_for_node = this.new_index_for_node = null;
        }),
        (e.prototype.check_edge_scroll = function (e) {
          var t = O,
            i = D,
            n = x,
            o = A,
            s = $(window).height(),
            r = yr(".AppHeader").height();
          if (e < t + r) {
            var a = n + (o - n) * Math.min(1, (t + r - e) / t);
            this.edge_scroll_start(-a, i);
          }
          if (s - t < e) {
            a = n + (o - n) * Math.min(1, (e - (s - t)) / t);
            this.edge_scroll_start(a, i);
          }
        }),
        (e.prototype.edge_scroll_start = function (e, t) {
          this.scroll_timer && this.edge_scroll_stop(),
            (this.scroll_amount = e),
            (this.scroll_timer = this.interval_manager.set_interval(
              this.edge_scroll.bind(this),
              t,
            )),
            this.edge_scroll();
        }),
        (e.prototype.edge_scroll_stop = function () {
          this.interval_manager.clear_interval(this.scroll_timer),
            (this.scroll_amount = 0),
            (this.scroll_timer = 0);
        }),
        (e.prototype.edge_scroll = function () {
          var e = this.ui.get_document_container_el().get(0);
          e.scrollTop = e.scrollTop + this.scroll_amount;
        }),
        (e.prototype.show_drag_indicator = function (e, t, i, n) {
          var o = this.drag_indicator;
          if (this.selection().get() instanceof Go) {
            var s = e.x,
              r = e.y;
            t && ((s -= 60), (r += 30)),
              o.setText(
                (function e(t, i) {
                  void 0 === i && (i = !1);
                  var n = i ? "Copy" : "Move";
                  return 0 === t
                    ? ""
                    : 1 === t
                    ? n + " 1 item"
                    : n + " " + t + " items";
                })(i, n),
              ),
              (o.style.left = s + "px"),
              (o.style.top = r + "px"),
              o.parentNode || this.userspace_ui.app_container.appendChild(o);
          }
        }),
        (e.prototype.hide_drag_indicator = function () {
          this.drag_indicator.detach();
        }),
        (e.prototype.drag_to_document = function (e, t, i) {
          e
            ? ((this.file_being_dragged = e),
              this.show_drag_indicator(t, i, 1, !1),
              this.drag_nodes(t))
            : ((this.file_being_dragged = null), this.hide_drag_indicator());
        }),
        (e.prototype.show_node_divider = function (e, t) {
          this.hide_node_divider(),
            (this.node_el_with_divider = e.dom.node_el),
            "inner" === t
              ? this.node_el_with_divider.addClass(
                  "is-showing-bottom-children-divider",
                )
              : "top" === t
              ? this.node_el_with_divider.addClass("is-showing-top-divider")
              : "bottom" === t &&
                this.node_el_with_divider.addClass("is-showing-bottom-divider");
        }),
        (e.prototype.hide_node_divider = function () {
          this.node_el_with_divider &&
            (this.node_el_with_divider.removeClasses([
              "is-showing-top-divider",
              "is-showing-bottom-divider",
              "is-showing-bottom-children-divider",
            ]),
            (this.node_el_with_divider = null));
        }),
        e
      );
    })(To),
    Vr = (function (i) {
      function e(e, t) {
        return i.call(this, "DocumentDragToSelect", e, t) || this;
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          this.document_ui = this.app_document.ui;
        }),
        (e.prototype._init_fields = function () {
          (this.mouse_events = new Eo()),
            (this.dragging_to_select = !1),
            (this.start_node = null),
            (this.selection = null);
        }),
        (e.prototype._init_after = function () {
          var e = document;
          this.mouse_events.register_event_listener(
            e,
            "mousemove",
            this.on_drag_to_select_mousemove.bind(this),
          );
        }),
        (e.prototype.drag_to_select_start = function (e, t) {
          var i = this;
          (this.start_node = e),
            this.mouse_events.hook_events(),
            t
              ? (this.selection = t)
              : this.queue(function () {
                  var e = i.document_ui.selection();
                  e.auto_update(), (i.selection = e.get());
                });
        }),
        (e.prototype.drag_to_select_end = function () {
          this.document_ui.drag_manager.edge_scroll_stop(),
            this.mouse_events.unhook_events(),
            (this.start_node = null),
            (this.selection = null),
            (this.dragging_to_select = !1),
            this.document_ui.enable_copying_on_safari();
        }),
        (e.prototype.on_drag_to_select_mousemove = function (e) {
          this.document_ui.drag_manager.edge_scroll_stop();
          var t = this.get_currently_on_node(e.pageY);
          if (t && (!(t instanceof zn) || t.has_parent())) {
            var i = this.start_node;
            if (!this.document_ui.get_node_state(i).is_current_root()) {
              var n = t !== i;
              this.dragging_to_select = n;
              var o = null,
                s = this.document_ui.selection();
              if (
                (n
                  ? ((o = s.select_between(this.start_node, t)),
                    this.document_ui.drag_manager.check_edge_scroll(e.pageY))
                  : (o = this.selection),
                o)
              ) {
                var r = s.get();
                if (
                  r &&
                  r instanceof Bo &&
                  o instanceof Bo &&
                  r.get_node() === o.get_node()
                )
                  return;
                o !== s.get() && s.apply(o);
              }
            }
          }
        }),
        (e.prototype.is_dragging_to_select = function () {
          return this.dragging_to_select;
        }),
        (e.prototype.get_currently_on_node = function (e) {
          var t = this.document_ui.current_root_node_state;
          if (!t) return null;
          var i = this.hit_node(e);
          if (!i) {
            var n = t.visibleFirstChild(),
              o = t.visibleLastDescendent();
            if (n) {
              var s = this.document_ui.get_node_state(n);
              if (e < (r = $(s.dom.self_el)).offset().top - 5) return n;
            }
            if (o) {
              var r;
              s = this.document_ui.get_node_state(o);
              if ((r = $(s.dom.self_el)).offset().top + r.height() + 5 <= e)
                return o;
            }
          }
          return i;
        }),
        (e.prototype.hit_node = function (i) {
          for (var n = this, o = this.document_ui.current_root, s = null; o; ) {
            var e = o;
            if (
              ((o = null),
              e.get_children().each(function (e) {
                var t = n.document_ui.get_node_state(e);
                if (t.is_visible() && t.dom.cursor_hit_node(null, i))
                  return (
                    (o = e),
                    t.dom.cursor_hit_node_children(null, i) || (s = e),
                    !1
                  );
              }),
              s)
            )
              break;
          }
          return s;
        }),
        e
      );
    })(To),
    Xr =
      (((Gr = {})[we] = "⌘"),
      (Gr[ve] = "⌃"),
      (Gr[ye] = "⇧"),
      (Gr[be] = "⌥"),
      Gr),
    Zr =
      (((qr = {})[we] = "Ctrl+"),
      (qr[ve] = "Ctrl+"),
      (qr[ye] = "Shift+"),
      (qr[be] = "Alt+"),
      qr),
    Jr =
      ((($r = {})[we] = "CommandOrControl+"),
      ($r[ke] = "Command+"),
      ($r[ve] = "Control+"),
      ($r[ye] = "Shift+"),
      ($r[be] = "Alt+"),
      $r),
    Qr = [we, ke, ve, be, ye],
    ea = (function () {
      function t(e, t) {
        (this.modifiers = e), (this.key = t);
      }
      return (
        (t.prototype.to_string = function () {
          var t = this;
          if (0 === this.modifiers.length && null === this.key) return "Blank";
          var i = "",
            n = "MacOS" == Ys ? Xr : Zr;
          return (
            Array.each(Qr, function (e) {
              t.modifiers.contains(e) && (i += n[e]);
            }),
            (i += jr(this.key))
          );
        }),
        (t.prototype.to_electron_accelerator = function () {
          var t = this;
          if (0 === this.modifiers.length && null === this.key) return "Blank";
          var i = "";
          return (
            Array.each(Qr, function (e) {
              t.modifiers.contains(e) && (i += Jr[e]);
            }),
            (i += jr(this.key))
          );
        }),
        (t.serialize = function (e) {
          return Array.isArray(e)
            ? e.map(function (e) {
                return t.serialize(e);
              })
            : { key: e.key, modifiers: e.modifiers };
        }),
        (t.deserialize = function (e) {
          return Array.isArray(e)
            ? e.map(function (e) {
                return t.deserialize(e);
              })
            : new t(e.modifiers, e.key);
        }),
        t
      );
    })(),
    ta = (function (t) {
      function e(e) {
        return t.call(this, "ShortcutKeyManager", e) || this;
      }
      return (
        nt(e, t),
        (e.prototype._init_dependencies = function () {}),
        (e.prototype._init_fields = function () {
          (this.shortcut_override = {}),
            (this.enable_overrides = !1),
            (this.layout_override_locale = null),
            (this.shortcut_event_managers = []),
            (this.is_using_workflowy_shortcuts = !1);
        }),
        (e.prototype.set_enable_overrides = function (e) {
          this.enable_overrides = e;
        }),
        (e.prototype.set_is_using_workflowy_shortcuts = function (e) {
          this.is_using_workflowy_shortcuts = e;
        }),
        (e.prototype.add_shortcut_event_manager = function (e) {
          this.shortcut_event_managers.push(e);
        }),
        (e.prototype.remove_shortcut_event_manager = function (e) {
          this.shortcut_event_managers.remove(e);
        }),
        (e.prototype.rehook_shortcut_event_managers = function () {
          each(this.shortcut_event_managers, function (e) {
            e.hook();
          });
        }),
        (e.prototype.set_all_overrides = function (e) {
          var i = this;
          (this.shortcut_override = {}),
            each(e, function (e, t) {
              i.shortcut_override[t] = ea.deserialize(e);
            }),
            this.rehook_shortcut_event_managers();
        }),
        (e.prototype.has_override = function (e) {
          return (
            this.enable_overrides && this.shortcut_override.hasOwnProperty(e)
          );
        }),
        (e.prototype.set_layout_override_locale = function (e) {
          (this.layout_override_locale = e),
            this.rehook_shortcut_event_managers();
        }),
        (e.prototype.get_shortcuts = function (e) {
          if (this.has_override(e)) return this.shortcut_override[e];
          if (aa.hasOwnProperty(this.layout_override_locale)) {
            var t = aa[this.layout_override_locale];
            if (t.hasOwnProperty(e)) return t[e];
          }
          return this.is_using_workflowy_shortcuts && ca.hasOwnProperty(e)
            ? ca[e]
            : sa[e];
        }),
        (e.prototype.get_cloned_shortcuts = function (e) {
          return ea.deserialize(ea.serialize(this.get_shortcuts(e)));
        }),
        e
      );
    })(To),
    ia = (function (t) {
      function e(e) {
        return t.call(this, "ShortcutEventManager", e) || this;
      }
      return (
        nt(e, t),
        (e.prototype._init_dependencies = function () {
          (this.shortcut_manager = this.app.shortcuts),
            (this.keymap = this.app.keymap);
        }),
        (e.prototype._init_fields = function () {
          (this.named_shortcuts = {}), (this.unnamed_shortcuts = []);
        }),
        (e.prototype._load = function () {
          this.shortcut_manager.add_shortcut_event_manager(this), this.hook();
        }),
        (e.prototype._unload = function () {
          this.unhook(),
            this.shortcut_manager.remove_shortcut_event_manager(this);
        }),
        (e.prototype.register_named = function (e, t, i, n) {
          var o = this.named_shortcuts[e];
          o && this._unhook_single_action(o),
            (this.named_shortcuts[e] = {
              id: e,
              event: t,
              callback: i,
              scope: n,
              refs: [],
            });
        }),
        (e.prototype.register_unnamed = function (e, t, i, n) {
          this.unnamed_shortcuts.push({
            shortcuts: e,
            event: t,
            callback: i,
            scope: n,
            refs: [],
          });
        }),
        (e.prototype.hook = function () {
          each(this.named_shortcuts, this._hook_single_action.bind(this)),
            each(this.unnamed_shortcuts, this._hook_single_action.bind(this));
        }),
        (e.prototype.unhook = function () {
          each(this.named_shortcuts, this._unhook_single_action.bind(this)),
            each(this.unnamed_shortcuts, this._unhook_single_action.bind(this));
        }),
        (e.prototype._hook_single_action = function (e) {
          var i = this;
          this._unhook_single_action(e);
          var t = e.id,
            n = e.shortcuts,
            o = e.event,
            s = e.callback,
            r = e.scope,
            a = e.refs;
          t && (n = this.shortcut_manager.get_shortcuts(t)),
            n &&
              (n instanceof ea && (n = [n]),
              each(n, function (e) {
                var t = i.keymap.on(o, e.modifiers, e.key, s, r);
                a.push(t);
              }));
        }),
        (e.prototype._unhook_single_action = function (t) {
          var i = this;
          each(t.refs, function (e) {
            i.keymap.offref(t.event, e);
          }),
            (t.refs = []);
        }),
        e
      );
    })(To),
    na = {},
    oa = {},
    sa = {},
    ra = function (e, t, i, n) {
      return (
        void 0 === i && (i = !0),
        void 0 === n && (n = !1),
        (sa[e] = t),
        (oa[e] = { customizable: i, allow_in_read_only: n }),
        e
      );
    };
  (na.APP_GO_ANYWHERE = ra("app-go-anywhere", new ea([we], l.O))),
    (na.APP_GOTO_ITEM = ra("app-goto-item", new ea([we, ye], l.O))),
    (na.APP_INBOX_CAPTURE = ra("app-inbox-capture", new ea([we, ye], l.I))),
    (na.APP_GOTO_INBOX = ra("app-goto-inbox", [])),
    (na.APP_TOGGLE_FILE_PANE = ra(
      "app-toggle-file-pane",
      new ea([we, ye], l.F),
    )),
    (na.APP_TOGGLE_BOOKMARK_PANE = ra(
      "app-toggle-bookmark-pane",
      new ea([we, ye], l.B),
    )),
    (na.APP_TOGGLE_TAG_PANE = ra("app-toggle-tag-pane", [])),
    (na.APP_TOGGLE_SHORTCUT_HELP = ra(
      "app-toggle-shortcut-help",
      [new ea([we], l.SLASH), new ea([we, ye], l.SLASH)],
      !0,
      !0,
    )),
    (na.APP_SAVE = ra("app-save", new ea([we], l.S))),
    (na.APP_TOGGLE_SHOW_CHECKED = ra("app-toggle-show-checked", [])),
    (na.DOC_TOGGLE_SHOW_CHECKED = ra("doc-toggle-show-checked", [])),
    (na.APP_TOGGLE_SHOW_NOTES = ra("app-toggle-show-notes", [])),
    (na.APP_OPEN_SETTINGS = ra("app-open-settings", new ea([we], l.COMMA))),
    (na.DOC_TOGGLE_SHOW_NOTES = ra("doc-toggle-show-notes", [])),
    (na.DOC_INDENT = ra("doc-indent", new ea([], l.TAB))),
    (na.DOC_UNINDENT = ra("doc-unindent", new ea([ye], l.TAB))),
    (na.DOC_DELETE_LEFT = ra("doc-delete-left", new ea([we, ye], l.BACKSPACE))),
    (na.DOC_DELETE_RIGHT = ra("doc-delete-right", new ea([we, ye], l.DELETE))),
    (na.DOC_SWAP_UP = ra("doc-swap-up", new ea([we], l.UP))),
    (na.DOC_SWAP_DOWN = ra("doc-swap-down", new ea([we], l.DOWN))),
    (na.DOC_DUPLICATE_NODE = ra("doc-duplicate", [])),
    (na.DOC_ZOOM_PREV_SIBLING = ra(
      "doc-zoom-prev-sibling",
      new ea([we, ye], l.LBRACK),
    )),
    (na.DOC_ZOOM_NEXT_SIBLING = ra(
      "doc-zoom-next-sibling",
      new ea([we, ye], l.RBRACK),
    )),
    (na.DOC_GOTO_PARENT = ra("doc-goto-parent", [])),
    (na.DOC_GOTO_PREV_SIBLING = ra("doc-goto-prev-sibling", [])),
    (na.DOC_GOTO_NEXT_SIBLING = ra("doc-goto-next-sibling", [])),
    (na.DOC_SELECT_UP = ra("doc-select-up", new ea([ye], l.UP))),
    (na.DOC_SELECT_DOWN = ra("doc-select-down", new ea([ye], l.DOWN))),
    (na.DOC_COLLAPSE = ra("doc-collapse", new ea([we], l.PERIOD))),
    (na.DOC_COLLAPSE_ALL = ra("doc-collapse-all", [
      new ea([we, ye], l.PERIOD),
    ])),
    (na.DOC_TOGGLE_SIBLINGS = ra("doc-toggle-siblings", [])),
    (na.DOC_EXPAND_TO_LEVEL_ONE = ra("doc-expand-to-level-1", [])),
    (na.DOC_EXPAND_TO_LEVEL_TWO = ra("doc-expand-to-level-2", [])),
    (na.DOC_EXPAND_TO_LEVEL_THREE = ra("doc-expand-to-level-3", [])),
    (na.DOC_EXPAND_TO_LEVEL_FOUR = ra("doc-expand-to-level-4", [])),
    (na.DOC_GOTO_NOTES = ra("doc-goto-notes", new ea([ye], l.ENTER))),
    (na.DOC_TOGGLE_CHECKED = ra("doc-toggle-checked", new ea([we], l.ENTER))),
    (na.DOC_UNCHECK_CHILDREN = ra("doc-uncheck-children", [])),
    (na.DOC_ZOOM_OUT = ra("doc-zoom-out", new ea([we], l.LBRACK))),
    (na.DOC_ZOOM_IN = ra("doc-zoom-in", new ea([we], l.RBRACK))),
    (na.DOC_GOTO_FIRST = ra("doc-goto-first", new ea([we], l.HOME))),
    (na.DOC_GOTO_LAST = ra("doc-goto-last", new ea([we], l.END))),
    (na.DOC_GOTO_ITEM_START = ra("doc-goto-item-start", [])),
    (na.DOC_GOTO_ITEM_END = ra("doc-goto-item-end", [])),
    (na.DOC_SELECT_ALL = ra("doc-select-all", new ea([we], l.A), !1)),
    (na.DOC_SELECT_ALL_FORCE = ra(
      "doc-select-all-force",
      new ea([we, ye], l.A),
      !0,
      !0,
    )),
    (na.DOC_UNDO = ra("doc-undo", new ea([we], l.Z))),
    (na.DOC_REDO = ra("doc-redo", [new ea([we], l.Y), new ea([we, ye], l.Z)])),
    (na.DOC_COPY_LINK = ra("doc-copy-link", [])),
    (na.DOC_CYCLE_HEADING = ra("doc-cycle-heading", new ea([we, ye], l.H))),
    (na.DOC_HEADING_1 = ra("doc-heading-1", [])),
    (na.DOC_HEADING_2 = ra("doc-heading-2", [])),
    (na.DOC_HEADING_3 = ra("doc-heading-3", [])),
    (na.DOC_CLEAR_HEADING = ra("doc-clear-heading", [])),
    (na.DOC_CYCLE_COLOR_LABEL = ra(
      "doc-cycle-color-label",
      new ea([we, ye], l.L),
    )),
    (na.DOC_COLOR_LABEL_1 = ra("doc-color-label-1", [])),
    (na.DOC_COLOR_LABEL_2 = ra("doc-color-label-2", [])),
    (na.DOC_COLOR_LABEL_3 = ra("doc-color-label-3", [])),
    (na.DOC_COLOR_LABEL_4 = ra("doc-color-label-4", [])),
    (na.DOC_COLOR_LABEL_5 = ra("doc-color-label-5", [])),
    (na.DOC_COLOR_LABEL_6 = ra("doc-color-label-6", [])),
    (na.DOC_CLEAR_COLOR_LABEL = ra("doc-clear-color-label", [])),
    (na.DOC_TOGGLE_SPELLCHECK = ra("doc-toggle-spellcheck", [])),
    (na.DOC_TOGGLE_CHECKBOX = ra(
      "doc-toggle-checklist",
      new ea([we, ye], l.C),
    )),
    (na.DOC_TOGGLE_CHILDREN_CHECKBOX = ra("doc-toggle-children-checkbox", [])),
    (na.DOC_TOGGLE_ORDERED_LIST = ra(
      "doc-toggle-ordered-list",
      new ea([we, ye], l.X),
    )),
    (na.DOC_SEARCH = ra("doc-search", new ea([we], l.F), !0, !0)),
    (na.DOC_SEARCH_EVERYWHERE = ra(
      "doc-search-everywhere",
      new ea([we], l.ENTER),
      !0,
      !0,
    )),
    (na.DOC_FLAT_SEARCH = ra("doc-flat-search", new ea([ye], l.ENTER), !0, !0)),
    (na.DOC_BOLD = ra("doc-bold", new ea([we], l.B))),
    (na.DOC_ITALICS = ra("doc-italics", new ea([we], l.I))),
    (na.DOC_INSERT_CODE = ra("doc-insert-code", new ea([we], l.GRAVE_ACCENT))),
    (na.DOC_FORMAT_CODE_BLOCK = ra("doc-format-code-block", [])),
    (na.DOC_FORMAT_LINK = ra("doc-format-link", new ea([we], l.K))),
    (na.DOC_STRIKETHROUGH = ra("doc-strike-through", [])),
    (na.DOC_HIGHLIGHT = ra("doc-highlight", [])),
    (na.DOC_INSERT_LATEX = ra("doc-insert-latex", [])),
    (na.DOC_INSERT_NEW_LINE = ra(
      "doc-insert-new-line",
      new ea([we, ye], l.ENTER),
    )),
    (na.DOC_MOVE_NODE = ra("doc-move-node", new ea([we, ye], l.M))),
    (na.DOC_INSERT_TEMPLATE = ra("doc-insert-template", [])),
    (na.DOC_DELETE_CHECKED_NODES = ra("doc-delete-checked", [])),
    (na.DOC_SWITCH_TO_MIND_MAP = ra("doc-switch-to-mind-map", [])),
    (na.DOC_SHOW_NODE_REFERENCES = ra("doc-show-node-references", [])),
    (na.DOC_SORT_DATE_ASC = ra("doc-sort-date-asc", [])),
    (na.DOC_SORT_DATE_DESC = ra("doc-sort-date-desc", [])),
    (na.DOC_SORT_TITLE_ASC = ra("doc-sort-title-asc", [])),
    (na.DOC_SORT_TITLE_DESC = ra("doc-sort-title-desc", [])),
    (na.DOC_OPEN_SEARCH_AND_REPLACE = ra("doc-open-search-and-replace", [])),
    (na.DOC_INSERT_CURRENT_DATE = ra("doc-insert-current-date", [])),
    (na.DOC_INSERT_CURRENT_TIME = ra("doc-insert-current-time", [])),
    (na.APP_TOGGLE_BOOKMARK_CURRENT_STATE = ra(
      "app-toggle-bookmark-current-state",
      [],
    ));
  var aa = {},
    _a = {};
  ((aa[r.GERMAN] = _a)[na.DOC_ZOOM_OUT] = new ea([be], l.LEFT)),
    (_a[na.DOC_ZOOM_IN] = new ea([be], l.RIGHT));
  var ca = {};
  (ca[na.DOC_ZOOM_IN] = new ea([be], l.RIGHT)),
    (ca[na.DOC_ZOOM_OUT] = new ea([be], l.LEFT)),
    (ca[na.DOC_COLLAPSE] = new ea([ve], l.UP)),
    (ca[na.DOC_SWAP_UP] = new ea([ye, be], l.UP)),
    (ca[na.DOC_SWAP_DOWN] = new ea([ye, be], l.DOWN));
  var la = [
      {
        name: "Basics",
        shortcuts: [
          na.DOC_INDENT,
          na.DOC_UNINDENT,
          na.DOC_COLLAPSE,
          na.DOC_ZOOM_IN,
          na.DOC_ZOOM_OUT,
          na.DOC_DELETE_LEFT,
        ],
      },
      {
        name: "General",
        shortcuts: [
          na.APP_TOGGLE_SHORTCUT_HELP,
          na.APP_OPEN_SETTINGS,
          na.APP_TOGGLE_FILE_PANE,
          na.APP_TOGGLE_BOOKMARK_PANE,
          na.APP_TOGGLE_TAG_PANE,
          na.APP_TOGGLE_SHOW_CHECKED,
          na.DOC_TOGGLE_SHOW_CHECKED,
          na.APP_TOGGLE_SHOW_NOTES,
          na.DOC_TOGGLE_SHOW_NOTES,
          na.APP_SAVE,
          na.DOC_TOGGLE_SPELLCHECK,
          na.APP_INBOX_CAPTURE,
          na.DOC_SWITCH_TO_MIND_MAP,
          na.APP_TOGGLE_BOOKMARK_CURRENT_STATE,
        ],
      },
      {
        name: "Working with lists",
        shortcuts: [
          na.DOC_DELETE_RIGHT,
          na.DOC_GOTO_NOTES,
          na.DOC_TOGGLE_CHECKED,
          na.DOC_UNCHECK_CHILDREN,
          na.DOC_COLLAPSE_ALL,
          na.DOC_TOGGLE_SIBLINGS,
          na.DOC_TOGGLE_CHECKBOX,
          na.DOC_TOGGLE_CHILDREN_CHECKBOX,
          na.DOC_TOGGLE_ORDERED_LIST,
          na.DOC_DUPLICATE_NODE,
          na.DOC_INSERT_TEMPLATE,
          na.DOC_SELECT_UP,
          na.DOC_SELECT_DOWN,
          na.DOC_SELECT_ALL_FORCE,
          na.DOC_UNDO,
          na.DOC_REDO,
          na.DOC_COPY_LINK,
          na.DOC_DELETE_CHECKED_NODES,
          na.DOC_SHOW_NODE_REFERENCES,
          na.DOC_SORT_TITLE_ASC,
          na.DOC_SORT_TITLE_DESC,
          na.DOC_SORT_DATE_DESC,
          na.DOC_SORT_DATE_ASC,
          na.DOC_EXPAND_TO_LEVEL_ONE,
          na.DOC_EXPAND_TO_LEVEL_TWO,
          na.DOC_EXPAND_TO_LEVEL_THREE,
          na.DOC_EXPAND_TO_LEVEL_FOUR,
        ],
      },
      {
        name: "Navigating & moving",
        shortcuts: [
          na.DOC_MOVE_NODE,
          na.DOC_SWAP_UP,
          na.DOC_SWAP_DOWN,
          na.DOC_ZOOM_PREV_SIBLING,
          na.DOC_ZOOM_NEXT_SIBLING,
          na.APP_GOTO_INBOX,
          na.DOC_GOTO_PARENT,
          na.DOC_GOTO_PREV_SIBLING,
          na.DOC_GOTO_NEXT_SIBLING,
          na.DOC_GOTO_FIRST,
          na.DOC_GOTO_LAST,
          na.DOC_GOTO_ITEM_START,
          na.DOC_GOTO_ITEM_END,
        ],
      },
      {
        name: "Search",
        shortcuts: [
          na.DOC_SEARCH,
          na.DOC_SEARCH_EVERYWHERE,
          na.DOC_FLAT_SEARCH,
          na.APP_GO_ANYWHERE,
          na.APP_GOTO_ITEM,
          na.DOC_OPEN_SEARCH_AND_REPLACE,
        ],
      },
      {
        name: "Formatting",
        shortcuts: [
          na.DOC_BOLD,
          na.DOC_ITALICS,
          na.DOC_INSERT_CODE,
          na.DOC_FORMAT_CODE_BLOCK,
          na.DOC_FORMAT_LINK,
          na.DOC_STRIKETHROUGH,
          na.DOC_HIGHLIGHT,
          na.DOC_INSERT_LATEX,
          na.DOC_INSERT_NEW_LINE,
          na.DOC_CYCLE_HEADING,
          na.DOC_HEADING_1,
          na.DOC_HEADING_2,
          na.DOC_HEADING_3,
          na.DOC_CLEAR_HEADING,
          na.DOC_CYCLE_COLOR_LABEL,
          na.DOC_COLOR_LABEL_1,
          na.DOC_COLOR_LABEL_2,
          na.DOC_COLOR_LABEL_3,
          na.DOC_COLOR_LABEL_4,
          na.DOC_COLOR_LABEL_5,
          na.DOC_COLOR_LABEL_6,
          na.DOC_CLEAR_COLOR_LABEL,
          na.DOC_INSERT_CURRENT_DATE,
          na.DOC_INSERT_CURRENT_TIME,
        ],
      },
    ],
    ua =
      (((Wr = {})[na.APP_TOGGLE_SHORTCUT_HELP] = "Toggle help"),
      (Wr[na.APP_OPEN_SETTINGS] = "Open settings"),
      (Wr[na.APP_TOGGLE_FILE_PANE] = "Toggle file pane"),
      (Wr[na.APP_TOGGLE_BOOKMARK_PANE] = "Toggle bookmark pane"),
      (Wr[na.APP_TOGGLE_TAG_PANE] = "Toggle tag pane"),
      (Wr[na.APP_TOGGLE_SHOW_CHECKED] = "Toggle checked items"),
      (Wr[na.DOC_TOGGLE_SHOW_CHECKED] = "Toggle checked items for current doc"),
      (Wr[na.APP_TOGGLE_SHOW_NOTES] = "Toggle notes"),
      (Wr[na.DOC_TOGGLE_SHOW_NOTES] = "Toggle notes for current doc"),
      (Wr[na.APP_SAVE] = "Save"),
      (Wr[na.DOC_TOGGLE_SPELLCHECK] = "Toggle spell checker"),
      (Wr[na.DOC_INDENT] = "Indent"),
      (Wr[na.DOC_UNINDENT] = "Unindent"),
      (Wr[na.DOC_DELETE_LEFT] = "Delete item"),
      (Wr[na.DOC_DELETE_RIGHT] = "Delete from above"),
      (Wr[na.DOC_GOTO_NOTES] = "Move between item & note"),
      (Wr[na.DOC_TOGGLE_CHECKED] = "Toggle checked"),
      (Wr[na.DOC_UNCHECK_CHILDREN] = "Uncheck all children"),
      (Wr[na.DOC_COLLAPSE] = "Expand/collapse"),
      (Wr[na.DOC_COLLAPSE_ALL] = "Expand/collapse all"),
      (Wr[na.DOC_TOGGLE_SIBLINGS] = "Expand/collapse all siblings"),
      (Wr[na.DOC_EXPAND_TO_LEVEL_ONE] = "Expand to 1 level deep"),
      (Wr[na.DOC_EXPAND_TO_LEVEL_TWO] = "Expand to 2 levels deep"),
      (Wr[na.DOC_EXPAND_TO_LEVEL_THREE] = "Expand to 3 levels deep"),
      (Wr[na.DOC_EXPAND_TO_LEVEL_FOUR] = "Expand to 4 levels deep"),
      (Wr[na.DOC_TOGGLE_CHECKBOX] = "Toggle checkbox"),
      (Wr[na.DOC_TOGGLE_CHILDREN_CHECKBOX] = "Toggle checkbox for children"),
      (Wr[na.DOC_TOGGLE_ORDERED_LIST] = "Toggle numbered list"),
      (Wr[na.DOC_SELECT_ALL_FORCE] = "Select everything"),
      (Wr[na.DOC_UNDO] = "Undo"),
      (Wr[na.DOC_REDO] = "Redo"),
      (Wr[na.DOC_COPY_LINK] = "Copy current item link"),
      (Wr[na.DOC_ZOOM_IN] = "Zoom in"),
      (Wr[na.DOC_ZOOM_OUT] = "Zoom out"),
      (Wr[na.DOC_SWAP_UP] = "Swap with previous"),
      (Wr[na.DOC_SWAP_DOWN] = "Swap with next"),
      (Wr[na.DOC_DUPLICATE_NODE] = "Duplicate current item"),
      (Wr[na.DOC_ZOOM_PREV_SIBLING] = "Zoom in previous item"),
      (Wr[na.DOC_ZOOM_NEXT_SIBLING] = "Zoom in next item"),
      (Wr[na.APP_GOTO_INBOX] = "Go to inbox location"),
      (Wr[na.DOC_GOTO_PARENT] = "Go to parent item"),
      (Wr[na.DOC_GOTO_PREV_SIBLING] = "Go to previous sibling item"),
      (Wr[na.DOC_GOTO_NEXT_SIBLING] = "Go to next sibling item"),
      (Wr[na.DOC_SELECT_UP] = "Select this and previous item"),
      (Wr[na.DOC_SELECT_DOWN] = "Select this and next item"),
      (Wr[na.DOC_SELECT_ALL] = "Select all"),
      (Wr[na.DOC_GOTO_FIRST] = "Go to start of first item"),
      (Wr[na.DOC_GOTO_LAST] = "Go to end of last item"),
      (Wr[na.DOC_GOTO_ITEM_START] = "Go to start of text"),
      (Wr[na.DOC_GOTO_ITEM_END] = "Go to end of text"),
      (Wr[na.DOC_SEARCH] = "Search in doc"),
      (Wr[na.DOC_SEARCH_EVERYWHERE] = "Search everywhere"),
      (Wr[na.DOC_FLAT_SEARCH] = "Enter flat search"),
      (Wr[na.APP_GO_ANYWHERE] = "Open file finder"),
      (Wr[na.APP_GOTO_ITEM] = "Open item finder (Pro)"),
      (Wr[na.APP_INBOX_CAPTURE] = "Capture to inbox (Pro)"),
      (Wr[na.DOC_BOLD] = "Make bold"),
      (Wr[na.DOC_ITALICS] = "Make italics"),
      (Wr[na.DOC_INSERT_CODE] = "Format as code"),
      (Wr[na.DOC_FORMAT_CODE_BLOCK] = "Format as code block"),
      (Wr[na.DOC_FORMAT_LINK] = "Add link"),
      (Wr[na.DOC_STRIKETHROUGH] = "Strikethrough"),
      (Wr[na.DOC_HIGHLIGHT] = "Highlight"),
      (Wr[na.DOC_INSERT_LATEX] = "Format as LaTeX"),
      (Wr[na.DOC_CYCLE_HEADING] = "Toggle heading"),
      (Wr[na.DOC_HEADING_1] = "Make heading 1"),
      (Wr[na.DOC_HEADING_2] = "Make heading 2"),
      (Wr[na.DOC_HEADING_3] = "Make heading 3"),
      (Wr[na.DOC_CLEAR_HEADING] = "Clear heading"),
      (Wr[na.DOC_CYCLE_COLOR_LABEL] = "Toggle color label"),
      (Wr[na.DOC_COLOR_LABEL_1] = "Apply color label 1"),
      (Wr[na.DOC_COLOR_LABEL_2] = "Apply color label 2"),
      (Wr[na.DOC_COLOR_LABEL_3] = "Apply color label 3"),
      (Wr[na.DOC_COLOR_LABEL_4] = "Apply color label 4"),
      (Wr[na.DOC_COLOR_LABEL_5] = "Apply color label 5"),
      (Wr[na.DOC_COLOR_LABEL_6] = "Apply color label 6"),
      (Wr[na.DOC_CLEAR_COLOR_LABEL] = "Clear color label"),
      (Wr[na.DOC_INSERT_NEW_LINE] = "Insert new line in item"),
      (Wr[na.DOC_MOVE_NODE] = "Move item"),
      (Wr[na.DOC_INSERT_TEMPLATE] = "Insert template"),
      (Wr[na.DOC_DELETE_CHECKED_NODES] = "Delete checked items"),
      (Wr[na.DOC_SWITCH_TO_MIND_MAP] = "Switch to mind map"),
      (Wr[na.DOC_SHOW_NODE_REFERENCES] = "Show all references of item"),
      (Wr[na.DOC_SORT_TITLE_ASC] = "Sort by title (A-Z)"),
      (Wr[na.DOC_SORT_TITLE_DESC] = "Sort by title (Z-A)"),
      (Wr[na.DOC_SORT_DATE_DESC] = "Sort by date (new to old)"),
      (Wr[na.DOC_SORT_DATE_ASC] = "Sort by date (old to new)"),
      (Wr[na.APP_TOGGLE_BOOKMARK_CURRENT_STATE] =
        "Toggle bookmark for current state"),
      (Wr[na.DOC_OPEN_SEARCH_AND_REPLACE] = "Open search and replace"),
      (Wr[na.DOC_INSERT_CURRENT_DATE] = "Insert current date"),
      (Wr[na.DOC_INSERT_CURRENT_TIME] = "Insert current time"),
      Wr),
    ha = (function (n) {
      function e(e, t) {
        var i = n.call(this, "DocumentKeyEvents", e, t) || this;
        return (i.shortcut_manager = i.submodule(new ia(e))), i;
      }
      return (
        nt(e, n),
        (e.prototype._init_dependencies = function () {
          (this.ui = this.app_document.ui),
            (this.view = this.app_document.view),
            (this.controller = this.app_document.controller),
            (this.userspace_ui = this.app.userspace.ui),
            (this.userspace_view = this.app.userspace.view);
        }),
        (e.prototype._init_fields = function () {}),
        (e.prototype._init_after = function () {
          this.register_events();
        }),
        (e.prototype.register_events = function () {
          var n = this.shortcut_manager,
            e = function (e, t, i) {
              n.register_named(e, "keydown", t, i);
            },
            t = function (e, t, i) {
              n.register_unnamed(e, "keydown", t, i);
            };
          t(
            new ea([], l.BACKSPACE),
            this.on_keydown_backspace.bind(this),
            Mr.EDITOR,
          ),
            t(
              new ea([], l.DELETE),
              this.on_keydown_delete.bind(this),
              Mr.EDITOR,
            ),
            t(new ea([], l.UP), this.on_keydown_up.bind(this), Mr.EDITOR),
            t(new ea([], l.DOWN), this.on_keydown_down.bind(this), Mr.EDITOR),
            t(new ea([], l.LEFT), this.on_keydown_left.bind(this), Mr.EDITOR),
            t(new ea([], l.RIGHT), this.on_keydown_right.bind(this), Mr.EDITOR),
            t(new ea([], l.ENTER), this.on_keydown_enter.bind(this), Mr.EDITOR),
            t(new ea([we], l.U), this.on_keydown_ctrl_u.bind(this), Mr.EDITOR),
            "MacOS" == Ys &&
              (t(new ea([ve], l.P), this.on_keydown_up.bind(this), Mr.EDITOR),
              t(new ea([ve], l.N), this.on_keydown_down.bind(this), Mr.EDITOR)),
            e(
              na.DOC_DELETE_LEFT,
              this.on_keydown_ctrl_shift_backspace.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_DELETE_RIGHT,
              this.on_keydown_ctrl_shift_delete.bind(this),
              Mr.EDITOR,
            ),
            e(na.DOC_INDENT, this.on_keydown_tab.bind(this), Mr.EDITOR),
            e(na.DOC_UNINDENT, this.on_keydown_shift_tab.bind(this), Mr.EDITOR),
            e(na.DOC_SELECT_UP, this.on_keydown_shift_up.bind(this), Mr.EDITOR),
            e(
              na.DOC_SELECT_DOWN,
              this.on_keydown_shift_down.bind(this),
              Mr.EDITOR,
            ),
            e(na.DOC_SWAP_UP, this.on_keydown_ctrl_up.bind(this), Mr.EDITOR),
            e(
              na.DOC_SWAP_DOWN,
              this.on_keydown_ctrl_down.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_DUPLICATE_NODE,
              this.on_keydown_duplicate_node.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_ZOOM_PREV_SIBLING,
              this.on_keydown_ctrl_shift_lbrack.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_ZOOM_NEXT_SIBLING,
              this.on_keydown_ctrl_shift_rbrack.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_GOTO_PARENT,
              this.on_keydown_goto_parent.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_GOTO_PREV_SIBLING,
              this.on_keydown_goto_prev_sibling.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_GOTO_NEXT_SIBLING,
              this.on_keydown_goto_next_sibling.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_COLLAPSE,
              this.on_keydown_ctrl_period.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_COLLAPSE_ALL,
              this.on_keydown_ctrl_shift_period.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_TOGGLE_SIBLINGS,
              this.onKeydownToggleSiblings.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_EXPAND_TO_LEVEL_ONE,
              this.view.expandToLevel.bind(this.view, 1),
              Mr.EDITOR,
            ),
            e(
              na.DOC_EXPAND_TO_LEVEL_TWO,
              this.view.expandToLevel.bind(this.view, 2),
              Mr.EDITOR,
            ),
            e(
              na.DOC_EXPAND_TO_LEVEL_THREE,
              this.view.expandToLevel.bind(this.view, 3),
              Mr.EDITOR,
            ),
            e(
              na.DOC_EXPAND_TO_LEVEL_FOUR,
              this.view.expandToLevel.bind(this.view, 4),
              Mr.EDITOR,
            ),
            e(
              na.DOC_GOTO_NOTES,
              this.on_keydown_shift_enter.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_TOGGLE_CHECKED,
              this.on_keydown_ctrl_enter.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_UNCHECK_CHILDREN,
              this.on_keydown_uncheck_children.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_INSERT_NEW_LINE,
              this.on_keydown_ctrl_shift_enter.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_ZOOM_OUT,
              this.on_keydown_ctrl_lbrack.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_ZOOM_IN,
              this.on_keydown_ctrl_rbrack.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_GOTO_FIRST,
              this.on_keydown_ctrl_home.bind(this),
              Mr.EDITOR,
            ),
            e(na.DOC_GOTO_LAST, this.on_keydown_ctrl_end.bind(this), Mr.EDITOR),
            e(
              na.DOC_GOTO_ITEM_START,
              this.on_keydown_goto_item_beginning.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_GOTO_ITEM_END,
              this.on_keydown_goto_item_end.bind(this),
              Mr.EDITOR,
            ),
            e(na.DOC_SELECT_ALL, this.on_keydown_ctrl_a.bind(this), Mr.EDITOR),
            e(
              na.DOC_SELECT_ALL_FORCE,
              this.on_keydown_ctrl_shift_a.bind(this),
              Mr.EDITOR,
            ),
            e(na.DOC_UNDO, this.on_keydown_ctrl_z.bind(this), Mr.EDITOR),
            e(na.DOC_REDO, this.on_keydown_ctrl_y.bind(this), Mr.EDITOR),
            e(
              na.DOC_COPY_LINK,
              this.on_keydown_copy_link.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_CYCLE_HEADING,
              this.on_cycle_heading_level.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_HEADING_1,
              this.on_apply_heading_level.bind(this, 1),
              Mr.EDITOR,
            ),
            e(
              na.DOC_HEADING_2,
              this.on_apply_heading_level.bind(this, 2),
              Mr.EDITOR,
            ),
            e(
              na.DOC_HEADING_3,
              this.on_apply_heading_level.bind(this, 3),
              Mr.EDITOR,
            ),
            e(
              na.DOC_CLEAR_HEADING,
              this.on_apply_heading_level.bind(this, 0),
              Mr.EDITOR,
            ),
            e(
              na.DOC_CYCLE_COLOR_LABEL,
              this.on_cycle_color_label.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_COLOR_LABEL_1,
              this.on_apply_color_label.bind(this, 1),
              Mr.EDITOR,
            ),
            e(
              na.DOC_COLOR_LABEL_2,
              this.on_apply_color_label.bind(this, 2),
              Mr.EDITOR,
            ),
            e(
              na.DOC_COLOR_LABEL_3,
              this.on_apply_color_label.bind(this, 3),
              Mr.EDITOR,
            ),
            e(
              na.DOC_COLOR_LABEL_4,
              this.on_apply_color_label.bind(this, 4),
              Mr.EDITOR,
            ),
            e(
              na.DOC_COLOR_LABEL_5,
              this.on_apply_color_label.bind(this, 5),
              Mr.EDITOR,
            ),
            e(
              na.DOC_COLOR_LABEL_6,
              this.on_apply_color_label.bind(this, 6),
              Mr.EDITOR,
            ),
            e(
              na.DOC_CLEAR_COLOR_LABEL,
              this.on_apply_color_label.bind(this, 0),
              Mr.EDITOR,
            ),
            e(
              na.DOC_TOGGLE_SPELLCHECK,
              this.on_toggle_spellcheck.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_TOGGLE_CHECKBOX,
              this.onToggleCheckbox.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_TOGGLE_CHILDREN_CHECKBOX,
              this.onToggleCheckboxForChildren.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_TOGGLE_ORDERED_LIST,
              this.on_toggle_ordered_list.bind(this),
              Mr.EDITOR,
            ),
            e(na.DOC_BOLD, this.on_keydown_ctrl_b.bind(this), Mr.EDITOR),
            e(na.DOC_ITALICS, this.on_keydown_ctrl_i.bind(this), Mr.EDITOR),
            e(na.DOC_INSERT_LATEX, this.on_keydown_latex.bind(this), Mr.EDITOR),
            e(
              na.DOC_INSERT_CODE,
              this.on_keydown_ctrl_grave.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_FORMAT_CODE_BLOCK,
              this.onKeydownFormatCodeBlock.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_FORMAT_LINK,
              this.onKeydownFormatLink.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_STRIKETHROUGH,
              this.on_keydown_strikethrough.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_HIGHLIGHT,
              this.on_keydown_highlight.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_INSERT_CURRENT_DATE,
              this.onInsertCurrentDate.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_INSERT_CURRENT_TIME,
              this.onInsertCurrentTime.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_MOVE_NODE,
              this.on_keydown_move_node.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_INSERT_TEMPLATE,
              this.onKeydownInsertTemplate.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_DELETE_CHECKED_NODES,
              this.on_keydown_delete_checked_nodes.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_TOGGLE_SHOW_CHECKED,
              this.on_toggle_doc_checked.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_TOGGLE_SHOW_NOTES,
              this.on_toggle_doc_notes.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_SHOW_NODE_REFERENCES,
              this.onKeydownShowNodeReferences.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.DOC_SWITCH_TO_MIND_MAP,
              this.onSwitchToMindmap.bind(this),
              Mr.EDITOR,
            ),
            e(na.DOC_SORT_TITLE_ASC, this.onSortTitleAsc.bind(this), Mr.EDITOR),
            e(
              na.DOC_SORT_TITLE_DESC,
              this.onSortTitleDesc.bind(this),
              Mr.EDITOR,
            ),
            e(na.DOC_SORT_DATE_DESC, this.onSortDateDesc.bind(this), Mr.EDITOR),
            e(na.DOC_SORT_DATE_ASC, this.onSortDateAsc.bind(this), Mr.EDITOR),
            e(
              na.DOC_OPEN_SEARCH_AND_REPLACE,
              this.onOpenSearchReplace.bind(this),
              Mr.EDITOR,
            ),
            t(new ea([], l.ESC), this.on_keydown_esc.bind(this), Mr.EDITOR),
            t(
              new ea([], l.ENTER),
              this.on_keydown_enter_in_search_bar.bind(this),
              Mr.DOCUMENT_SEARCH,
            ),
            t(
              new ea([], l.ENTER),
              this.on_keydown_enter_in_search_bar.bind(this),
              Mr.GLOBAL_SEARCH,
            ),
            e(na.DOC_SEARCH, this.on_keydown_ctrl_f.bind(this), [
              Mr.EDITOR,
              Mr.DOCUMENT_SEARCH,
            ]),
            e(
              na.DOC_SEARCH_EVERYWHERE,
              this.on_keydown_ctrl_enter_in_searchbar.bind(this),
              Mr.DOCUMENT_SEARCH,
            ),
            e(
              na.DOC_FLAT_SEARCH,
              this.on_keydown_shift_enter_in_searchbar.bind(this),
              Mr.DOCUMENT_SEARCH,
            ),
            t(
              new ea([], l.TAB),
              this.on_keydown_tab_in_search_bar.bind(this),
              Mr.DOCUMENT_SEARCH,
            ),
            t(
              new ea([], l.ESC),
              this.on_keydown_esc_search.bind(this),
              Mr.DOCUMENT_SEARCH,
            );
        }),
        (e.prototype.selection = function () {
          return this.ui.selection();
        }),
        (e.prototype.get_node_state = function (e) {
          return this.ui.get_node_state(e);
        }),
        (e.prototype.on_keydown_enter = function (e) {
          var t = this;
          if (!this.ui.is_triggered_popup_open()) {
            var i = this.selection();
            i.synchronize();
            var n = i.get();
            if (n instanceof Uo) {
              var o = n.get_node();
              (function () {
                if ("" !== o.get_meta_object().get_content()) return !1;
                if (o.is_root()) return !1;
                var e = o.get_parent();
                return (
                  !!e &&
                  !t.get_node_state(e).is_current_root() &&
                  !t.get_node_state(o).visibleNextSibling()
                );
              })()
                ? this.view.unindent()
                : this.view.split_node(),
                this.ui.preventKeyEventOrHandleIOSAutoCapitalization(e);
            } else
              n instanceof jo
                ? (this.ui.insert_new_line(), e.preventDefault())
                : n instanceof Go &&
                  (this.view.detach_nodes_for_selection_restore_one(),
                  e.preventDefault());
          }
        }),
        (e.prototype.on_keydown_enter_in_search_bar = function (e) {
          e.preventDefault(), this.ui.start_global_search_on_mobile();
        }),
        (e.prototype.on_keydown_tab_in_search_bar = function (e) {
          e.preventDefault();
          var t = this.ui.current_root,
            i = this.ui.get_node_state(t).visibleFirstChild();
          i && this.selection().set_cursor_to_start_of_node(i);
        }),
        (e.prototype.on_keydown_shift_enter = function (e) {
          Xs && "Enter" === e.key && e.shiftKey
            ? this.on_keydown_enter(e)
            : (e.preventDefault(), this.ui.switch_between_content_and_note());
        }),
        (e.prototype.on_keydown_backspace = function (e) {
          this.selection().synchronize();
          var t = this.selection().get();
          t instanceof Go
            ? (this.view.detach_nodes_for_selection(!0), e.preventDefault())
            : t instanceof Bo &&
              (t instanceof Uo && t.is_caret_selection() && t.is_start()
                ? (this.view.combine_with_before(), e.preventDefault())
                : t instanceof jo &&
                  t.is_caret_selection() &&
                  t.is_start() &&
                  0 === t.get_text_length() &&
                  (this.ui.selection().set_cursor_to_end_of_node(t.get_node()),
                  e.preventDefault()));
        }),
        (e.prototype.on_keydown_delete = function (e) {
          this.selection().synchronize();
          var t = this.selection().get();
          return t instanceof Go
            ? (this.view.detach_nodes_for_selection(!1), e.preventDefault(), !1)
            : t instanceof Uo && t.is_caret_selection() && t.is_end()
            ? (this.view.combine_with_after(), e.preventDefault(), !1)
            : void 0;
        }),
        (e.prototype.on_keydown_ctrl_shift_backspace = function (e) {
          if (this.selection().is_selecting())
            return (
              this.selection().synchronize(),
              this.view.detach_nodes_for_selection(!0),
              e.preventDefault(),
              !1
            );
        }),
        (e.prototype.on_keydown_ctrl_shift_delete = function (e) {
          if (this.selection().is_selecting())
            return (
              this.selection().synchronize(),
              this.view.detach_nodes_for_selection(!1),
              e.preventDefault(),
              !1
            );
        }),
        (e.prototype.on_keydown_tab = function (e) {
          var t = this.selection();
          t.synchronize();
          var i = t.get();
          t.is_selecting() &&
            (i instanceof jo ? this.ui.insert_text("\t") : this.view.indent(),
            this.ui.preventKeyEventOrHandleIOSAutoCapitalization(e));
        }),
        (e.prototype.on_keydown_shift_tab = function (e) {
          if (
            (this.selection().synchronize(), this.selection().is_selecting())
          ) {
            if ((this.view.unindent(), Xs)) {
              var t = this.selection(),
                i = t.get();
              this.queue(function () {
                return t.apply(i);
              });
            } else e.preventDefault();
            return !1;
          }
        }),
        (e.prototype.on_keydown_up = function (e) {
          if (!this.ui.is_triggered_popup_open()) {
            this.selection().synchronize();
            var t = this.selection().get();
            if (this.controller.is_read_only()) {
              if (t instanceof Go) {
                var i = this.get_node_state(t.get_first_node());
                if (!i) return;
                var n = i.visiblePrev();
                n &&
                  !n.is_root() &&
                  this.selection().apply(zo.select_multi_node(n));
              }
              return e.preventDefault(), !1;
            }
            if (this.ui.move_cursor_by_one_line("up"))
              return e.preventDefault(), !1;
            this.fixIOSUpDown();
          }
        }),
        (e.prototype.on_keydown_down = function (e) {
          if (!this.ui.is_triggered_popup_open()) {
            this.selection().synchronize();
            var t = this.selection().get();
            if (this.controller.is_read_only()) {
              if (t instanceof Go) {
                var i = this.get_node_state(t.get_last_node()).visibleNext();
                this.selection().apply(zo.select_multi_node(i));
              }
              return e.preventDefault(), !1;
            }
            if (this.ui.move_cursor_by_one_line("down"))
              return e.preventDefault(), !1;
            this.fixIOSUpDown();
          }
        }),
        (e.prototype.fixIOSUpDown = function () {
          var t = this;
          if (Xs) {
            var i = function () {
              document.removeEventListener("selectionchange", i);
              var e = t.selection();
              e.synchronize(), e.reapply();
            };
            document.addEventListener("selectionchange", i);
          }
        }),
        (e.prototype.on_keydown_left = function (e) {
          var t = this.selection();
          if (t.is_selecting()) {
            t.synchronize();
            var i = t.get();
            if (i instanceof Go) {
              var n = i.get_first_node();
              return t.set_cursor_to_start_of_node(n), e.preventDefault(), !1;
            }
            if (i instanceof Bo && i.is_caret_selection() && i.is_start()) {
              var o = null;
              return (
                i instanceof Uo
                  ? (o = this.get_node_state(i.get_node()).visiblePrev())
                  : i instanceof jo && (o = i.get_node()),
                t.set_cursor_to_end_of_node(o),
                e.preventDefault(),
                !1
              );
            }
          }
        }),
        (e.prototype.on_keydown_right = function (e) {
          var t = this.selection();
          if (t.is_selecting()) {
            t.synchronize();
            var i = t.get();
            if (i instanceof Go) {
              var n = i.get_last_node(),
                o = this.get_node_state(n);
              return (
                t.set_cursor_to_end_of_node(o.visibleLastDescendentOrSelf()),
                e.preventDefault(),
                !1
              );
            }
            if (i instanceof Bo && i.is_caret_selection() && i.is_end()) {
              var s = this.get_node_state(i.get_node()).visibleNext();
              return t.set_cursor_to_start_of_node(s), e.preventDefault(), !1;
            }
          }
        }),
        (e.prototype.on_keydown_shift_up = function (e) {
          var t = this.selection();
          t.synchronize();
          var i = t.get();
          if (!(i instanceof jo))
            return i instanceof Uo && !i.is_start()
              ? Or(this.get_node_state(i.get_node()).dom.content_el, !0).isFirst
                ? (t.shift_select("up"), e.preventDefault(), !1)
                : void 0
              : (t.shift_select("up"), e.preventDefault(), !1);
        }),
        (e.prototype.on_keydown_shift_down = function (e) {
          var t = this.selection();
          t.synchronize();
          var i = t.get();
          if (!(i instanceof jo))
            return i instanceof Uo && !i.is_end()
              ? Or(this.get_node_state(i.get_node()).dom.content_el, !1).isLast
                ? (t.shift_select("down"), e.preventDefault(), !1)
                : void 0
              : (t.shift_select("down"), e.preventDefault(), !1);
        }),
        (e.prototype.on_keydown_ctrl_a = function (e) {
          var t = this.selection();
          t.synchronize();
          var i = t.get();
          (i instanceof Bo && !i.is_selecting_all()) ||
            (t.select_all(), e.preventDefault());
        }),
        (e.prototype.on_keydown_ctrl_shift_a = function (e) {
          return this.selection().force_select_all(), e.preventDefault(), !1;
        }),
        (e.prototype.on_keydown_ctrl_up = function (e) {
          if (this.selection().is_selecting())
            return (
              this.selection().synchronize(),
              this.view.move_up(),
              this.ui.scroll_selection_into_view(),
              e.preventDefault(),
              !1
            );
        }),
        (e.prototype.on_keydown_ctrl_down = function (e) {
          if (this.selection().is_selecting())
            return (
              this.selection().synchronize(),
              this.view.move_down(),
              this.ui.scroll_selection_into_view(),
              e.preventDefault(),
              !1
            );
        }),
        (e.prototype.on_keydown_duplicate_node = function (e) {
          e.preventDefault(), this.selection().synchronize();
          var t = this.selection().get().get_nodes();
          if (0 !== t.length) {
            var i = t.last();
            i.is_root() ||
              this.view.clone_nodes(t, i.get_parent(), i.get_index() + 1);
          }
        }),
        (e.prototype.on_keydown_ctrl_shift_lbrack = function (e) {
          var t = this.ui.current_root_node_state.visiblePrevSibling();
          t && this.view.zoom_node(t), e.preventDefault();
        }),
        (e.prototype.on_keydown_ctrl_shift_rbrack = function (e) {
          var t = this.ui.current_root_node_state.visibleNextSibling();
          t && this.view.zoom_node(t), e.preventDefault();
        }),
        (e.prototype.on_keydown_goto_parent = function (e) {
          e.preventDefault(), this.selection().synchronize();
          var t = this.selection().get(),
            i = null;
          if (
            (t instanceof Go
              ? (i = t.get_first_node())
              : t instanceof Bo && (i = t.get_node()),
            i)
          ) {
            var n = i.get_parent();
            if (!n) return;
            this.ui.get_node_state(i).is_current_root() && this.view.zoom_out(),
              this.selection().apply(zo.select_content(n, -1));
          }
        }),
        (e.prototype.on_keydown_goto_prev_sibling = function (e) {
          this.selection().synchronize();
          var t = this.selection().get(),
            i = null;
          if (
            (t instanceof Go
              ? (i = t.get_first_node())
              : t instanceof Uo && (i = t.get_node()),
            i)
          ) {
            var n = i.prev();
            n && this.selection().apply(zo.select_content(n, -1));
          }
          e.preventDefault();
        }),
        (e.prototype.on_keydown_goto_next_sibling = function (e) {
          this.selection().synchronize();
          var t = this.selection().get(),
            i = null;
          if (
            (t instanceof Go
              ? (i = t.get_last_node())
              : t instanceof Uo && (i = t.get_node()),
            i)
          ) {
            var n = i.next();
            n && this.selection().apply(zo.select_content(n, -1));
          }
          e.preventDefault();
        }),
        (e.prototype.on_keydown_ctrl_lbrack = function (e) {
          return this.view.zoom_out(), e.preventDefault(), !1;
        }),
        (e.prototype.on_keydown_ctrl_rbrack = function (e) {
          if (this.selection().get() instanceof Uo)
            return (
              this.selection().synchronize(),
              this.view.zoom_in(),
              e.preventDefault(),
              !1
            );
        }),
        (e.prototype.on_keydown_ctrl_home = function (e) {
          return (
            this.selection().set_cursor_to_start_of_node(
              this.ui.current_root_node_state.visibleFirstChildOrSelf(),
            ),
            e.preventDefault(),
            !1
          );
        }),
        (e.prototype.on_keydown_ctrl_end = function (e) {
          var t = this.ui.current_root_node_state;
          return (
            this.selection().set_cursor_to_end_of_node(
              t.visibleLastDescendentOrSelf(),
            ),
            e.preventDefault(),
            !1
          );
        }),
        (e.prototype.on_keydown_goto_item_beginning = function (e) {
          var t = this.selection().get();
          if (t instanceof Uo) {
            var i = t.get_node();
            this.selection().set_cursor_to_start_of_node(i);
          } else if (t instanceof jo) {
            i = t.get_node();
            this.selection().set_cursor_to_start_of_note(i);
          }
          e.preventDefault();
        }),
        (e.prototype.on_keydown_goto_item_end = function (e) {
          var t = this.selection().get();
          if (t instanceof Uo) {
            var i = t.get_node();
            this.selection().set_cursor_to_end_of_node(i);
          } else if (t instanceof jo) {
            i = t.get_node();
            this.selection().set_cursor_to_end_of_note(i);
          }
          e.preventDefault();
        }),
        (e.prototype.on_keydown_ctrl_z = function (e) {
          return (
            this.selection().synchronize(),
            this.view.get_history().undo(this.ui.selection()),
            e.preventDefault(),
            !1
          );
        }),
        (e.prototype.on_keydown_ctrl_y = function (e) {
          return (
            this.selection().synchronize(),
            this.view.get_history().redo(this.ui.selection()),
            e.preventDefault(),
            !1
          );
        }),
        (e.prototype.on_keydown_copy_link = function (e) {
          var t = this.selection().get();
          if (t instanceof Bo) {
            var i = t.get_node();
            return (
              this.ui.copy_node_link(i),
              this.selection().apply(t),
              e.preventDefault(),
              !1
            );
          }
        }),
        (e.prototype.on_keydown_ctrl_period = function (e) {
          return (
            this.selection().synchronize(),
            this.view.toggle_selection_collapse(),
            e.preventDefault(),
            !1
          );
        }),
        (e.prototype.on_keydown_ctrl_shift_period = function (e) {
          this.selection().synchronize();
          var t = this.selection().get(),
            i = t.get_nodes();
          if (t instanceof Uo) {
            var n = t.get_node();
            this.ui.get_node_state(n).is_current_root() &&
              (i = n.get_children().array());
          }
          return this.view.toggle_nodes_collapse(i, !0), e.preventDefault(), !1;
        }),
        (e.prototype.onKeydownToggleSiblings = function (e) {
          e.preventDefault();
          var t = this.selection().get();
          if (!t.has_nodes()) return !1;
          var i = t.get_nodes()[0].get_parent().get_children();
          return this.view.toggle_nodes_collapse(i.array(), !0), !1;
        }),
        (e.prototype.on_keydown_esc = function () {
          var e = this.selection();
          if (e.get() instanceof Go) e.auto_update();
          else {
            if (
              this.ui.tag_suggestion_manager.is_open() ||
              this.ui.link_suggestion_manager.is_open() ||
              this.ui.datepicker_popup_manager.is_open()
            )
              return;
            e.is_selecting()
              ? (this.ui.view_state_manager.save_view_state(),
                e.deselect(),
                Lr())
              : this.ui.is_searching()
              ? this.ui.exit_document_search()
              : this.ui.view_state_manager.apply_saved_view_state();
          }
        }),
        (e.prototype.on_keydown_esc_search = function () {
          this.ui.search_tag_popup_manager.is_open()
            ? this.ui.search_tag_popup_manager.close()
            : this.ui.exit_document_search();
        }),
        (e.prototype.on_keydown_ctrl_u = function (e) {
          e.preventDefault();
        }),
        (e.prototype.on_keydown_ctrl_enter = function (e) {
          var t = this.selection().get();
          if (t.has_nodes()) {
            var i = t.get_nodes(),
              n = i[i.length - 1],
              o = this.get_node_state(n).visibleNextNonChild();
            !this.view.toggle_checked(i) &&
              o &&
              this.selection().apply(zo.select_content(o, 0)),
              e.preventDefault();
          }
        }),
        (e.prototype.on_keydown_uncheck_children = function (e) {
          e.preventDefault();
          var t = this.selection().get();
          if (t.has_nodes()) {
            var i = t.get_nodes();
            this.view.recursive_uncheck(i), this.selection().apply(t);
          }
        }),
        (e.prototype.on_keydown_ctrl_enter_in_searchbar = function (e) {
          e.preventDefault(), this.ui.start_global_search();
        }),
        (e.prototype.on_keydown_shift_enter_in_searchbar = function (e) {
          e.preventDefault(), this.ui.start_flat_search();
        }),
        (e.prototype.on_keydown_ctrl_shift_enter = function (e) {
          this.ui.insert_new_line(),
            e.preventDefault(),
            this.selection().auto_update();
        }),
        (e.prototype.onToggleCheckbox = function (e) {
          var t = this.selection().get();
          e.preventDefault(), this.view.toggleCheckbox(t.get_nodes());
        }),
        (e.prototype.onToggleCheckboxForChildren = function (e) {
          e.preventDefault();
          for (
            var t = this.selection().get().get_nodes(), i = 0, n = 0, o = t;
            n < o.length;
            n++
          ) {
            i += o[n].children.length();
          }
          if (0 !== i) this.view.toggleChildrenCheckbox(t);
          else {
            var s = 1 === t.length ? "item does not" : "items do not";
            this.userspace_ui.popup_message_manager.displayDismissibleMessage(
              "The selected " + s + " have any children.",
            );
          }
        }),
        (e.prototype.on_toggle_ordered_list = function (e) {
          this.view.toggle_list_style(this.selection().get().get_nodes()),
            e.preventDefault();
        }),
        (e.prototype.on_toggle_spellcheck = function () {
          this.ui.toggle_spellcheck();
        }),
        (e.prototype.on_cycle_heading_level = function (e) {
          this.view.cycle_heading_level(this.selection().get().get_nodes()),
            e.preventDefault();
        }),
        (e.prototype.on_apply_heading_level = function (e, t) {
          this.view.set_heading_level(this.selection().get().get_nodes(), e),
            t.preventDefault();
        }),
        (e.prototype.on_cycle_color_label = function (e) {
          this.view.cycle_color_label(this.selection().get().get_nodes()),
            e.preventDefault();
        }),
        (e.prototype.on_apply_color_label = function (e, t) {
          this.view.set_color_label(this.selection().get().get_nodes(), e),
            t.preventDefault();
        }),
        (e.prototype.on_keydown_ctrl_f = function (e) {
          this.userspace_ui.is_mobile_view()
            ? !(function e(t) {
                return (
                  t &&
                  !!(
                    t.offsetWidth ||
                    t.offsetHeight ||
                    t.getClientRects().length
                  )
                );
              })(fish(".MobileHeader--documentSearch"))
              ? this.userspace_ui.enter_document_search_on_mobile()
              : this.userspace_ui.exit_document_search_on_mobile()
            : Oi(fish(".DocumentSearch"))
            ? this.ui.exit_document_search()
            : this.ui.show_document_searchbar(),
            e.preventDefault();
        }),
        (e.prototype.on_keydown_ctrl_b = function (e) {
          e.preventDefault(),
            this.view.apply_delimiter_to_current_selection("**");
        }),
        (e.prototype.on_keydown_ctrl_i = function (e) {
          e.preventDefault(),
            this.view.apply_delimiter_to_current_selection("__");
        }),
        (e.prototype.on_keydown_latex = function (e) {
          e.preventDefault(),
            this.view.apply_delimiter_to_current_selection("$$");
        }),
        (e.prototype.on_keydown_ctrl_grave = function (e) {
          e.preventDefault(),
            this.view.apply_delimiter_to_current_selection("`");
        }),
        (e.prototype.on_keydown_strikethrough = function (e) {
          e.preventDefault(),
            this.view.apply_delimiter_to_current_selection("~~");
        }),
        (e.prototype.on_keydown_highlight = function (e) {
          e.preventDefault(),
            this.view.apply_delimiter_to_current_selection("==");
        }),
        (e.prototype.onKeydownFormatCodeBlock = function (e) {
          e.preventDefault(),
            this.view.apply_delimiter_to_current_selection("```");
        }),
        (e.prototype.onKeydownFormatLink = function (e) {
          e.preventDefault(), this.view.formatLink();
        }),
        (e.prototype.on_keydown_move_node = function (e) {
          var t = this.selection();
          t.synchronize();
          var i = t.get().get_nodes();
          this.ui.node_mover.openWithNodes(i), e.preventDefault();
        }),
        (e.prototype.onKeydownInsertTemplate = function (e) {
          var t = this.selection();
          t.synchronize();
          var i = t.get().get_nodes();
          this.ui.templateFinder.openWithNodes(i), e.preventDefault();
        }),
        (e.prototype.on_keydown_delete_checked_nodes = function (e) {
          this.selection().synchronize();
          var t = this.selection().get().get_nodes();
          0 < t.length && this.view.detach_checked_nodes(t), e.preventDefault();
        }),
        (e.prototype.onKeydownShowNodeReferences = function (e) {
          this.selection().synchronize();
          var t = this.selection().get().get_nodes();
          0 < t.length && this.ui.showNodeReferences(t[0]), e.preventDefault();
        }),
        (e.prototype.on_toggle_doc_checked = function (e) {
          e.preventDefault(), this.view.toggle_checked_items_visibility();
        }),
        (e.prototype.on_toggle_doc_notes = function (e) {
          e.preventDefault(), this.view.toggle_notes_visibility();
        }),
        (e.prototype.onSwitchToMindmap = function (e) {
          e.preventDefault(),
            this.app.userspace.view.get_is_pro()
              ? this.app.userspace.view.url_manager.update_state({
                  mindmap: !0,
                })
              : this.app.userspace.ui.open_modal("mindmap-view-upsell");
        }),
        (e.prototype.onSortTitleAsc = function (e) {
          e.preventDefault(), this.sortBy(pr.alphabetical);
        }),
        (e.prototype.onSortTitleDesc = function (e) {
          e.preventDefault(), this.sortBy(pr.alphabetical_reverse);
        }),
        (e.prototype.onSortDateDesc = function (e) {
          e.preventDefault(), this.sortBy(pr.date_reverse);
        }),
        (e.prototype.onSortDateAsc = function (e) {
          e.preventDefault(), this.sortBy(pr.date);
        }),
        (e.prototype.onOpenSearchReplace = function (e) {
          e.preventDefault(), this.ui.openSearchReplaceModal();
        }),
        (e.prototype.onInsertCurrentDate = function (e) {
          e.preventDefault(), this.ui.insertCurrentTime(!0);
        }),
        (e.prototype.onInsertCurrentTime = function (e) {
          e.preventDefault(), this.ui.insertCurrentTime(!1);
        }),
        (e.prototype.sortBy = function (e) {
          var t = this.selection().get().get_nodes();
          1 === t.length && (t = t[0].get_children().array()),
            this.view.sort_nodes(t, e);
        }),
        e
      );
    })(To),
    pa = {
      height: "",
      paddingTop: "",
      paddingBottom: "",
      marginTop: "",
      marginBottom: "",
    },
    da = As(),
    fa = 100,
    ga = 50,
    ma = [],
    va = [],
    ya = function e() {
      (this.from = {}), (this.to = {}), (this.end = {});
    };
  function ba(e, t) {
    for (var i in t) t.hasOwnProperty(i) && (e.style[i] = t[i]);
  }
  function wa(e) {
    var t = window.getComputedStyle(e),
      i = {};
    for (var n in pa)
      if (pa.hasOwnProperty(n)) {
        var o = t[n];
        if (o && o.endsWith("px")) {
          var s = parseFloat(o.substr(0, o.length - 2));
          0 !== s && (i[n] = s);
        }
      }
    return i;
  }
  function ka(e) {
    var t = da.get(e);
    if (
      (da.delete(e),
      t &&
        (ba(e, t.props.end),
        clearTimeout(t.timer),
        e.removeEventListener("transitionend", t.fn),
        ma.remove(t),
        t.complete && t.complete(),
        0 === ma.length))
    ) {
      var i = va;
      (va = []),
        i.forEach(function (e) {
          return e();
        });
    }
  }
  function Ea(e) {
    (function e() {
      return 0 < ma.length;
    })() && va.push(e);
  }
  function Ca(e, t, i) {
    (t.from.overflow = "hidden"),
      (t.end.overflow = ""),
      (t.from.transition = "all " + fa + "ms cubic-bezier(.02, .01, .47, 1)"),
      (t.end.transition = ""),
      ba(e, t.from);
    var n = {
      props: t,
      fn: function () {
        return ka(e);
      },
      timer: 0,
      complete: i,
    };
    da.set(e, n),
      ma.push(n),
      setTimeout(function () {
        ba(e, t.to),
          e.addEventListener("transitionend", n.fn),
          (n.timer = window.setTimeout(n.fn, fa + ga));
      }, 0);
  }
  function Ta(e, t) {
    ka(e), (e.style.display = "");
    var i = wa(e),
      n = new ya();
    for (var o in i)
      i.hasOwnProperty(o) &&
        ((n.from[o] = "0px"), (n.to[o] = i[o] + "px"), (n.end[o] = ""));
    Ca(e, n, function () {
      t && t();
    });
  }
  function Oa(e, t) {
    ka(e);
    var i = wa(e),
      n = new ya();
    for (var o in i)
      i.hasOwnProperty(o) &&
        ((n.from[o] = i[o] + "px"), (n.to[o] = "0px"), (n.end[o] = ""));
    Ca(e, n, function () {
      (e.style.display = "none"), t && t();
    });
  }
  var xa = As(),
    Aa = function (e, t, i) {
      return t <= e && e < i;
    },
    Da = function (e, t, i) {
      var n = $(i).offset(),
        o = n.top,
        s = o + i.offsetHeight,
        r = n.left,
        a = r + i.offsetWidth;
      return !(null !== e && !Aa(e, r, a)) && !(null !== t && !Aa(t, o, s));
    },
    Sa = function (e) {
      var t = new Date(e);
      return t.toLocaleTimeString() + " on " + t.toLocaleDateString();
    },
    Na = "is-parent",
    Ia = "is-hovering",
    La = "is-collapsed",
    Ma = "is-numbered",
    Ra = (function () {
      function e(e) {
        (this.initialized_self = !1),
          (this.collapse_animation = !1),
          (this.visibility_change_timer = null),
          (this.node_outer_el = createEl("div", { cls: "Node-outer" })),
          (this.node_el = this.node_outer_el.createEl("div", {
            cls: "Node mod-loading",
          })),
          (this.self_el = this.node_el.createEl("div", {
            cls: "Node-self is-noteEmpty",
          })),
          (this.hover_el = this.self_el.createEl("div", {
            cls: "node-line-strict node-hover",
          })),
          (this.backlinkCounterEl = this.self_el.createEl("div", {
            cls: "node-backlink-counter u-hidden",
          })),
          (this.bullet_el = this.self_el.createEl("a", {
            cls: "node-line Node-bullet",
            attr: { tabindex: -1 },
          })),
          (this.children_el = createEl("div", { cls: "Node-children" })),
          xa.set(this.node_el, e);
      }
      return (
        (e.prototype.initialize_self = function () {
          var t = this;
          if (!this.initialized_self) {
            var i = { autocorrect: !1, tabindex: -1 },
              n = {};
            this.self_el.setAttr("spellcheck", !1),
              (this.expand_collapse_el = this.hover_el.createEl("div", {
                cls: "node-line node-icon mod-expand-collapse",
              })),
              (this.checkbox_el = createEl("div", { cls: "Node-checkbox" })),
              (this.content_container_el = createEl(
                "div",
                { cls: "node-line Node-contentContainer" },
                function (e) {
                  (t.content_el = e.createEl("div", {
                    cls: "Node-content node-line needsclick",
                    attr: i,
                  })),
                    (t.$content_el = $(t.content_el)),
                    (t.rendered_content_el = e.createEl("div", {
                      cls: "Node-renderedContent node-line",
                      attr: n,
                    }));
                },
              )),
              (this.open_note_el = createEl("div", {
                cls: "Node-openNote",
                attr: { contenteditable: !1 },
              })),
              (this.note_container_el = createEl(
                "div",
                { cls: "Node-noteContainer" },
                function (e) {
                  (t.note_el = e.createEl("div", {
                    cls: "Node-note needsclick",
                    attr: i,
                  })),
                    (t.$note_el = $(t.note_el)),
                    (t.rendered_note_el = e.createEl("div", {
                      cls: "Node-renderedNote",
                      attr: n,
                    }));
                },
              )),
              this.node_el.removeClass("mod-loading"),
              (this.initialized_self = !0);
          }
        }),
        (e.prototype.initializeAttach = function () {
          this.self_el.appendChild(this.checkbox_el),
            this.self_el.appendChild(this.content_container_el),
            this.self_el.appendChild(this.open_note_el),
            this.self_el.appendChild(this.note_container_el);
        }),
        (e.prototype.attach_first = function (e) {
          var t = this.node_outer_el;
          e.children_el.firstChild !== t && e.children_el.prepend(t);
        }),
        (e.prototype.attach_after_sibling = function (e) {
          var t = this.node_outer_el,
            i = e.node_outer_el;
          i.parentNode && i.nextSibling !== t && t.insertAfter(i);
        }),
        (e.prototype.detach = function () {
          this.node_outer_el.detach();
        }),
        (e.prototype.set_visible = function (e, t, i, n) {
          var o = this,
            s = this.node_el;
          t && ((s.parentElement && s.parentElement.visible) || (t = !1)),
            this.visibility_change_timer &&
              (clearTimeout(this.visibility_change_timer),
              (this.visibility_change_timer = null));
          var r = function () {
            (o.visibility_change_timer = null),
              ka(s),
              t
                ? e
                  ? Ta(s, n)
                  : Oa(s, n)
                : (e ? s.show() : s.hide(), n && n());
          };
          i ? (this.visibility_change_timer = window.setTimeout(r, 300)) : r();
        }),
        (e.prototype.set_is_current_root = function (e, t) {
          var i = this.node_el,
            n = this.node_outer_el;
          i.toggleClass("is-currentRoot", e), e ? t.appendEl(i) : n.appendEl(i);
        }),
        (e.prototype.set_has_checkbox = function (e) {
          this.initialized_self && this.node_el.toggleClass("has-checkbox", e);
        }),
        (e.prototype.set_is_checked = function (e) {
          this.initialized_self && this.node_el.toggleClass("is-checked", e);
        }),
        (e.prototype.set_is_selected = function (e) {
          this.node_el.toggleClass("is-selected", e);
        }),
        (e.prototype.collapse_or_expand = function (e, t, i) {
          var n = this.node_el,
            o = this.children_el;
          ka(o);
          var s = function () {
            i && i();
          };
          t
            ? e
              ? Oa(o, function () {
                  o.detach(), s();
                })
              : (n.appendEl(o),
                Ta(o, function () {
                  s();
                }))
            : (e ? (o.hide(), o.detach()) : (o.show(), n.appendEl(o)), s()),
            this.self_el.toggleClass(La, e);
        }),
        (e.prototype.set_heading = function (e) {
          if (this.initialized_self) {
            var t = this.self_el;
            t.removeClass(
              "is-heading",
              "is-heading1",
              "is-heading2",
              "is-heading3",
            ),
              e && t.addClass("is-heading", "is-heading" + e);
          }
        }),
        (e.prototype.set_color_label = function (e) {
          if (this.initialized_self) {
            var t = this.content_container_el;
            t.removeClasses(xe),
              t.toggleClass("has-color", 0 < e),
              0 < e && t.addClass(Oe + e);
          }
        }),
        (e.prototype.set_history_added = function (e) {
          this.self_el.toggleClass("history-added", e);
        }),
        (e.prototype.set_history_removed = function (e) {
          this.self_el.toggleClass("history-removed", e);
        }),
        (e.prototype.set_is_hovering_bullet = function (e) {
          this.initialized_self && this.self_el.toggleClass(Ia, e);
        }),
        (e.prototype.set_has_shown_children = function (e) {
          this.initialized_self && this.self_el.toggleClass(Na, e);
        }),
        (e.prototype.set_is_note_empty = function (e) {
          this.initialized_self && this.self_el.toggleClass("is-noteEmpty", e);
        }),
        (e.prototype.set_is_content_rendered = function (e) {
          this.initialized_self &&
            this.self_el.toggleClass("is-contentRendered", e);
        }),
        (e.prototype.set_is_note_rendered = function (e) {
          this.initialized_self &&
            this.self_el.toggleClass("is-noteRendered", e);
        }),
        (e.prototype.set_content_elements_attributes = function (e, t) {
          if (this.initialized_self) {
            var i = this.content_el,
              n = this.note_el,
              o = { contenteditable: e, spellcheck: t && t };
            i.setAttrs(o), n.setAttrs(o);
          }
        }),
        (e.prototype.set_content = function (e) {
          this.initialized_self && this.content_el.setText(e + "\n");
        }),
        (e.prototype.get_content = function () {
          if (!this.initialized_self) return null;
          var e = this.content_el.getText();
          return this.strip_newline(e);
        }),
        (e.prototype.set_note = function (e) {
          if (this.initialized_self) {
            var t = this.note_el,
              i = this.open_note_el;
            t.setText(e + "\n"), (i.title = e);
          }
        }),
        (e.prototype.get_note = function () {
          if (!this.initialized_self) return null;
          var e = this.note_el.getText();
          return this.strip_newline(e);
        }),
        (e.prototype.setBacklinkCount = function (e) {
          if (this.initialized_self) {
            var t = this.backlinkCounterEl;
            0 === e ? t.uHide() : (t.setText(e.toString()), t.uShow());
          }
        }),
        (e.prototype.strip_newline = function (e) {
          return e.endsWith("\n") && (e = e.substring(0, e.length - 1)), e;
        }),
        (e.prototype.select_content = function (e, t) {
          this.initialized_self && Nr(this.content_el, e, t);
        }),
        (e.prototype.select_note = function (e, t) {
          if (this.initialized_self) {
            var i = this.note_el,
              n = this.$note_el,
              o = this.self_el;
            i.getText()
              ? Nr(i, e, t)
              : (o.removeClass("is-noteEmpty"),
                i.setText(" "),
                n.focus().empty());
          }
        }),
        (e.prototype.render_content = function (e, t, i) {
          if (this.initialized_self) {
            var n = this.rendered_content_el;
            e.render_parse_tree(t, n, i);
          }
        }),
        (e.prototype.render_note = function (e, t, i) {
          if (this.initialized_self) {
            var n = this.rendered_note_el;
            e.render_parse_tree(t, n, i);
          }
        }),
        (e.prototype.set_bullet_numbered_style = function (e) {
          this.initialized_self && this.self_el.toggleClass(Ma, e);
        }),
        (e.prototype.set_bullet_content = function (e) {
          this.initialized_self && this.bullet_el.setText(e);
        }),
        (e.prototype.set_bullet_title = function (e, t) {
          if (this.initialized_self) {
            var i = this.bullet_el;
            0 < t &&
              (i.title =
                0 < e
                  ? "Created at " + Sa(e) + ", last edited at " + Sa(t)
                  : "Last edited at " + Sa(t));
          }
        }),
        (e.prototype.set_bullet_link = function (e) {
          if (!this.initialized_self) return null;
          this.bullet_el.href = e;
        }),
        (e.prototype.set_note_display = function (e) {
          if (this.initialized_self) {
            var t = this.self_el,
              i = this.note_container_el,
              n = this.open_note_el,
              o = Fs.NOTE_DISPLAY;
            e || (e = o.SHOW),
              e === o.SHOW || e === o.TEASER
                ? (i.show(), n.hide())
                : e === o.HIDE && (i.hide(), n.show()),
              t
                .toggleClass("is-hidingNote", e === o.HIDE)
                .toggleClass("is-showingNoteFirstLine", e === o.TEASER);
          }
        }),
        (e.prototype.cursor_hit_node = function (e, t) {
          return Da(e, t, this.node_outer_el);
        }),
        (e.prototype.cursor_hit_node_self = function (e, t) {
          return Da(e, t, this.self_el);
        }),
        (e.prototype.cursor_hit_node_children = function (e, t) {
          return Da(e, t, this.children_el);
        }),
        (e.prototype.cursor_hit_inner_children = function (e) {
          var t = this.self_el,
            i = $(this.self_el).offset(),
            n = t.offsetWidth,
            o = i.left;
          return (o += 100) + 0.2 * (n -= 100) + 30 < e;
        }),
        (e.get_node_id_from_node_inner_el = function (e) {
          for (var t = e; t; ) {
            var i = xa.get(t);
            if (i) return i;
            t = t.parentElement;
          }
          return "";
        }),
        (e.get_node_el_from_node_inner_el = function (e) {
          for (var t = e; t; ) {
            if (xa.get(t)) return t;
            t = t.parentElement;
          }
          return null;
        }),
        e
      );
    })(),
    Pa = As(),
    Fa = (function (n) {
      function r(e, t) {
        var i = n.call(this, "SearchResultUi", e) || this;
        return (
          (i.containerEl = null),
          (i.search = t),
          (i.events = i.submodule(new Eo())),
          i
        );
      }
      return (
        nt(r, n),
        (r.prototype._init_fields = function () {
          (this.userspaceUi = this.app.userspace.ui),
            (this.userspaceView = this.app.userspace.view);
        }),
        (r.prototype._init_before = function () {
          var e = this.events.make_context_on_off($(this.containerEl));
          this.events.register_with_context_array(e, [
            ["click", ".Node", this.onNodeResultClick.bind(this)],
            ["mouseenter", ".Node-self", this.onNodeMouseenter.bind(this)],
            ["mouseleave", ".Node-self", this.onNodeMouseleave.bind(this)],
          ]);
        }),
        (r.prototype.setContainer = function (e) {
          this.containerEl = e;
        }),
        (r.prototype.renderDocumentResult = function (e, a, _, c) {
          var l = this;
          void 0 === _ && (_ = !0);
          var u = e.document,
            h = e.node_results;
          return createEl(
            "div",
            { cls: "search-ui-document-result-container" },
            function (e) {
              if ((u && Pa.set(e, u.get_id()), _)) {
                var t = u.get_node_collection().get_root(),
                  i = u.get_title(),
                  n = t.get_meta_object().get_note(),
                  o = null,
                  s = null,
                  r = l.search.match_node(t);
                r &&
                  ((o = r.get_content_matches()), (s = r.get_note_matches())),
                  e.createEl(
                    "div",
                    { cls: "search-ui-document-title-container" },
                    function (e) {
                      e.createEl("span", {
                        cls: "search-ui-document-title-icon",
                      }),
                        e.createEl(
                          "span",
                          { cls: "search-ui-document-title" },
                          function (e) {
                            l.userspaceUi.node_formatter.render_formatted(
                              i,
                              e,
                              o,
                            );
                          },
                        ),
                        e.addEventListener("click", function (e) {
                          u && l.switch_to(u.get_server_id(), null, c);
                        });
                    },
                  ),
                  n &&
                    e.createEl(
                      "span",
                      { cls: "search-ui-document-title-note Node-note" },
                      function (e) {
                        l.userspaceUi.node_formatter.render_formatted(n, e, s);
                      },
                    );
              }
              e.createEl(
                "div",
                { cls: "search-ui-document-results" },
                function (n) {
                  var o = h.map(function (e) {
                    return e.node;
                  });
                  Array.each(h, function (e, t) {
                    a.render(e.node, e.match, n, o, t);
                    var i = e.document;
                    i && Pa.set(n.lastElementChild, i.get_id());
                  });
                },
              );
            },
          );
        }),
        (r.prototype.onNodeResultClick = function (e) {
          e.stopPropagation(), e.preventDefault();
          var t = e.currentTarget,
            i = r.getDocumentIdFromEl(t),
            n = this.app.userspace.get_userspace().find_file(i);
          if (n) {
            var o = Ra.get_node_id_from_node_inner_el(t),
              s = n.get_node_collection().find_node(o);
            s && this.switch_to(n.get_server_id(), s.get_id());
          }
        }),
        (r.prototype.onNodeMouseenter = function (e) {
          var t = Ra.get_node_el_from_node_inner_el(e.currentTarget);
          t && t.addClass("has-hover");
        }),
        (r.prototype.onNodeMouseleave = function (e) {
          var t = Ra.get_node_el_from_node_inner_el(e.currentTarget);
          t && t.removeClass("has-hover");
        }),
        (r.prototype.switch_to = function (e, t, i) {
          this.userspaceView
            .get_url_manager()
            .apply_state({
              document_server_id: e,
              zoom_node_id: t,
              search_query: i,
            });
        }),
        (r.getDocumentIdFromEl = function (e) {
          for (; e; ) {
            var t = Pa.get(e);
            if (t) return t;
            e = e.parentElement;
          }
          return "";
        }),
        r
      );
    })(To),
    Ha = (function () {
      function e(e) {
        (this.render_options = e), (this.node_formatter = new Is(e));
      }
      return (
        (e.prototype.create_node_dom = function (e, t) {
          var i = new Ra(e.get_id());
          i.initialize_self();
          var n = e.get_meta_object(),
            o = n.get_content(),
            s = n.get_note(),
            r = n.is_checked() && !e.is_root(),
            a = n.has_checkbox(),
            _ = n.get_heading(),
            c = n.get_color_label(),
            l = n.is_numbered_list();
          i.set_content(o), i.set_note(s), i.collapse_or_expand(!1, !1);
          var u = e.get_content_parse_tree(),
            h = e.get_note_parse_tree(),
            p = t && t.get_content_matches(),
            d = t && t.get_note_matches();
          i.render_content(this.node_formatter, u, p),
            i.render_note(this.node_formatter, h, d),
            i.set_is_note_empty("" === s),
            i.set_is_content_rendered(!0),
            i.set_is_note_rendered(!0);
          var f = this.render_options.note_display;
          d && d.length && (f = Fs.NOTE_DISPLAY.SHOW), i.set_note_display(f);
          var g = this.render_options.hide_checked && r;
          return (
            i.set_visible(!g, !1, !1),
            i.set_is_checked(r),
            i.set_has_checkbox(a),
            i.set_bullet_numbered_style(l),
            i.set_heading(_),
            i.set_color_label(c),
            i.set_has_shown_children(e.has_children()),
            i.initializeAttach(),
            i
          );
        }),
        e
      );
    })(),
    za = (function (n) {
      function e(e) {
        var t = n.call(this, e) || this;
        return (t.node_doms = {}), t;
      }
      return (
        nt(e, n),
        (e.prototype.create_node_dom = function (e, t) {
          var i = n.prototype.create_node_dom.call(this, e, t);
          return (this.node_doms[e.get_id()] = i);
        }),
        (e.prototype.get_node_dom = function (e) {
          return this.node_doms[e];
        }),
        e
      );
    })(Ha),
    Ba = (function (o) {
      function e(e, t, i) {
        var n = o.call(this, e, t, i) || this;
        return (n.events = n.submodule(new Eo())), (n.search = new vs()), n;
      }
      return (
        nt(e, o),
        (e.prototype._init_fields = function () {
          (this.userspace_ui = this.app.userspace.ui),
            (this.userspace_view = this.app.userspace.view),
            (this.query = "");
          var e = this.containerEl;
          (this.results_el = e.find(".search-ui-results")),
            (this.searchbar_el = e.find(".search-ui-searchbar")),
            (this.summary_el = e.find(".search-ui-summary")),
            (this.header_el = e.find(".search-ui-header")),
            (this.search_term_el = e.find(".search-ui-search-term"));
        }),
        (e.prototype._init_after = function () {
          var e = this.containerEl;
          this.events.register_array_on_off([
            [
              $(e.find(".search-ui-go-back-link")),
              "click",
              this.on_exit_click.bind(this),
            ],
            [$(e.find(".search-ui-form")), "submit", this.on_submit.bind(this)],
          ]);
        }),
        (e.filter_checked_results = function (e) {
          return e.filter(function (e) {
            for (var t = !1, i = e.node; i && !i.is_root(); ) {
              if (i.get_meta_object().is_checked()) {
                t = !0;
                break;
              }
              i = i.get_parent();
            }
            return !t;
          });
        }),
        (e.prototype.on_exit_click = function (e) {
          e.preventDefault(), this.exit();
        }),
        (e.prototype.on_submit = function (e) {
          e.preventDefault(), this.updateQuery();
        }),
        (e.prototype.updateQuery = function () {
          var e = this.searchbar_el.value;
          "" !== e && this.update_search_query(e);
        }),
        e
      );
    })(To),
    Ua = (function (t) {
      function e(e) {
        return t.call(this, e) || this;
      }
      return (
        nt(e, t),
        (e.prototype.display_parent = function (e, t, i) {
          if (e.is_root()) i.append(t.node_outer_el);
          else {
            var n = this.get_displayed_node_dom(e);
            n
              ? n.children_el.append(t.node_outer_el)
              : ((n = this.create_node_dom(e)).children_el.append(
                  t.node_outer_el,
                ),
                this.display_parent(e.get_parent(), n, i));
          }
        }),
        (e.prototype.render = function (e, t, i) {
          if (!this.get_displayed_node_dom(e) && !e.is_root()) {
            var n = this.create_node_dom(e, t);
            this.display_parent(e.get_parent(), n, i);
          }
        }),
        (e.prototype.get_displayed_node_dom = function (e) {
          return this.get_node_dom(e.get_id());
        }),
        e
      );
    })(za),
    ja = (function (t) {
      function e(e) {
        return t.call(this, e) || this;
      }
      return (
        nt(e, t),
        (e.prototype.render = function (e, t, i, n, o) {
          var s = this.create_node_dom(e, t);
          s.set_visible(!0, !1, !1);
          var r = createEl("div", { cls: "flat-search-result" }),
            a = n[o - 1];
          (a && a.get_parent() === e.get_parent()) ||
            r.append(this.get_node_parent_chain_element(e)),
            r.append(s.node_outer_el),
            i.append(r);
        }),
        (e.prototype.get_node_parent_chain_element = function (e) {
          var s = this,
            r = [];
          for (e = e.get_parent(); e; ) r.push(e), (e = e.get_parent());
          return (
            r.reverse(),
            createEl("div", { cls: "flat-search-breadcrumb" }, function (e) {
              for (var t = 0, i = r; t < i.length; t++) {
                var n = i[t],
                  o = e.createEl("div", { cls: "flat-search-breadcrumb-item" });
                s.node_formatter.render_parse_tree(
                  n.get_content_parse_tree(),
                  o,
                  null,
                ),
                  e.createEl("span", {
                    cls: "flat-search-breadcrumb-delimiter",
                    text: " > ",
                  });
              }
            })
          );
        }),
        e
      );
    })(Ha),
    Ga = (function (o) {
      function e(e, t, i) {
        var n = o.call(this, "BacklinkResult", e, t) || this;
        return (
          (n.linkIndex = null),
          (n.searchResultUi = null),
          (n.containerEl = null),
          (n.summaryEl = null),
          (n.resultsEl = null),
          (n.searchResultUi = n.submodule(new Fa(e, i))),
          n
        );
      }
      return (
        nt(e, o),
        (e.prototype._init_fields = function () {
          (this.containerEl = fish(".document-backlinks-container")),
            this.searchResultUi.setContainer(this.containerEl),
            (this.summaryEl = this.containerEl.find(".search-ui-summary")),
            (this.resultsEl = this.containerEl.find(".search-ui-results")),
            o.prototype._init_fields.call(this);
        }),
        (e.prototype.update = function () {
          if (this.app.preferences.get_boolean(Ps.SHOW_BACKLINKS)) {
            this.containerEl.show();
            var e = null,
              t = null,
              i = this.app_document.ui.node_view;
            if (
              (i.get_current_root_node_state() &&
                ((t = i.get_current_root_node_state().node),
                (e = this.app_document.document)),
              e && t)
            ) {
              (this.linkIndex = this.app.userspace.view.linkIndex),
                this.resultsEl.empty();
              var n = [],
                o = this.linkIndex.getBacklinksForNode(e, t),
                s = this.app.preferences.get(Ps.SHOW_CHECKED);
              if (
                (o.forEach(function (e) {
                  ("hide" ===
                    (e.document
                      .get_user_data_object()
                      .get_checked_items_visibility() || s) &&
                    e.node.get_meta_object().is_checked()) ||
                    n.push({ node: e.node, document: e.document, match: null });
                }),
                0 !== n.length)
              ) {
                this.summaryEl.setText("This item is referenced in:");
                var r = new ja(this.app_document.ui.get_render_options()),
                  a = { document: null, node_results: n };
                0 < n.length &&
                  this.resultsEl.appendChild(
                    this.searchResultUi.renderDocumentResult(a, r, !1),
                  ),
                  this.containerEl.removeClass("is-loading");
              } else this.containerEl.hide();
            } else this.containerEl.hide();
          } else this.containerEl.hide();
        }),
        (e.prototype.update_search_query = function (e) {}),
        e
      );
    })(To),
    qa = {
      none: null,
      title: pr.alphabetical,
      "-title": pr.alphabetical_reverse,
      date: pr.date,
      "-date": pr.date_reverse,
      checked: pr.checked,
      "-checked": pr.checked_reverse,
      edited: pr.edited,
      "-edited": pr.edited_reverse,
      created: pr.created,
      "-created": pr.created_reverse,
    },
    $a = (function (n) {
      function e(e, t) {
        var i = n.call(this, "DocumentFlatSearch", e, t) || this;
        return (
          (i.searchResultUi = null),
          (i.searchResultUi = i.submodule(new Fa(e, i.search))),
          i
        );
      }
      return (
        nt(e, n),
        (e.prototype._init_fields = function () {
          var e = this;
          (this.scope = new Hr(Mr.DOCUMENT_FLAT_SEARCH, function () {
            return e.close(), !1;
          })),
            (this.containerEl = fish(".search-ui-container.mod-flat-search")),
            this.searchResultUi.setContainer(this.containerEl),
            n.prototype._init_fields.call(this);
        }),
        (e.prototype._init_after = function () {
          n.prototype._init_after.call(this);
          var e = this.events.make_context_on_off($(this.containerEl));
          this.events.register_with_context_array(e, [
            [
              "change",
              ".search-ui-sort-options",
              this.on_sort_options_change.bind(this),
            ],
          ]);
        }),
        (e.prototype._unload = function () {
          n.prototype._unload.call(this), this.close();
        }),
        (e.prototype.open = function (e, t) {
          var i = this;
          this.query = e;
          var n = this.userspace_ui.is_mobile_view();
          if (n) {
            var o = this.userspace_ui.mobile_searchbar;
            o.value !== e &&
              (this.userspace_ui.set_is_searching_globally_on_mobile(!0),
              "" !== (o.value = e) &&
                this.userspace_ui.show_mobile_search_header());
          }
          if (
            (this.app.scope.is_current_scope(Mr.DOCUMENT_FLAT_SEARCH) ||
              this.app.scope.push_scope(this.scope),
            this.userspace_ui.app_container.addClass("is-flat-search"),
            (this.searchbar_el.value = e),
            this.search_term_el.setText(e),
            this.header_el.toggleClass("is-searching", "" !== e),
            this.userspace_ui.update_bookmark_status(),
            this.results_el.empty(),
            n || this.searchbar_el.focus(),
            "" !== e)
          ) {
            this.search.parse(e);
            var s = this.app_document.document;
            this.containerEl
              .find(".search-ui-document-name")
              .setText(Rt(s.get_title(), 24));
            var r = s.get_node_collection(),
              a = [];
            if (
              (r.traverse_tree_dfs(null, function (e) {
                var t = i.search.match_node(e);
                t && a.push({ node: e, match: t });
              }),
              this.results_el.empty(),
              0 === a.length)
            )
              return (
                this.summary_el.setText("No results found."),
                this.searchbar_el.focus(),
                void this.containerEl.removeClass("is-loading")
              );
            var _ =
                this.search.force_show_completed ||
                this.app.preferences.get_boolean(Ps.SHOW_CHECKED),
              c = 0,
              l = 0,
              u = new ja(this.app_document.ui.get_render_options());
            (c += a.length),
              _ || (a = Ba.filter_checked_results(a)),
              (l += a.length);
            var h = null;
            t &&
              "null" !== t &&
              "" !== t &&
              ((h = this.get_sort_function_by_name(t)),
              (this.containerEl.find(".search-ui-sort-options").value = t),
              a.sort(function (e, t) {
                return h(e.node, t.node);
              }));
            var p = { document: s, node_results: a };
            0 < a.length &&
              this.results_el.appendChild(
                this.searchResultUi.renderDocumentResult(p, u, !1, e),
              );
            var d = "";
            (d =
              0 !== c && 0 === l
                ? "No results found. " +
                  (1 === c ? "1 match has" : c + " matches have") +
                  ' been filtered out by your filter settings. Append "is:completed" to your search to see all matches.'
                : "Found " + (1 === l ? "1 match:" : l + " matches:")),
              this.summary_el.setText(d),
              this.containerEl.removeClass("is-loading"),
              this.userspace_ui.stop_loading();
          }
        }),
        (e.prototype.close = function () {
          (this.query = null),
            this.userspace_ui.app_container.removeClass("is-flat-search"),
            this.results_el.empty(),
            this.summary_el.setText(""),
            this.app.scope.pop_scope(this.scope);
        }),
        (e.prototype.exit = function () {
          var e = this.query,
            t = this.app.get_current_app_document();
          t
            ? (this.userspace_view
                .get_url_manager()
                .apply_state({
                  document_server_id: t.document.get_server_id(),
                  zoom_node_id: t.ui.current_root.get_id(),
                }),
              yr(".DocumentSearch").val(e).focus())
            : this.userspace_view.get_url_manager().apply_state({});
        }),
        (e.prototype.update_search_query = function (e) {
          this.userspace_view.get_url_manager().set_search_query(e);
        }),
        (e.prototype.on_sort_options_change = function (e) {
          var t = e.target.value;
          "none" === t && (t = ""),
            this.userspace_view.get_url_manager().set_flat_search_sort(t);
        }),
        (e.prototype.get_sort_function_by_name = function (e) {
          return "none" === e && (e = ""), qa[e] || null;
        }),
        e
      );
    })(Ba),
    Wa =
      ((function (e) {
        function t() {
          return (null !== e && e.apply(this, arguments)) || this;
        }
        nt(t, e);
      })($a),
      {
        '"': "&quot;",
        "'": "&apos;",
        "<": "&lt;",
        ">": "&gt;",
        "&": "&amp;",
        "\n": "&#10;",
      }),
    Ya =
      /((?:[\0-\x08\x0B\f\x0E-\x1F\uFFFD\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]))/g;
  function Ka(e) {
    return e.replace(Ya, "").replace(/(["'&<>\n])/g, function (e, t) {
      return Wa[t];
    });
  }
  function Va(e, t) {
    var i = "";
    return t && (i = new Array(t + 1).join("  ")), i + e + "\n";
  }
  var Xa = (function () {
      function e(e, t, i) {
        (this.t = e), this.props(t), this.content(i);
      }
      return (
        (e.prototype.props = function (e) {
          return (this.p = e), this;
        }),
        (e.prototype.content = function (e) {
          if (!e && "" !== e) return this;
          if (e instanceof Array) {
            for (var t = 0; t < e.length; t++) this.content(e[t]);
            return this;
          }
          return (
            ("string" == typeof e || e instanceof String) && (e = new Za(e)),
            (this.c = this.c || []),
            this.c.push(e),
            this
          );
        }),
        (e.prototype.serialize_xml = function () {
          return '<?xml version="1.0" encoding="utf-8"?>\n' + this.serialize(0);
        }),
        (e.prototype.serialize = function (e) {
          var t = this.t,
            i = this.p,
            n = this.c;
          e || (e = 0);
          var o = "";
          if (i)
            for (var s in i) {
              if (i.hasOwnProperty(s)) o += " " + s + '="' + Ka(i[s]) + '"';
            }
          if (!n) return Va("<" + t + o + "/>", e);
          var r = "<" + t + o + ">",
            a = "</" + t + ">";
          if (1 === n.length && n[0] instanceof Za)
            return Va(r + n[0].serialize(e + 1) + a, e);
          for (var _ = "", c = 0; c < n.length; c++) _ += n[c].serialize(e + 1);
          return Va(r, e) + _ + Va(a, e);
        }),
        e
      );
    })(),
    Za = (function () {
      function e(e) {
        this.t = e;
      }
      return (
        (e.prototype.serialize = function () {
          return Ka(this.t);
        }),
        e
      );
    })(),
    Ja = function (e, t, i) {
      return new Xa(e, t, i);
    },
    Qa = function (e, t, i) {
      var n = "";
      return (
        t && (n = new Array(t + 1).join("    ")),
        i && (n += new Array(i + 1).join(" ")),
        n + e + er
      );
    },
    e_ = /(<[bi]><\/[bi]>|<[bi]\s*\/>)/gi,
    t_ = /<b>(.+?)<\/b>/gi,
    i_ = /<i>(.+?)<\/i>/gi,
    n_ = /<a href="(.+?)">(.+?)<\/a>/gi,
    o_ = function (e) {
      return e
        ? ((e_.lastIndex = 0),
          (t_.lastIndex = 0),
          (i_.lastIndex = 0),
          (n_.lastIndex = 0),
          e
            .replace(e_, "")
            .replace(t_, "**$1**")
            .replace(i_, "__$1__")
            .replace(n_, "[$2]($1)"))
        : "";
    },
    s_ = /\*\*(.+?)\*\*/gi,
    r_ = /__(.+?)__/gi,
    a_ = /\[(.+?)\]\((.+?)\)/gi,
    c_ = function (e) {
      return e
        ? ((s_.lastIndex = 0),
          (r_.lastIndex = 0),
          (a_.lastIndex = 0),
          e
            .replace(s_, "<b>$1</b>")
            .replace(r_, "<i>$1</i>")
            .replace(a_, '<a href="$2">$1</a>'))
        : "";
    },
    l_ = (function () {
      function l() {
        (this.node = null),
          (this.content = ""),
          (this.note = ""),
          (this.checkbox = !1),
          (this.checked = !1),
          (this.heading = 0),
          (this.color_label = 0),
          (this.list_style = fe),
          (this.collapsed = !1),
          (this.children = []);
      }
      return (
        (l.from_nodes = function (e) {
          var t = new l();
          return (
            each(e, function (e) {
              t.add_child(l.from_node(e));
            }),
            t
          );
        }),
        (l.from_node = function (e) {
          return new l()._import_node(e);
        }),
        (l.prototype._import_node = function (e) {
          var t = this,
            i = (this.node = e).get_meta_object();
          return (
            (this.content = i.get_content()),
            (this.note = i.get_note()),
            (this.checkbox = i.has_checkbox()),
            (this.checked = i.is_checked()),
            (this.heading = i.get_heading()),
            (this.color_label = i.get_color_label()),
            (this.list_style = i.get_list_style()),
            this.heading || (this.heading = 0),
            this.color_label || (this.color_label = 0),
            (this.collapsed = e.is_collapsed()),
            0 < e.get_children().length() &&
              e.get_children().each(function (e) {
                t.add_child(l.from_node(e));
              }),
            this
          );
        }),
        (l.from_text = function (e) {
          return new l()._import_text(e);
        }),
        (l.prototype._import_text = function (e) {
          return (this.content = e), this;
        }),
        (l.prototype.add_child = function (e) {
          this.children.push(e);
        }),
        (l.import_plaintext = function (e) {
          for (
            var t = It(Lt(e)).split("\n"), i = [], n = 0;
            n < t.length;
            n++
          ) {
            var o = t[n],
              s = Mt(o),
              r = o.length - s.length;
            i.push({ indent: r, content: s });
          }
          return l.import_plaintext_lines(i, 0, i.length);
        }),
        (l.import_plaintext_lines = function (e, t, i) {
          for (var n = [], o = t; o < e.length && o < i; ) {
            var s = e[o].indent,
              r = e[o].content,
              a = new l();
            a._import_plaintext(r), n.push(a);
            for (var _ = ++o; o < e.length && o < i && s < e[o].indent; ) o++;
            var c = o;
            _ !== c && (a.children = l.import_plaintext_lines(e, _, c));
          }
          return n;
        }),
        (l.prototype._import_plaintext = function (e) {
          return (this.content = e), this;
        }),
        (l.import_opml = function (e) {
          var i = [],
            n = !1;
          e = (e = (e = e.replace(/\?>/, " ?>")).trim()).replace(
            /&#(5[0-9]{4});&#(5[0-9]{4});/,
            function (e, t, i) {
              return 55296 < t && t < 56319 && 56320 < i && i < 57343
                ? String.fromCharCode(t, i)
                : e;
            },
          );
          var t = $($.parseXML(e)),
            o = t.find("head > flavor");
          return (
            0 < o.length &&
              (n = "dynalist" === o.get(0).innerHTML.toLowerCase()),
            t.find("body > outline").each(function (e, t) {
              i.push(l.import_opml_node($(t), n));
            }),
            i
          );
        }),
        (l.import_opml_node = function (e, t) {
          var i = new l();
          return i._import_opml_node(e, t), i;
        }),
        (l.prototype._import_opml_node = function (e, i) {
          (this.node = null),
            (this.content = e.attr("text")),
            (this.note = e.attr("_note")),
            i ||
              ((this.content = o_(this.content)), (this.note = o_(this.note))),
            (this.checkbox = parseBool(
              e.attr("checkbox") || e.attr("checklist"),
            )),
            (this.checked = parseBool(e.attr("complete"))),
            (this.collapsed = parseBool(e.attr("collapsed"))),
            (this.heading = parseInt(e.attr("heading"))),
            isNaN(this.heading) && (this.heading = 0),
            (this.color_label = parseInt(e.attr("colorLabel"))),
            isNaN(this.color_label) && (this.color_label = 0),
            (this.list_style = e.attr("listStyle") === me[ge] ? ge : fe),
            isNaN(this.list_style) && (this.list_style = fe),
            this.note || (this.note = e.attr("note")),
            this.checked || (this.checked = parseBool(e.attr("_complete")));
          var n = [];
          return (
            e.children().each(function (e, t) {
              n.push(l.import_opml_node($(t), i));
            }),
            (this.children = n),
            this
          );
        }),
        (l.prototype.export_plaintext = function (e) {
          return (
            (e = e || {}).prefix || (e.prefix = ""),
            this._export_plaintext(e, 0, 0, 0, !1)
          );
        }),
        (l.prototype.export_plaintext_children = function (e) {
          return (
            (e = e || {}).prefix || (e.prefix = ""),
            this._export_plaintext_children(e, 0)
          );
        }),
        (l.prototype._export_plaintext = function (t, i, n, e, o) {
          void 0 === o && (o = !1);
          var s = o ? e + ". " : t.prefix,
            r = Qa(s + this.content, t.has_indentation ? i : 0, n);
          if (!t.hideNote && this.note) {
            var a = new Array(s.length + 1).join(" ");
            this.note.split("\n").forEach(function (e) {
              r += Qa(a + e, t.has_indentation ? i : 0, n);
            });
          }
          var _ = 0;
          o && (_ = t.has_indentation ? e.toString().length : 0);
          var c = this._export_plaintext_children(t, i + 1, _);
          return r + c;
        }),
        (l.prototype._export_plaintext_children = function (e, t, i) {
          var n = e.skip_callback;
          if (e.hide_collapsed && this.collapsed) return "";
          for (var o = [], s = 0; s < this.children.length; s++) {
            var r = this.children[s];
            (n && n(r)) ||
              o.push(
                r._export_plaintext(e, t, i, s + 1, this._is_numbered_list()),
              );
          }
          return o.join("");
        }),
        (l.prototype.export_formatted = function (e) {
          return this._export_formatted(e || {});
        }),
        (l.prototype.export_formatted_children = function (e) {
          return this._export_formatted_children(e || {});
        }),
        (l.prototype._export_formatted = function (e) {
          var t = Ht(c_(xt(this.content)));
          if (
            (!e.hideNote && this.note && (t += "<br/>" + Ht(c_(xt(this.note)))),
            0 !== this.heading)
          ) {
            var i = "h" + this.heading;
            t = "<" + i + ">" + t + "</" + i + ">";
          }
          this.checked && (t = "<del>" + t + "</del>");
          var n = createEl("li");
          return (
            n.html(t),
            !(e.hide_collapsed && this.collapsed) &&
              0 < this.children.length &&
              n.append(
                this._export_formatted_children(e, this._is_numbered_list()),
              ),
            n
          );
        }),
        (l.prototype._export_formatted_children = function (e, t) {
          void 0 === t && (t = !1);
          for (
            var i = e.skip_callback,
              n = t ? createEl("ol") : createEl("ul"),
              o = 0;
            o < this.children.length;
            o++
          ) {
            var s = this.children[o];
            (i && i(s)) || n.append(s._export_formatted(e));
          }
          return n;
        }),
        (l.prototype.export_opml = function (e, t) {
          t = t || {};
          var i = Ja("opml", { version: "2.0" }),
            n = Ja("head")
              .content(Ja("title").content(this.content))
              .content(Ja("flavor").content("dynalist"))
              .content(Ja("source").content(d)),
            o = Ja("body").content(this._export_opml_node_children(t));
          return (
            i.content(n).content(o),
            e &&
              n
                .content(Ja("ownerName").content(e.name))
                .content(Ja("ownerEmail").content(e.email)),
            i.serialize_xml()
          );
        }),
        (l.prototype._export_opml_node = function (e) {
          var t = {};
          (t.text = this.content),
            !e.hideNote && this.note && (t._note = this.note),
            this.checkbox && (t.checkbox = "true"),
            this.checked && (t.complete = "true"),
            this.heading && (t.heading = "" + this.heading),
            this.color_label && (t.colorLabel = "" + this.color_label),
            this.list_style && (t.listStyle = "" + me[this.list_style]),
            this.collapsed && (t.collapsed = "true");
          var i = Ja("outline", t),
            n = this._export_opml_node_children(e);
          return 0 < n.length && i.content(n), i;
        }),
        (l.prototype._export_opml_node_children = function (e) {
          for (
            var t = e.skip_callback, i = [], n = 0;
            n < this.children.length;
            n++
          ) {
            var o = this.children[n];
            (t && t(o)) || i.push(o._export_opml_node(e));
          }
          return i;
        }),
        (l.prototype._is_numbered_list = function () {
          return this.list_style === ge;
        }),
        (l.prototype.get_content = function () {
          return this.content;
        }),
        l
      );
    })(),
    u_ = /^<img src="(.*?)"\s*\/?>$/g,
    h_ = (function (n) {
      function e(e, t) {
        var i = n.call(this, "ClipboardManager", e, t) || this;
        return (i.events = i.submodule(new Eo())), i;
      }
      return (
        nt(e, n),
        (e.prototype._init_dependencies = function () {
          (this.document_ui = this.app_document.ui),
            (this.document_view = this.app_document.view);
        }),
        (e.prototype._init_fields = function () {
          (this.hidden_input = $("#clipboard-container")),
            (this.selection_before_paste = null),
            (this.is_pasting = !1),
            (this.opml_regex =
              /^\s*(<\?\s*xml[^?]*\?>)?\s*<\s*opml[\s\S]*<\/\s*opml\s*>\s*$/i),
            (this.last_paste_ts = 0);
        }),
        (e.prototype._init_after = function () {
          var e = this.events.make_context_event_listener(document);
          this.events.register_with_context_array(e, [
            ["cut", this.onCut.bind(this)],
            ["copy", this.onCopy.bind(this)],
            ["paste", this.onPaste.bind(this)],
          ]);
        }),
        (e.prototype.get_is_pasting = function () {
          return this.is_pasting;
        }),
        (e.prototype.onCut = function (e) {
          this.copy(e, !0);
        }),
        (e.prototype.onCopy = function (e) {
          this.copy(e, !1);
        }),
        (e.prototype.copy = function (e, t) {
          var n = this;
          if (this.app.scope.is_current_scope(Mr.EDITOR)) {
            var i = this.document_ui.selection();
            i.synchronize();
            var o = i.get();
            if (o instanceof Go) {
              var s = o.get_nodes(),
                r = {
                  skip_callback: function (e) {
                    var t = e.node;
                    if (t) {
                      var i = n.document_ui.get_node_state(t);
                      if (i) return !i.is_visible() || void 0;
                    }
                  },
                  hide_collapsed: !0,
                },
                a = (u = l_.from_nodes(s)).export_plaintext_children(r),
                _ = u.export_formatted_children(r).outerHTML;
              e.preventDefault(),
                (c = e.clipboardData)
                  ? Js
                    ? c.setData("Text", a)
                    : (c.setData("text/plain", a),
                      c.setData("text/html", _),
                      c.setData("text/opml", u.export_opml()))
                  : window.clipboardData &&
                    window.clipboardData.setData("Text", a),
                t && this.document_view.detach_nodes_for_selection(!0);
            } else if (o instanceof Bo) {
              if (this.app_document.controller.is_read_only()) return;
              var c = e.clipboardData,
                l = o.get_selected_text();
              if ((e.preventDefault(), !l)) return;
              var u = l_.from_text(l);
              if (c)
                if (Js) c.setData("Text", l);
                else {
                  c.setData("text/plain", l),
                    c.setData("text/html", u.export_formatted().innerHTML);
                  var h = new l_();
                  h.add_child(u), c.setData("text/opml", h.export_opml());
                }
              else
                window.clipboardData && window.clipboardData.setData("Text", l);
              t && this.document_view.removeSelectionText(o);
            }
          }
        }),
        (e.prototype.onPaste = function (e) {
          var i = this;
          if (this.app.scope.is_current_scope(Mr.EDITOR)) {
            var n = this.document_ui.selection();
            if (n.is_selecting()) {
              var t = Date.now();
              if (t - this.last_paste_ts < 30) e.preventDefault();
              else {
                this.last_paste_ts = t;
                var o = "",
                  s = "",
                  r = "",
                  a = e.clipboardData,
                  _ = window.clipboardData;
                if (a) {
                  if (
                    ((o = a.getData("text/plain")),
                    (s = a.getData("text/html")),
                    (r = a.getData("text/opml")),
                    !o && !s)
                  ) {
                    var c = a.getData("text/uri-list");
                    c && (o = c);
                  }
                } else _ && (o = _.getData("Text"));
                var l = [];
                a && a.items && 0 !== a.items.length
                  ? Array.each(a.items, function (e) {
                      if ("file" === e.kind) {
                        var t = e.getAsFile();
                        t && l.push(new Wo(t, "Pasted image"));
                      }
                    })
                  : _ &&
                    _.files &&
                    0 < _.files.length &&
                    Array.each(_.files, function (e) {
                      e && l.push(new Wo(e, "Pasted image"));
                    });
                var u = n.get(),
                  h =
                    u instanceof jo ||
                    (u instanceof Uo && u.get_node().is_root()),
                  p = !o && !s && !r && 0 === l.length,
                  d = function (e) {
                    var t = i.document_ui.get_relative_scroll(u);
                    unsafe(e),
                      (u = n.get()),
                      i.document_ui.restore_relative_scroll(t),
                      n.apply(u);
                  };
                if (!h) {
                  if (r)
                    return (
                      d(function () {
                        i.document_view.paste_portable_nodes(l_.import_opml(r));
                      }),
                      void e.preventDefault()
                    );
                  if (!h && o && this.opml_regex.test(o))
                    return (
                      d(function () {
                        i.document_view.paste_portable_nodes(l_.import_opml(o));
                      }),
                      void e.preventDefault()
                    );
                }
                if (s || p)
                  return (
                    this._select_hidden_input_before_paste(),
                    void wt(function () {
                      var e = i.hidden_input.html();
                      if (
                        (i._restore_selection(),
                        i.hidden_input.empty(),
                        (u_.lastIndex = 0),
                        u_.test(e) && 1 === l.length)
                      )
                        i.process_upload(l);
                      else {
                        var t = i.paste_as_html(e);
                        t &&
                          d(function () {
                            h
                              ? i.document_ui.insert_text(t)
                              : i.document_view.paste_as_plain_text(t);
                          });
                      }
                    })
                  );
                if (o)
                  return (
                    d(function () {
                      h
                        ? i.document_ui.insert_text(Lt(o))
                        : i.document_view.paste_portable_nodes(
                            l_.import_plaintext(o),
                          );
                    }),
                    void e.preventDefault()
                  );
                e.preventDefault(), this.process_upload(l);
              }
            }
          }
        }),
        (e.prototype.process_upload = function (e) {
          1 === e.length &&
            (this.app.userspace.view.get_is_pro()
              ? this.document_ui.paste_to_upload_files(e)
              : this.app.userspace.ui.open_modal("file-upload-upsell"));
        }),
        (e.prototype.focus_on_hidden_input = function (e) {
          this.hidden_input.text(e ? "-" : ""), Ir(this.hidden_input.get(0));
        }),
        (e.prototype.onHiddenInput = function (e, t) {
          var i,
            n = this,
            o = function () {
              n.hidden_input.off("input", o), clearTimeout(i), e();
            };
          this.hidden_input.one("input", o), t && (i = this.set_timeout(o, t));
        }),
        (e.prototype.paste_as_html = function (e) {
          var t = this;
          e = e.replace(
            /<!--\[if !supportLists\]-->[\s\S]*?<!--\[endif\]-->/g,
            "",
          );
          var i = createEl("div");
          i.innerHTML = e;
          var n = i.querySelectorAll("p, h1, h2, h3, h4, h5, h6");
          if (/MsoList|mso-list/i.test(e) && 0 < n.length) {
            var o = "";
            return (
              each(n, function (e) {
                (o += t._get_ms_word_line_indentation(e)),
                  (o += t._get_ms_word_line_text(e));
              }),
              o
            );
          }
          this._clean_html(i);
          var s = createEl("div");
          return (
            Xs &&
              i.lastChild &&
              "BR" === i.lastChild.nodeName &&
              i.lastChild.remove(),
            (e =
              i.firstChild && "pre" === i.firstChild.nodeName.toLowerCase()
                ? i.innerHTML
                : i.innerHTML
                    .replace(/>(\r|\n)+</g, "><")
                    .replace(/\r|\n/g, " ")
                    .replace(/ +/g, " ")
                    .replace(/&nbsp;/g, " ")),
            (s.innerHTML = e),
            this._dom_node_to_plain_text(s, "", !0)
          );
        }),
        (e.prototype._get_ms_word_line_text = function (e) {
          return e.innerText.replace(/\n/g, " ").trim() + "\n";
        }),
        (e.prototype._get_ms_word_line_indentation = function (e) {
          var t = "1",
            i = e.getAttribute("style"),
            n = i && i.match(/mso-list:.*level(\d+)/),
            o = e.nodeName.match(/h(\d)/i),
            s = e.className.match(/MsoHeading(\d+)/i);
          return (
            n ? (t = n[1]) : o ? (t = o[1]) : s && (t = s[1]),
            new Array(parseInt(t) + 1).join("\t")
          );
        }),
        (e.prototype._dom_node_to_plain_text = function (n, t, o) {
          var s = this,
            r = [],
            e = n.nodeName.toLowerCase(),
            i = function (e) {
              for (var t = 0; t < n.childNodes.length; t++) {
                var i = o && t == n.childNodes.length - 1;
                r.push(s._dom_node_to_plain_text(n.childNodes[t], e, i));
              }
            },
            a = function (e) {
              r.push(e), i(t), r.push(e);
            };
          if ("style" === e || "script" === e) return "";
          if ("ul" === e || "ol" === e) i(t + "\t");
          else if ("li" === e) r.push("\n"), r.push(t), i(t);
          else if (h.contains(e)) i(t), o || r.push("\n");
          else if ("b" === e || "strong" === e) a("**");
          else if ("i" === e || "em" === e) a("__");
          else if (v.contains(e)) i(t);
          else if ("br" === e) r.push("\n");
          else if ("a" === e) {
            var _ = n.getAttribute("href"),
              c = n.textContent;
            _
              ? (c || (c = ""),
                c === _ && mn.test(c)
                  ? r.push(c)
                  : r.push("[" + c + "](" + _ + ")"))
              : r.push(c);
          } else if ("img" === e) {
            var l = n.getAttribute("src");
            c = n.getAttribute("alt") || n.title;
            r.push("![" + c + "](" + l + ")");
          } else if (
            0 < n.textContent.length &&
            n.nodeType !== Node.COMMENT_NODE &&
            (r.push(n.textContent), n.nodeType === y && p.contains(e))
          ) {
            var u = "";
            n.currentStyle
              ? (u = n.currentStyle.display)
              : window.getComputedStyle &&
                (u = window
                  .getComputedStyle(n, null)
                  .getPropertyValue("display")),
              !o && m.contains(u) && r.push("\n");
          }
          return r.join("");
        }),
        (e.prototype._clean_html = function (e) {
          var s = { a: ["href"], img: ["src", "alt", "title"] };
          each(e.getElementsByTagName("*"), function (e) {
            var t = e.nodeName.toLowerCase();
            ("script" != t && "style" != t) || e.remove();
            for (var i = e.attributes, n = i.length - 1; 0 <= n; n--) {
              var o = i[n].name;
              (s[t] && -1 !== s[t].indexOf(o)) || e.removeAttribute(o);
            }
          });
        }),
        (e.prototype._select_hidden_input_before_paste = function () {
          (this.is_pasting = !0),
            (this.selection_before_paste = this.document_ui.selection().get()),
            this.focus_on_hidden_input(!1),
            (this.is_pasting = !1);
        }),
        (e.prototype._restore_selection = function () {
          this.selection_before_paste &&
            (this.document_ui.selection().apply(this.selection_before_paste),
            (this.selection_before_paste = null));
        }),
        e
      );
    })(To),
    p_ = [
      "direction",
      "boxSizing",
      "width",
      "height",
      "overflowX",
      "overflowY",
      "borderTopWidth",
      "borderRightWidth",
      "borderBottomWidth",
      "borderLeftWidth",
      "borderStyle",
      "paddingTop",
      "paddingRight",
      "paddingBottom",
      "paddingLeft",
      "fontStyle",
      "fontVariant",
      "fontWeight",
      "fontStretch",
      "fontSize",
      "fontSizeAdjust",
      "lineHeight",
      "fontFamily",
      "textAlign",
      "textTransform",
      "textIndent",
      "textDecoration",
      "letterSpacing",
      "wordSpacing",
      "tabSize",
      "MozTabSize",
    ];
  var d_ = (function (o) {
      function e(e, t, i) {
        var n = o.call(this, e, t, i) || this;
        return (n.events = n.submodule(new Eo())), n;
      }
      return (
        nt(e, o),
        (e.prototype._init_fields = function () {
          this.close();
        }),
        (e.prototype._init_after = function () {
          this.events.register_event_on_off(
            this.app.keymap,
            "keydown",
            null,
            null,
            this.on_keydown_any.bind(this),
            Mr.ANY,
          );
        }),
        (e.prototype.close = function () {
          (this.text = ""), (this.start = 0), (this.end = 0);
        }),
        (e.prototype.openTriggerOnElement = function (e) {
          var t = this;
          if (e === document.activeElement) {
            var i = function () {
              (e === document.activeElement && t.open(e)) || t.close();
            };
            wt(i), Xs && this.set_timeout(i, 100);
          } else this.close();
        }),
        (e.prototype.on_keydown_any = function (e, t) {
          if (!this.ignored_keys || !this.ignored_keys.contains(t)) {
            var i = e.target;
            this.is_trigger_element(i) && this.openTriggerOnElement(i);
          }
        }),
        (e.prototype.find_position = function (e, t, i) {
          var n;
          for (i.lastIndex = 0; null !== (n = i.exec(e)); )
            if (n.index + n[0].length >= t && n.index < t)
              return n.index + n[1].length;
          return -1;
        }),
        (e.prototype.get_dropdown_offset = function (e, t) {
          var i = mr(e, t),
            n = (function e(t, i, n, o) {
              var s = (o && o.debug) || !1;
              if (s) {
                var r = document.querySelector(
                  "#input-textarea-caret-position-mirror-div",
                );
                r && r.parentNode.removeChild(r);
              }
              var a = document.createElement("div");
              (a.id = "input-textarea-caret-position-mirror-div"),
                document.body.appendChild(a);
              var _ = a.style,
                c = window.getComputedStyle
                  ? getComputedStyle(t)
                  : t.currentStyle;
              (_.whiteSpace = "pre-wrap"),
                "INPUT" !== t.nodeName && (_.wordWrap = "break-word"),
                (_.position = "absolute"),
                s || (_.visibility = "hidden"),
                p_.forEach(function (e) {
                  _[e] = c[e];
                }),
                Zs
                  ? t.scrollHeight > parseInt(c.height) &&
                    (_.overflowY = "scroll")
                  : (_.overflow = "hidden"),
                (a.textContent = i.substring(0, n)),
                "INPUT" === t.nodeName &&
                  (a.textContent = a.textContent.replace(/\s/g, " "));
              var l = document.createElement("span");
              (l.textContent = i.substring(n) || "."), a.appendChild(l);
              var u = parseFloat(c.lineHeight);
              isNaN(u) && (u = 1.2 * parseInt(c.fontSize));
              var h = {
                top: l.offsetTop + parseInt(c.borderTopWidth),
                left: l.offsetLeft + parseInt(c.borderLeftWidth),
                height: u,
              };
              return (
                s
                  ? (l.style.backgroundColor = "#aaa")
                  : document.body.removeChild(a),
                h
              );
            })(e, this.text, this.start),
            o = i.top + n.top,
            s = i.left + n.left;
          return { top: o, bottom: o + n.height, left: s, right: s };
        }),
        (e.prototype.get_replace_text = function (e) {
          var t = this.text;
          return t.substring(0, this.start) + e + t.substring(this.end);
        }),
        e
      );
    })(To),
    f_ = (function (e) {
      function t() {
        return (null !== e && e.apply(this, arguments)) || this;
      }
      return (
        nt(t, e),
        (t.prototype._init_fields = function () {
          (this.element = null), e.prototype._init_fields.call(this);
        }),
        (t.prototype.close = function () {
          (this.element = null), e.prototype.close.call(this);
        }),
        (t.prototype.replace_text = function (e) {
          var t = this.get_replace_text(e);
          if (this.element) {
            this.element.value = t;
            var i = this.start + e.length;
            (this.element.selectionStart = i), (this.element.selectionEnd = i);
          }
        }),
        (t.prototype.try_open = function (e, t) {
          var i = e;
          if (i.selectionStart !== i.selectionEnd) return null;
          var n = i.value,
            o = i.selectionStart,
            s = this.find_position(n, o, t);
          return s < 0
            ? null
            : ((this.text = n),
              (this.start = s),
              (this.element = i),
              (this.end = o),
              n.substring(this.start, o).trim());
        }),
        t
      );
    })(d_),
    g_ = (function (e) {
      function t() {
        return (null !== e && e.apply(this, arguments)) || this;
      }
      return (
        nt(t, e),
        (t.prototype._init_dependencies = function () {
          (this.ui = this.app_document.ui),
            (this.view = this.app_document.view);
        }),
        (t.prototype._init_fields = function () {
          (this.node = null),
            (this.is_note = !1),
            (this.input_field = null),
            e.prototype._init_fields.call(this);
        }),
        (t.prototype.close = function () {
          (this.node = null),
            (this.is_note = !1),
            (this.input_field = null),
            e.prototype.close.call(this);
        }),
        (t.prototype.is_trigger_element = function (e) {
          return e.hasClass("Node-content") || e.hasClass("Node-note");
        }),
        (t.prototype.replace_text = function (e, t) {
          this.view.pre_edit();
          var i = this.node,
            n = this.get_replace_text(e);
          if (this.is_note) {
            o = null;
            t && (o = zo.select_note_range(i, t[0], t[1])),
              this.view.edit_note(i, n, o);
          } else {
            var o = null;
            t && (o = zo.select_content_range(i, t[0], t[1])),
              this.view.edit_content(i, n, o);
          }
        }),
        (t.prototype.replace_text_and_focus = function (e) {
          var t = this.start + e.length;
          this.replace_text(e, [t, t]);
        }),
        (t.prototype.get_current_selection = function () {
          var e = this.ui.selection();
          return e.synchronize(), e.get();
        }),
        (t.prototype.try_open = function (e) {
          var t = this.get_current_selection();
          if (t instanceof Go) return null;
          if (!(t instanceof Bo)) return null;
          if (!t.is_caret_selection()) return null;
          var i = t.get_node(),
            n = t.get_position_start(),
            o = t instanceof jo;
          if (!i || !i.is_attached_to_root()) return null;
          var s = o
              ? i.get_meta_object().get_note()
              : i.get_meta_object().get_content(),
            r = this.find_position(s, n, e);
          if (r < 0) return null;
          (this.text = s), (this.start = r), (this.end = n);
          var a = this.ui.get_node_state(i);
          return (
            a.initialize_self(),
            (this.node = i),
            (this.is_note = o),
            (this.input_field = o ? a.dom.note_el : a.dom.content_el),
            s.substring(this.start, n).trim()
          );
        }),
        t
      );
    })(d_),
    m_ = [l.UP, l.DOWN, l.LEFT, l.RIGHT, l.ESC, l.TAB, l.DELETE, l.BACKSPACE],
    v_ = "All day",
    y_ = "Now",
    b_ = /(\s|^)!/gm,
    w_ = (function (i) {
      function e(e, t) {
        return i.call(this, "DatepickerPopupManager", e, t) || this;
      }
      return (
        nt(e, i),
        (e.prototype._init_fields = function () {
          (this._open = !1),
            (this.ignored_keys = m_),
            i.prototype._init_fields.call(this);
        }),
        (e.prototype._init_before = function () {
          i.prototype._init_before.call(this),
            (this.datepickerEl = $("#datepicker-container")),
            (this.isDatepickerLoaded = !1),
            (this.isDateRangeMode = !1),
            (this.previousSetDate = null),
            (this.hasSetRange = !1),
            (this.scope = new Hr(Mr.DATE_PICKER, this.close.bind(this))),
            (this.lastSelectedRecurrence = 0),
            (this.customRecurrence = null);
        }),
        (e.prototype._init_after = function () {
          i.prototype._init_after.call(this);
          var e = this.events.make_context_on_off($(".AppContainer"));
          this.events.register_with_context_array(e, [
            [
              "mousedown",
              ".datepicker, .ui-timepicker-wrapper",
              this._do_nothing.bind(this),
            ],
            ["mousedown", ".node-time", this.onDateClick.bind(this)],
            ["focus", ".node-time", this.onNodeTimeFocus.bind(this)],
            [
              "mousedown",
              ".js-close-datepicker",
              this.on_done_editing.bind(this),
            ],
            [
              "change",
              ".js-change-date-recurrence",
              this.onRecurrenceChanged.bind(this),
            ],
            [
              "mousedown",
              ".js-change-date-recurrence",
              this.onRecurrenceDropdownMousedown.bind(this),
            ],
            [
              "mousedown",
              ".MobileHeader-option--deleteCurrentDate",
              this.onDeleteDate.bind(this),
            ],
            [
              "mousedown",
              ".custom-recurrence-from-completion-label",
              this.onCheckRepeatFromCompletion.bind(this),
            ],
            [
              "mouseup",
              ".date-picker-date-range",
              this.onToggleDateRangeMode.bind(this),
            ],
            [
              "mousedown",
              ".start-time-picker, .end-time-picker",
              this.onTimeInputClick.bind(this),
            ],
          ]);
          var t = this.events.make_context_on_off(this.app.keymap);
          this.events.register_with_context_array(t, [
            ["keydown", [], l.ENTER, this.on_done_editing.bind(this), Mr.ANY],
            ["keydown", [], l.ESC, this.onKeydownEsc.bind(this), Mr.ANY],
            [
              "keydown",
              null,
              null,
              this.onKeydownAnyOverride.bind(this),
              Mr.ANY,
            ],
          ]);
        }),
        Object.defineProperty(e.prototype, "startTimepickerEl", {
          get: function () {
            return $(".start-time-picker");
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(e.prototype, "endTimepickerEl", {
          get: function () {
            return $(".end-time-picker");
          },
          enumerable: !0,
          configurable: !0,
        }),
        (e.prototype.close = function () {
          this._open &&
            (this.startTimepickerEl.timepicker("remove"),
            this.endTimepickerEl.timepicker("remove"),
            this.datepickerEl.datepicker("setRange", []),
            this.setup_datepicker(),
            (this.dom.recurNoneOption.selected = !0),
            (this.dom.recurFromCompletion.checked = !1),
            this.datepickerEl.datepicker("hide"),
            $(".ui-timepicker-wrapper").hide(),
            this.app.userspace.ui.show_mobile_document_header(),
            (this._open = !1),
            this.app.scope.pop_scope(this.scope)),
            i.prototype.close.call(this);
        }),
        (e.prototype.find_position = function (e, t, i) {
          return this.skipLocationCheck
            ? ((this.skipLocationCheck = !1), t)
            : t < 1 || "!" !== e.charAt(t - 1)
            ? -1
            : 1 < t && !/\s/.test(e.charAt(t - 2))
            ? -1
            : t - 1;
        }),
        (e.prototype.onKeydownEsc = function () {
          if (this._open) return this.close(), !1;
        }),
        (e.prototype.onKeydownAnyOverride = function (e, t) {
          var i = this;
          if (this.ignored_keys.contains(t)) {
            if (this._open) {
              var n = this.startTimepickerEl.get(0),
                o = this.endTimepickerEl.get(0);
              if (
                [l.UP, l.DOWN, l.LEFT, l.RIGHT].contains(t) &&
                !this.startTimepickerEl.timepicker("isVisible") &&
                !this.endTimepickerEl.timepicker("isVisible")
              )
                return void this.datepickerEl.datepicker("keydown", e);
              if (t === l.TAB) {
                if ((e.preventDefault(), Oi(o))) o.blur();
                else {
                  var s = Oi(n) ? o : n;
                  s.focus(), s.setSelectionRange(0, s.value.length);
                }
                return;
              }
            }
            var r = e.target;
            this.is_trigger_element(r) &&
              wt(function () {
                if (r === document.activeElement && null !== i.try_open(b_))
                  return;
                i.close();
              });
          }
        }),
        (e.prototype._do_nothing = function (e) {
          e.stopPropagation(),
            this.startTimepickerEl.timepicker("hide"),
            this.endTimepickerEl.timepicker("hide");
        }),
        (e.prototype.onRecurrenceChanged = function (e) {
          if (this.app.userspace.view.get_is_pro()) {
            var t = this.dom.recurOptions;
            t.options[t.selectedIndex] === this.dom.recurCustomCreate
              ? (this.resetCustomRecurrenceModal(),
                this.app.userspace.ui.open_modal("custom-date-recurrence"))
              : (this.lastSelectedRecurrence = t.selectedIndex),
              this.updateFromCompletionOptionVisibility();
          }
        }),
        (e.prototype.on_done_editing = function (e) {
          if (
            this._open &&
            null === this.app.userspace.ui.modal_manager.get_open_modal_name()
          )
            return (
              this.setup_datepicker(),
              this.datepickerEl.datepicker("setFocusedDate"),
              Vs && this.app_document.ui.restore_mobile_cached_selection(),
              this.reflectDatepickerDatetimeInDom(),
              this.close(),
              !e && void 0
            );
        }),
        (e.prototype.onRecurrenceDropdownMousedown = function (e) {
          this.app.userspace.view.get_is_pro() ||
            (this.app.userspace.ui.open_modal("recurrence-date-upsell"),
            e.preventDefault());
        }),
        (e.prototype.onDeleteDate = function () {
          this.replace_text_and_focus("");
        }),
        (e.prototype.onNodeTimeFocus = function (e) {
          e.currentTarget.blur();
        }),
        (e.prototype.onCheckRepeatFromCompletion = function (e) {
          if (fr(e))
            if (this.app.userspace.view.get_is_pro()) {
              var t = this.dom.recurFromCompletion;
              t.checked = !t.checked;
            } else this.app.userspace.ui.open_modal("recurrence-date-upsell");
        }),
        (e.prototype.onToggleDateRangeMode = function (e) {
          this.updateDateRangeMode(!this.isDateRangeMode),
            this.isDateRangeMode &&
              "" === this.endTimepickerEl.val() &&
              this.endTimepickerEl.val(this.startTimepickerEl.val()),
            e.stopPropagation();
        }),
        (e.prototype.onTimeInputClick = function (e) {
          var t = e.currentTarget;
          document.activeElement !== t && (t.select(), e.preventDefault()),
            e.stopPropagation();
        }),
        (e.prototype.updateDateRangeMode = function (e) {
          if (((this.isDateRangeMode = e), this.isDateRangeMode)) {
            this.dom.dateRangeEl.setText("Remove date range"),
              this.dom.endTimeInput.uShow(),
              this.dom.dateRangeTooltip.uShow();
            var t = this.datepickerEl.datepicker("getDate");
            t &&
              ((this.previousSetDate = t.valueOf()),
              this.updateDateRangeInUi(t, t));
          } else
            this.dom.dateRangeEl.setText("Make date range"),
              this.dom.endTimeInput.uHide(),
              this.dom.dateRangeTooltip.uHide(),
              this.datepickerEl.datepicker("setRange", []),
              this.previousSetDate &&
                this.datepickerEl.datepicker(
                  "setDate",
                  new Date(this.previousSetDate),
                );
        }),
        (e.prototype.reSetupDatepicker = function () {
          this.isDatepickerLoaded && this._setup_datepicker();
        }),
        (e.prototype.setup_datepicker = function () {
          this.isDatepickerLoaded ||
            (this._setup_datepicker(), (this.isDatepickerLoaded = !0));
        }),
        (e.prototype._setup_datepicker = function () {
          var t = this,
            e = this.app.userspace.ui.is_mobile_view()
              ? yr(".main-container")
              : this.ui.get_document_container_el();
          this.datepickerEl
            .datepicker("destroy")
            .datepicker({
              container: e,
              todayHighlight: !0,
              zIndexOffset: 9999,
              weekStart: this._get_first_day_of_week(),
            })
            .on("changeDate", function (e) {
              t._update_recurrence_menu(e.date),
                t.isDateRangeMode && t.onChangeDateInRange(e.date);
            });
          var i = this.datepickerEl.data("datepicker").picker.get(0);
          this.dom = new k_(i);
        }),
        (e.prototype.onTimepickerError = function (e) {
          $(e.currentTarget).val() !== v_ &&
            this.app.userspace.ui.display_error({
              title: "Invalid time format",
              message: "Please enter a valid time format like 22:42",
            });
        }),
        (e.prototype.mobileInsertDate = function () {
          var e = document.activeElement;
          if (e && this.is_trigger_element(e)) {
            this.skipLocationCheck = !0;
            var t = this.try_open(b_);
            (this.skipLocationCheck = !1), null !== t && this.open_popup();
          }
        }),
        (e.prototype.onDateClick = function (e) {
          if (
            fr(e) &&
            (e.preventDefault(),
            e.stopPropagation(),
            !this.app_document.controller.is_read_only() &&
              !this.app_document.ui.get_is_in_read_mode())
          ) {
            var t = e.currentTarget,
              i = $(t),
              n = this.app_document.ui.get_node_from_el(t);
            if (n)
              if (e.altKey) this.ui.remove_node_inline_element(t);
              else {
                var o = Date.now(),
                  s = t._block || {},
                  r = s.token.start || 0,
                  a = s.token.end || 0,
                  _ = s.startTime || o,
                  c = s.endTime || o,
                  l = i.parents(".Node-contentContainer, .Node-noteContainer"),
                  u = this.app_document.ui.get_node_state(n);
                u.initialize_self();
                var h = l.hasClass("Node-noteContainer");
                (this.text = h
                  ? n.get_meta_object().get_note()
                  : n.get_meta_object().get_content()),
                  (this.start = r),
                  (this.end = a),
                  (this.node = n),
                  (this.is_note = h),
                  (this.input_field = h ? u.dom.note_el : u.dom.content_el),
                  this.open_popup(_, c, s.isAllDay, t, s.recurrence);
              }
          }
        }),
        (e.prototype.open = function (e) {
          return null === this.try_open(b_)
            ? (this.close(), !1)
            : (this.open_popup(), !0);
        }),
        (e.prototype.open_popup = function (e, t, i, n, o) {
          void 0 === e && (e = 0),
            void 0 === t && (t = 0),
            void 0 === i && (i = !1),
            void 0 === n && (n = null),
            void 0 === o && (o = null),
            (this.editMode = 0 < e),
            this.app.userspace.ui.show_mobile_date_picker_header(0 < e),
            this.setup_datepicker(),
            this.datepickerEl.datepicker("clearDates").datepicker("show"),
            this.setupTimepickers(),
            i && t && (t = Ui(t, -1)) < e && (t = e);
          var s = bool(e && t && e !== t);
          if ((this.updateDateRangeMode(s), (this.previousSetDate = null), s))
            this.datepickerEl.datepicker("setDate", new Date(e)),
              this.datepickerEl.datepicker("setDate", new Date(t)),
              this.datepickerEl.datepicker("setViewDate", new Date(e)),
              (this.hasSetRange = !0);
          else {
            var r = 0 === e ? new Date() : new Date(e);
            this.datepickerEl.datepicker("setDate", r).datepicker("update");
          }
          !e || i
            ? this.startTimepickerEl.val(v_)
            : this.startTimepickerEl.timepicker("setTime", new Date(e)),
            this.isDateRangeMode &&
              (!t || i
                ? this.endTimepickerEl.val(v_)
                : this.endTimepickerEl.timepicker("setTime", new Date(t)));
          var a = this.dom.recurOptions;
          if (o) {
            var _ = o.get_markdown_string(),
              c = null;
            "1d" === _
              ? (c = this.dom.recurDailyOption)
              : "1w" === _
              ? (c = this.dom.recurWeeklyOption)
              : "1m" === _
              ? (c = this.dom.recurMonthlyOption)
              : "1y" === _ && (c = this.dom.recurYearlyOption),
              c
                ? (a.selectedIndex = c.index)
                : (this.setCustomRecurrence(o),
                  (this.dom.recurCustomOption.selected = !0)),
              (this.lastSelectedRecurrence = a.selectedIndex),
              o.reset && (this.dom.recurFromCompletion.checked = !0);
          }
          this.updateFromCompletionOptionVisibility(),
            this.app.userspace.view.get_is_pro() ||
              (a.addClass("is-disabled"),
              this.dom.recurFromCompletionLabel.addClass("is-disabled"));
          var l = this.dom.el;
          if (this.app.userspace.ui.is_mobile_view())
            (l.style.top = "0"), (l.style.left = "0");
          else {
            var u = { top: 0, bottom: 0, left: 0, right: 0 };
            if (n) {
              var h = mr(n, l.offsetParent);
              (u.top = h.top - 8),
                (u.bottom = h.top + n.offsetHeight + 8),
                (u.left = h.left),
                (u.right = h.left + n.offsetWidth);
            } else
              ((u = this.get_dropdown_offset(
                this.input_field,
                this.ui.get_document_container_el().get(0),
              )).top -= 8),
                (u.bottom += 8);
            var p = kr(u, l),
              d = this.datepickerEl.get(0),
              f = l.getBoundingClientRect();
            (d.style.top = f.top + "px"),
              (d.style.left = f.left + "px"),
              l.removeClass(
                "datepicker-orient-top",
                "datepicker-orient-bottom",
              ),
              "top" == p.vresult
                ? l.addClass("datepicker-orient-top")
                : "bottom" == p.vresult &&
                  l.addClass("datepicker-orient-bottom");
          }
          this._open || this.app.scope.push_scope(this.scope),
            (this._open = !0);
        }),
        (e.prototype._get_show_timezone = function () {
          return this.app.preferences.get_boolean(Ps.SHOW_TIMEZONE_IN_DATE);
        }),
        (e.prototype._get_first_day_of_week = function () {
          var e = this.app.preferences.get(Ps.FIRST_DAY_OF_WEEK);
          return e === Fs.FIRST_DAY_OF_WEEK.MONDAY
            ? 1
            : e === Fs.FIRST_DAY_OF_WEEK.SATURDAY
            ? 6
            : 0;
        }),
        (e.prototype._update_recurrence_menu = function (e) {
          var t = Si(e),
            i = t.format("dddd");
          this.dom.recurWeeklyOption.setText("Weekly on " + i);
          var n = t.format("Do");
          this.dom.recurMonthlyOption.setText("Monthly on " + n);
          var o = t.format("MMMM D");
          this.dom.recurYearlyOption.setText("Annually on " + o);
        }),
        (e.prototype.updateCustomRecurrenceOptionInMenu = function (e, t, i) {
          if (isNaN(e)) this.revertToPreviousRecurrenceOption();
          else {
            var n = new qi(e, t, i, !1);
            this.setCustomRecurrence(n),
              (this.dom.recurCustomOption.selected = !0);
          }
        }),
        (e.prototype.is_open = function () {
          return this._open;
        }),
        (e.prototype.revertToPreviousRecurrenceOption = function () {
          this.dom.recurOptions.selectedIndex = this.lastSelectedRecurrence;
        }),
        (e.prototype.reflectDatepickerDatetimeInDom = function () {
          if (!(this.start < 0 || null === this.input_field)) {
            this.setup_datepicker();
            var e = null,
              t = null,
              i = null,
              n = null,
              o = this.startTimepickerEl.val() === v_;
            this.isDateRangeMode
              ? ((e =
                  new Date(this.previousSetDate) ||
                  this.datepickerEl.datepicker("getDate")),
                (t = this.startTimepickerEl.timepicker("getTime")),
                (i = this.datepickerEl.datepicker("getDate")),
                (n = this.endTimepickerEl.timepicker("getTime")))
              : ((e = i = this.datepickerEl.datepicker("getDate")),
                (t = n = this.startTimepickerEl.timepicker("getTime"))),
              null === e && (e = new Date()),
              null === i && (i = new Date()),
              e.setHours(t ? t.getHours() : 0),
              e.setMinutes(t ? t.getMinutes() : 0),
              i.setHours(n ? n.getHours() : 0),
              i.setMinutes(n ? n.getMinutes() : 0);
            var s = e.getTime(),
              r = i.getTime(),
              a = this.dom.recurOptions,
              _ = a.options[a.selectedIndex],
              c = null;
            if (_ !== this.dom.recurNoneOption) {
              var l = this.dom.recurFromCompletion.checked;
              if (_ === this.dom.recurCustomOption)
                (c = this.customRecurrence).reset = l;
              else {
                var u = "";
                _ === this.dom.recurDailyOption && (u = "d"),
                  _ === this.dom.recurWeeklyOption && (u = "w"),
                  _ === this.dom.recurMonthlyOption && (u = "m"),
                  _ === this.dom.recurYearlyOption && (u = "y"),
                  u && (c = new qi(1, u, "", l));
              }
            }
            var h = this.app_document.view.generate_date_markdown(s, r, o, c);
            this.editMode
              ? this.replace_text(h)
              : this.replace_text_and_focus(h + " ");
          }
        }),
        (e.prototype.setCustomRecurrence = function (e) {
          this.customRecurrence = e;
          var t = this.dom.recurCustomOption;
          if (e) {
            var i = e.get_readable_recurrence_string(!0);
            t.setText(i), t.uShow();
          } else t.uHide();
        }),
        (e.prototype.onChangeDateInRange = function (e) {
          if (e) {
            this.hasSetRange &&
              ((this.hasSetRange = !1),
              this.datepickerEl.datepicker("setRange", []),
              (this.previousSetDate = null));
            var t = e.valueOf();
            if (!this.previousSetDate || t <= this.previousSetDate)
              return (
                (this.previousSetDate = t),
                void this.updateDateRangeInUi(this.previousSetDate, t)
              );
            this.updateDateRangeInUi(this.previousSetDate, t),
              (this.hasSetRange = !0);
          }
        }),
        (e.prototype.updateFromCompletionOptionVisibility = function () {
          var e = this.dom.recurOptions,
            t = e.options[e.selectedIndex] === this.dom.recurNoneOption;
          $(this.dom.recurFromCompletionLabel).toggle(!t),
            $(this.dom.recurFromCompletionTooltip).toggle(!t);
        }),
        (e.prototype.resetCustomRecurrenceModal = function () {
          (fish(".custom-recurrence-amount").value = "1"),
            (fish(".custom-recurrence-unit").value = "d"),
            fishAll(".custom-recurrence-week-day-option").forEach(function (e) {
              return e.removeClass("is-selected");
            }),
            fish(".custom-recurrence-weekly-repeat-options").uHide();
        }),
        (e.prototype.setupTimepickers = function () {
          var e =
              this.app.preferences.get(Ps.TIME_FORMAT) ===
              Fs.TIME_FORMAT.FORMAT_12H,
            t = {
              show2400: !e,
              timeFormat: e ? "g:i a" : "H:i",
              noneOption: [
                { label: v_, value: v_ },
                { label: y_, value: y_ },
              ],
            };
          this.startTimepickerEl.timepicker(t),
            this.endTimepickerEl.timepicker(t),
            this.startTimepickerEl.val(""),
            this.endTimepickerEl.val(""),
            this.startTimepickerEl
              .off("change")
              .on("change", this.onStartTimepickerChange.bind(this)),
            this.endTimepickerEl
              .off("change")
              .on("change", this.onEndTimepickerChange.bind(this)),
            this.startTimepickerEl
              .off("timeFormatError")
              .on("timeFormatError", this.onTimepickerError.bind(this)),
            this.endTimepickerEl
              .off("timeFormatError")
              .on("timeFormatError", this.onTimepickerError.bind(this));
        }),
        (e.prototype.onStartTimepickerChange = function () {
          var e = this.startTimepickerEl.val(),
            t = this.endTimepickerEl.val();
          if (
            (e === y_ &&
              this.startTimepickerEl.timepicker("setTime", new Date()),
            e === v_ && t !== v_)
          )
            this.endTimepickerEl.val(v_);
          else if (e !== v_ && t === v_) {
            var i = this.startTimepickerEl.timepicker("getTime");
            this.endTimepickerEl.timepicker("setTime", i);
          }
        }),
        (e.prototype.onEndTimepickerChange = function () {
          var e = this.startTimepickerEl.val(),
            t = this.endTimepickerEl.val();
          if (
            (t === y_ && this.endTimepickerEl.timepicker("setTime", new Date()),
            t === v_ && e !== v_)
          )
            this.startTimepickerEl.val(v_);
          else if (t !== v_ && e === v_) {
            var i = this.endTimepickerEl.timepicker("getTime");
            this.startTimepickerEl.timepicker("setTime", i);
          }
        }),
        (e.prototype.updateDateRangeInUi = function (e, t) {
          var i = zi(new Date(e)),
            n = zi(new Date(t));
          this.datepickerEl.datepicker("setRange", [i, n]);
        }),
        e
      );
    })(g_),
    k_ = function e(t) {
      var i = this;
      this.el = t;
      var n = document.createDocumentFragment();
      (this.startTimeInput = n.createEl("input", {
        cls: "start-time-picker",
        type: "text",
      })),
        (this.endTimeInput = n.createEl("input", {
          cls: "end-time-picker u-hidden",
          type: "text",
        })),
        (this.dateRangeEl = n.createEl("div", {
          cls: "date-picker-date-range",
          text: "Create date range",
        })),
        (this.dateRangeTooltip = n.createEl(
          "span",
          { cls: "date-picker-question-mark mod-range u-hidden", text: "?" },
          function (e) {
            e.setAttribute(
              "aria-label",
              "To select a range, first click on the start date, then click on the end date.",
            ),
              e.setAttribute("aria-label-classes", "mod-wide");
          },
        )),
        n.createEl("br"),
        (this.recurOptions = n.createEl(
          "select",
          { cls: "date-picker-recurrence-options js-change-date-recurrence" },
          function (e) {
            (i.recurNoneOption = e.createEl("option", {
              cls: "",
              text: "Does not repeat",
              value: "none",
            })),
              (i.recurDailyOption = e.createEl("option", {
                text: "Daily",
                value: "daily",
              })),
              (i.recurWeeklyOption = e.createEl("option", {
                text: "Weekly",
                value: "weekly",
              })),
              (i.recurMonthlyOption = e.createEl("option", {
                text: "Monthly",
                value: "monthly",
              })),
              (i.recurYearlyOption = e.createEl("option", {
                text: "Annually",
                value: "yearly",
              })),
              (i.recurCustomOption = e.createEl("option", {
                cls: "u-hidden",
                value: "custom_created",
              })),
              (i.recurCustomCreate = e.createEl("option", {
                text: "Custom...",
                value: "custom",
              }));
          },
        )),
        n.createEl("br"),
        (this.recurFromCompletionLabel = n.createEl(
          "label",
          { cls: "custom-recurrence-from-completion-label u-no-select" },
          function (e) {
            (i.recurFromCompletion = e.createEl("input", {
              cls: "custom-recurrence-from-completion",
              type: "checkbox",
            })),
              e.appendChild(document.createTextNode("From completion"));
          },
        )),
        (this.recurFromCompletionTooltip = n.createEl(
          "span",
          { cls: "date-picker-question-mark mod-recurrence", text: "?" },
          function (e) {
            e.setAttribute(
              "aria-label",
              "The next occurrence will repeat from the time you check off the item, instead of from the time it's due.",
            ),
              e.setAttribute("aria-label-classes", "mod-wide");
          },
        ));
      var o = t.find(".datepicker-done-btn");
      o.parentNode.insertBefore(n, o);
    },
    E_ = (function () {
      function e(e) {
        this.container_el = e;
      }
      return (
        (e.prototype.set_scroll = function (e, t, i) {
          t
            ? this.animate_scroll(e, i)
            : ((this.container_el.scrollTop = e), i && i());
        }),
        (e.prototype.animate_scroll = function (e, t) {
          $(this.container_el)
            .stop(!0, !0)
            .animate({ scrollTop: e }, 120, "linear", t);
        }),
        (e.prototype.get_scroll = function () {
          return this.container_el.scrollTop;
        }),
        (e.prototype.get_y_range = function (e) {
          for (var t = 0, i = e.offsetHeight; e && e !== this.container_el; )
            (t += e.offsetTop), (e = e.offsetParent);
          return { top: t, height: i, bottom: t + i };
        }),
        (e.prototype.get_view_y_range = function () {
          var e = this.container_el.scrollTop,
            t = this.container_el.offsetHeight;
          return { top: e, height: t, bottom: e + t };
        }),
        (e.prototype.scroll_el_into_view = function (e, t, i, n) {
          if (e && e.offsetParent) {
            var o = this.get_y_range(e);
            this.scroll_range_into_view(o, t, i, n);
          }
        }),
        (e.prototype.scrollSelectionRangeIntoView = function (e, t, i, n) {
          var o = window.getSelection();
          if (0 < o.rangeCount)
            try {
              var s = o.getRangeAt(0);
              if (e && !e.contains(s.startContainer)) return !1;
              var r = s.getBoundingClientRect(),
                a = this.container_el.getBoundingClientRect(),
                _ = r.top - a.top + this.container_el.scrollTop,
                c = r.height,
                l = { top: _, height: c, bottom: _ + c };
              return this.scroll_range_into_view(l, t, i, n), !0;
            } catch (e) {
              console.error(e);
            }
          return !1;
        }),
        (e.prototype.scroll_range_into_view = function (e, t, i, n) {
          var o = this.get_view_y_range();
          i
            ? (e.bottom <= o.top + 20 || e.top >= o.bottom - 20) &&
              (e.height > o.height
                ? this.set_scroll(e.top, t, n)
                : this.set_scroll(e.top + (e.height - o.height) / 2, t, n))
            : e.bottom <= o.top + 20
            ? this.set_scroll(e.bottom - 30 - 20, t, n)
            : e.top >= o.bottom - 20 &&
              this.set_scroll(e.top - o.height + 30 + 20, t, n);
        }),
        e
      );
    })(),
    C_ = (function (o) {
      function e(e, t, i) {
        var n = o.call(this, e, t, i) || this;
        return (n.events = n.submodule(new Eo())), n;
      }
      return (
        nt(e, o),
        (e.prototype._init_fields = function () {
          (this.scrollbox = null),
            (this.query = ""),
            (this.suggestions = []),
            (this.suggestion_elements = []),
            (this.index = 0),
            (this.trigger = null),
            (this.is_open = !1);
        }),
        (e.prototype._init_before = function () {
          var t = this;
          (this.container_el = createEl(
            "div",
            { cls: "Suggestions popover" },
            function (e) {
              (t.suggestion_list_el = e.createEl("ul", {
                cls: "Suggestions-dropdown u-use-pref-font",
              })),
                e.createEl("div", {
                  cls: "Suggestions-emptyState",
                  text: "Start typing to search for items…",
                }),
                e.createEl("div", {
                  cls: "Suggestions-noResultFound",
                  text: "No results were found.",
                });
            },
          )),
            (this.scrollbox = new E_(this.suggestion_list_el));
        }),
        (e.prototype._init_after = function () {
          var e = this.events.make_context_on_off($(this.container_el));
          this.events.register_with_context_array(e, [
            [
              "mousemove",
              ".Suggestions-item",
              this.on_option_mousemove.bind(this),
            ],
            ["click mousedown", this.on_option_container_click.bind(this)],
            ["mousedown", ".Suggestions-item", this.on_option_click.bind(this)],
            [
              "mousedown",
              ".Suggestions-dropdownLoadAll",
              this.on_load_all_click.bind(this),
            ],
          ]);
          var t = this.events.make_context_on_off(this.app.keymap);
          this.events.register_with_context_array(t, [
            ["keydown", [], l.UP, this.on_keydown_up.bind(this), Mr.ANY],
            ["keydown", [], l.DOWN, this.on_keydown_down.bind(this), Mr.ANY],
            ["keydown", [], l.ENTER, this.on_keydown_enter.bind(this), Mr.ANY],
            ["keydown", [], l.ESC, this.on_keydown_esc.bind(this), Mr.ANY],
          ]);
        }),
        (e.prototype.on_keydown_up = function () {
          if (this.is_open) {
            var e = this.index - 1;
            return (
              e < 0 && (e = this.suggestions.length - 1),
              this.update_index(e),
              !1
            );
          }
        }),
        (e.prototype.on_keydown_down = function () {
          if (this.is_open) {
            var e = this.index + 1;
            return (
              e >= this.suggestions.length && (e = 0), this.update_index(e), !1
            );
          }
        }),
        (e.prototype.on_keydown_enter = function () {
          if (this.is_open) return this.use_current_suggestion(), !1;
        }),
        (e.prototype.on_keydown_esc = function () {
          if (this.is_open) return this.hide(), !1;
        }),
        (e.prototype.on_option_mousemove = function (e) {
          this.select_event_element(e);
        }),
        (e.prototype.on_option_container_click = function (e) {
          e.stopImmediatePropagation();
        }),
        (e.prototype.on_option_click = function (e) {
          e.preventDefault(),
            e.stopPropagation(),
            e.stopImmediatePropagation(),
            this.select_event_element(e),
            this.use_current_suggestion();
        }),
        (e.prototype.on_load_all_click = function (e) {
          e.preventDefault(), e.stopPropagation(), this.render(0);
        }),
        (e.prototype.select_event_element = function (e) {
          var t = e.currentTarget,
            i = this.suggestion_elements.indexOf(t);
          0 <= i && this.update_index(i);
        }),
        (e.prototype.use_current_suggestion = function () {
          var e = this.suggestions[this.index],
            t = this.trigger;
          e && t && t.on_select_suggestion(e), this.hide();
        }),
        (e.prototype.update_index = function (e) {
          var t = this.index;
          this.index = e;
          var i = this.suggestion_elements,
            n = i[t];
          n && n.removeClass("is-current");
          var o = i[e];
          o &&
            (o.addClass("is-current"),
            this.scrollbox.scroll_el_into_view(o, !0));
        }),
        (e.prototype.has_results = function () {
          return 0 < this.suggestions.length;
        }),
        (e.prototype.search = function (e, t) {
          (this.query = e), this.render(t);
        }),
        (e.prototype.render = function (e) {
          var i = this,
            t = this.container_el,
            n = this.suggestion_list_el;
          t.removeClass("is-queryEmpty", "has-noResults"), n.empty();
          var o = this.query;
          if (!o)
            return (
              t.addClass("is-queryEmpty"),
              (this.suggestions = []),
              (this.suggestion_elements = []),
              void (this.index = 0)
            );
          var s = this.get_suggestions(o),
            r = !1;
          e && 0 < e && s.length > e && ((s = s.slice(0, e)), (r = !0)),
            (this.suggestions = s),
            (this.suggestion_elements = []),
            0 < s.length
              ? (Array.each(s, function (e) {
                  var t = n.createEl("li", { cls: "Suggestions-item" });
                  i.suggestion_elements.push(t), i.render_suggestion(o, e, t);
                }),
                r &&
                  n.createEl("li", {
                    cls: "Suggestions-dropdownLoadAll",
                    text: "Show all...",
                  }),
                this.update_index(0))
              : t.addClass("has-noResults");
        }),
        (e.prototype.show = function (e, t, i) {
          (this.trigger = i), (this.is_open = !0);
          var n = this.app.preferences.get_boolean(Ps.RIGHT_TO_LEFT);
          this.app.with_current_app_document(function (e) {
            n = e.ui.shouldShowRtl();
          }),
            n
              ? this.suggestion_list_el.setAttribute("dir", "rtl")
              : this.suggestion_list_el.removeAttribute("dir");
          var o = this.container_el;
          e.append(o), kr(t, o);
        }),
        (e.prototype.hide = function () {
          (this.trigger = null),
            (this.is_open = !1),
            this.container_el.detach();
        }),
        (e.prototype.is_open_with = function (e) {
          return this.is_open && this.trigger === e;
        }),
        e
      );
    })(To),
    T_ = (function () {
      function e(e, t) {
        (this.node_formatter = e), (this.userspace_view = t);
      }
      return (
        (e.prototype.get_option_el = function (e, t, i) {
          return this.render(
            createEl("li", { cls: "Suggestions-item" }),
            e,
            t,
            i,
          );
        }),
        (e.prototype.render = function (e, t, i, n) {
          var o = i.get_meta_object(),
            s = o.get_content(),
            r = o.is_checked();
          i.is_root() && (s = t.get_title()), "" === s && (s = " ");
          var a = e.createEl("span", {
            cls: "Suggestions-item-text",
            text: s,
            title: t.get_title(),
          });
          this.node_formatter.render_formatted(s, a, n.matches);
          var _ = this.userspace_view.get_node_parent_chain(i),
            c = this.userspace_view.get_document_parent_chain(t);
          return (
            (0 < _.length || 0 < c.length) &&
              e.createEl(
                "div",
                { cls: "Suggestions-itemBreadcrumb" },
                function (e) {
                  if (0 < c.length) {
                    var t = [];
                    Array.each(c, function (e) {
                      t.push(Rt(e.get_title(), 40));
                    }),
                      e.createEl("b", { text: t.join(" > ") + " > " });
                  }
                  var i = [];
                  Array.each(_, function (e) {
                    var t = e.get_meta_object();
                    (r = r || (!e.is_root() && t.is_checked())),
                      i.push(Rt(t.get_content(), 40));
                  }),
                    e.createEl("span", { text: i.join(" > ") });
                },
              ),
            r && a.addClass("is-checked"),
            e
          );
        }),
        e
      );
    })(),
    O_ = /(\s|^)\[\[[^\]]*/gm,
    x_ = [l.UP, l.DOWN, l.ENTER, l.ESC],
    A_ = (function (t) {
      function e(e) {
        return t.call(this, "LinkSuggestionProvider", e) || this;
      }
      return (
        nt(e, t),
        (e.prototype._init_before = function () {
          t.prototype._init_before.call(this),
            (this.global_search_suggestion_result = new T_(
              this.app.userspace.ui.node_formatter,
              this.app.userspace.view,
            )),
            this.container_el.addClass("LinkSuggestions");
        }),
        (e.prototype.get_suggestions = function (e) {
          var t = this.app.userspace.view,
            i = this.document,
            n = this.node;
          return e
            ? t.search_all_nodes(e, i).filter(function (e) {
                return e.node !== n;
              })
            : [];
        }),
        (e.prototype.render_suggestion = function (e, t, i) {
          var n = t.document,
            o = t.node,
            s = t.match;
          return this.global_search_suggestion_result.render(i, n, o, s);
        }),
        e
      );
    })(C_),
    D_ = (function (n) {
      function e(e, t) {
        return n.call(this, "LinkSuggestionManager", e, t) || this;
      }
      return (
        nt(e, n),
        (e.prototype._init_fields = function () {
          (this.ignored_keys = x_),
            (this.provider = this.app.userspace.ui.link_suggestion_provider),
            n.prototype._init_fields.call(this);
        }),
        (e.prototype.on_select_suggestion = function (e) {
          if (this.get_current_selection() instanceof Bo) {
            var t = e.document,
              i = e.node,
              n =
                i.get_content_parse_tree().getText() ||
                i.get_meta_object().get_content(),
              o = {
                document_server_id: t.get_server_id(),
                zoom_node_id: i.is_root() ? null : i.get_id(),
              },
              s =
                "[" +
                n +
                "](" +
                this.app.userspace.view
                  .get_url_manager()
                  .create_absolute_url_from_state(o) +
                ")";
            this.replace_text(s, [this.start + 1, this.start + n.length + 1]);
          }
        }),
        (e.prototype.open = function (e) {
          var t = this.try_open(O_);
          if (null === t) return this.close(), !1;
          t = t.substr(2).trim();
          var i = this.provider;
          (i.document = this.app_document.document),
            (i.node = this.node),
            i.search(t, 8);
          var n = fish(".DocumentContainer");
          return i.show(n, this.get_dropdown_offset(e, n), this), !0;
        }),
        (e.prototype.close = function () {
          this.provider.hide(), n.prototype.close.call(this);
        }),
        (e.prototype.is_open = function () {
          return this.provider.is_open_with(this);
        }),
        (e.prototype.find_position = function (e, t, i) {
          return n.prototype.find_position.call(this, e.substr(0, t), t, i);
        }),
        e
      );
    })(g_),
    S_ = (function (n) {
      function e(e, t) {
        var i = n.call(this, "MobilePopupMenuManager", e, t) || this;
        return (i.events = i.submodule(new Eo())), i;
      }
      return (
        nt(e, n),
        (e.prototype._init_dependencies = function () {
          (this.document_view = this.app_document.view),
            (this.document_ui = this.app_document.ui),
            (this.selection_manager = this.app_document.ui.selection());
        }),
        (e.prototype._init_fields = function () {
          (this.open_menu_el = null),
            (this.background_el = fish(".mobile-popup-menu-background"));
        }),
        (e.prototype._init_after = function () {
          this.events.register_array_on_off([
            [
              $(".mobile-popup-menu-option.set-color-label"),
              "click",
              this.on_set_color_label_touchend.bind(this),
            ],
            [
              $(".mobile-popup-menu-option.set-heading-level"),
              "click",
              this.on_set_heading_level_touchend.bind(this),
            ],
            [
              $(
                ".mobile-popup-menu-cancel-button, .mobile-popup-menu-background",
              ),
              "click",
              this.on_background_touchend.bind(this),
            ],
          ]);
        }),
        (e.prototype.open_menu = function (e) {
          this.close_menu();
          var t = this.get_menu_el(e);
          t &&
            (t.addClass("is-active"),
            this.background_el.uShow(),
            (this.open_menu_el = t),
            this.document_ui.save_mobile_cached_selection());
        }),
        (e.prototype.close_menu = function () {
          var e = this.open_menu_el;
          e &&
            (e.removeClass("is-active"),
            this.background_el.uHide(),
            (this.open_menu_el = null)),
            this.document_ui.restore_mobile_cached_selection();
        }),
        (e.prototype.on_set_color_label_touchend = function (e) {
          var t = this.document_ui.get_mobile_cached_selection();
          if (t) {
            var i = e.currentTarget,
              n = parseInt(i.getAttr("data-color"), 10);
            this.document_view.set_color_label(t.get_nodes(), n);
          }
          this.close_menu(), e.preventDefault();
        }),
        (e.prototype.on_set_heading_level_touchend = function (e) {
          var t = this.document_ui.get_mobile_cached_selection();
          if (t) {
            var i = e.currentTarget,
              n = parseInt(i.getAttr("data-level"), 10);
            this.document_view.set_heading_level(t.get_nodes(), n);
          }
          this.close_menu(), e.preventDefault();
        }),
        (e.prototype.on_background_touchend = function (e) {
          this.close_menu(), e.preventDefault();
        }),
        (e.prototype.get_menu_el = function (e) {
          return fish(".mobile-popup-menu.mod-" + e);
        }),
        e
      );
    })(To),
    N_ = (function (o) {
      function e(e, t, i) {
        var n = o.call(this, e, t, i) || this;
        return (n.states = {}), n;
      }
      return (
        nt(e, o),
        (e.prototype._register_state = function (e, t, i) {
          this._set(e, t);
        }),
        (e.prototype._update_all_states = function () {
          for (var e in this.states)
            if (this.states.hasOwnProperty(e)) {
              var t = this.states[e];
              this._update(e, t, t);
            }
        }),
        (e.prototype.get = function (e) {
          return this.states[e];
        }),
        (e.prototype.set = function (e, t) {
          var i = this._set(e, t);
          return i !== t && this._update(e, t, i), i;
        }),
        (e.prototype._set = function (e, t) {
          var i = this.states[e];
          return (this.states[e] = t), i;
        }),
        (e.prototype._force_update = function (e) {
          var t = this.states[e];
          this._update(e, t, t);
        }),
        (e.prototype._update = function (e, t, i) {
          var n = this[e + "_changed"];
          n && n.call(this, t, i);
        }),
        e
      );
    })(To),
    I_ = "recent-move-destinations",
    L_ = "is_open",
    M_ = "destination_results",
    R_ = "selected_destination_index",
    P_ = "search_term",
    F_ = (function (n) {
      function e(e, t) {
        var i = n.call(this, "NodeChooser", e, t) || this;
        return (
          (i.events = i.submodule(new Eo())),
          (i.shortcut_manager = i.submodule(new ia(e))),
          i._register_state(L_, !1, i.is_open_changed),
          i._register_state(M_, [], i.destination_results_changed),
          i._register_state(R_, 0, i.selected_destination_index_changed),
          i._register_state(P_, "", i.search_term_changed),
          (i.requestUpdateSearch = debounce(i.updateSearch, 200, !0)),
          i
        );
      }
      return (
        nt(e, n),
        (e.prototype._init_before = function () {
          (this.ui = this.app_document.ui),
            (this.userspaceUi = this.app.userspace.ui),
            (this.searchbarEl = this.containerEl.find(".chooser-searchbar")),
            (this.mobileSearchbarEl = this.mobileContainerEl.find(
              ".mobile-header-searchbar",
            )),
            (this.mobileClearSearchEl = this.mobileContainerEl.find(
              ".chooser-mobile-header-clear-search",
            )),
            (this.notFoundEl = this.containerEl.find(".chooser-not-found")),
            (this.destinationElements = []),
            (this.savedSelection = null),
            (this.selectedNodes = []),
            (this.isShowingAllResults = !1),
            (this.scrollbox = new E_(
              this.containerEl.find(".chooser-search-result-list"),
            )),
            (this.mobile_scrollbox = new E_(
              this.mobileContainerEl.find(".chooser-search-result-list"),
            )),
            (this.scope = new Hr(this.scopeName, this.close.bind(this))),
            (this.globalSearchSuggestionResult = new T_(
              this.userspaceUi.node_formatter,
              this.app.userspace.view,
            ));
        }),
        (e.prototype._init_after = function () {
          this.register_events();
        }),
        (e.prototype._load = function () {
          this._update_all_states();
        }),
        (e.prototype.register_events = function () {
          var i = this,
            e = this.events.make_context_on_off($(".AppContainer"));
          this.events.register_array_on_off([
            [
              $(this.searchbarEl),
              "propertychange change click keyup keydown input paste focus",
              this.onSearchChange.bind(this),
            ],
            [
              $(this.mobileSearchbarEl),
              "propertychange change click keyup keydown input paste focus",
              this.onSearchChange.bind(this),
            ],
            [
              $(this.containerEl),
              "mousedown",
              this.onContainerClick.bind(this),
            ],
            [
              $(this.mobileContainerEl),
              "mousedown",
              this.onContainerClick.bind(this),
            ],
            [
              $(this.mobileClearSearchEl),
              "click",
              this.onClearSearchMobile.bind(this),
            ],
            [
              $(this.containerEl.find(".close-btn")),
              "click",
              this.onCloseContainerClick.bind(this),
            ],
            [
              $(this.mobileContainerEl.find(".MobileHeader-backIcon")),
              "touchend",
              this.restoreSavedSelection.bind(this),
            ],
          ]),
            this.events.register_with_context_array(e, [
              [
                "mousemove",
                ".chooser-search-result-list > .Suggestions-item",
                this.onResultMouseMove.bind(this),
              ],
              [
                "click",
                ".chooser-search-result-list > .Suggestions-item",
                this.onResultClick.bind(this),
              ],
              ["click", ".chooser-load-all", this.onLoadAllClick.bind(this)],
            ]);
          var n = this.shortcut_manager,
            t = function (e, t) {
              n.register_unnamed(e, "keydown", t, i.scopeName);
            };
          t(new ea([], l.UP), this.onKeydownUp.bind(this)),
            t(new ea([], l.DOWN), this.onKeydownDown.bind(this)),
            t(new ea([], l.ENTER), this.onKeydownEnter.bind(this)),
            t(new ea([], l.ESC), this.onKeydownEsc.bind(this));
        }),
        (e.prototype.performAction = function () {}),
        (e.prototype.is_open_changed = function (e) {
          e
            ? (this.userspaceUi.is_mobile_view()
                ? (this.mobileContainerEl.uShow(),
                  this.saveSelection(),
                  this.mobileSearchbarEl.focus())
                : (this.containerEl.uShow(),
                  this.positionChooser(),
                  this.saveSelection(),
                  this.searchbarEl.focus()),
              this.app.scope.push_scope(this.scope),
              this.set(P_, ""))
            : (this.userspaceUi.is_mobile_view()
                ? (this.mobileContainerEl.uHide(),
                  (this.mobileSearchbarEl.value = ""))
                : (this.containerEl.uHide(), (this.searchbarEl.value = "")),
              this.app.scope.pop_scope(this.scope),
              this.set(P_, null));
        }),
        (e.prototype.search_term_changed = function () {
          this.requestUpdateSearch();
        }),
        (e.prototype.updateSearch = function () {
          var e,
            t = this.get(P_),
            i = "" === t;
          this.mobileClearSearchEl.uToggle(!i),
            (e =
              null === t
                ? []
                : "" === t
                ? this.getRecentResults()
                : this.getSearchResults(t)).length <= this.gerResultLimit()
              ? (this.isShowingAllResults = !0)
              : ((this.isShowingAllResults = !1),
                (e = e.slice(0, this.gerResultLimit()))),
            this.set(M_, e);
        }),
        (e.prototype.destination_results_changed = function (e) {
          var s = this;
          if (
            ((this.destinationElements = []),
            this.getSearchResultEl().empty(),
            this.notFoundEl.uHide(),
            e)
          ) {
            var t = this.get(P_);
            0 === e.length && t
              ? this.notFoundEl.uShow()
              : (each(e, function (e) {
                  var t = e.document,
                    i = e.node,
                    n = e.match,
                    o = s.globalSearchSuggestionResult.get_option_el(t, i, n);
                  s.destinationElements.push(o),
                    s.getSearchResultEl().appendChild(o);
                }),
                this.isShowingAllResults ||
                  this.getSearchResultEl().createEl("li", {
                    cls: "chooser-load-all",
                    text: "Show all...",
                  }),
                this.updateSelectedIndex(0),
                this._force_update(R_));
          }
        }),
        (e.prototype.selected_destination_index_changed = function (e, t) {
          this.destinationElements[t] &&
            this.destinationElements[t].removeClass("is-current"),
            this.destinationElements[e] &&
              this.destinationElements[e].addClass("is-current");
        }),
        (e.prototype.openWithNodes = function (e) {
          if (e && 0 !== e.length) {
            for (var t = 0; t < e.length; t++) {
              var i = e[t];
              if (this.app_document.ui.get_node_state(i).is_current_root())
                return;
            }
            (this.selectedNodes = e), this.set(L_, !0);
          }
        }),
        (e.prototype.close = function () {
          this.set(L_, !1);
        }),
        (e.prototype.onKeydownUp = function () {
          var e = this.get(R_) - 1;
          this.updateSelectedIndex(e);
        }),
        (e.prototype.onKeydownDown = function () {
          var e = this.get(R_) + 1;
          this.updateSelectedIndex(e);
        }),
        (e.prototype.onKeydownEnter = function (e) {
          e.preventDefault(),
            e.stopPropagation(),
            this.performAction(),
            this.close();
        }),
        (e.prototype.onResultMouseMove = function (e) {
          this.select_event_element(e);
        }),
        (e.prototype.onResultClick = function (e) {
          e.preventDefault(),
            e.stopPropagation(),
            this.select_event_element(e),
            this.performAction(),
            this.close();
        }),
        (e.prototype.onKeydownEsc = function () {
          this.close(), this.restoreSavedSelection();
        }),
        (e.prototype.onContainerClick = function (e) {
          e.stopPropagation();
        }),
        (e.prototype.onClearSearchMobile = function () {
          (this.mobileSearchbarEl.value = ""), this.mobileSearchbarEl.focus();
        }),
        (e.prototype.onCloseContainerClick = function () {
          this.close(), this.restoreSavedSelection();
        }),
        (e.prototype.onLoadAllClick = function (e) {
          e.preventDefault(), e.stopPropagation();
          var t = this.get(P_),
            i = this.getSearchResults(t);
          (this.isShowingAllResults = !0), this.set(M_, i);
        }),
        (e.prototype.onSearchChange = function (e) {
          var t = e.currentTarget;
          this.set(P_, t.value);
        }),
        (e.prototype._on_back_button = function () {
          this.restoreSavedSelection();
        }),
        (e.prototype._show_move_failed_popup = function () {
          this.userspaceUi.popup_message_manager.display_move_item_failure_popup();
        }),
        (e.prototype._show_insert_template_failed_popup = function () {
          this.userspaceUi.popup_message_manager.displayInsertTemplateFailurePopup();
        }),
        (e.prototype.select_event_element = function (e) {
          var t = e.currentTarget;
          this.set(R_, $(t).index());
        }),
        (e.prototype.updateSelectedIndex = function (e) {
          var t = this.get(M_);
          if (t) {
            var i = e,
              n = t.length;
            0 !== n &&
              (n <= e ? (i = 0) : e < 0 && (i = n - 1),
              this.set(R_, i),
              this.getScrollbox().scroll_el_into_view(
                this.destinationElements[i],
                !0,
              ));
          }
        }),
        (e.prototype.positionChooser = function () {
          var e = this.getFirstNodeState();
          if (e) {
            var t = e.dom.content_container_el,
              i = mr(t, this.containerEl.offsetParent),
              n = this.app.preferences.get_boolean(Ps.RIGHT_TO_LEFT);
            this.app.with_current_app_document(function (e) {
              n = e.ui.shouldShowRtl();
            }),
              this.containerEl.setAttribute("dir", n ? "rtl" : "ltr"),
              kr(
                {
                  top: i.top,
                  bottom: i.top + t.offsetHeight,
                  left: i.left,
                  right: i.left + t.offsetWidth,
                },
                this.containerEl,
                { gap: 6, horizontalAlignment: n ? "right" : "left" },
              );
          }
        }),
        (e.prototype.saveSelection = function () {
          var e = this.ui.selection();
          e.synchronize(), (this.savedSelection = e.get());
        }),
        (e.prototype.restoreSavedSelection = function () {
          this.savedSelection &&
            (this.ui.selection().apply(this.savedSelection),
            (this.savedSelection = null));
        }),
        (e.prototype.getSearchResults = function (e) {
          var t = this.app.userspace.view.search_all_nodes(
            e,
            this.app_document.document,
          );
          return this.filterSearchResults(t);
        }),
        (e.prototype.getFirstNodeState = function () {
          var e = this.selectedNodes;
          return 0 === e.length ? null : this.ui.get_node_state(e[0]);
        }),
        (e.prototype.getRecentResults = function () {
          var s = this,
            e = this.getRecentDestinations(),
            r = [];
          return (
            each(e, function (e) {
              var t = e.document_id,
                i = e.node_id,
                n = s.app.userspace.userspace.find_server_file(t);
              if (n) {
                var o = n.get_node_collection().find_node(i);
                o && r.push({ document: n, node: o, match: { matches: [] } });
              }
            }),
            (r = this.filterSearchResults(r))
          );
        }),
        (e.prototype.filterSearchResults = function (e) {
          var i = this,
            n = [];
          return (
            each(e, function (e) {
              var t = e.node;
              t &&
                (i.selectedNodes.contains(e.node) ||
                  (t.is_attached_to_root() && n.push(e)));
            }),
            n
          );
        }),
        (e.prototype.getSearchResultEl = function () {
          return (
            this.userspaceUi.is_mobile_view()
              ? this.mobileContainerEl
              : this.containerEl
          ).find(".chooser-search-result-list");
        }),
        (e.prototype.getScrollbox = function () {
          return this.userspaceUi.is_mobile_view()
            ? this.mobile_scrollbox
            : this.scrollbox;
        }),
        (e.prototype.gerResultLimit = function () {
          return this.userspaceUi.is_mobile_view() ? 10 : 5;
        }),
        (e.prototype.getRecentDestinations = function () {
          return this.app.env.get_env_data(I_, []);
        }),
        (e.prototype.saveRecentDestination = function (t, i) {
          var e = this.getRecentDestinations(),
            n = [{ document_id: t, node_id: i }];
          each(e, function (e) {
            if (5 <= n.length) return !1;
            (e.document_id === t && e.node_id === i) || n.push(e);
          }),
            this.app.env.set_env_data(I_, n);
        }),
        e
      );
    })(N_),
    H_ = "destination_results",
    z_ = "selected_destination_index",
    B_ = (function (e) {
      function t() {
        return (null !== e && e.apply(this, arguments)) || this;
      }
      return (
        nt(t, e),
        (t.prototype._init_before = function () {
          (this.containerEl = fish(".chooser.mod-node-mover")),
            (this.mobileContainerEl = fish(
              ".full-screen-prompt.mod-node-mover",
            )),
            (this.scopeName = Mr.NODE_MOVER),
            e.prototype._init_before.call(this);
        }),
        (t.prototype.showSuccessPopup = function (e, t) {
          var i = this.selectedNodes;
          if (0 !== i.length) {
            var n = e.get_meta_object().get_content(),
              o = this.app.userspace.view.get_url_state(t, e),
              s = this.app.userspace.view
                .get_url_manager()
                .create_url_from_state(o);
            if (1 === i.length) {
              var r = i[0].get_meta_object().get_content();
              this.userspaceUi.popup_message_manager.display_move_item_success_popup(
                r,
                n,
                s,
              );
            } else {
              var a = i.length;
              this.userspaceUi.popup_message_manager.display_move_item_multiple_success_popup(
                a,
                n,
                s,
              );
            }
          }
        }),
        (t.prototype.performAction = function () {
          var e = this;
          try {
            var t = this.get(H_);
            if (!t) return;
            var i = t[this.get(z_)];
            if (!i) return;
            for (
              var n = i.node,
                o = i.document,
                s = this.selectedNodes,
                r = s[s.length - 1],
                a = this.ui.get_node_state(r).visibleNextNonChild(),
                _ = 0;
              _ < s.length;
              _++
            ) {
              var c = s[_];
              if (n.has_ancestor(c)) return;
            }
            this.app.userspace.view.moveNodeToDocument(
              this.app_document.get_document(),
              s,
              o,
              n,
              function () {
                e.saveRecentDestination(o.get_server_id(), n.get_id()),
                  e.ui.selection().set_cursor_to_end_of_node(a),
                  e.showSuccessPopup(n, o);
              },
            );
          } catch (e) {
            trace("Failed to move node", e), this._show_move_failed_popup();
          }
        }),
        t
      );
    })(F_),
    U_ = (function (n) {
      function e(e, t) {
        var i = n.call(this, "NodeSwipeManager", e, t) || this;
        return (
          (i.events = i.submodule(new Eo())), (i.touchEvents = new Eo()), i
        );
      }
      return (
        nt(e, n),
        (e.prototype._init_fields = function () {
          (this.ui = this.app_document.ui),
            (this.view = this.app_document.view),
            (this.touchStartPosition = null),
            (this.node = null),
            (this.hasSwipeStarted = !1),
            (this.currentSwipeAction = ""),
            (this.checkEl = fish(".node-swipe-check")),
            (this.deleteEl = fish(".node-swipe-delete")),
            (this.animationTimeout = 0),
            (this.lastAnimatedNodeSelfEl = null);
        }),
        (e.prototype._init_after = function () {
          var e = document;
          this.touchEvents.register_array_event_listener([
            [e, "touchmove", this.onTouchMove.bind(this), { passive: !1 }],
            [e, "touchend", this.onTouchEnd.bind(this)],
          ]),
            this.events.register_array_event_listener([
              [this.checkEl, "click", this.onCheckItem.bind(this)],
              [this.deleteEl, "click", this.onDeleteItem.bind(this)],
              [e, "click", this.resetSwipeComponentPosition.bind(this)],
            ]),
            this.events.register_event_on_off(
              yr(".Document"),
              "touchstart",
              ".Node-self",
              this.onNodeTouchStart.bind(this),
            );
        }),
        (e.prototype.onNodeTouchStart = function (e) {
          if (1 < e.originalEvent.touches.length)
            null !== this.node &&
              (this.touchEvents.unhook_events(),
              this.resetSwipeComponentPosition());
          else if (
            (this.resetSwipeComponentPosition(),
            !(this.ui.selection().synchronize() instanceof Bo))
          ) {
            var t = Ei(e);
            if (!(t.x <= N)) {
              var i = e.currentTarget,
                n = this.ui.get_node_from_el(i);
              n &&
                ((this.node = n),
                (this.touchStartPosition = t),
                (this.hasSwipeStarted = !1),
                this.touchEvents.hook_events(),
                this.endAnimateElement());
            }
          }
        }),
        (e.prototype.onTouchMove = function (e) {
          if (!this.ui.drag_manager.is_dragging_node()) {
            var t = Ti(e);
            if (!(t.x < 0 || t.x > window.innerWidth)) {
              var i = this.touchStartPosition.x - t.x,
                n = Math.abs(i),
                o = Math.abs(this.touchStartPosition.y - t.y);
              if (!this.hasSwipeStarted) {
                if (ki(this.touchStartPosition, t) < u) return;
                2 * o < n
                  ? (this.hasSwipeStarted = !0)
                  : (this.touchEvents.unhook_events(), (this.node = null));
              }
              if (this.hasSwipeStarted) {
                var s = this.node,
                  r = this.ui.get_node_state(s),
                  a = r.dom.self_el,
                  _ = a.offsetTop,
                  c = a.offsetHeight;
                r.dom.content_el.blur(),
                  r.dom.note_el.blur(),
                  (fish(".Document").style.overflowX = "hidden"),
                  (a.style.transform = "translate(" + -i + "px, 0)"),
                  (a.style.zIndex = "2"),
                  (this.deleteEl.style.height = c + "px"),
                  (this.deleteEl.style.top = _ + "px"),
                  (this.checkEl.style.height = c + "px"),
                  (this.checkEl.style.top = _ + "px"),
                  0 < i
                    ? ((this.checkEl.style.width = "0px"),
                      (this.deleteEl.style.width = i + "px"),
                      L < i
                        ? (this.deleteEl.addClass("is-active"),
                          (this.currentSwipeAction = "delete"))
                        : (this.deleteEl.removeClass("is-active"),
                          (this.currentSwipeAction = "")))
                    : ((this.deleteEl.style.width = "0px"),
                      (this.checkEl.style.width = n + "px"),
                      L < n
                        ? (this.checkEl.addClass("is-active"),
                          (this.currentSwipeAction = "check"))
                        : (this.checkEl.removeClass("is-active"),
                          (this.currentSwipeAction = ""))),
                  e.preventDefault();
              }
            }
          }
        }),
        (e.prototype.onTouchEnd = function () {
          var e = this.node,
            t = this.ui.get_node_state(e).dom.self_el;
          "check" === this.currentSwipeAction
            ? (this.startAnimateElement(t),
              (t.style.transform = "translate(50px, 0)"),
              (this.checkEl.style.width = "50px"))
            : "delete" === this.currentSwipeAction
            ? (this.startAnimateElement(t),
              (t.style.transform = "translate(-50px, 0)"),
              (this.deleteEl.style.width = "50px"))
            : this.resetSwipeComponentPosition(),
            (this.currentSwipeAction = ""),
            this.touchEvents.unhook_events();
        }),
        (e.prototype.resetSwipeComponentPosition = function () {
          var e = this.node;
          if (e) {
            var t = this.ui.get_node_state(e).dom.self_el;
            this.startAnimateElement(t),
              (t.style.transform = ""),
              (this.checkEl.style.width = "0"),
              (this.deleteEl.style.width = "0"),
              (this.node = null);
          }
        }),
        (e.prototype.startAnimateElement = function (e) {
          var t = this;
          0 !== this.animationTimeout &&
            window.clearTimeout(this.animationTimeout),
            null !== this.lastAnimatedNodeSelfEl &&
              this.lastAnimatedNodeSelfEl.removeClass("is-animating"),
            e.addClass("is-animating"),
            (this.lastAnimatedNodeSelfEl = e),
            this.checkEl.addClass("is-animating"),
            this.deleteEl.addClass("is-animating"),
            (this.animationTimeout = this.set_timeout(function () {
              (t.animationTimeout = 0), t.endAnimateElement();
            }, M));
        }),
        (e.prototype.endAnimateElement = function () {
          null !== this.lastAnimatedNodeSelfEl &&
            (this.lastAnimatedNodeSelfEl.removeClass("is-animating"),
            (this.lastAnimatedNodeSelfEl = null)),
            this.checkEl.removeClass("is-animating"),
            this.deleteEl.removeClass("is-animating");
        }),
        (e.prototype.onCheckItem = function () {
          this.view.toggle_checked([this.node]);
        }),
        (e.prototype.onDeleteItem = function () {
          this.view.detach_nodes([this.node], !0, !0);
        }),
        e
      );
    })(To),
    j_ = (function (i) {
      function e(e, t) {
        return i.call(this, "SelectionManager", e, t) || this;
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          (this.document_ui = this.app_document.ui),
            (this.document_view = this.app_document.view),
            (this.node_collection = this.app_document
              .get_document()
              .get_node_collection());
        }),
        (e.prototype._init_fields = function () {
          (this.selected_nodes = []),
            (this.no_selection = qo),
            (this.selection = qo),
            (this.working = !1);
        }),
        (e.prototype.is_working = function () {
          return this.working;
        }),
        (e.prototype.shift_select = function (e) {
          this.synchronize();
          var t = this.get();
          if (t instanceof Go) {
            var i = t.get_from_node(),
              n = t.get_to_node(),
              o = null,
              s = this.document_ui.get_node_state(n);
            "up" === e
              ? (o = s.visiblePrevNonChild())
              : "down" === e && (o = s.visibleNextNonChild()),
              o &&
                o !== n &&
                (this.apply(this.select_between(i, o)),
                this.document_ui.scroll_node_into_view(o));
          } else
            t instanceof Uo && this.apply(zo.select_multi_node(t.get_node()));
        }),
        (e.prototype.auto_update = function () {
          return (
            this.update(this.document_ui.get_dom_selection()), this.selection
          );
        }),
        (e.prototype.synchronize = function () {
          return (
            this.selection instanceof Go || this.auto_update(), this.selection
          );
        }),
        (e.prototype.update = function (e) {
          return (
            this.deselect_nodes(),
            e !== this.selection &&
              this.selection !== qo &&
              ((this.prevSelection = this.selection),
              (this.prevSelectionTs = Date.now())),
            (this.selection = e)
          );
        }),
        (e.prototype.apply = function (e) {
          if (
            !this.document_ui.get_editing() &&
            (e || (e = qo),
            !this.document_view.controller.is_read_only() || e instanceof Go)
          )
            return (
              e instanceof Bo ||
                (this.document_ui.blur_cursor(),
                this.document_ui.drag_to_select.is_dragging_to_select() ||
                  Lr()),
              (e = this.update(e)),
              this.apply_selection_in_ui(e),
              e
            );
        }),
        (e.prototype.reapply = function () {
          this.apply_selection_in_ui(this.selection);
        }),
        (e.prototype.getPrevSelection = function () {
          return this.prevSelectionTs + 300 >= Date.now()
            ? this.prevSelection
            : null;
        }),
        (e.prototype.select_all = function () {
          this.synchronize();
          var e = this.selection;
          if (e instanceof Bo && e.is_selecting_all())
            e = this.select_multi_node(e.get_node());
          else {
            if (!(e instanceof Go)) return void this.force_select_all();
            var t = e.get_nodes(),
              i = e.get_first_node().get_parent();
            if (
              t.every(function (e) {
                return e.get_parent() === i;
              })
            ) {
              var n = i;
              e =
                n.num_children() === t.length
                  ? this.select_multi_node(n)
                  : zo.select_multi_nodes_from_parent_all(n);
            } else e = this.select_between(t[0], t[t.length - 1]);
          }
          e && this.apply(e);
        }),
        (e.prototype.force_select_all = function () {
          this.synchronize();
          var e = this.document_ui.current_root;
          e.has_children() &&
            this.apply(zo.select_multi_nodes_from_parent_all(e));
        }),
        (e.prototype.set_cursor_to_start_of_node = function (e) {
          e && this.apply(zo.select_content(e, 0));
        }),
        (e.prototype.set_cursor_to_end_of_node = function (e) {
          e && this.apply(zo.select_content(e, -1));
        }),
        (e.prototype.set_cursor_to_start_of_note = function (e) {
          e && this.apply(zo.select_note(e, 0));
        }),
        (e.prototype.set_cursor_to_end_of_note = function (e) {
          e && this.apply(zo.select_note(e, -1));
        }),
        (e.prototype.set_cursor_to_position_in_node = function (e, t) {
          e && this.apply(zo.select_content(e, t));
        }),
        (e.prototype.select_nodes = function (e) {
          var t = this;
          each(
            e,
            function (e) {
              t.document_ui.select_node(e);
            },
            this,
          ),
            (this.selected_nodes = e.slice(0));
        }),
        (e.prototype.deselect_nodes = function () {
          var t = this;
          0 < this.selected_nodes.length &&
            (each(
              this.selected_nodes,
              function (e) {
                t.document_ui.deselect_node(e);
              },
              this,
            ),
            (this.selected_nodes = []));
        }),
        (e.prototype.get = function () {
          return this.selection;
        }),
        (e.prototype.set_no_select = function () {
          this.update(qo);
        }),
        (e.prototype.deselect = function () {
          this.apply(qo);
        }),
        (e.prototype.is_selecting = function () {
          return this.selection !== qo;
        }),
        (e.prototype.apply_selection_in_ui = function (e) {
          var t = this.working;
          try {
            (this.working = !0), this._apply_selection_in_ui(e);
          } finally {
            this.working = t;
          }
        }),
        (e.prototype._apply_selection_in_ui = function (e) {
          if (e instanceof Bo) {
            var t = e.get_node();
            e instanceof Uo
              ? this.document_ui.set_selection(
                  t,
                  e.get_position_start(),
                  e.get_position_end(),
                )
              : e instanceof jo &&
                this.document_ui.set_note_selection(
                  t,
                  e.get_position_start(),
                  e.get_position_end(),
                );
          } else
            e instanceof Go &&
              (this.select_nodes(e.get_nodes()),
              this.document_ui.drag_to_select.is_dragging_to_select() ||
                this.document_ui.drag_manager.is_dragging_node() ||
                !Qs ||
                this.document_ui.enable_copying_on_safari());
        }),
        (e.prototype._gen_parent_list = function (e) {
          for (var t = []; e; ) t.push(e), (e = e.get_parent());
          return t.reverse(), t;
        }),
        (e.prototype.select_multi_node = function (e) {
          return this.document_ui.get_node_state(e).is_current_root()
            ? null
            : zo.select_multi_node(e);
        }),
        (e.prototype.sort_multi_nodes = function (e) {
          var t = this.document_ui.current_root,
            i = {};
          Array.each(e, function (e) {
            i[e.get_id()] = !0;
          });
          var n = [];
          return (
            this.node_collection.traverse_tree_dfs(t, function (e) {
              if (i[e.get_id()]) return n.push(e), "continue";
            }),
            n
          );
        }),
        (e.prototype.select_between = function (e, t) {
          if (!e || !t) return this.get();
          if (
            this.document_ui.get_node_state(e).is_current_root() ||
            this.document_ui.get_node_state(t).is_current_root()
          )
            return this.get();
          var i,
            n = this._gen_parent_list(e),
            o = this._gen_parent_list(t),
            s = Math.min(n.length, o.length),
            r = this.node_collection.get_root();
          for (i = 0; i < s && n[i] === o[i]; i++) r = n[i];
          if (r === e || r === t) return zo.select_multi_nodes([r], e, t);
          for (
            var a = n[i].get_index(),
              _ = o[i].get_index(),
              c = Math.min(a, _),
              l = Math.max(a, _),
              u = [],
              h = c;
            h <= l;
            h++
          ) {
            var p = r.get_child(h);
            p && this.document_ui.get_node_state(p).is_visible() && u.push(p);
          }
          return zo.select_multi_nodes(u, e, t);
        }),
        e
      );
    })(To),
    G_ = /(\s|^)[#@][^\s']*/gm,
    q_ = /(\s|^|-)[#@][^\s']*/gm,
    $_ = [l.UP, l.DOWN, l.ENTER, l.ESC],
    W_ = (function (t) {
      function e(e) {
        return t.call(this, "TagSuggestionProvider", e) || this;
      }
      return (
        nt(e, t),
        (e.prototype._init_before = function () {
          t.prototype._init_before.call(this),
            this.container_el.addClass("TagSuggestions");
        }),
        (e.prototype.get_suggestions = function (e) {
          var t = this.tag_counter;
          return t ? t.get_suggestions(e) : [];
        }),
        (e.prototype.render_suggestion = function (e, t, i) {
          i.createEl("strong", { text: t.slice(0, e.length) }),
            i.createEl("span", { text: t.slice(e.length) });
        }),
        e
      );
    })(C_),
    Y_ = (function (i) {
      function e(e, t) {
        return i.call(this, "TagSuggestionManager", e, t) || this;
      }
      return (
        nt(e, i),
        (e.prototype._init_fields = function () {
          (this.ignored_keys = $_),
            (this.provider = this.app.userspace.ui.tag_suggestion_provider),
            i.prototype._init_fields.call(this);
        }),
        (e.prototype.on_select_suggestion = function (e) {
          this.replace_text_and_focus(e + " "), this.close();
        }),
        (e.prototype.open = function (e) {
          var t = this.try_open(G_);
          if (!t) return this.close(), !1;
          var i = this.provider;
          if (
            ((i.tag_counter = this.app_document.ui.get_tag_counter()),
            i.search(t, 8),
            !i.has_results())
          )
            return this.close(), !1;
          var n = fish(".DocumentContainer");
          return i.show(n, this.get_dropdown_offset(e, n), this), !0;
        }),
        (e.prototype.close = function () {
          this.provider.hide(), i.prototype.close.call(this);
        }),
        (e.prototype.is_open = function () {
          return this.provider.is_open_with(this);
        }),
        e
      );
    })(g_),
    K_ = (function (i) {
      function e(e, t) {
        return i.call(this, "SearchTagSuggestionManager", e, t) || this;
      }
      return (
        nt(e, i),
        (e.prototype._init_fields = function () {
          (this.ignored_keys = $_),
            (this.provider = this.app.userspace.ui.tag_suggestion_provider),
            i.prototype._init_fields.call(this);
        }),
        (e.prototype.is_trigger_element = function (e) {
          return (
            e.hasClass("DocumentSearch") || e.hasClass("MobileHeader-searchbar")
          );
        }),
        (e.prototype.on_select_suggestion = function (e) {
          this.replace_text(e + " "), this.close();
        }),
        (e.prototype.open = function (e) {
          var t = this.try_open(e, q_);
          if (!t) return this.close(), !1;
          var i = this.provider;
          if (
            ((i.tag_counter = this.app_document.ui.get_tag_counter()),
            i.search(t, 8),
            !i.has_results())
          )
            return this.close(), !1;
          var n = fish(".DocumentContainer");
          return i.show(n, this.get_dropdown_offset(e, n), this), !0;
        }),
        (e.prototype.close = function () {
          this.provider.hide(), i.prototype.close.call(this);
        }),
        (e.prototype.is_open = function () {
          return this.provider.is_open_with(this);
        }),
        e
      );
    })(f_),
    V_ = (function (t) {
      function e(e) {
        return t.call(this, "InboxCaptureTagSuggestionManager", e) || this;
      }
      return (
        nt(e, t),
        (e.prototype._init_fields = function () {
          (this.ignored_keys = $_),
            (this.provider = this.app.userspace.ui.tag_suggestion_provider),
            t.prototype._init_fields.call(this);
        }),
        (e.prototype.is_trigger_element = function (e) {
          return e.hasClass("InboxCapture-content");
        }),
        (e.prototype.on_select_suggestion = function (e) {
          this.replace_text(e + " "), this.close();
        }),
        (e.prototype.open = function (e) {
          var t = this.try_open(e, G_);
          if (!t) return this.close(), !1;
          var i = this.provider;
          if (
            ((i.tag_counter = this.app.userspace.view.tag_counter),
            i.search(t, 8),
            !i.has_results())
          )
            return this.close(), !1;
          var n = fish(".InboxCapture");
          return i.show(n, this.get_dropdown_offset(e, n), this), !0;
        }),
        (e.prototype.close = function () {
          this.provider.hide(), t.prototype.close.call(this);
        }),
        (e.prototype.is_open = function () {
          return this.provider.is_open_with(this);
        }),
        e
      );
    })(f_),
    X_ = (function (t) {
      function e(e) {
        return t.call(this, "GlobalSearchTagSuggestionManager", e) || this;
      }
      return (
        nt(e, t),
        (e.prototype._init_fields = function () {
          (this.ignored_keys = $_),
            (this.provider = this.app.userspace.ui.tag_suggestion_provider),
            t.prototype._init_fields.call(this);
        }),
        (e.prototype.is_trigger_element = function (e) {
          return e.matches(
            ".search-ui-container.mod-global-search .search-ui-searchbar",
          );
        }),
        (e.prototype.on_select_suggestion = function (e) {
          this.replace_text(e + " "), this.close();
        }),
        (e.prototype.open = function (e) {
          var t = this.try_open(e, q_);
          if (!t) return this.close(), !1;
          var i = this.provider;
          if (
            ((i.tag_counter = this.app.userspace.view.tag_counter),
            i.search(t, 8),
            !i.has_results())
          )
            return this.close(), !1;
          var n = fish(".search-ui-container.mod-global-search");
          return i.show(n, this.get_dropdown_offset(e, n), this), !0;
        }),
        (e.prototype.close = function () {
          this.provider.hide(), t.prototype.close.call(this);
        }),
        (e.prototype.is_open = function () {
          return this.provider.is_open_with(this);
        }),
        e
      );
    })(f_),
    Z_ = "destination_results",
    J_ = "selected_destination_index",
    Q_ = (function (t) {
      function e() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      return (
        nt(e, t),
        (e.prototype._init_before = function () {
          (this.containerEl = fish(".chooser.mod-template-finder")),
            (this.mobileContainerEl = fish(
              ".full-screen-prompt.mod-template-finder",
            )),
            (this.scopeName = Mr.TEMPLATE_FINDER),
            t.prototype._init_before.call(this);
        }),
        (e.prototype.is_open_changed = function (e) {
          this.app.userspace.view.get_is_pro() &&
            t.prototype.is_open_changed.call(this, e);
        }),
        (e.prototype.performAction = function () {
          if (this.app.userspace.view.get_is_pro())
            try {
              var e = this.get(Z_);
              if (!e) return;
              var t = e[this.get(J_)];
              if (!t) return;
              var i = t.node,
                n = (t.document, this.selectedNodes.last());
              if (n.has_ancestor(i)) return;
              "" === n.get_meta_object().get_content() &&
              "" === n.get_meta_object().get_note()
                ? (this.app_document.view.clone_nodes(
                    [i],
                    n.get_parent(),
                    n.get_index(),
                  ),
                  this.app_document.view.detach_nodes([n]))
                : this.app_document.view.clone_nodes(
                    [i],
                    n.get_parent(),
                    n.get_index() + 1,
                  );
            } catch (e) {
              trace("Failed to insert template", e),
                this._show_insert_template_failed_popup();
            }
        }),
        e
      );
    })(F_),
    ec =
      /[A-Za-z\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]+|[\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u4E00-\u9FD5]/g,
    tc = (function (n) {
      function e(e, t) {
        var i = n.call(this, "WordCounter", e, t) || this;
        return (
          (i.countResult = null),
          (i.isCounting = !1),
          (i.nodeAvailableChangeEvents = i.submodule(new Eo())),
          (i.requestRecalculate = i.debounce(function () {
            i.recalculate();
          }, 2e3)),
          i
        );
      }
      return (
        nt(e, n),
        (e.prototype._init_before = function () {
          (this.userspace = this.app.userspace.get_userspace()),
            (this.nodeChangeEvents = new Eo()),
            (this.nodeCollection =
              this.app_document.document.get_node_collection());
        }),
        (e.prototype._init_after = function () {
          this.nodeAvailableChangeEvents.register_event_on_off(
            this.nodeCollection,
            "available_change",
            this.onDocumentAvailable,
            this,
          ),
            (this.totalWordCountEl = fish(
              ".status-bar-stat.mod-total-word-count",
            )),
            (this.mobileHeaderTotalWordCountEl = fish(
              ".MobileHeader-moreOption--wordCount",
            )),
            (this.contentWordCountEl = fish(
              ".status-bar-stat.mod-content-word-count",
            )),
            (this.noteWordCountEl = fish(
              ".status-bar-stat.mod-note-word-count",
            )),
            (this.itemCountEl = fish(".status-bar-stat.mod-item-count"));
        }),
        (e.prototype._initialize = function () {
          this.startListeningForChanges(), this.recalculate();
        }),
        (e.prototype.initialize = function () {
          this.app_document.controller.document_remote_loaded &&
            this._initialize();
        }),
        (e.prototype._unload = function () {
          this.nodeChangeEvents.unhook_events();
        }),
        (e.prototype.updateIsCounting = function (e) {
          this.isCounting = e;
        }),
        (e.prototype.updateWordCountInUi = function () {
          this.totalWordCountEl.setText(
            "" + jt(this.countResult.totalCount, "word"),
          ),
            this.mobileHeaderTotalWordCountEl.setText(
              "" + jt(this.countResult.totalCount, "word"),
            ),
            this.contentWordCountEl.setText(
              "" + Ut(this.countResult.contentCount),
            ),
            this.noteWordCountEl.setText("" + Ut(this.countResult.noteCount)),
            this.itemCountEl.setText(
              "" + jt(this.countResult.itemCount, "item"),
            );
        }),
        (e.prototype.resetCount = function () {
          this.countResult = {
            totalCount: 0,
            contentCount: 0,
            noteCount: 0,
            itemCount: 0,
          };
        }),
        (e.prototype.onDocumentAvailable = function () {
          this.app_document.controller.document_remote_loaded &&
            this.initialize();
        }),
        (e.prototype.contentChanged = function (e, t) {
          e.has_ancestor(this.app_document.ui.current_root) &&
            this.updateCountResultWithDiff(
              t.old_content_parse_tree || Hn.parse_text(t.old_content),
              e.get_content_parse_tree(),
              "content",
            );
        }),
        (e.prototype.noteChanged = function (e, t) {
          e.has_ancestor(this.app_document.ui.current_root) &&
            this.updateCountResultWithDiff(
              t.old_note_parse_tree || Hn.parse_text(t.old_note),
              e.get_note_parse_tree(),
              "note",
            );
        }),
        (e.prototype.updateCountResultWithDiff = function (e, t, i) {
          if (this.isCounting) {
            var n = this.countWords(e),
              o = this.countWords(t);
            (this.countResult.totalCount = this.countResult.totalCount - n + o),
              "content" === i
                ? (this.countResult.contentCount =
                    this.countResult.contentCount - n + o)
                : "note" === i &&
                  (this.countResult.noteCount =
                    this.countResult.noteCount - n + o),
              this.updateWordCountInUi();
          }
        }),
        (e.prototype.startListeningForChanges = function () {
          var e = this.nodeChangeEvents.make_context_on_off(
            this.nodeCollection,
          );
          this.nodeChangeEvents.register_with_context_array(e, [
            ["node_content_change", this.contentChanged, this],
            ["node_note_change", this.noteChanged, this],
            ["attach", this.requestRecalculate, this],
            ["detach", this.requestRecalculate, this],
          ]),
            this.nodeChangeEvents.hook_events();
        }),
        (e.prototype.recalculate = function () {
          if (this.isCounting) {
            this.resetCount();
            var e = this.app_document.ui.current_root;
            this.nodeCollection.traverse_tree_bfs(
              e,
              this.countWordsInNode.bind(this),
            ),
              this.updateWordCountInUi();
          }
        }),
        (e.prototype.countWordsInNode = function (e) {
          if (!e.is_root()) {
            var t = this.countWords(e.get_content_parse_tree()),
              i = this.countWords(e.get_note_parse_tree());
            (this.countResult.totalCount += t + i),
              (this.countResult.contentCount += t),
              (this.countResult.noteCount += i),
              (this.countResult.itemCount += 1);
          }
        }),
        (e.prototype.countWords = function (e) {
          var t = e.getText();
          ec.lastIndex = 0;
          var i = t.match(ec);
          return i ? i.length : 0;
        }),
        e
      );
    })(To),
    ic = "is-viewing-mindmap",
    nc = As(),
    oc = As(),
    sc = (function (n) {
      function e(e, t) {
        var i = n.call(this, "PaneUi", e, t) || this;
        return (i.events = i.submodule(new Eo())), i;
      }
      return (
        nt(e, n),
        (e.prototype._init_fields = function () {
          (this.outer_el = fish(".document-mindmap-outer")),
            (this.container_el = fish(".document-mindmap")),
            (this.mindmap_container_el = fish(".mindmap-container")),
            (this.nodes_container_el = fish(".mindmap-nodes-container")),
            (this.breadcrumbs_el = fish(".mindmap-breadcrumbs")),
            (this.mouse_events = new Eo()),
            (this.touch_events = new Eo()),
            (this.drag_initial = { x: 0, y: 0 }),
            (this.drag_initial_container = { x: 0, y: 0 }),
            (this.width = 0),
            (this.height = 0),
            (this.has_dragged = !1),
            (this.current_zoom = 1),
            (this.target_zoom = 1),
            (this.zoom_animation = 0),
            (this.zoom_center = null),
            (this.render_state = {}),
            (this.is_open = !1);
        }),
        (e.prototype._init_before = function () {
          (this.document_ui = this.app_document.ui),
            (this.document = this.app_document.get_document()),
            (this.node_collection = this.document.get_node_collection());
          var e = this.container_el;
          this.events.register_with_context_array(
            this.events.make_context_event_listener(e),
            [
              ["mousedown", this.on_mousedown.bind(this)],
              ["touchstart", this.on_touchstart.bind(this)],
              ["wheel", this.on_wheel.bind(this)],
            ],
          ),
            this.mouse_events.register_with_context_array(
              this.mouse_events.make_context_event_listener(window),
              [
                [
                  "mousemove",
                  this.debounce(this.on_mousemove.bind(this), 16, !1, !1, !0),
                ],
                ["mouseup", this.on_mouseup.bind(this)],
              ],
            ),
            this.touch_events.register_with_context_array(
              this.touch_events.make_context_event_listener(window),
              [
                ["touchmove", this.on_touchmove.bind(this), { passive: !1 }],
                ["touchend", this.on_touchend.bind(this)],
              ],
            ),
            this.events.register_with_context_array(
              this.events.make_context_event_listener(window),
              [["resize", this.debounce(this.on_resize.bind(this), 16)]],
            ),
            this.events.register_array_event_listener([
              [
                fish(".mindmap-zoom-in-button"),
                "click",
                this.on_zoom_in.bind(this),
              ],
              [
                fish(".mindmap-zoom-out-button"),
                "click",
                this.on_zoom_out.bind(this),
              ],
              [
                fish(".mindmap-back-to-document-view"),
                "click",
                this.on_exit_click.bind(this),
              ],
            ]);
        }),
        (e.prototype._load = function () {
          (this.container_el.style.overflow = "auto"),
            (this.nodes_container_el.style.backfaceVisibility = "hidden"),
            (this.nodes_container_el.style.transformOrigin = "0 0");
        }),
        (e.prototype._pre_unload = function () {
          this.exit_mindmap_view();
        }),
        (e.prototype.on_mousedown = function (e) {
          if (gr(e)) {
            e.preventDefault();
            var t = this.container_el;
            (this.drag_initial = Ci(e)),
              (this.drag_initial_container = {
                x: t.scrollLeft,
                y: t.scrollTop,
              }),
              this.container_el.addClass("is-grabbing"),
              (this.has_dragged = !1),
              this.mouse_events.hook_events();
          }
        }),
        (e.prototype.on_mousemove = function (e) {
          e.preventDefault();
          var t = Ci(e);
          5 < ki(t, this.drag_initial) && (this.has_dragged = !0);
          var i = t.x - this.drag_initial.x,
            n = t.y - this.drag_initial.y;
          (this.container_el.scrollLeft = this.drag_initial_container.x - i),
            (this.container_el.scrollTop = this.drag_initial_container.y - n);
        }),
        (e.prototype.on_mouseup = function (e) {
          gr(e) &&
            (this.mouse_events.unhook_events(),
            this.container_el.removeClass("is-grabbing"));
        }),
        (e.prototype.on_touchstart = function (e) {
          if (1 == e.touches.length) {
            var t = this.container_el;
            (this.drag_initial = Ti(e, 0)),
              (this.drag_initial_container = {
                x: t.scrollLeft,
                y: t.scrollTop,
              }),
              (this.has_dragged = !1),
              this.touch_events.hook_events();
          }
        }),
        (e.prototype.on_touchmove = function (e) {
          if (1 === e.touches.length) {
            e.preventDefault();
            var t = Ti(e, 0);
            5 < ki(t, this.drag_initial) && (this.has_dragged = !0);
            var i = t.x - this.drag_initial.x,
              n = t.y - this.drag_initial.y;
            (this.container_el.scrollLeft = this.drag_initial_container.x - i),
              (this.container_el.scrollTop = this.drag_initial_container.y - n);
          }
        }),
        (e.prototype.on_touchend = function (e) {
          0 < e.touches.length || this.touch_events.unhook_events();
        }),
        (e.prototype.on_wheel = function (e) {
          e.preventDefault();
          var t = e.deltaY;
          if (0 !== t) {
            1 === e.deltaMode ? (t *= 40) : 2 === e.deltaMode && (t *= 800);
            var i = null;
            if (t < 0) {
              var n = this.container_el.getBoundingClientRect();
              i = { x: e.clientX - n.left, y: e.clientY - n.top };
            }
            this.update_zoom_level(Math.pow(1.5, -t / 120), i);
          }
        }),
        (e.prototype.on_resize = function () {
          if (this.is_open) {
            var e = this.container_el,
              t = this.padding_x,
              i = this.padding_y;
            this.apply_size(),
              (e.scrollLeft += this.padding_x - t),
              (e.scrollTop += this.padding_y - i);
          }
        }),
        (e.prototype.on_zoom_in = function () {
          this.update_zoom_level(1.5);
        }),
        (e.prototype.on_zoom_out = function () {
          this.update_zoom_level(1 / 1.5);
        }),
        (e.prototype.on_exit_click = function () {
          this.app.userspace.view
            .get_url_manager()
            .update_state({ mindmap: !1 });
        }),
        (e.prototype.update_zoom_level = function (e, t) {
          var i = this.target_zoom * e;
          i < 0.1 && (i = 0.1),
            10 < i && (i = 10),
            (this.target_zoom = i),
            (this.zoom_center = t),
            this.request_zoom_animation();
        }),
        (e.prototype.request_zoom_animation = function () {
          0 === this.zoom_animation &&
            (this.zoom_animation = requestAnimationFrame(
              this.perform_zoom_animation.bind(this),
            ));
        }),
        (e.prototype.perform_zoom_animation = function () {
          this.zoom_animation = 0;
          var e = this.current_zoom,
            t = this.target_zoom;
          if (e !== t) {
            var i = Math.max(e, t) / Math.min(e, t) - 1 < 0.01,
              n = e;
            (n = i ? t : (e + t) / 2), (this.current_zoom = n);
            var o = this.container_el,
              s = this.nodes_container_el,
              r = n / e,
              a = this.zoom_center;
            a || (a = { x: o.offsetWidth / 2, y: o.offsetHeight / 2 });
            var _ = o.scrollLeft,
              c = o.scrollTop;
            (s.style.transform = "scale(" + n + ")"),
              (o.scrollLeft =
                (_ - this.padding_x + a.x) * r + this.padding_x - a.x),
              (o.scrollTop =
                (c - this.padding_y + a.y) * r + this.padding_y - a.y),
              this.apply_size(),
              i || this.request_zoom_animation();
          }
        }),
        (e.prototype.exit_mindmap_view = function () {
          this.is_open &&
            (this.document_ui.get_document_container_el().removeClass(ic),
            this.document_ui.document_el.uShow(),
            this.nodes_container_el.empty(),
            this.outer_el.uHide(),
            (this.is_open = !1));
        }),
        (e.prototype.render = function (e) {
          if (this.app.userspace.view.get_is_pro()) {
            e || (e = this.node_collection.get_root());
            var t = this.container_el,
              i = this.nodes_container_el,
              n = this.render_node(e, !0);
            i.empty(),
              i.append(n),
              this.document_ui.document_el.uHide(),
              this.outer_el.uShow(),
              this.document_ui.get_document_container_el().addClass(ic),
              (this.is_open = !0),
              this.render_breadcrumbs(e),
              this.rerender();
            var o = this.current_zoom;
            (t.scrollLeft =
              this.padding_x +
              Math.min(0, (this.width * o - t.offsetWidth) / 2)),
              (t.scrollTop =
                this.padding_y + (this.height * o - t.offsetHeight) / 2);
          }
        }),
        (e.prototype.render_breadcrumbs = function (e) {
          var n = this,
            t = this.breadcrumbs_el;
          if ((t.empty(), e !== this.node_collection.get_root()))
            for (
              var i = this.app.userspace.view.get_node_parent_chain(e),
                o = this.document_ui.node_view.formatter,
                s = function (i) {
                  t.createEl(
                    "div",
                    { cls: "mindmap-breadcrumb-item" },
                    function (e) {
                      var t = i;
                      o.render_parse_tree(t.get_content_parse_tree(), e, null),
                        e.addEventListener("click", function () {
                          return n.navigate(t);
                        });
                    },
                  ),
                    t.createEl("span", {
                      cls: "mindmap-breadcrumb-delimiter",
                      text: " > ",
                    });
                },
                r = 0,
                a = i;
              r < a.length;
              r++
            ) {
              s(a[r]);
            }
        }),
        (e.prototype.render_node = function (o, s) {
          var r = this,
            e = this.document_ui.node_view.formatter,
            a = createEl("div", { cls: "mindmap-node" }),
            i = a.createEl("div", { cls: "mindmap-content" }),
            _ = createEl("div", { cls: "mindmap-children" });
          e.render_parse_tree(o.get_content_parse_tree(), i, null);
          var t = o.get_meta_object();
          if (
            (t.is_checked() && a.addClass("is-checked"),
            t.has_color_label() &&
              a.addClass("mod-color-label-" + t.get_color_label()),
            t.is_heading() && a.addClass("mod-heading-" + t.get_heading()),
            t.get_note())
          ) {
            var n = i.createEl("div", { cls: "mindmap-note" });
            e.render_parse_tree(o.get_note_parse_tree(), n, null);
          }
          s && (a.style.display = "inline-flex");
          var c = i.createEl("div", {
              cls: "mindmap-content-toggle-collapsed",
            }),
            l = !1,
            u = function (e) {
              var t = !o.is_collapsed() || s;
              if ((c.toggleClass("is-expanded", t), t && !l)) {
                l = !0;
                var i =
                    r.document_ui.node_view.get_render_options().hide_checked,
                  n = function (e) {
                    if (e.get_meta_object().is_checked()) return !0;
                    var t = e.get_parent();
                    return !(e.is_root() || !t) && n(t);
                  };
                o.children.each(function (e) {
                  (i && n(e)) || _.append(r.render_node(e, !1));
                });
              }
              t
                ? (_.detach(),
                  a.appendChild(_),
                  e && r.rerender_keep_viewport())
                : _.parentElement &&
                  (_.addClass("did-disappear"),
                  r.set_timeout(function () {
                    _.detach(),
                      _.removeClass("did-disappear"),
                      e && r.rerender_keep_viewport();
                  }, 150));
            };
          o.has_children() || c.uHide(),
            u(),
            i.addEventListener("click", function (e) {
              e.stopPropagation(),
                e.preventDefault(),
                r.has_dragged || r.navigate(o);
            }),
            c.addEventListener("click", function (e) {
              e.stopPropagation(),
                e.preventDefault(),
                r.has_dragged ||
                  (r.app_document.view.toggle_node_collapse(o), u(!0));
            }),
            (_.style.position = "relative");
          var h = 0,
            p = 0,
            d = 0;
          return (
            nc.set(a, function () {
              a.parentElement && (d = a.parentElement.offsetHeight / 2),
                i.offsetHeight,
                (p = a.offsetTop + a.offsetHeight / 2),
                (h = i.offsetWidth);
            }),
            oc.set(a, function () {
              if (a.parentElement) {
                if (a.parentElement.classList.contains("mindmap-children")) {
                  var e = createEl("div", { cls: "mindmap-line" }),
                    t = Math.abs(p - d);
                  p < d
                    ? ((e.style.borderLeftWidth = "2px"),
                      (e.style.borderTopWidth = "2px"),
                      (e.style.borderTopLeftRadius = "5px"))
                    : d < p
                    ? ((e.style.borderLeftWidth = "2px"),
                      (e.style.borderBottomWidth = "2px"),
                      (e.style.borderBottomLeftRadius = "5px"))
                    : (e.style.borderTopWidth = "2px"),
                    (e.style.position = "absolute"),
                    (e.style.width = h + 5 + "px"),
                    (e.style.height = t + "px"),
                    (e.style.top = Math.min(p, d) + "px"),
                    a.parentElement.prepend(e);
                }
                if (o.has_children())
                  ((e = createEl("div", {
                    cls: "mindmap-line",
                  })).style.borderTopWidth = "2px"),
                    (e.style.position = "absolute"),
                    (e.style.height = "0"),
                    (e.style.top = "50%"),
                    (e.style.right = "-31px"),
                    (e.style.width = "29px"),
                    i.prepend(e);
              }
            }),
            a
          );
        }),
        (e.prototype.rerender_keep_viewport = function () {
          var e = this.height;
          this.rerender(),
            (this.container_el.scrollTop +=
              ((this.height - e) * this.current_zoom) / 2);
        }),
        (e.prototype.rerender = function () {
          for (
            var e = this.container_el, t = e.findAll(".mindmap-line"), i = 0;
            i < t.length;
            i++
          ) {
            (n = t[i]).detach();
          }
          this.recompute_size(), (t = e.findAll(".mindmap-node"));
          for (i = 0; i < t.length; i++) {
            var n = t[i];
            (o = nc.get(n)) && o();
          }
          for (i = 0; i < t.length; i++) {
            var o;
            n = t[i];
            (o = oc.get(n)) && o();
          }
        }),
        (e.prototype.recompute_size = function () {
          var e = this.nodes_container_el,
            t = e.firstChild;
          (e.style.width = "10000px"), (e.style.height = "10000px");
          var i = window.getComputedStyle(t, null);
          (this.width =
            t.offsetWidth +
            parseFloat(i.marginLeft) +
            parseFloat(i.marginRight) +
            10),
            (this.height =
              t.offsetHeight +
              parseFloat(i.marginTop) +
              parseFloat(i.marginBottom) +
              10),
            this.apply_size();
        }),
        (e.prototype.apply_size = function () {
          var e = this.container_el,
            t = this.mindmap_container_el,
            i = this.nodes_container_el,
            n = this.current_zoom,
            o = e.offsetWidth,
            s = e.offsetHeight,
            r = this.width,
            a = this.height;
          (i.style.width = r + "px"),
            (i.style.height = a + "px"),
            (this.padding_x = o / 2),
            (this.padding_y = s / 2),
            (t.style.paddingLeft = t.style.paddingRight =
              this.padding_x + "px"),
            (t.style.paddingTop = t.style.paddingBottom =
              this.padding_y + "px"),
            (t.style.width = 2 * this.padding_x + r * n + "px"),
            (t.style.height = 2 * this.padding_y + a * n + "px");
        }),
        (e.prototype.navigate = function (e) {
          this.app.userspace.view
            .get_url_manager()
            .update_state({
              document_server_id: this.document.get_server_id(),
              zoom_node_id: e.get_id(),
              mindmap: !0,
            });
        }),
        e
      );
    })(To);
  function rc(e, t) {
    var i = "";
    return (
      !1 !== (t = t || {}).stroke && (i += ' stroke="currentColor"'),
      !1 !== t.fill && (i += ' fill="currentColor"'),
      '<path d="' + e + '"' + i + "/>"
    );
  }
  var ac = {
      mindmap: rc(
        "M12,0C5.4,0,0,5.4,0,12s5.4,12,12,12c2.6,0,5-0.8,6.9-2.2l15.6,15.6C31.7,40.8,30,45.2,30,50c0,4,1.2,7.6,3.2,10.7 L20.1,71.1c-2.1-1.9-5-3.1-8.1-3.1C5.4,68,0,73.4,0,80s5.4,12,12,12s12-5.4,12-12c0-2.1-0.5-4-1.5-5.8l13.2-10.4 C39.3,67.6,44.4,70,50,70c2.7,0,5.2-0.5,7.5-1.4l5.3,9.9C59.9,80.7,58,84.1,58,88c0,6.6,5.4,12,12,12s12-5.4,12-12s-5.4-12-12-12 c-1.3,0-2.6,0.2-3.8,0.6L61,66.7c3.8-2.5,6.7-6.2,8.1-10.6l6.9,1.4c0,0.2,0,0.3,0,0.5c0,6.6,5.4,12,12,12s12-5.4,12-12 c0-6.6-5.4-12-12-12c-5.1,0-9.4,3.2-11.2,7.6l-6.9-1.5c0.1-0.7,0.1-1.4,0.1-2.1c0-7.9-4.6-14.7-11.3-17.9l3.1-8.2 c0.7,0.1,1.5,0.2,2.2,0.2c6.6,0,12-5.4,12-12S70.6,0,64,0S52,5.4,52,12c0,4.4,2.5,8.3,6.1,10.4L55,30.7c-1.6-0.4-3.3-0.7-5-0.7 c-4.8,0-9.2,1.7-12.6,4.5L21.8,18.9c1.4-2,2.2-4.4,2.2-6.9C24,5.4,18.6,0,12,0L12,0z M12,4c4.4,0,8,3.6,8,8s-3.6,8-8,8s-8-3.6-8-8 S7.6,4,12,4z M64,4c4.4,0,8,3.6,8,8s-3.6,8-8,8s-8-3.6-8-8S59.6,4,64,4z M50,34c8.9,0,16,7.1,16,16c0,8.9-7.1,16-16,16 c-8.9,0-16-7.1-16-16c0-4.3,1.7-8.2,4.4-11.1c0.2-0.1,0.3-0.3,0.4-0.4C41.8,35.7,45.7,34,50,34z M88,50c4.4,0,8,3.6,8,8 s-3.6,8-8,8s-8-3.6-8-8S83.6,50,88,50z M12,72c4.4,0,8,3.6,8,8s-3.6,8-8,8s-8-3.6-8-8S7.6,72,12,72z M70,80c4.4,0,8,3.6,8,8 s-3.6,8-8,8c-4.4,0-8-3.6-8-8c0-3,1.7-5.6,4.1-7c0.1,0,0.1,0,0.2-0.1c0,0,0,0,0.1-0.1c0,0,0.1,0,0.1-0.1C67.6,80.3,68.7,80,70,80z",
      ),
      unindent: rc(
        "M96,92v-4H4v4H96z M96,72v-4H38v4H96z M26.2,72c1-0.1,1.8-1,1.8-2V30c0-0.8-0.5-1.6-1.2-1.9c-0.8-0.3-1.6-0.1-2.2,0.5 l-20,20C4.2,48.9,4,49.5,4,50s0.2,1.1,0.6,1.4l20,20C25,71.9,25.6,72.1,26.2,72z M24,65.1L8.9,50L24,34.9V65.1z M96,52v-4H38v4H96 z M96,32v-4H38v4H96z M96,12V8H4v4H96z",
      ),
      indent: rc(
        "M96,92v-4H4v4H96z M96,72v-4H38v4H96z M6.3,72c0.4,0,0.9-0.3,1.2-0.6l20-20c0.4-0.4,0.6-0.9,0.6-1.4s-0.2-1.1-0.6-1.4 l-20-20C6.9,28,6,27.8,5.2,28.1C4.5,28.4,4,29.2,4,30v40c0,0.6,0.2,1.1,0.7,1.5C5.1,71.9,5.7,72.1,6.3,72L6.3,72z M8,65.1V34.9 L23.1,50L8,65.1z M96,52v-4H38v4H96z M96,32v-4H38v4H96z M96,12V8H4v4H96z",
      ),
      "magnifying-glass": rc(
        "M42,6C23.2,6,8,21.2,8,40s15.2,34,34,34c7.4,0,14.3-2.4,19.9-6.4l26.3,26.3l5.6-5.6l-26-26.1c5.1-6,8.2-13.7,8.2-22.1 C76,21.2,60.8,6,42,6z M42,10c16.6,0,30,13.4,30,30S58.6,70,42,70S12,56.6,12,40S25.4,10,42,10z M40,24v14H26v4h14v14h4V42h14v-4 H44V24L40,24z",
      ),
      trash: rc(
        "M42,4c-3.3,0-6,2.7-6,6v4H20.3c-0.1,0-0.2,0-0.3,0c-0.1,0-0.2,0-0.3,0H16c-0.7,0-1.4,0.4-1.8,1c-0.4,0.6-0.4,1.4,0,2 s1,1,1.8,1h2v72c0,3.3,2.7,6,6,6h52c3.3,0,6-2.7,6-6V18h2c0.7,0,1.4-0.4,1.8-1c0.4-0.6,0.4-1.4,0-2c-0.4-0.6-1-1-1.8-1h-3.7 c-0.2,0-0.4,0-0.7,0H64v-4c0-3.3-2.7-6-6-6L42,4z M42,8h16c1.1,0,2,0.9,2,2v4H40v-4C40,8.9,40.9,8,42,8z M22,18h15.7 c0.2,0,0.4,0,0.7,0h23.3c0.2,0,0.4,0,0.7,0H78v72c0,1.1-0.9,2-2,2H24c-1.1,0-2-0.9-2-2L22,18z M38,28c-1.1,0-2,0.9-2,2v50 c0,0.7,0.4,1.4,1,1.8s1.4,0.4,2,0c0.6-0.4,1-1,1-1.8V30c0-0.5-0.2-1.1-0.6-1.4C39,28.2,38.5,28,38,28z M50,28c-1.1,0-2,0.9-2,2v50 c0,0.7,0.4,1.4,1,1.8s1.4,0.4,2,0c0.6-0.4,1-1,1-1.8V30c0-0.5-0.2-1.1-0.6-1.4C51,28.2,50.5,28,50,28z M62,28c-1.1,0-2,0.9-2,2v50 c0,0.7,0.4,1.4,1,1.8c0.6,0.4,1.4,0.4,2,0s1-1,1-1.8V30c0-0.5-0.2-1.1-0.6-1.4C63,28.2,62.5,28,62,28z",
      ),
      "check-mark": rc(
        "M85.8,17.3c-0.1,0-0.1,0-0.2,0.1c-0.5,0.1-1,0.5-1.3,0.9L43.4,81.6L15.3,56.2c-0.5-0.6-1.3-0.9-2.1-0.7 c-0.8,0.2-1.3,0.9-1.5,1.6c-0.1,0.8,0.2,1.6,0.9,2l29.8,27c0.4,0.4,1,0.6,1.6,0.5c0.6-0.1,1.1-0.4,1.4-0.9l42.2-65.4 c0.5-0.7,0.5-1.5,0.1-2.2S86.5,17.1,85.8,17.3L85.8,17.3z",
      ),
      note: rc(
        "M8,8v84h62.8L92,70.8V70V8L8,8z M12,12h76v56H68v20H12V12z M28,30v4h46v-4H28z M28,42v4h46v-4H28z M28,54v4h46v-4H28z M72,72h13.2L72,85.2L72,72z",
      ),
      calendar: rc(
        "M24,0c-2.2,0-4,1.8-4,4v4H8C7,8,5.9,8.4,5.1,9.1C4.4,9.9,4,11,4,12v80c0,1,0.4,2.1,1.1,2.9C5.9,95.6,7,96,8,96h84 c1,0,2.1-0.4,2.9-1.1C95.6,94.1,96,93,96,92V12c0-1-0.4-2.1-1.1-2.9C94.1,8.4,93,8,92,8H80V4c0-2.2-1.8-4-4-4h-4c-2.2,0-4,1.8-4,4 v4H32V4c0-2.2-1.8-4-4-4L24,0z M24,4h4v12h-4V4z M72,4h4v12h-4V4z M8,12h12v4c0,2.2,1.8,4,4,4h4c2.2,0,4-1.8,4-4v-4h36v4 c0,2.2,1.8,4,4,4h4c2.2,0,4-1.8,4-4v-4h12v14H8L8,12z M8,30h84v62H8L8,30z M20,38v46h60V38H20z M24,42h10v10H24L24,42z M38,42h10 v10H38V42z M52,42h10v10H52V42z M66,42h10v10H66V42z M24,56h10v10H24L24,56z M38,56h10v10H38V56z M52,56h10v10H52V56z M66,56h10 v10H66V56z M24,70h10v10H24L24,70z M38,70h10v10H38V70z M52,70h10v10H52V70z M66,70h10v10H66V70z",
      ),
      "move-up": rc(
        "M50,15.3l-1.4,1.4L26.8,38.5c-0.6,0.5-0.9,1.3-0.7,2c0.2,0.7,0.8,1.3,1.5,1.5c0.8,0.2,1.5-0.1,2-0.7L48,22.9V82 c0,0.7,0.4,1.4,1,1.8c0.6,0.4,1.4,0.4,2,0c0.6-0.4,1-1,1-1.8V22.9l18.4,18.4c0.5,0.6,1.3,0.9,2,0.7c0.7-0.2,1.3-0.8,1.5-1.5 c0.2-0.8-0.1-1.5-0.7-2L51.4,16.7L50,15.3z",
      ),
      "move-down": rc(
        "M49.8,15.9c-0.1,0-0.2,0-0.3,0.1c-0.9,0.2-1.6,1-1.6,2v59.1L29.6,58.7c-0.4-0.4-0.9-0.6-1.4-0.6c-0.8,0-1.5,0.5-1.8,1.3 c-0.3,0.8-0.1,1.6,0.5,2.2l21.8,21.8l1.4,1.4l1.4-1.4l21.7-21.8c0.6-0.5,0.9-1.3,0.7-2c-0.2-0.7-0.8-1.3-1.5-1.5 c-0.8-0.2-1.5,0.1-2,0.7L52,77.1V18c0-0.6-0.2-1.1-0.6-1.5C51,16.1,50.4,15.9,49.8,15.9z",
      ),
      "paper-plane": rc(
        "M97.8,0c-0.3,0-0.5,0.1-0.7,0.2l-96,52c-0.7,0.4-1.1,1.1-1,1.9c0.1,0.8,0.6,1.5,1.4,1.7l27.2,8.9l-2.6,27 c-0.1,0.9,0.4,1.7,1.2,2.1c0.8,0.4,1.8,0.1,2.3-0.6l17.2-19.4l25.9,25.6c0.5,0.5,1.2,0.7,1.9,0.5c0.7-0.2,1.2-0.7,1.4-1.4l24-96 c0.2-0.6,0-1.3-0.4-1.8C99.1,0.2,98.5-0.1,97.8,0L97.8,0z M94.9,5.9L72.9,94.1L49.2,70.8l34.4-47.6c0.8-0.8,0.7-2.1-0.1-2.8 c-0.8-0.8-2.1-0.7-2.8,0.1L30.4,61.2L7,53.6L94.9,5.9z M71.6,33L45.3,69.4c-0.1,0.1-0.1,0.2-0.2,0.2L45,69.8 c0,0.1-0.1,0.1-0.1,0.2L30.6,86.1l2.1-21.6L71.6,33z",
      ),
      attachment: rc(
        "M78,12c-3.6,0-7.2,1.3-9.9,4.1L28.4,55.8c-0.1,0.1-0.3,0.2-0.4,0.4c0,0-0.1,0.1-0.1,0.1c-0.1,0.1-0.2,0.2-0.3,0.3 c0,0,0,0,0,0.1c-3.5,3.9-3.4,9.9,0.4,13.7c3.9,3.9,10.2,3.9,14.1,0l30.2-30.3c0.6-0.6,0.8-1.5,0.5-2.2c-0.3-0.8-1.1-1.2-1.9-1.2 c-0.5,0-1,0.2-1.4,0.6L39.4,67.4c-2.4,2.4-6.1,2.4-8.5,0c-2.3-2.3-2.3-5.8-0.2-8.2c0.1-0.1,0.1-0.2,0.2-0.3c0,0,0.1-0.1,0.1-0.1 l0.2-0.1c0,0,0,0,0-0.1L71,18.9c3.9-3.9,10.1-3.9,14.1,0c3.9,3.9,3.9,10.2,0,14.1L35.8,82.3c-5.5,5.5-14.3,5.5-19.8,0 s-5.5-14.3,0-19.8l39.4-39.4c0.6-0.5,0.9-1.3,0.7-2c-0.2-0.7-0.8-1.3-1.5-1.5c-0.8-0.2-1.5,0.1-2,0.7L13.3,59.7 c-7,7-7,18.4,0,25.4c7,7,18.4,7,25.4,0l49.3-49.2c5.4-5.4,5.4-14.4,0-19.8C85.2,13.3,81.6,12,78,12L78,12z",
      ),
      "empty-checkbox": rc(
        "M22,8C14.3,8,8,14.3,8,22v56c0,7.7,6.3,14,14,14h56c7.7,0,14-6.3,14-14V22c0-7.7-6.3-14-14-14L22,8z M22,12h56 c5.5,0,10,4.5,10,10v56c0,5.5-4.5,10-10,10H22c-5.5,0-10-4.5-10-10V22C12,16.5,16.5,12,22,12z",
      ),
      "paint-bucket": rc(
        "M45.4,6c-0.5,0-1,0.2-1.4,0.6L42.6,8c-8.8,0.1-16.1,1.5-21.5,3.9c-5.4,2.5-9.1,6.5-9.1,11.4c0,3.8,1.7,7.1,4.3,9.6 c0.2,0.2,0.4,0.3,0.6,0.5L6.4,44C4.8,45.6,4,47.8,4,50s0.8,4.4,2.4,6L38,87.6c1.6,1.6,3.6,2.4,6,2.4c2.2,0,4.4-0.8,6-2.4l36-36.1 c1.9,2.2,4,5,4,7.8c0,4.5-2,12.7-2,18.6c0,3.3,2.7,6,6,6c3.3,0,6-2.7,6-6V56.6c0-8.9-7.1-16.1-15-21.7c-7.6-5.3-16-9.1-21.1-11.3 L46.8,6.6C46.4,6.2,45.9,6,45.4,6L45.4,6z M45.2,10.8l15.4,15.4c0.1,0.2,0.2,0.3,0.4,0.4l22,22l-36,36c-1.6,1.6-4.6,1.6-6.2,0 L9.2,53C8.4,52.2,8,51.2,8,50c0-1.2,0.4-2.2,1.2-3.2l11.1-11.1c1.9,1.1,3.9,2,6.1,2.7c6.8,2.3,14.8,3.2,22.1,3.4 c0.7,1.3,2,2.1,3.5,2.1c2.2,0,4-1.8,4-4s-1.8-4-4-4c-1.4,0-2.7,0.8-3.4,1.9c-7.1-0.2-14.8-1.1-21-3.2c-3.6-1.2-6.6-2.8-8.6-4.7 c-2-1.9-3.1-3.9-3.1-6.6c0-3,2.1-5.7,6.8-7.8c3.8-1.7,9.1-2.9,15.6-3.4L22.4,28c1,0.8,2.4,1.4,3.6,2L45.2,10.8z M72.1,31.9 c3.5,1.8,7.2,3.9,10.7,6.3C90.2,43.4,96,49.9,96,56.6V78c0,1.1-0.9,2-2,2s-2-0.9-2-2c0-4.9,2-13.1,2-18.6c0-5.7-4.3-9.9-6.6-12.2 h-0.1L72.1,31.9z",
      ),
      heading: rc(
        "M20,4c-1.1,0-2,0.9-2,2v88c0,1.1,0.9,2,2,2h16c1.1,0,2-0.9,2-2l0.1-36.1L62,58v36c0,1.1,0.9,2,2,2h16c1.1,0,2-0.9,2-2V6 c0-1.1-0.9-2-2-2H64c-1.1,0-2,0.9-2,2v34l-24,0V6c0-1.1-0.9-2-2-2L20,4z M22,8h12v34c0,1.1,0.9,2,2,2l28,0c1.1,0,2-0.9,2-2V8h12 v84H66V56c0-1.1-0.9-2-2-2l-27.9-0.1c-0.5,0-1,0.2-1.4,0.6c-0.4,0.4-0.6,0.9-0.6,1.4L34,92H22V8z",
      ),
      "copy-link": rc(
        "M40,0v10l4,4V4h28v24h24v52H68v4h32V25.2L74.8,0L40,0z M76,6.8L93.2,24H76V6.8z M0,14v86h64V39.2l-0.6-0.6l-24-24L38.8,14 L0,14z M4,18h32v24h24v54H4L4,18z M40,20.9L57.1,38H40L40,20.9z M43.3,46.7c-2.6,0-5.1,1-7.1,2.9L32,53.9 c-3.4,3.4-3.8,8.7-1.3,12.6l-0.3,0.3c-1.7-1.1-3.6-1.7-5.5-1.7c-2.6,0-5.1,1-7.1,2.9l-4.3,4.3c-3.9,3.9-3.9,10.2,0,14.1 s10.2,3.9,14.1,0l4.3-4.3c3.4-3.4,3.8-8.7,1.2-12.6l0.3-0.3c3.9,2.6,9.2,2.2,12.6-1.3l4.2-4.2c3.9-3.9,3.9-10.2,0-14.1 C48.4,47.7,45.9,46.7,43.3,46.7z M43.3,50.7c1.5,0,3.1,0.6,4.3,1.8c2.4,2.4,2.4,6.1,0,8.5l-4.3,4.3c-1.9,1.9-4.6,2.2-6.8,1.1 l5.4-5.4c0.6-0.6,0.8-1.5,0.4-2.3c-0.4-0.8-1.2-1.2-2.1-1.1c-0.5,0.1-0.9,0.3-1.2,0.6l-5.4,5.4c-1.1-2.2-0.7-5,1.1-6.8l4.3-4.2 C40.2,51.3,41.8,50.7,43.3,50.7z M24.9,69.1c0.9,0,1.7,0.2,2.6,0.6l-2.6,2.6c-0.6,0.5-0.9,1.3-0.7,2c0.2,0.7,0.8,1.3,1.5,1.5 c0.8,0.2,1.5-0.1,2-0.7l2.6-2.6c1.1,2.2,0.7,5-1.1,6.8l-4.3,4.2c-2.4,2.4-6.1,2.4-8.5,0c-2.4-2.4-2.4-6.1,0-8.5l4.3-4.3 C21.9,69.6,23.4,69.1,24.9,69.1L24.9,69.1z",
      ),
      duplicate: rc(
        "M38,0v12l4,4V4h30v24h24v52H66v4h34V25.2L74.8,0L38,0z M76,6.8L93.2,24H76V6.8z M0,16v84h62V41.2l-0.6-0.6l-24-24L36.8,16 H0z M4,20h30v24h24v52H4L4,20z M38,22.9L55.1,40H38V22.9z",
      ),
      gear: rc(
        "M44.4,4c-1,0-1.8,0.7-2,1.7l-1.9,11.9c-2.3,0.7-4.6,1.6-6.7,2.7l-9.8-7c-0.8-0.6-1.9-0.5-2.6,0.2l-7.8,7.8 c-0.7,0.7-0.8,1.8-0.2,2.6l6.9,9.9c-1.2,2.1-2.1,4.4-2.8,6.7l-11.9,2c-1,0.2-1.7,1-1.7,2v11c0,1,0.7,1.8,1.6,2l11.9,2.1 c0.7,2.4,1.6,4.6,2.8,6.7l-7,9.8c-0.6,0.8-0.5,1.9,0.2,2.6l7.8,7.8c0.7,0.7,1.8,0.8,2.6,0.2l9.9-6.9c2.1,1.2,4.3,2.1,6.7,2.8 l2,11.9c0.2,1,1,1.7,2,1.7h11c1,0,1.8-0.7,2-1.7l2.1-12c2.3-0.7,4.6-1.6,6.7-2.8l10,7c0.8,0.6,1.9,0.5,2.6-0.2l7.8-7.8 c0.7-0.7,0.8-1.8,0.2-2.6l-7.1-9.9c1.1-2.1,2.1-4.3,2.7-6.6l12-2.1c1-0.2,1.7-1,1.7-2v-11c0-1-0.7-1.8-1.7-2l-12-2 c-0.7-2.3-1.6-4.5-2.7-6.6l7-10c0.6-0.8,0.5-1.9-0.2-2.6l-7.8-7.8c-0.7-0.7-1.8-0.8-2.6-0.2l-9.8,7.1c-2.1-1.2-4.3-2.1-6.7-2.8 l-2.1-12c-0.2-1-1-1.7-2-1.7L44.4,4z M46.1,8h7.6l2,11.4c0.1,0.8,0.7,1.4,1.5,1.6c2.9,0.7,5.7,1.9,8.2,3.4 c0.7,0.4,1.6,0.4,2.2-0.1l9.4-6.7l5.4,5.4l-6.7,9.5c-0.5,0.6-0.5,1.5-0.1,2.2c1.5,2.5,2.6,5.2,3.4,8.1c0.2,0.8,0.8,1.4,1.6,1.5 L92,46.1v7.6l-11.4,2c-0.8,0.1-1.4,0.7-1.6,1.5c-0.7,2.9-1.9,5.6-3.4,8.1c-0.4,0.7-0.4,1.6,0.1,2.2l6.8,9.4l-5.4,5.4l-9.5-6.7 c-0.7-0.5-1.5-0.5-2.2-0.1c-2.5,1.5-5.2,2.7-8.2,3.4c-0.8,0.2-1.3,0.8-1.5,1.6l-2,11.4h-7.6l-1.9-11.3c-0.1-0.8-0.7-1.4-1.5-1.6 c-2.9-0.7-5.7-1.9-8.2-3.4c-0.7-0.4-1.5-0.4-2.2,0.1l-9.4,6.6l-5.4-5.4l6.6-9.3c0.5-0.7,0.5-1.5,0.1-2.2c-1.5-2.5-2.7-5.3-3.4-8.2 c-0.2-0.8-0.8-1.3-1.6-1.5L8,53.7v-7.6l11.3-1.9c0.8-0.1,1.4-0.7,1.6-1.5c0.7-2.9,1.9-5.7,3.4-8.2c0.4-0.7,0.4-1.5-0.1-2.2 l-6.6-9.4l5.4-5.4l9.3,6.7c0.6,0.5,1.5,0.5,2.2,0.1c2.5-1.5,5.3-2.7,8.2-3.4c0.8-0.2,1.4-0.8,1.5-1.6L46.1,8z M50,34 c-8.8,0-16,7.2-16,16s7.2,16,16,16s16-7.2,16-16S58.8,34,50,34z M50,38c6.7,0,12,5.3,12,12s-5.3,12-12,12s-12-5.3-12-12 S43.3,38,50,38z",
      ),
      "line-menu": rc("M0,18v4h100v-4H0z M0,48v4h100v-4H0z M0,78v4h100v-4H0z"),
      plus: rc(
        "M50,4C24.6,4,4,24.6,4,50s20.6,46,46,46s46-20.6,46-46S75.4,4,50,4z M64,52H52v12c0,1.1-0.9,2-2,2s-2-0.9-2-2V52H36 c-1.1,0-2-0.9-2-2s0.9-2,2-2h12V36c0-1.1,0.9-2,2-2s2,0.9,2,2v12h12c1.1,0,2,0.9,2,2S65.1,52,64,52z",
        { stroke: !1 },
      ),
      minus: rc(
        "M50,4C24.6,4,4,24.6,4,50s20.6,46,46,46s46-20.6,46-46S75.4,4,50,4z M74,52H26v-4h48V52z",
        { stroke: !1 },
      ),
      rename: rc(
        "M51.1,5.6c-1.1,0.1-1.9,1.1-1.8,2.2c0.1,1.1,1.1,1.9,2.2,1.8c8.7,0,12.6,2.5,14.5,4.8c1.8,2.1,1.9,4,1.9,4.2 c0,0,0,0.1,0,0.1v0.1v10.7c-0.1,0.4-0.1,0.8,0,1.2v39.1c-0.1,0.3-0.1,0.5,0,0.8v10.9c0,0,0.1,2-1.8,4.3c-1.9,2.3-5.8,4.8-14.6,4.8 c-0.7,0-1.4,0.4-1.8,1c-0.4,0.6-0.4,1.4,0,2c0.4,0.6,1,1,1.8,1c9.7,0,15-3,17.7-6.3c0.3-0.4,0.5-0.7,0.8-1.1 c0.2,0.4,0.5,0.7,0.8,1.1c2.7,3.3,8,6.3,17.7,6.3c0.7,0,1.4-0.4,1.8-1c0.4-0.6,0.4-1.4,0-2c-0.4-0.6-1-1-1.8-1 c-8.9,0-12.8-2.6-14.6-4.8c-1.9-2.3-1.8-4.3-1.8-4.3V72h26V28H72v-9.4c0-0.2,0.1-2,1.9-4.2c1.9-2.3,5.8-4.8,14.5-4.8 c0.7,0,1.4-0.4,1.8-1c0.4-0.6,0.4-1.4,0-2c-0.4-0.6-1-1-1.8-1c-9.5,0-14.8,3-17.6,6.2c-0.3,0.4-0.6,0.8-0.9,1.2 c-0.3-0.4-0.5-0.8-0.9-1.2c-2.8-3.3-8-6.3-17.6-6.3C51.4,5.5,51.3,5.5,51.1,5.6L51.1,5.6z M2,28v44h60v-4H6V32h56v-4H2z M72,32h22 v36H72V32z",
      ),
      "at-symbol": rc(
        "M53,4C27.2,4,6.3,24.8,6,50.5v0v0C6.3,75.7,26.8,96,52,96c16.1,0,30.4-8.3,38.6-20.9c0.6-0.9,0.3-2.2-0.6-2.8 c-0.9-0.6-2.2-0.3-2.8,0.6C79.7,84.4,66.8,92,52,92c-23.1,0-41.7-18.5-42-41.5C10.3,27,29.4,8,53,8c20,0,36.1,15.8,36.9,35.5 c-0.4,8.8-4,16.3-8.7,21.7C76.3,70.9,70.1,74,66,74c-2.2,0-4-1.8-4-4c0-0.2,0.4-4.5,2.3-9.4c0,0,0,0,0-0.1l13.5-33.8 c0.3-0.6,0.2-1.3-0.2-1.9c-0.4-0.6-1-0.9-1.7-0.9c-0.8,0-1.5,0.5-1.8,1.3L71.5,32c-1.2-2.7-2.9-4.9-5-6.5C63,23,58.7,22,54,22 c-5.6,0-12.8,3.5-19,9.8S24,47.4,24,59c0,10.5,8.5,19,19,19c6.1,0,10.6-2.6,13.7-5.7c0.5-0.5,1-1,1.4-1.5c0.4,4,3.8,7.2,7.9,7.2 c5.9,0,12.7-3.9,18.3-10.2c4.8-5.5,8.7-13.1,9.6-21.9c0.1-0.3,0.2-0.6,0.2-0.9c0-0.7,0-1.3-0.1-2c0-0.3,0.1-0.7,0.1-1 c0-0.3-0.1-0.6-0.2-0.9C91.9,20.3,74.3,4,53,4L53,4z M54,26c4.2,0,7.6,0.9,10.1,2.7c2.4,1.8,4.2,4.6,5.1,9.1l-8.5,21.3 c0,0,0,0.1,0,0.1L59.8,61c0,0.1-0.1,0.1-0.1,0.2c-1.6,2.5-3.3,5.8-5.9,8.3C51.3,72.1,48,74,43,74c-8.3,0-15-6.7-15-15 c0-10.5,4.4-18.8,9.9-24.4C43.4,28.9,50.2,26,54,26L54,26z",
      ),
      "hash-symbol": rc(
        "M34.3,14.3l-1.7,17.9H16.5L16,36.6h16.2l-2.7,29H13.3l-0.4,4.5h16.2l-1.5,15.6h4.5l1.5-15.6h29l-1.5,15.6h4.5L67,70.1 h17.3l0.4-4.5H67.5l2.7-29h17.3l0.4-4.5H70.6l1.7-17.9h-4.5l-1.7,17.9h-29l1.7-17.9H34.3z M36.7,36.6h29l-2.7,29H34L36.7,36.6z",
      ),
      "enter-key": rc(
        "M79.7,16c-0.1,0-0.2,0-0.4,0.1c-1.2,0.2-2.1,1.3-2.1,2.6V50c0,7.2-5.9,13-13,13H26.6l11.2-11.2c0.8-0.8,1.1-2.1,0.5-3 c-0.5-1.1-1.7-1.5-2.7-1.4c-0.5,0-1.2,0.4-1.5,0.8L18.9,63.4c-0.1,0.1-0.2,0.2-0.4,0.4l-0.1,0.1c-0.1,0.1-0.2,0.2-0.4,0.5 c0,0,0,0.1-0.1,0.1c0,0,0,0,0,0.1c0,0,0,0.1-0.1,0.1c0,0.1,0,0.2-0.1,0.4c0,0.2,0,0.5,0,0.8v0.1c0,0,0,0,0,0.1c0,0,0,0.1,0.1,0.1 c0,0,0,0,0,0.1c0,0,0,0.1,0.1,0.1c0,0,0,0.1,0.1,0.1c0,0,0,0,0,0.1c0.1,0.1,0.2,0.4,0.4,0.5l0.1,0.1c0.1,0,0.1,0.1,0.2,0.1 L33.9,83c1.1,1.1,2.7,1.1,3.8,0c1.1-1.1,1.1-2.7,0-3.8l-11.2-11h37.9c10,0,18.1-8.2,18.1-18.2V18.9c0-0.8-0.2-1.4-0.8-2 C81.2,16.4,80.5,16,79.7,16L79.7,16z",
      ),
      "delete-checked": rc(
        "M42,4c-3.3,0-6,2.7-6,6v4H20.3c-0.1,0-0.2,0-0.3,0c-0.1,0-0.2,0-0.3,0H16c-0.7,0-1.4,0.4-1.8,1c-0.4,0.6-0.4,1.4,0,2 c0.4,0.6,1,1,1.8,1h2v72c0,3.3,2.7,6,6,6h52c3.3,0,6-2.7,6-6V18h2c0.7,0,1.4-0.4,1.8-1c0.4-0.6,0.4-1.4,0-2c-0.4-0.6-1-1-1.8-1 h-3.7c-0.2,0-0.4,0-0.6,0H64v-4c0-3.3-2.7-6-6-6L42,4z M42,8h16c1.1,0,2,0.9,2,2v4H40v-4C40,8.9,40.9,8,42,8z M22,18h15.7 c0.2,0,0.4,0,0.6,0h23.4c0.2,0,0.4,0,0.6,0H78v72c0,1.1-0.9,2-2,2H24c-1.1,0-2-0.9-2-2V18z M36,40c-0.8,0-1.5,0.5-1.9,1.3 c-0.3,0.8-0.1,1.6,0.5,2.2L47.2,56L34.6,68.6c-0.5,0.5-0.7,1.3-0.5,1.9c0.2,0.7,0.7,1.3,1.4,1.4c0.7,0.2,1.4,0,1.9-0.5L50,58.8 l12.6,12.6c0.5,0.5,1.3,0.7,1.9,0.5c0.7-0.2,1.3-0.7,1.4-1.4c0.2-0.7,0-1.4-0.5-1.9L52.8,56l12.6-12.6c0.6-0.6,0.8-1.5,0.4-2.2 C65.5,40.4,64.8,40,64,40c-0.5,0-1,0.2-1.4,0.6L50,53.2L37.4,40.6C37,40.2,36.5,40,36,40z",
      ),
      export: rc(
        "M6.5,4.5C5.6,4.7,5,5.5,5,6.4v87.4c0,1,0.8,1.9,1.9,1.9h54.6c1,0,1.9-0.8,1.9-1.9V75.5h-3.8v16.3H8.8V8.2h50.9v16.3h3.8 V6.4c0-1-0.8-1.9-1.9-1.9H6.9C6.7,4.5,6.6,4.5,6.5,4.5L6.5,4.5z M75.9,32c-0.7,0.1-1.2,0.6-1.4,1.3c-0.2,0.7,0,1.4,0.5,1.8 l13,13.1H34.2c-0.1,0-0.1,0-0.2,0c-1,0-1.8,0.9-1.7,1.9c0,1,0.9,1.8,1.9,1.7H88L75,64.9c-0.5,0.4-0.8,1.1-0.6,1.8 c0.2,0.7,0.7,1.2,1.4,1.4c0.7,0.2,1.4-0.1,1.8-0.6l16.2-16.2L95,50l-1.3-1.3L77.5,32.6c-0.4-0.4-0.9-0.6-1.5-0.6 C76,32,75.9,32,75.9,32L75.9,32z",
      ),
      "select-all": rc(
        "M14,4C8.4,4,4,8.4,4,14v54c0,5.6,4.4,10,10,10h54c5.6,0,10-4.4,10-10V19.6L74,24v44c0,3.4-2.6,6-6,6H14c-3.4,0-6-2.6-6-6 V14c0-3.4,2.6-6,6-6h52.8l3.4-3.8C69.4,4.2,68.8,4,68,4L14,4z M72.5,10.7L37.9,49.2L21.3,34.5l-2.6,3l18,16l1.5,1.3l1.3-1.5l36-40 L72.5,10.7z M82,22v4h4c3.4,0,6,2.6,6,6v54c0,3.4-2.6,6-6,6H32c-3.4,0-6-2.6-6-6v-4h-4v4c0,5.6,4.4,10,10,10h54 c5.6,0,10-4.4,10-10V32c0-5.6-4.4-10-10-10L82,22z",
      ),
    },
    _c = As();
  function cc(e, t, i) {
    void 0 === i && (i = 16);
    var n = e.firstChild;
    (n && n instanceof SVGSVGElement && _c.get(n) === t) ||
      (n && e.removeChild(n),
      (n = (function e(t, i) {
        if (!ac[t]) return null;
        var n = document.createElementNS("http://www.w3.org/2000/svg", "svg");
        return (
          n.setAttribute("viewBox", "0 0 100 100"),
          n.setAttribute("width", i.toString()),
          n.setAttribute("height", i.toString()),
          (n.innerHTML = ac[t]),
          _c.set(n, t),
          n
        );
      })(t, i)),
      e.appendChild(n));
  }
  function lc(e, t, i, n, o, s) {
    return (
      void 0 === n && (n = !1),
      void 0 === o && (o = !0),
      void 0 === s && (s = !0),
      {
        name: e,
        icon: t,
        callback: i,
        proOnly: n,
        inDefault: o,
        applyToMultiselect: s,
      }
    );
  }
  var uc = {
      unindent: lc("Unindent", "unindent", function (e) {
        e.view.unindent();
      }),
      indent: lc("Indent", "indent", function (e) {
        e.view.indent();
      }),
      "zoom-in": lc(
        "Zoom in",
        "magnifying-glass",
        function (e) {
          e.view.zoom_in();
        },
        !1,
        !0,
        !1,
      ),
      delete: lc("Delete", "trash", function (e) {
        e.view.detach_nodes_for_selection(!0);
      }),
      check: lc("Check off", "check-mark", function (e, t) {
        var i = e.ui;
        if (t.has_nodes()) {
          var n = t.get_nodes(),
            o = n[n.length - 1],
            s = i.get_node_state(o).visibleNextNonChild();
          !e.view.toggle_checked(n) &&
            s &&
            i.get_render_options().hide_checked &&
            i.selection().apply(zo.select_content(s, 0));
        }
      }),
      note: lc(
        "Edit note",
        "note",
        function (e, t) {
          t instanceof Uo && e.ui.show_note_for_node(t.get_node());
        },
        !1,
        !0,
        !1,
      ),
      date: lc(
        "Add date",
        "calendar",
        function (e) {
          e.ui.datepicker_popup_manager.mobileInsertDate(),
            e.ui.save_mobile_cached_selection();
        },
        !1,
        !0,
        !1,
      ),
      "move-up": lc("Move item up", "move-up", function (e) {
        e.view.move_up();
      }),
      "move-down": lc("Move item down", "move-down", function (e) {
        e.view.move_down();
      }),
      "move-item": lc("Move item", "paper-plane", function (e, t) {
        var i = t.get_nodes();
        e.ui.get_userspace_ui().hide_context_menu(),
          e.ui.node_mover.openWithNodes(i);
      }),
      upload: lc(
        "Upload a file",
        "attachment",
        function () {
          var e = fish(".file-attachment-upload");
          e.focus(), e.click();
        },
        !0,
        !0,
        !1,
      ),
      checklist: lc("Toggle checkbox", "empty-checkbox", function (e, t) {
        e.view.toggleCheckbox(t.get_nodes()),
          e.ui.get_userspace_ui().hide_context_menu();
      }),
      color: lc("Set color label", "paint-bucket", function (e) {
        e.ui.mobile_popup_menu_manager.open_menu("color-label");
      }),
      heading: lc("Set heading level", "heading", function (e) {
        e.ui.mobile_popup_menu_manager.open_menu("heading");
      }),
      "get-link": lc(
        "Copy item link",
        "copy-link",
        function (e, t) {
          t instanceof Uo && e.ui.open_copy_link_popup(t.get_node()),
            e.ui.get_userspace_ui().hide_context_menu();
        },
        !1,
        !0,
        !1,
      ),
      customize: lc(
        "Customize toolbar",
        "gear",
        function (e) {
          e.get_app().userspace.view.get_is_pro() &&
            (e.ui.save_mobile_cached_selection(),
            e.ui.get_userspace_ui().open_modal("customize-mobile-toolbar"));
        },
        !0,
        !0,
        !0,
      ),
      duplicate: lc(
        "Duplicate current item",
        "duplicate",
        function (e, t) {
          var i = t.get_nodes();
          if (0 !== i.length) {
            var n = i.last();
            e.view.clone_nodes(i, n.get_parent(), n.get_index() + 1);
          }
        },
        !1,
        !1,
        !0,
      ),
      "hash-tag": lc(
        "Insert hash tag",
        "hash-symbol",
        function (e, t) {
          t instanceof Bo &&
            (e.ui.insert_text("#"),
            e.ui.tag_suggestion_manager.openTriggerOnElement(
              document.activeElement,
            ));
        },
        !1,
        !1,
        !1,
      ),
      "at-tag": lc(
        "Insert at tag",
        "at-symbol",
        function (e, t) {
          t instanceof Bo &&
            (e.ui.insert_text("@"),
            e.ui.tag_suggestion_manager.openTriggerOnElement(
              document.activeElement,
            ));
        },
        !1,
        !1,
        !1,
      ),
      export: lc(
        "Export item",
        "export",
        function (e, t) {
          var i = t.get_nodes();
          e.ui.get_userspace_ui().export_manager.use_normal_container(),
            e.ui
              .get_userspace_ui()
              .export_manager.export_node(i, e.get_document()),
            e.ui.get_userspace_ui().open_modal("export");
        },
        !1,
        !1,
        !1,
      ),
      "delete-checked": lc(
        "Deleted checked items",
        "delete-checked",
        function (e, t) {
          var i = t.get_nodes();
          0 < i.length && e.view.detach_checked_nodes(i);
        },
        !1,
        !1,
      ),
      newline: lc(
        "Insert new line",
        "enter-key",
        function (e, t) {
          t instanceof Bo && e.ui.insert_new_line();
        },
        !1,
        !1,
        !1,
      ),
    },
    hc = [
      "unindent",
      "indent",
      "zoom-in",
      "delete",
      "check",
      "note",
      "date",
      "move-up",
      "move-down",
      "move-item",
      "upload",
      "checklist",
      "color",
      "heading",
      "get-link",
      "customize",
      "duplicate",
      "hash-tag",
      "at-tag",
      "export",
      "delete-checked",
      "newline",
    ],
    pc = (function (t) {
      function e(e) {
        return t.call(this, "CustomMobileToolbar", e) || this;
      }
      return (
        nt(e, t),
        (e.prototype._init_fields = function () {
          (this.events = null),
            (this.toolbarContainerEl = fish(
              ".node-toolbar.mod-not-ios > .node-toolbar-options-container",
            )),
            (this.iosSafariToolbarContainer = fish(
              ".node-toolbar.mod-ios > .node-toolbar-options-container",
            )),
            (this.addedOptionsContainerEl = fish(
              ".toolbar-customize-section.mod-added .toolbar-customize-section-options",
            )),
            (this.notAddedOptionsContainerEl = fish(
              ".toolbar-customize-section.mod-not-added .toolbar-customize-section-options",
            )),
            (this.optionElMap = {}),
            this.initOptionElMap();
        }),
        (e.prototype.update = function () {
          var e = this.app.userspace.ui.preferences.get(
              Ps.MOBILE_TOOLBAR_OPTIONS_ORDER,
            ),
            t = this.app.userspace.view.get_is_pro();
          if (e && t) this.optionsOrder = e.split(",");
          else {
            for (var i = [], n = 0, o = hc; n < o.length; n++) {
              var s = o[n];
              uc[s].inDefault && i.push(s);
            }
            this.optionsOrder = i;
          }
          t &&
            !this.optionsOrder.contains("customize") &&
            this.optionsOrder.push("customize"),
            this.displayCustomizeUi(),
            this.displayToolbar();
        }),
        (e.prototype.displayToolbar = function () {
          var s = this;
          this.events && this.events.unhook_events(),
            (this.events = this.submodule(new Eo())),
            this.toolbarContainerEl.empty(),
            this.iosSafariToolbarContainer.empty();
          for (
            var e = function (e) {
                for (
                  var t = uc[e],
                    i = 0,
                    n = [r.toolbarContainerEl, r.iosSafariToolbarContainer];
                  i < n.length;
                  i++
                ) {
                  var o = n[i].createEl(
                    "div",
                    { cls: "node-toolbar-option mod-" + e },
                    function (e) {
                      t.proOnly && e.addClass("u-pro-only"), cc(e, t.icon, 20);
                    },
                  );
                  r.events.register_event_listener(o, "click", function () {
                    var e = s.app.get_current_app_document();
                    e && t.callback(e, e.ui.selection().get());
                  });
                }
              },
              r = this,
              t = 0,
              i = this.optionsOrder;
            t < i.length;
            t++
          ) {
            e(i[t]);
          }
          this.events.hook_events();
        }),
        (e.prototype.displayCustomizeUi = function () {
          for (var e = [], t = 0, i = hc; t < i.length; t++) {
            var n = i[t];
            this.optionsOrder.contains(n) || e.push(n);
          }
          this.addedOptionsContainerEl.empty();
          for (var o = 0, s = this.optionsOrder; o < s.length; o++) {
            n = s[o];
            var r = this.optionElMap[n];
            this.addedOptionsContainerEl.appendChild(r);
          }
          this.notAddedOptionsContainerEl.empty();
          for (var a = 0, _ = e; a < _.length; a++) {
            (n = _[a]), (r = this.optionElMap[n]);
            this.notAddedOptionsContainerEl.appendChild(r);
          }
        }),
        (e.prototype.moveOptionToNotAdded = function (t) {
          var e = this.optionsOrder.filter(function (e) {
            return e !== t;
          });
          this.setNewOptionsOrder(e);
        }),
        (e.prototype.moveOptionToAdded = function (e) {
          var t = this.optionsOrder.slice();
          t.contains(e) || t.push(e), this.setNewOptionsOrder(t);
        }),
        (e.prototype.moveOption = function (e, t) {
          if (this.optionsOrder.contains(t)) {
            var i = this.optionsOrder.slice(),
              n = i.indexOf(t),
              o = -1;
            if (
              ("up" === e ? (o = n - 1) : "down" === e && (o = n),
              0 <= o && o < i.length - 1)
            ) {
              var s = i[o];
              (i[o] = i[o + 1]), (i[o + 1] = s), this.setNewOptionsOrder(i);
            }
          }
        }),
        (e.prototype.setNewOptionsOrder = function (e) {
          this.app.userspace.ui.preferences.set(
            Ps.MOBILE_TOOLBAR_OPTIONS_ORDER,
            e.join(","),
          );
        }),
        (e.prototype.initOptionElMap = function () {
          for (
            var n = this,
              e = function (t) {
                var i = uc[t];
                o.optionElMap[t] = createEl(
                  "div",
                  { cls: "toolbar-customize-option" },
                  function (e) {
                    e.addClass("mod-" + t),
                      e.createEl(
                        "div",
                        { cls: "option-remove-button" },
                        function (e) {
                          cc(e, "minus", 20),
                            e.addEventListener(
                              "click",
                              n.moveOptionToNotAdded.bind(n, t),
                            );
                        },
                      ),
                      e.createEl(
                        "div",
                        { cls: "option-add-button" },
                        function (e) {
                          cc(e, "plus", 20),
                            e.addEventListener(
                              "click",
                              n.moveOptionToAdded.bind(n, t),
                            );
                        },
                      ),
                      e.createEl(
                        "div",
                        { cls: "option-self-icon" },
                        function (e) {
                          cc(e, i.icon, 20);
                        },
                      ),
                      e.createEl("span", {
                        cls: "toolbar-customize-option-name",
                        text: i.name,
                      }),
                      e.createEl(
                        "div",
                        { cls: "option-move-up-button" },
                        function (e) {
                          cc(e, "move-up", 20),
                            e.addEventListener(
                              "click",
                              n.moveOption.bind(n, "up", t),
                            );
                        },
                      ),
                      e.createEl(
                        "div",
                        { cls: "option-move-down-button" },
                        function (e) {
                          cc(e, "move-down", 20),
                            e.addEventListener(
                              "click",
                              n.moveOption.bind(n, "down", t),
                            );
                        },
                      );
                  },
                );
              },
              o = this,
              t = 0,
              i = hc;
            t < i.length;
            t++
          ) {
            e(i[t]);
          }
        }),
        e
      );
    })(To),
    dc = (function (n) {
      function e(e, t) {
        var i = n.call(this, "NodeToolbar", e, t) || this;
        return (i.request_update = i.debounce(i.update, 1)), i;
      }
      return (
        nt(e, n),
        (e.prototype._init_dependencies = function () {
          (this.document_ui = this.app_document.ui),
            (this.userspace_ui = this.app.userspace.ui);
        }),
        (e.prototype._init_fields = function () {
          (this.is_open = !1),
            (this.is_toolbar_open = !1),
            (this.nodes = []),
            (this.toolbar_el = fish(".node-toolbar.mod-not-ios")),
            (this.$toolbar_el = $(this.toolbar_el)),
            (this.overlay_toolbar_el = fish(".node-toolbar.mod-ios")),
            (this.$overlay_toolbar_el = $(this.overlay_toolbar_el)),
            (this.body_el = fish("body"));
        }),
        (e.prototype._pre_unload = function () {
          this.close_toolbar();
        }),
        (e.prototype.get_is_open = function () {
          return this.is_open;
        }),
        (e.prototype.get_is_toolbar_open = function () {
          return this.is_toolbar_open;
        }),
        (e.prototype.update = function () {
          var e = this,
            t = this.userspace_ui.is_ios_device(),
            i = this.app.env.is("mobile"),
            n = t && !i,
            o = this.document_ui.selection().get(),
            s = [];
          if (
            (this.userspace_ui.is_mobile_view() &&
              (o instanceof Uo
                ? (s = [o.get_node()])
                : o instanceof Go && (s = o.get_nodes())),
            s && this.update_options(s),
            0 === s.length && this.is_open
              ? this.close_toolbar()
              : 0 < s.length && !this.is_open && this.open_toolbar(),
            n && this.nodes !== s && 0 < s.length)
          ) {
            var r = s[0],
              a = this.document_ui.get_node_state(r),
              _ = $(a.dom.content_container_el),
              c = this.document_ui.get_document_container_el(),
              l = _.offset();
            (l.top += c.scrollTop()),
              (l.top -= 60 + c.offset().top),
              this.$overlay_toolbar_el.css(l),
              this.horizontally_reposition_ios_toolbar();
          }
          var u = 1 === this.nodes.length ? this.nodes[0] : null;
          1 === s.length &&
            s[0] === u &&
            this.set_timeout(function () {
              e.document_ui.scroll_selection_into_view(!0);
            }, 400),
            (this.nodes = s);
        }),
        (e.prototype.close_toolbar = function () {
          this.is_open = !1;
          var e = this.userspace_ui.is_ios_device(),
            t = this.app.env.is("mobile");
          e && !t
            ? this.$overlay_toolbar_el.removeClass("is-active")
            : ((this.is_toolbar_open = !1),
              this.toolbar_el.uHide(),
              this.userspace_ui.pane_ui.update_height(),
              this.body_el.removeClass("has-bottom-toolbar"));
        }),
        (e.prototype.open_toolbar = function () {
          this.is_open = !0;
          var e = this.userspace_ui.is_ios_device(),
            t = this.app.env.is("mobile");
          e && !t
            ? this.$overlay_toolbar_el.addClass("is-active")
            : ((this.is_toolbar_open = !0),
              this.toolbar_el.uShow(),
              this.userspace_ui.pane_ui.update_height(),
              this.body_el.addClass("has-bottom-toolbar"));
        }),
        (e.prototype.update_options = function (e) {
          var t = function (e) {
            fish(".node-toolbar-option.mod-" + e).addClass("is-disabled");
          };
          if (
            (fishAll(".node-toolbar-option").forEach(function (e) {
              return e.removeClass("is-disabled");
            }),
            fishAll(".node-toolbar-option").forEach(function (e) {
              return e.show();
            }),
            1 === e.length)
          ) {
            var i = e[0];
            if (i.get_parent()) {
              var n = this.document_ui.get_node_state(i.get_parent());
              n.is_current_root() && t("unindent"),
                n.visibleFirstChild() === i && t("indent");
            }
          } else
            for (var o in uc) {
              if (uc.hasOwnProperty(o))
                if (!uc[o].applyToMultiselect) {
                  var s = fishAll(".node-toolbar-option.mod-" + o);
                  0 < s.length &&
                    s.forEach(function (e) {
                      return e.hide();
                    });
                }
            }
        }),
        (e.prototype.horizontally_reposition_ios_toolbar = function () {
          var e = this.$overlay_toolbar_el;
          e.css("left", screen.width / 2 - e.outerWidth() / 2);
        }),
        (e.TOOLBAR_HEIGHT = 43),
        e
      );
    })(To),
    fc = (function () {
      function e(e) {
        (this.node_view = e),
          (this.timer = null),
          (this.bind_run_background_loader =
            this.run_background_loader.bind(this));
      }
      return (
        (e.prototype.start = function (e) {
          this.stop(),
            e || (e = 300),
            (this.timer = setTimeout(this.bind_run_background_loader, e));
        }),
        (e.prototype.stop = function () {
          this.timer && (clearTimeout(this.timer), (this.timer = null));
        }),
        (e.prototype.run_background_loader = function () {
          this.stop();
          var t = performance.now() + 50,
            i = this.node_view.uninitialized_node_states,
            e = Object.keys(i);
          if (0 < e.length) {
            var n = 0;
            Array.each(e, function (e) {
              if (
                i[e] &&
                (i[e].initialize_self(), ++n % 20 == 0 && performance.now() > t)
              )
                return !1;
            }),
              this.start(300);
          } else this.start(5e3);
        }),
        e
      );
    })(),
    mc = (function () {
      function e(e) {
        this.view = e;
      }
      return (
        (e.prototype.initialize_self = function (e) {
          var t = e.dom;
          t.initialized_self ||
            (this.view.remove_uninitialized_node_state(e),
            t.initialize_self(),
            this.update_is_visible(e, !1),
            this.update_is_checkbox(e),
            this.update_is_checked(e, !1),
            this.update_collapse(e, !1),
            this.update_is_selected(e),
            this.update_editing_content(e),
            this.update_is_editing_note(e),
            this.update_is_hovering_bullet(e),
            this.update_has_shown_children(e),
            this.update_search_collapsed(e, !1),
            this.update_note_display(e),
            this.ui_searching_change(e),
            this.ui_search_result_change(e),
            this.update_heading(e),
            this.update_color_label(e),
            this.update_parent_node_state(e),
            this.update_is_content_rendered(e),
            this.update_is_note_rendered(e),
            this.update_backlink_count(e),
            this.update_bullet_numbering(e),
            this.render_content(e),
            this.render_note(e),
            this.update_is_current_root(e),
            this.update_content_elements_attributes(e),
            this.update_bullet_title(e),
            this.update_content(e),
            this.update_note(e),
            this.update_bullet_link(e),
            t.initializeAttach());
        }),
        (e.prototype.update_is_visible = function (e, t, i) {
          var n = this,
            o = e.ui_visible;
          this.view.request_update_node_rendering(),
            e.dom.set_visible(o, t, i, function () {
              n.view.document_ui.request_show_current_node_highlight(),
                n.view.request_update_node_rendering();
            }),
            this.view.updateVisibleStateInParent(e);
        }),
        (e.prototype.update_is_checkbox = function (e) {
          var t = e.ui_root,
            i = e.ui_checkbox;
          e.dom.set_has_checkbox(i && !t);
        }),
        (e.prototype.update_is_checked = function (e, t) {
          var i = e.ui_checked;
          e.dom.set_is_checked(i);
          var n = i && t;
          this.view.update_visibility(e, t, n);
        }),
        (e.prototype.update_collapse = function (e, t) {
          var i = this,
            n = e.ui_collapsed;
          e.ui_parent_node_state || (t = !1),
            this.view.request_update_node_rendering(),
            e.dom.collapse_or_expand(n, t, function () {
              i.view.document_ui.request_show_current_node_highlight(),
                i.view.request_update_node_rendering();
            });
        }),
        (e.prototype.update_is_selected = function (e) {
          var t = e.ui_selected;
          e.dom.set_is_selected(t);
        }),
        (e.prototype.update_editing_content = function (e) {
          this.view.update_formatted_content(e);
        }),
        (e.prototype.update_is_editing_note = function (e) {
          var t = e.node.get_meta_object().get_note(),
            i = e.ui_editing_note;
          e.dom.set_is_note_empty(!t && !i),
            this.view.update_note_display(e),
            this.view.update_formatted_note(e);
        }),
        (e.prototype.update_is_hovering_bullet = function (e) {
          var t = e.ui_hovering_bullet;
          e.dom.set_is_hovering_bullet(t);
        }),
        (e.prototype.update_has_shown_children = function (e) {
          var t = e.ui_has_shown_children;
          e.dom.set_has_shown_children(t);
        }),
        (e.prototype.update_search_collapsed = function (e, t) {
          this.view.update_collapsed(e, t);
        }),
        (e.prototype.update_note_display = function (e) {
          var t = e.ui_note_display;
          e.dom.set_note_display(t);
        }),
        (e.prototype.ui_searching_change = function (e) {}),
        (e.prototype.ui_search_result_change = function (e) {
          this.view.update_formatted_content(e),
            this.view.update_formatted_note(e),
            this.view.update_note_display(e);
        }),
        (e.prototype.update_heading = function (e) {
          var t = e.ui_heading;
          e.dom.set_heading(t);
        }),
        (e.prototype.update_color_label = function (e) {
          var t = e.ui_color_label;
          e.dom.set_color_label(t);
        }),
        (e.prototype.update_parent_node_state = function (e) {
          var i = this,
            n = e.node,
            o = e.ui_parent_node_state,
            t = e.dom;
          if (o)
            if (n.is_first()) t.attach_first(o.dom);
            else {
              var s = this.view.get_node_state(n.prev());
              if (s) {
                if (s.ui_parent_node_state !== o)
                  n.get_parent().children.each(function (e) {
                    var t = i.view.get_node_state(e);
                    if (
                      (t.ui_parent_node_state !== o &&
                        t.set_ui_parent_node_state(o),
                      e === n)
                    )
                      return !1;
                  }),
                    s.set_ui_parent_node_state(o);
                t.attach_after_sibling(s.dom);
              }
            }
          else t.detach();
        }),
        (e.prototype.update_is_content_rendered = function (e) {
          var t = e.ui_content_rendered;
          e.dom.set_is_content_rendered(t);
        }),
        (e.prototype.update_is_note_rendered = function (e) {
          var t = e.ui_note_rendered;
          this.view.update_note_display(e), e.dom.set_is_note_rendered(t);
        }),
        (e.prototype.update_backlink_count = function (e) {
          var t = e.ui_backlink_count;
          e.dom.setBacklinkCount(t);
        }),
        (e.prototype.update_bullet_numbering = function (e) {
          var t = e.ui_should_show_number;
          e.dom.set_bullet_numbered_style(t);
        }),
        (e.prototype.render_content = function (e) {
          var t = e.content_parse_tree,
            i = e.get_ui_search_result_content_matches();
          e.dom.render_content(this.view.formatter, t, i);
        }),
        (e.prototype.render_note = function (e) {
          var t = e.note_parse_tree,
            i = e.get_ui_search_result_note_matches();
          e.dom.render_note(this.view.formatter, t, i);
        }),
        (e.prototype.update_is_current_root = function (e) {
          var t = e.ui_current_root;
          e.dom.set_is_current_root(t, this.view.get_container()),
            this.view.update_collapsed(e, !1);
        }),
        (e.prototype.update_is_root = function (e) {
          this.update_is_checkbox(e);
        }),
        (e.prototype.update_content_elements_attributes = function (e) {
          var t = e.ui_editable,
            i = this.view.get_render_options().spellcheck;
          e.dom.set_content_elements_attributes(t, i);
        }),
        (e.prototype.update_bullet_title = function (e) {
          var t = e.ui_created_ts,
            i = e.ui_edited_ts;
          e.dom.set_bullet_title(t, i);
        }),
        (e.prototype.reset_content = function (e) {
          this.update_content(e), this.update_note(e);
        }),
        (e.prototype.update_content = function (e) {
          var t = e.node,
            i = t.get_meta_object().get_content();
          t.is_root() && "" === i && (i = c), e.dom.set_content(i);
        }),
        (e.prototype.update_note = function (e) {
          var t = e.node.get_meta_object().get_note();
          e.dom.set_note(t);
        }),
        (e.prototype.update_bullet_link = function (e) {
          var t = e.ui_link;
          e.dom.set_bullet_link(t);
        }),
        e
      );
    })(),
    vc = (function () {
      function e(e, t, i) {
        (this.node = e),
          (this.renderer = t),
          (this.view = i),
          (this.dom = new Ra(e.get_id())),
          (this.ui_editable = !1),
          (this.ui_visible = !0),
          (this.ui_checkbox = !1),
          (this.ui_checked = !1),
          (this.ui_collapsed = !0),
          (this.ui_selected = !1),
          (this.ui_editing = !1),
          (this.ui_editing_note = !1),
          (this.ui_hovering_bullet = !1),
          (this.ui_has_shown_children = !1),
          (this.ui_search_collapsed = !1),
          (this.ui_note_display = "hide"),
          (this.ui_searching = !1),
          (this.ui_search_result = null),
          (this.ui_heading = 0),
          (this.ui_color_label = 0),
          (this.ui_created_ts = 0),
          (this.ui_edited_ts = 0),
          (this.ui_parent_node_state = null),
          (this.ui_root = !1),
          (this.ui_current_root = !1),
          (this.ui_content_rendered = !1),
          (this.ui_note_rendered = !1),
          (this.ui_should_show_number = !1),
          (this.ui_index = -1),
          (this.content_parse_tree = null),
          (this.note_parse_tree = null),
          (this.ui_backlink_count = 0),
          (this.ui_reverse_listeners = null),
          (this.ui_has_datetime = !1),
          (this.ui_has_images = !1),
          (this.searchVisibleChildren = {}),
          (this.numSearchVisibleChildren = 0);
      }
      return (
        (e.prototype.initialize_self = function () {
          this.renderer.initialize_self(this);
        }),
        (e.prototype.is_visible = function () {
          return this.ui_visible;
        }),
        (e.prototype.is_ui_collapsed = function () {
          return this.ui_collapsed;
        }),
        (e.prototype.set_ui_editable = function (e) {
          this.ui_editable != e &&
            ((this.ui_editable = e),
            this.renderer.update_content_elements_attributes(this));
        }),
        (e.prototype.set_ui_checkbox = function (e) {
          this.ui_checkbox != e &&
            ((this.ui_checkbox = e), this.renderer.update_is_checkbox(this));
        }),
        (e.prototype.set_ui_checked = function (e, t) {
          this.ui_checked != e &&
            ((this.ui_checked = e), this.renderer.update_is_checked(this, t));
        }),
        (e.prototype.set_ui_heading = function (e) {
          this.ui_heading != e &&
            ((this.ui_heading = e), this.renderer.update_heading(this));
        }),
        (e.prototype.set_ui_color_label = function (e) {
          this.ui_color_label != e &&
            ((this.ui_color_label = e), this.renderer.update_color_label(this));
        }),
        (e.prototype.set_ui_visible = function (e, t, i) {
          this.ui_visible != e &&
            ((this.ui_visible = e),
            this.renderer.update_is_visible(this, t, i));
        }),
        (e.prototype.set_ui_collapsed = function (e, t) {
          this.ui_collapsed != e &&
            ((this.ui_collapsed = e), this.renderer.update_collapse(this, t));
        }),
        (e.prototype.set_ui_selected = function (e) {
          this.ui_selected != e &&
            ((this.ui_selected = e), this.renderer.update_is_selected(this));
        }),
        (e.prototype.set_ui_editing = function (e) {
          this.ui_editing != e &&
            ((this.ui_editing = e), this.renderer.update_editing_content(this));
        }),
        (e.prototype.set_ui_editing_note = function (e) {
          this.ui_editing_note != e &&
            ((this.ui_editing_note = e),
            this.renderer.update_is_editing_note(this));
        }),
        (e.prototype.set_ui_hovering_bullet = function (e) {
          this.ui_hovering_bullet != e &&
            ((this.ui_hovering_bullet = e),
            this.renderer.update_is_hovering_bullet(this));
        }),
        (e.prototype.set_ui_has_shown_children = function (e) {
          this.ui_has_shown_children !== e &&
            ((this.ui_has_shown_children = e),
            this.renderer.update_has_shown_children(this));
        }),
        (e.prototype.set_ui_search_collapsed = function (e, t) {
          this.ui_search_collapsed !== e &&
            ((this.ui_search_collapsed = e),
            this.renderer.update_search_collapsed(this, t));
        }),
        (e.prototype.set_ui_note_display = function (e) {
          this.ui_note_display !== e &&
            ((this.ui_note_display = e),
            this.renderer.update_note_display(this));
        }),
        (e.prototype.set_ui_searching = function (e) {
          this.ui_searching != e &&
            ((this.ui_searching = e), this.renderer.ui_searching_change(this));
        }),
        (e.prototype.set_ui_search_result = function (e) {
          this.ui_search_result != e &&
            ((this.ui_search_result = e),
            this.renderer.ui_search_result_change(this));
        }),
        (e.prototype.set_ui_edited_ts = function (e) {
          this.ui_edited_ts != e &&
            ((this.ui_edited_ts = e), this.renderer.update_bullet_title(this));
        }),
        (e.prototype.set_ui_created_ts = function (e) {
          this.ui_created_ts != e &&
            ((this.ui_created_ts = e), this.renderer.update_bullet_title(this));
        }),
        (e.prototype.set_ui_parent_node_state = function (e) {
          if (this.ui_parent_node_state != e) {
            var t = this.ui_parent_node_state;
            t && t.removeSearchVisibleChild(this),
              (this.ui_parent_node_state = e),
              this.renderer.update_parent_node_state(this),
              e &&
                (this.view.updateVisibleStateInParent(this),
                this.view.update_should_show_number(this));
          }
        }),
        (e.prototype.set_ui_root = function (e) {
          this.ui_root != e &&
            ((this.ui_root = e), this.renderer.update_is_root(this));
        }),
        (e.prototype.set_ui_current_root = function (e) {
          this.ui_current_root != e &&
            ((this.ui_current_root = e),
            this.renderer.update_is_current_root(this));
        }),
        (e.prototype.set_ui_content_rendered = function (e) {
          this.ui_content_rendered != e &&
            ((this.ui_content_rendered = e),
            this.renderer.update_is_content_rendered(this));
        }),
        (e.prototype.set_ui_note_rendered = function (e) {
          this.ui_note_rendered != e &&
            ((this.ui_note_rendered = e),
            this.renderer.update_is_note_rendered(this));
        }),
        (e.prototype.set_ui_backlink_count = function (e) {
          this.ui_backlink_count != e &&
            ((this.ui_backlink_count = e),
            this.renderer.update_backlink_count(this));
        }),
        (e.prototype.set_ui_should_show_number = function (e) {
          this.ui_should_show_number !== e &&
            ((this.ui_should_show_number = e),
            this.renderer.update_bullet_numbering(this));
        }),
        (e.prototype.set_ui_link = function (e) {
          this.ui_link !== e &&
            ((this.ui_link = e), this.renderer.update_bullet_link(this));
        }),
        (e.prototype.set_content_parse_tree = function (e) {
          (this.content_parse_tree = e), this.renderer.render_content(this);
        }),
        (e.prototype.set_note_parse_tree = function (e) {
          (this.note_parse_tree = e), this.renderer.render_note(this);
        }),
        (e.prototype.get_ui_search_result_content_matches = function () {
          if (!this.ui_searching || !this.ui_search_result) return null;
          var e = this.ui_search_result.get_content_matches();
          return 0 === e.length ? null : e;
        }),
        (e.prototype.get_ui_search_result_note_matches = function () {
          if (!this.ui_searching || !this.ui_search_result) return null;
          var e = this.ui_search_result.get_note_matches();
          return 0 === e.length ? null : e;
        }),
        (e.prototype.get_ui_should_show = function () {
          return (
            !!this.is_current_root() ||
            (!this.get_ui_hidden_by_search() &&
              !this.get_ui_hidden_by_checked_parent_chain())
          );
        }),
        (e.prototype.get_ui_hidden_by_checked_parent_chain = function () {
          var e = this.get_ui_hidden_by_checked();
          return e || !this.ui_parent_node_state || this.is_current_root()
            ? e
            : e ||
                this.ui_parent_node_state.get_ui_hidden_by_checked_parent_chain();
        }),
        (e.prototype.get_ui_hidden_by_checked = function () {
          return this.view.get_render_options().hide_checked && this.ui_checked;
        }),
        (e.prototype.get_ui_hidden_by_search = function () {
          return this.ui_searching && !this.ui_search_result;
        }),
        (e.prototype.addSearchVisibleChild = function (e) {
          var t = e.node.get_id(),
            i = this.searchVisibleChildren;
          i.hasOwnProperty(t) ||
            ((i[t] = !0),
            this.numSearchVisibleChildren++,
            this.set_ui_has_shown_children(!0));
        }),
        (e.prototype.removeSearchVisibleChild = function (e) {
          var t = e.node.get_id(),
            i = this.searchVisibleChildren;
          i.hasOwnProperty(t) &&
            (delete i[t],
            this.numSearchVisibleChildren--,
            0 === this.numSearchVisibleChildren &&
              this.set_ui_has_shown_children(!1));
        }),
        (e.prototype.get_node_state = function (e) {
          return this.view.get_node_state(e);
        }),
        (e.prototype.get_id = function () {
          return this.node.get_id();
        }),
        (e.prototype.is_checked = function () {
          return this.node.get_meta_object().is_checked();
        }),
        (e.prototype.is_collapsed = function () {
          return this.node.is_collapsed();
        }),
        (e.prototype.is_current_root = function () {
          return this.view.get_current_root_node_state() === this;
        }),
        (e.prototype.get_node = function () {
          return this.node;
        }),
        (e.prototype.get_child = function (e) {
          return this.get_node_state(this.node.get_child(e));
        }),
        (e.prototype.has_children = function () {
          return this.node.has_children();
        }),
        (e.prototype.each_children = function (i, n, e) {
          var o = this;
          return this.node.get_children().each(
            function (e, t) {
              i.call(n, o.get_node_state(e), t);
            },
            n,
            e,
          );
        }),
        (e.prototype.hasVisibleChildren = function () {
          return null !== this.visibleFirstChild();
        }),
        (e.prototype.visibleFirstChild = function () {
          return this.ui_collapsed
            ? null
            : this.visibleFirstChildIgnoreCollapse();
        }),
        (e.prototype.visibleFirstChildIgnoreCollapse = function () {
          for (
            var e = this.node.get_children().array(), t = 0;
            t < e.length;
            t++
          ) {
            var i = e[t];
            if (this.view.get_node_state(i).is_visible()) return i;
          }
          return null;
        }),
        (e.prototype.visibleLastChild = function () {
          return this.ui_collapsed
            ? null
            : this.visibleLastChildIgnoreCollapse();
        }),
        (e.prototype.visibleLastChildIgnoreCollapse = function () {
          for (
            var e = this.node.get_children().array(), t = e.length - 1;
            0 <= t;
            t--
          ) {
            var i = e[t];
            if (this.view.get_node_state(i).is_visible()) return i;
          }
          return null;
        }),
        (e.prototype.visibleLastDescendent = function () {
          if (this.ui_collapsed) return null;
          var e = this.visibleLastChild();
          if (!e) return null;
          var t = this.view.get_node_state(e).visibleLastDescendent();
          return t || e;
        }),
        (e.prototype.visibleFirstChildOrSelf = function () {
          return this.visibleFirstChild() || this.node;
        }),
        (e.prototype.visibleLastDescendentOrSelf = function () {
          return this.visibleLastDescendent() || this.node;
        }),
        (e.prototype.visiblePrevSibling = function () {
          for (
            var e = this.node.prev();
            e && !this.view.get_node_state(e).is_visible();

          )
            e = e.prev();
          return e;
        }),
        (e.prototype.visibleNextSibling = function () {
          for (
            var e = this.node.next();
            e && !this.view.get_node_state(e).is_visible();

          )
            e = e.next();
          return e;
        }),
        (e.prototype.visiblePrevNonChild = function () {
          var e = this.visiblePrevSibling();
          if (e) return e;
          var t = this.node.get_parent();
          return t && !this.view.isCurrentRoot(t) ? t : null;
        }),
        (e.prototype.visibleNextNonChild = function () {
          var e = this.visibleNextSibling();
          if (e) return e;
          var t = this.node.get_parent();
          return t && !this.view.isCurrentRoot(t)
            ? this.view.get_node_state(t).visibleNextNonChild()
            : null;
        }),
        (e.prototype.visiblePrev = function () {
          var e = this.visiblePrevSibling();
          if (e) {
            var t = this.view.get_node_state(e).visibleLastDescendent();
            return t || e;
          }
          var i = this.node.get_parent();
          return i && !this.view.isCurrentRoot(this.node) ? i : null;
        }),
        (e.prototype.visibleNext = function () {
          var e = this.visibleFirstChild();
          return e || this.visibleNextNonChild();
        }),
        (e.prototype.is_current_root_in_ancestor = function () {
          return (
            this.is_current_root() ||
            this.node.has_ancestor(
              this.view.get_current_root_node_state().get_node(),
            )
          );
        }),
        (e.prototype.is_current_root_in_descendant = function () {
          return (
            this.is_current_root() ||
            this.view
              .get_current_root_node_state()
              .get_node()
              .has_ancestor(this)
          );
        }),
        (e.prototype.get_content_on_ui = function () {
          var e = this.dom.get_content();
          return null === e && (e = this.get_content()), e;
        }),
        (e.prototype.get_note_text_on_ui = function () {
          var e = this.dom.get_note();
          return null === e && (e = this.get_note_content()), e;
        }),
        (e.prototype.get_content = function () {
          return this.node.get_meta_object().get_content();
        }),
        (e.prototype.get_note_content = function () {
          return this.node.get_meta_object().get_note();
        }),
        (e.prototype.get_parent = function () {
          var e = this.node.get_parent();
          return this.view.get_node_state(e);
        }),
        (e.prototype.get_index = function () {
          return this.node.get_index();
        }),
        (e.prototype.is_root = function () {
          return this.node.is_root();
        }),
        (e.prototype.prev = function () {
          return this.view.get_node_state(this.node.prev());
        }),
        (e.prototype.next = function () {
          return this.view.get_node_state(this.node.next());
        }),
        e
      );
    })(),
    yc = (function (t) {
      function e() {
        var e = t.call(this) || this;
        return (
          (e.hide_checked = !1),
          (e.note_display = ""),
          (e.inline_images = !1),
          (e.spellcheck = !1),
          (e.use_24_hours = !1),
          (e.date_format = ""),
          (e.date_format_without_time = ""),
          (e.showBacklinks = !1),
          e
        );
      }
      return (
        nt(e, t),
        (e.prototype.set_hide_checked = function (e, t) {
          this.hide_checked !== e &&
            ((this.hide_checked = e),
            this.trigger("hide_checked_change", e, t));
        }),
        (e.prototype.set_note_display = function (e) {
          this.note_display !== e &&
            ((this.note_display = e), this.trigger("note_display_change", e));
        }),
        (e.prototype.set_inline_images = function (e) {
          this.inline_images !== e &&
            ((this.inline_images = e), this.trigger("inline_images_change", e));
        }),
        (e.prototype.set_spellcheck = function (e) {
          this.spellcheck !== e &&
            ((this.spellcheck = e), this.trigger("spellcheck_change", e));
        }),
        (e.prototype.set_use_24_hours = function (e) {
          this.use_24_hours !== e &&
            ((this.use_24_hours = e), this.trigger("use_24_hours_change", e));
        }),
        (e.prototype.set_date_format = function (e) {
          this.date_format !== e &&
            ((this.date_format = e), this.trigger("date_format_change", e));
        }),
        (e.prototype.set_date_format_no_time = function (e) {
          this.date_format_without_time !== e &&
            ((this.date_format_without_time = e),
            this.trigger("date_format_change", e));
        }),
        (e.prototype.setShowBacklinks = function (e) {
          this.showBacklinks !== e &&
            ((this.showBacklinks = e),
            this.trigger("show_backlinks_change", e));
        }),
        e
      );
    })(mt),
    bc = (function (n) {
      function e(e, t) {
        var i = n.call(this, "NodeView", e, t) || this;
        return (
          (i.events = i.submodule(new Eo())),
          (i.request_update_node_rendering = i.debounce(
            i.update_node_rendering.bind(i),
            0,
          )),
          i
        );
      }
      return (
        nt(e, n),
        (e.prototype._init_dependencies = function () {
          (this.document = this.app_document.document),
            (this.node_collection = this.document.get_node_collection()),
            (this.document_ui = this.app_document.ui),
            (this.controller = this.app_document.controller),
            (this.userspace_view = this.app.userspace.view);
        }),
        (e.prototype._init_fields = function () {
          (this.render_options = this.document_ui.get_render_options()),
            (this.formatter = new Is(this.render_options)),
            (this.node_renderer = new mc(this)),
            (this.background_initializer = new fc(this)),
            (this.container = this.app.userspace.ui.get_document_container()),
            (this.current_root_state = null),
            (this.node_states = {}),
            (this.uninitialized_node_states = {}),
            (this.uninitialized_node_state_count = 0),
            (this.is_searching = this.document_ui.is_searching());
        }),
        (e.prototype._init_after = function () {
          var e = this.events.make_context_on_off(this.node_collection);
          this.events.register_with_context_array(e, [
            ["node_create", this.node_created, this],
            ["attach", this.node_attached, this],
            ["detach", this.node_detached, this],
            ["remove", this.node_removed, this],
            ["node_content_change", this.node_content_changed, this],
            ["node_note_change", this.node_note_changed, this],
            ["node_meta_change", this.node_meta_changed, this],
            ["collapse_change", this.node_collapse_changed, this],
            ["node_created_ts_change", this.node_created_changed, this],
            ["node_edited_ts_change", this.node_edited_ts_changed, this],
            ["node_attached_ts_change", this.node_attached_ts_changed, this],
          ]);
          var t = this.events.make_context_on_off(this.render_options);
          this.events.register_with_context_array(t, [
            ["hide_checked_change", this.hide_checked_changed, this],
            ["note_display_change", this.note_display_changed, this],
            ["inline_images_change", this.inline_images_changed, this],
            ["spellcheck_change", this.spellcheck_changed, this],
            ["use_24_hours_change", this.use_24_hours_changed, this],
            ["date_format_change", this.date_format_changed, this],
            ["show_backlinks_change", this.updateAllBacklinkCount, this],
          ]);
        }),
        (e.prototype._load = function () {
          var t = this;
          Object.each(this.node_collection.get_nodes(), function (e) {
            t._create_node_state(e);
          }),
            Object.each(this.node_states, function (e) {
              t.pre_initialize(e);
            });
          var e = this.node_collection.get_root(),
            i = this.get_node_state(e);
          i.initialize_self(),
            i.set_ui_root(!0),
            this.set_current_root(e, !1),
            this.background_initializer.start(),
            (this.datetime_rerender_timer = window.setInterval(
              this.datetime_rerender.bind(this),
              3e5,
            )),
            this.document_ui.backlinkResult.update();
        }),
        (e.prototype._unload = function () {
          var t = this;
          clearInterval(this.datetime_rerender_timer),
            this.background_initializer.stop(),
            this._remove_current_root(),
            Object.each(this.node_states, function (e) {
              t.remove_node_state(e);
            }),
            (this.node_states = {}),
            this.container.empty();
        }),
        (e.prototype._create_node_state = function (e) {
          var t = e.get_id(),
            i = this.node_states[t];
          return (
            i ||
              ((i = new vc(e, this.node_renderer, this)),
              (this.node_states[t] = i),
              (this.uninitialized_node_states[t] = i),
              this.uninitialized_node_state_count++),
            i
          );
        }),
        (e.prototype.create_node_state = function (e) {
          var t = this._create_node_state(e);
          this.pre_initialize(t);
        }),
        (e.prototype.remove_uninitialized_node_state = function (e) {
          var t = e.get_id(),
            i = this.uninitialized_node_states;
          i[t] && (delete i[t], this.uninitialized_node_state_count--);
        }),
        (e.prototype.remove_node = function (e) {
          var t = e.get_id(),
            i = this.node_states[t];
          this.remove_uninitialized_node_state(i),
            this.destroy_node_state(i),
            delete this.node_states[t];
        }),
        (e.prototype.remove_node_state = function (e) {
          this.remove_node(e.get_node());
        }),
        (e.prototype.destroy_node_state = function (e) {
          e.ui_reverse_listeners &&
            (e.ui_reverse_listeners.unhook_events(),
            e.ui_reverse_listeners.clear());
        }),
        (e.prototype.get_node_state = function (e) {
          if (!e) return null;
          var t = e.get_id();
          return (
            this.node_states[t] ||
              (this.create_node_state(e),
              trace("NodeState cannot be found!", new Error())),
            this.node_states[t]
          );
        }),
        (e.prototype.get_container = function () {
          return this.container;
        }),
        (e.prototype._remove_current_root = function () {
          var e = this.current_root_state;
          e &&
            ((this.current_root_state = null),
            e.set_ui_current_root(!1),
            this.update_visibility(e, !1));
        }),
        (e.prototype.set_current_root = function (e, t) {
          if (e) {
            this._remove_current_root();
            var i = this.get_node_state(e);
            (this.current_root_state = i).initialize_self(),
              i.set_ui_current_root(!0),
              i.set_ui_visible(!1, !1),
              i.set_ui_visible(!0, t),
              this.document_ui.update_breadcrumb(),
              this.request_update_node_rendering();
          }
        }),
        (e.prototype.isCurrentRoot = function (e) {
          return this.current_root_state && this.current_root_state.node === e;
        }),
        (e.prototype.get_current_root_node_state = function () {
          return this.current_root_state;
        }),
        (e.prototype.datetime_rerender = function () {
          var t = this;
          Object.each(this.node_states, function (e) {
            e.ui_has_datetime &&
              (t.update_formatted_content(e), t.update_formatted_note(e));
          });
        }),
        (e.prototype.updateAllBacklinkCount = function () {
          var t = this;
          Object.each(this.node_states, function (e) {
            t.updateBacklinkCount(e);
          });
        }),
        (e.prototype.node_created = function (e) {
          var t = e.get_id();
          this.node_states[t] || this.create_node_state(e);
        }),
        (e.prototype.node_attached = function (e) {
          var t = this.get_node_state(e);
          this.update_node_parent(t);
        }),
        (e.prototype.node_detached = function (e) {
          var t = this.get_node_state(e);
          this.update_node_parent(t);
        }),
        (e.prototype.node_removed = function (e) {
          var t = this.get_node_state(e);
          this.update_node_parent(t), this.remove_node(e);
        }),
        (e.prototype.node_content_changed = function (e) {
          var t = this.get_node_state(e);
          this.update_content(t), this.update_listeners(t);
        }),
        (e.prototype.node_note_changed = function (e) {
          var t = this.get_node_state(e);
          this.update_note(t);
        }),
        (e.prototype.node_meta_changed = function (e) {
          var t = this.get_node_state(e);
          this.update_meta(t, this.controller.document_remote_loaded),
            this.update_listeners(t);
        }),
        (e.prototype.node_collapse_changed = function (e, t) {
          var i = this.get_node_state(e);
          i.ui_searching && i.set_ui_search_collapsed(e.is_collapsed(), !t),
            this.update_collapsed(i, !t),
            this.document_ui.node_toolbar.request_update();
        }),
        (e.prototype.node_created_changed = function (e) {
          var t = this.get_node_state(e);
          this.update_created_ts(t);
        }),
        (e.prototype.node_edited_ts_changed = function (e) {
          var t = this.get_node_state(e);
          this.update_edited_ts(t);
        }),
        (e.prototype.node_attached_ts_changed = function () {}),
        (e.prototype.backlinkUpdated = function (e) {
          var t = this.node_collection.find_node(e);
          if (t) {
            var i = this.get_node_state(t);
            i &&
              (this.updateBacklinkCount(i),
              i === this.current_root_state &&
                this.document_ui.backlinkResult.update());
          }
        }),
        (e.prototype.hide_checked_changed = function (e, t) {
          var i = this;
          Object.each(this.node_states, function (e) {
            i.update_visibility(e, t, !1);
          });
        }),
        (e.prototype.note_display_changed = function () {
          var t = this;
          Object.each(this.node_states, function (e) {
            t.update_note_display(e);
          });
        }),
        (e.prototype.inline_images_changed = function () {
          var t = this;
          Object.each(this.node_states, function (e) {
            e.ui_has_images &&
              (t.update_formatted_content(e), t.update_formatted_note(e));
          });
        }),
        (e.prototype.spellcheck_changed = function () {
          var t = this;
          Object.each(this.node_states, function (e) {
            t.node_renderer.update_content_elements_attributes(e),
              t.node_renderer.reset_content(e);
          });
        }),
        (e.prototype.use_24_hours_changed = function () {
          this.datetime_rerender();
        }),
        (e.prototype.date_format_changed = function () {
          this.datetime_rerender();
        }),
        (e.prototype.set_searching = function (e) {
          this.is_searching = e;
        }),
        (e.prototype.get_render_options = function () {
          return this.render_options;
        }),
        (e.prototype.update_node_rendering = function (e) {
          var l = this;
          if (
            this.current_root_state &&
            0 !== this.uninitialized_node_state_count
          ) {
            var u = [],
              h = [];
            h.push({ node_state: this.current_root_state, fully_visible: e });
            for (
              var p = this.document_ui.scrollbox,
                d = p.get_view_y_range(),
                t = function () {
                  var e = h.shift(),
                    t = e.node_state,
                    i = t.get_node();
                  if ((t.dom.initialized_self || u.push(t), t.ui_collapsed))
                    return "continue";
                  if (!t.dom.node_el.visible) return "continue";
                  var n = [];
                  if (
                    (i.children.each(function (e) {
                      var t = l.get_node_state(e);
                      t.ui_visible && n.push(t);
                    }),
                    e.fully_visible)
                  )
                    Array.each(n, function (e) {
                      h.push({ node_state: e, fully_visible: !0 });
                    });
                  else {
                    for (var o = -1, s = n.length - 1; o < s; ) {
                      (a = Math.ceil((s + o) / 2)) < 0 && (a = 0);
                      var r = (_ = n[a]).dom.node_el;
                      r.visible || (s = a - 1),
                        p.get_y_range(r).top > d.bottom ? (s = a - 1) : (o = a);
                    }
                    if (o < 0) return "continue";
                    for (var a = 0; a <= o; a++) {
                      var _ = n[a],
                        c = a < o;
                      h.push({ node_state: _, fully_visible: c });
                    }
                  }
                };
              0 < h.length;

            )
              t();
            Array.each(u, function (e) {
              e.initialize_self();
            });
          }
        }),
        (e.prototype.pre_initialize = function (e) {
          this.update_collapsed(e, !1),
            this.update_editable(e),
            this.update_note_display(e),
            this.update_formatted_content(e),
            this.update_formatted_note(e),
            this.update_content(e),
            this.update_note(e),
            this.update_meta(e, !1),
            this.update_should_show_number(e),
            this.update_node_parent(e),
            this.update_visibility(e, !1),
            this.update_listeners(e),
            this.update_edited_ts(e),
            this.update_created_ts(e),
            this.update_bullet_link(e),
            this.updateBacklinkCount(e);
        }),
        (e.prototype.update_editable_for_all = function () {
          var t = this;
          Object.each(this.node_states, function (e) {
            t.update_editable(e);
          });
        }),
        (e.prototype.update_editable = function (e) {
          var t = this.document_ui.should_allow_edit();
          e.set_ui_editable(t);
        }),
        (e.prototype.update_note_display = function (e) {
          var t = e.ui_editing_note,
            i = e.get_ui_search_result_note_matches(),
            n = this.render_options.note_display;
          (i || t) && (n = Fs.NOTE_DISPLAY.SHOW), e.set_ui_note_display(n);
        }),
        (e.prototype.update_formatted_content = function (e) {
          var t = e.node,
            i = !1,
            n = null;
          e.ui_editing ||
            t.is_root() ||
            ((n = t.get_content_parse_tree()),
            this.update_parse_tree_link_title(n),
            (i = !0)),
            e.set_content_parse_tree(n),
            e.set_ui_content_rendered(i);
        }),
        (e.prototype.update_formatted_note = function (e) {
          var t = e.node,
            i = !1,
            n = null;
          e.ui_editing_note ||
            ((n = t.get_note_parse_tree()),
            this.update_parse_tree_link_title(n),
            (i = !0)),
            e.set_note_parse_tree(n),
            e.set_ui_note_rendered(i);
        }),
        (e.prototype.update_content = function (e) {
          var t = e.node.get_meta_object().get_content(),
            i = e.ui_search_result;
          this.document_ui.get_editing() ||
            this.node_renderer.update_content(e),
            this.update_formatted_content(e),
            i && i.get_content() !== t && this.stop_search(e),
            this.document_ui.request_show_current_node_highlight(),
            this.update_edited_ts(e);
        }),
        (e.prototype.update_note = function (e) {
          var t = e.node.get_meta_object().get_note(),
            i = e.ui_search_result;
          i && i.get_note() !== t && this.stop_search(e),
            this.document_ui.get_editing() ||
              (this.node_renderer.update_note(e),
              this.node_renderer.update_is_editing_note(e)),
            this.document_ui.request_show_current_node_highlight();
        }),
        (e.prototype.update_meta = function (e, t) {
          var i = e.node.get_meta_object();
          this.update_checkbox(e),
            this.update_checked(e, t),
            this.update_ordered_list(e),
            e.set_ui_heading(i.get_heading()),
            e.set_ui_color_label(i.get_color_label());
        }),
        (e.prototype.update_checked = function (e, t) {
          var i = e.node,
            n = i.get_meta_object();
          e.set_ui_checked(!i.is_root() && n.is_checked(), t);
        }),
        (e.prototype.update_checkbox = function (e) {
          var t = e.node.get_meta_object().has_checkbox();
          e.set_ui_checkbox(t);
        }),
        (e.prototype.update_ordered_list = function (e) {
          var i = this;
          e.node.get_children().each(function (e) {
            var t = i.document_ui.get_node_state(e);
            i.update_should_show_number(t);
          });
        }),
        (e.prototype.update_should_show_number = function (e) {
          var t = e.node.get_parent(),
            i = t && t.get_meta_object().is_numbered_list();
          e.set_ui_should_show_number(i);
        }),
        (e.prototype.update_node_parent = function (e) {
          var t = e.node,
            i = this.document_ui.get_node_state(t.get_parent());
          i &&
            (!this.is_searching ||
              (!i.get_ui_should_show() && i.ui_searching) ||
              this.request_update_node_rendering()),
            e.set_ui_parent_node_state(i);
        }),
        (e.prototype.update_collapsed = function (e, t) {
          void 0 === t && (t = !0);
          var i = e.node,
            n = e.ui_current_root,
            o = e.ui_search_collapsed,
            s = !i.is_collapsed();
          this.is_searching && (s = !o),
            n && (s = !0),
            e.set_ui_collapsed(!s, t);
        }),
        (e.prototype.update_visibility = function (e, t, i) {
          var n = e.get_ui_should_show();
          e.set_ui_visible(n, t, i);
        }),
        (e.prototype.updateBacklinkCount = function (e) {
          var t = e.node,
            i = 0;
          this.render_options.showBacklinks &&
            (i = this.userspace_view.linkIndex.getBacklinkCountForNode(
              this.document,
              t,
            )),
            e.set_ui_backlink_count(i);
        }),
        (e.prototype.set_node_search_collapse = function (e, t, i) {
          var n = this;
          e.set_ui_search_collapsed(t, i),
            t ||
              e.each_children(function (e) {
                n.stop_search_if_hidden(e);
              });
        }),
        (e.prototype.before_start_search = function (e, t) {
          t && (e.set_ui_searching(!1), e.set_ui_visible(!1, !1)),
            e.set_ui_search_collapsed(!0, !1);
        }),
        (e.prototype.start_search = function (e, t) {
          var i = e.node;
          e.set_ui_searching(!0),
            e.set_ui_search_result(t.match_node(i)),
            e.get_ui_should_show() &&
              (this.request_update_node_rendering(),
              this._make_parent_chain_visible(e)),
            this.update_visibility(e, !1),
            this.update_collapsed(e, !1),
            this.updateVisibleStateInParent(e);
        }),
        (e.prototype._make_parent_chain_visible = function (e) {
          var i = this,
            t = e.node;
          this.node_collection.traverse_parent(
            t,
            function (e) {
              var t = i.get_node_state(e);
              i.stop_search_if_hidden(t), t.set_ui_search_collapsed(!1, !1);
            },
            !0,
          );
        }),
        (e.prototype.stop_search_if_hidden = function (e) {
          e.get_ui_should_show() || this.stop_search(e);
        }),
        (e.prototype.stop_search = function (e) {
          e.set_ui_searching(!1),
            e.set_ui_search_result(null),
            this.update_visibility(e, !1),
            this.update_collapsed(e, !1),
            this.updateVisibleStateInParent(e);
        }),
        (e.prototype.select_content = function (e, t, i) {
          void 0 === t && (t = -1),
            void 0 === i && (i = -1),
            e.initialize_self(),
            e.set_ui_editing(!0),
            e.dom.select_content(t, i);
        }),
        (e.prototype.select_note = function (e, t, i) {
          void 0 === t && (t = -1),
            void 0 === i && (i = -1),
            e.initialize_self(),
            e.set_ui_editing_note(!0),
            e.dom.select_note(t, i);
        }),
        (e.prototype.updateVisibleStateInParent = function (e) {
          var t = e.ui_parent_node_state;
          if (t) {
            var i = e.ui_visible,
              n = e.get_ui_hidden_by_search(),
              o = e.get_ui_hidden_by_checked_parent_chain();
            i || (n && !o)
              ? t.addSearchVisibleChild(e)
              : t.removeSearchVisibleChild(e);
          }
        }),
        (e.prototype.update_listeners = function (i) {
          var n = this,
            e = i.node,
            t = [],
            o = [],
            s = [],
            r = function (e) {
              e instanceof an && t.push(e),
                e instanceof fn && o.push(e),
                e instanceof un && s.push(e);
            };
          if (
            (e.get_content_parse_tree().traverse(r),
            e.get_note_parse_tree().traverse(r),
            null !== i.ui_reverse_listeners &&
              (i.ui_reverse_listeners.unhook_events(),
              i.ui_reverse_listeners.clear()),
            0 < t.length)
          ) {
            null === i.ui_reverse_listeners &&
              (i.ui_reverse_listeners = new Co());
            var a = i.ui_reverse_listeners,
              _ = this._get_node_change_events();
            Array.each(t, function (e) {
              var t = n._get_link_title_update_event_name_from_url(e.url);
              a.register(_, t, function () {
                n.update_formatted_content(i), n.update_formatted_note(i);
              });
            }),
              i.ui_reverse_listeners.hook_events();
          } else i.ui_reverse_listeners = null;
          (i.ui_has_datetime = 0 < o.length), (i.ui_has_images = 0 < s.length);
        }),
        (e.prototype._get_node_change_events = function () {
          return this.app.userspace.controller.node_change_events;
        }),
        (e.prototype._get_link_title_update_event_name_from_url = function (e) {
          var t = Ls.parse_dynalist_url(e),
            i = t.document_server_id,
            n = t.zoom_node_id;
          if (!i) return !1;
          var o = i;
          return n && (o += "/" + n), o;
        }),
        (e.prototype.update_parse_tree_link_title = function (e) {
          var o = this;
          e.traverse(function (e) {
            if (e instanceof an) {
              var t = e.url,
                i = o.userspace_view.get_node_title_by_url(t),
                n = "" !== e.text && e.text !== t;
              (n || i) && (e.is_displayed = !0),
                !n && i && (e.override_text = i.title),
                i && "node" === i.type && (e.has_zoom_node = !0);
            }
          });
        }),
        (e.prototype.show_note = function (e) {
          e.set_ui_editing_note(!0);
        }),
        (e.prototype.update_edited_ts = function (e) {
          if (!this.app.env.is("mobile") && !Vs) {
            var t = e.node.get_edited_ts();
            e.set_ui_edited_ts(t);
          }
        }),
        (e.prototype.update_created_ts = function (e) {
          if (!this.app.env.is("mobile") && !Vs) {
            var t = e.node.get_created_ts();
            e.set_ui_created_ts(t);
          }
        }),
        (e.prototype.update_bullet_link = function (e) {
          var t = this.document_ui.get_public_link(e.get_node());
          e.set_ui_link(t);
        }),
        e
      );
    })(To),
    wc = (function (i) {
      function e(e, t) {
        return i.call(this, "ViewStateManager", e, t) || this;
      }
      return (
        nt(e, i),
        (e.prototype._init_fields = function () {
          (this.document_ui = this.app_document.ui),
            (this.document_view = this.app_document.view),
            (this.selection_manager = this.document_ui.selection());
        }),
        (e.prototype.remember_view_state_for_node = function (e) {
          var t = this.get_current_view_state();
          this.document_view.set_last_view_state(e, t);
        }),
        (e.prototype.restore_view_state_for_node = function (e) {
          var t = this.document_view.get_last_view_state(e);
          this.apply_view_state(t);
        }),
        (e.prototype.apply_view_state = function (e) {
          var t = this;
          e &&
            (e.selection &&
              e.selection.has_nodes() &&
              this.selection_manager.apply(e.selection),
            e.scroll &&
              (this.document_ui.scrollbox.set_scroll(e.scroll),
              this.queue(function () {
                t.document_ui.scrollbox.set_scroll(e.scroll);
              }),
              Ea(function () {
                t.document_ui.scrollbox.set_scroll(e.scroll);
              })));
        }),
        (e.prototype.apply_saved_view_state = function () {
          this.apply_view_state(this.saved_view_state);
        }),
        (e.prototype.clear_saved_view_state = function () {
          this.saved_view_state = null;
        }),
        (e.prototype.save_view_state = function () {
          this.saved_view_state = this.get_current_view_state();
        }),
        (e.prototype.setSavedViewState = function (e) {
          this.saved_view_state = e;
        }),
        (e.prototype.get_current_view_state = function () {
          var e = this.selection_manager.get();
          return {
            scroll: this.document_ui.scrollbox.get_scroll(),
            selection: e,
            timestamp: Date.now(),
          };
        }),
        e
      );
    })(To),
    kc = "mobile-read-mode",
    Ec = (function (n) {
      function e(e, t) {
        var i = n.call(this, "DocumentUi", e, t) || this;
        return (
          (i.isMobileMultiselect = !1),
          (i.preference_events = i.submodule(new Co())),
          (i.document_events = i.submodule(new Eo())),
          (i.node_view = i.submodule(new bc(e, t))),
          (i.dom_events = i.submodule(new Pr(e, t))),
          (i.key_events = i.submodule(new ha(e, t))),
          (i.clipboard = i.submodule(new h_(e, t))),
          (i.drag_manager = i.submodule(new Kr(e, t))),
          (i.drag_to_select = i.submodule(new Vr(e, t))),
          (i.tag_suggestion_manager = i.submodule(new Y_(e, t))),
          (i.link_suggestion_manager = i.submodule(new D_(e, t))),
          (i.datepicker_popup_manager = i.submodule(new w_(e, t))),
          (i.search_tag_popup_manager = i.submodule(new K_(e, t))),
          (i.mindmap_ui = i.submodule(new sc(e, t))),
          (i.node_mover = i.submodule(new B_(e, t))),
          (i.templateFinder = i.submodule(new Q_(e, t))),
          (i.flat_search = i.submodule(new $a(e, t))),
          (i.file_uploader = i.submodule(new $o(e, t))),
          (i.mobile_popup_menu_manager = i.submodule(new S_(e, t))),
          (i.node_swipe_manager = i.submodule(new U_(e, t))),
          (i.selection_manager = i.submodule(new j_(e, t))),
          (i.node_toolbar = i.submodule(new dc(e, t))),
          (i.view_state_manager = i.submodule(new wc(e, t))),
          (i.wordCounter = i.submodule(new tc(e, t))),
          (i.backlinkResult = i.submodule(new Ga(e, t, i.search))),
          (i.request_show_current_node_highlight = i.debounce(
            i.show_current_node_highlight,
            1,
          )),
          i
        );
      }
      return (
        nt(e, n),
        (e.prototype._init_dependencies = function () {
          (this.render_options = new yc()),
            (this.userspace_ui = this.app.userspace.ui),
            (this.userspace_view = this.app.userspace.view),
            (this.view = this.app_document.view),
            (this.controller = this.app_document.controller),
            (this.container = this.userspace_ui.get_document_container()),
            (this.keymap = this.app.keymap),
            (this.preferences = this.userspace_view.get_preferences()),
            (this.document = this.app_document.get_document()),
            (this.node_collection = this.document.get_node_collection()),
            (this.search = new vs());
        }),
        (e.prototype._init_fields = function () {
          (this.mainContainerEl = fish(".main-container")),
            (this.statusBarEl = fish(".status-bar")),
            (this.wordCountMobileHeaderEl = fish(
              ".MobileHeader-moreOption--wordCount",
            )),
            (this.document_el = fish(".Document")),
            (this.breadcrumb = fish(".DocumentBreadcrumb")),
            (this.node_context_menu = yr(".NodeMenu")),
            (this.current_node_highlight = yr(".CurrentLineHighlight")),
            (this.search_icon = yr(".DocumentSearch-icon")),
            (this.bookmark_search_icon = yr(".DocumentTools-bookmarkSearch")),
            (this.node_bookmark_icon_el = fish(".node-icon.mod-bookmark")),
            (this.searchbar = fish(".DocumentSearch")),
            (this.search_tip_el = yr(".search-tip")),
            (this.mobile_searchbar = fish(".MobileHeader-searchbar")),
            (this.clear_search = fishAll(
              ".DocumentSearch-clear, .MobileHeader-option--clearSearch",
            )),
            (this.$document_container_el = yr(".DocumentContainer")),
            (this.document_container_el = this.$document_container_el.get(0)),
            (this.mobile_undo_el = fish(".MobileHeader-option--undo")),
            (this.mobile_option_container_el = fish(
              ".MobileHeader-optionContainer",
            )),
            (this.mobile_redo_el = fish(".MobileHeader-option--redo")),
            (this.mobile_toggle_read_mode_el = fish(
              ".MobileHeader-option--toggleReadMode",
            )),
            (this.mobileToggleMultiselectEl = fish(
              ".MobileHeader-option--selectMultiple",
            )),
            (this.go_to_global_search = fish(
              ".MobileHeader-option--globalSearch",
            )),
            (this.go_to_document_search = fish(
              ".MobileHeader-option--documentSearch",
            )),
            (this.doc_checked_visibility_choices_el = fishAll(
              ".view-filter-option-choice.js-update-doc-checked",
            )),
            (this.doc_checked_visibility_global_el = fish(
              ".view-filter-option-choice.mod-global-checked",
            )),
            (this.doc_checked_visibility_show_el = fish(
              ".view-filter-option-choice.mod-show-checked",
            )),
            (this.doc_checked_visibility_hide_el = fish(
              ".view-filter-option-choice.mod-hide-checked",
            )),
            (this.doc_notes_visibility_choices_el = fishAll(
              ".view-filter-option-choice.js-update-doc-notes",
            )),
            (this.doc_notes_visibility_global_el = fish(
              ".view-filter-option-choice.mod-global-notes",
            )),
            (this.doc_notes_visibility_show_el = fish(
              ".view-filter-option-choice.mod-show-notes",
            )),
            (this.doc_notes_visibility_teaser_el = fish(
              ".view-filter-option-choice.mod-teaser-notes",
            )),
            (this.doc_notes_visibility_hide_el = fish(
              ".view-filter-option-choice.mod-hide-notes",
            )),
            (this.docTextDirectionChoicesEl = fishAll(
              ".view-filter-option-choice.js-update-doc-text-direction",
            )),
            (this.docTextDirectionGlobalEl = fish(
              ".view-filter-option-choice.mod-global-direction",
            )),
            (this.docTextDirectionLtrEl = fish(
              ".view-filter-option-choice.mod-ltr-direction",
            )),
            (this.docTextDirectionRtlEl = fish(
              ".view-filter-option-choice.mod-rtl-direction",
            )),
            (this.searchReplaceSearchTermEl = fish(
              ".search-replace-search-term",
            )),
            (this.searchReplaceReplaceTextEl = fish(
              ".search-replace-replace-text",
            )),
            (this.searchReplaceMatchCaseOptionEl = fish(
              ".search-place-case-sensitivity",
            )),
            (this.editing = !1),
            (this.context_menu_node = null),
            (this.searchReplaceNodes = []),
            (this.blur_searchbar_timeout = null),
            (this.second_level_menu_hover_timeout = null),
            (this.second_level_menu_disappear_timeout = null),
            (this.selection_before_blur = null),
            (this.is_in_read_mode = !1),
            (this.deferred_search_timer_ref = null),
            (this.initialized = !1),
            (this.ready = !1),
            (this.mobile_cached_selection = null),
            (this.document_search_scope = new Cc(this)),
            (this.scrollbox = new E_(this.document_container_el));
        }),
        (e.prototype._init_after = function () {
          this.register_document_events(), this.register_preference_events();
        }),
        (e.prototype._load = function () {
          this.update_pref_spellcheck(),
            this.update_pref_time_format(),
            this.update_pref_custom_date_format(),
            this.update_pref_custom_date_format_without_time(),
            this.update_pref_display_images_inline(),
            this.updatePrefWordCount(),
            this.updatePrefBacklinks(),
            this.updateReadOnlyStatus();
          var e = bool(this.app.env.get_env_data(kc, !1));
          this.update_mobile_read_mode_enabled(e),
            this.update_per_document_settings();
        }),
        (e.prototype._post_load = function () {
          this.available_changed();
        }),
        (e.prototype._pre_unload = function () {
          this.exit_document_search(),
            this.searchbar.blur(),
            this.breadcrumb.empty(),
            this.stop_deferred_searching(),
            this.hide_current_node_highlight();
        }),
        (e.prototype._unload = function () {
          this.reset_menu_icons(),
            (this.initialized = !1),
            (this.ready = !1),
            clearTimeout(this.blur_searchbar_timeout);
        }),
        Object.defineProperty(e.prototype, "current_root", {
          get: function () {
            var e = this.current_root_node_state;
            return e ? e.get_node() : null;
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(e.prototype, "current_root_node_state", {
          get: function () {
            return this.node_view.get_current_root_node_state();
          },
          enumerable: !0,
          configurable: !0,
        }),
        (e.prototype.get_context_menu_node = function () {
          return this.context_menu_node;
        }),
        (e.prototype.get_document_container_el = function () {
          return this.$document_container_el;
        }),
        (e.prototype.register_document_events = function () {
          var e = this.document_events.make_context_on_off(
            this.node_collection,
          );
          this.document_events.register_with_context_array(e, [
            ["available_change", this.available_changed, this],
            ["net_load_fail", this.net_load_failed, this],
            ["net_sync_before", this.net_sync_before, this],
            ["net_sync_after", this.net_sync_after, this],
            ["history_change", this.history_change, this],
            [
              "document_permission_change",
              this.document_permission_changed,
              this,
            ],
          ]);
        }),
        (e.prototype.register_preference_events = function () {
          var n = this.preference_events,
            o = this.preferences,
            e = function (e, t, i) {
              n.register(o, e, t, i);
            };
          e(Ps.SPELLCHECK, this.update_pref_spellcheck, this),
            e(Ps.SHOW_CHECKED, this.update_pref_show_checked, this),
            e(Ps.NOTE_DISPLAY, this.update_pref_note_display, this),
            e(Ps.TIME_FORMAT, this.update_pref_time_format, this),
            e(
              Ps.CUSTOM_DATE_DISPLAY_FORMAT,
              this.update_pref_custom_date_format,
              this,
            ),
            e(
              Ps.CUSTOM_DATE_DISPLAY_FORMAT_NO_TIME,
              this.update_pref_custom_date_format_without_time,
              this,
            ),
            e(
              Ps.DISPLAY_IMAGES_INLINE,
              this.update_pref_display_images_inline,
              this,
            ),
            e(Ps.FIRST_DAY_OF_WEEK, this.update_pref_first_day_of_week, this),
            e(Ps.SHOW_SEARCH_TIPs, this.update_pref_show_search_tips, this),
            e(Ps.WORD_COUNT, this.updatePrefWordCount, this),
            e(Ps.SHOW_BACKLINKS, this.updatePrefBacklinks, this);
        }),
        (e.prototype.update_pref_spellcheck = function () {
          var e = this.preferences.get_boolean(Ps.SPELLCHECK),
            t = this.selection().get();
          this.render_options.set_spellcheck(e), this.selection().apply(t);
        }),
        (e.prototype.update_pref_show_checked = function () {
          this.update_show_checked(!0);
        }),
        (e.prototype.update_show_checked = function (e) {
          var t = this.preferences.get_boolean(Ps.SHOW_CHECKED),
            i = this.document
              .get_user_data_object()
              .get_checked_items_visibility(),
            n = null;
          (n = i ? "show" === i : t) || (n = this.search.force_show_completed),
            this.render_options.set_hide_checked(!n, e);
        }),
        (e.prototype.update_pref_note_display = function () {
          var e = this.document.get_user_data_object().get_notes_visibility(),
            t = this.preferences.get(Ps.NOTE_DISPLAY),
            i = null;
          (i = e || t), this.render_options.set_note_display(i);
        }),
        (e.prototype.shouldShowRtl = function () {
          var e = this.document.get_user_data_object().getTextDirection(),
            t = this.preferences.get_boolean(Ps.RIGHT_TO_LEFT);
          return e ? "rtl" === e : t;
        }),
        (e.prototype.updatePrefTextDirectionDisplay = function () {
          var e;
          this.shouldShowRtl()
            ? ((e = this.document_el.querySelector(".u-use-pref-font")) &&
                e.setAttribute("dir", "rtl"),
              this.breadcrumb.setAttribute("dir", "rtl"))
            : ((e = this.document_el.querySelector(".u-use-pref-font")) &&
                e.setAttribute("dir", "ltr"),
              this.breadcrumb.setAttribute("dir", "ltr"));
        }),
        (e.prototype.update_pref_time_format = function () {
          var e = this.preferences.get(Ps.TIME_FORMAT);
          this.render_options.set_use_24_hours(e === Fs.TIME_FORMAT.FORMAT_24H);
        }),
        (e.prototype.update_pref_custom_date_format = function () {
          var e = this.preferences.get(Ps.CUSTOM_DATE_DISPLAY_FORMAT);
          this.userspace_view.get_is_pro() || (e = ""),
            this.render_options.set_date_format(e);
        }),
        (e.prototype.update_pref_custom_date_format_without_time = function () {
          var e = this.preferences.get(Ps.CUSTOM_DATE_DISPLAY_FORMAT_NO_TIME);
          this.userspace_view.get_is_pro() || (e = ""),
            this.render_options.set_date_format_no_time(e);
        }),
        (e.prototype.update_pref_display_images_inline = function () {
          var e = this.preferences.get_boolean(Ps.DISPLAY_IMAGES_INLINE);
          this.render_options.set_inline_images(e);
        }),
        (e.prototype.update_pref_first_day_of_week = function () {
          this.datepicker_popup_manager.reSetupDatepicker();
        }),
        (e.prototype.update_pref_show_search_tips = function () {
          this.search_tip_el.hide();
        }),
        (e.prototype.updatePrefWordCount = function () {
          var e = this.preferences.get_boolean(Ps.WORD_COUNT);
          this.wordCounter.updateIsCounting(e),
            this.statusBarEl.uToggle(e),
            this.wordCountMobileHeaderEl.uToggle(e),
            e && this.wordCounter.initialize();
        }),
        (e.prototype.updatePrefBacklinks = function () {
          var e = this.preferences.get_boolean(Ps.SHOW_BACKLINKS);
          this.node_view.get_render_options().setShowBacklinks(e),
            e
              ? this.userspace_view.linkIndex.enable()
              : this.userspace_view.linkIndex.disable(),
            this.backlinkResult.update();
        }),
        (e.prototype.get_node_state = function (e) {
          return this.node_view.get_node_state(e);
        }),
        (e.prototype.get_userspace_ui = function () {
          return this.userspace_ui;
        }),
        (e.prototype.get_node_collection = function () {
          return this.node_collection;
        }),
        (e.prototype.recurse_children = function (e, t, i) {
          return (
            void 0 === i && (i = !1),
            e instanceof Array || (e = [e]),
            i
              ? this._recurse_children_async_chunked(e, t, 50, 50)
              : (this.view.recurse_children(e, t), null)
          );
        }),
        (e.prototype._recurse_children_async_chunked = function (e, n, o, s) {
          var r = this,
            a = [];
          Array.eachReverse(e, function (e) {
            a.push(e);
          });
          var _ = {},
            c = function () {
              for (var e = performance.now() + o, t = 0; 0 < a.length; ) {
                var i = a.pop();
                if (
                  (n.call(r, i) ||
                    i.get_children().each(
                      function (e) {
                        a.push(e);
                      },
                      r,
                      !0,
                    ),
                  ++t % 20 == 0 && performance.now() > e)
                )
                  return void (_.ref = setTimeout(c, s));
              }
              delete _.ref;
            };
          return (_.ref = setTimeout(c, s)), _;
        }),
        (e.prototype.set_current_root = function (e, t) {
          this.node_view.set_current_root(e, t),
            this.userspace_ui.update_bookmark_status(),
            this.backlinkResult.update();
        }),
        (e.prototype.get_searchbar_el = function () {
          return $(this.searchbar);
        }),
        (e.prototype.get_current_searchbar = function () {
          return this.userspace_ui.is_mobile_view()
            ? this.mobile_searchbar
            : this.searchbar;
        }),
        (e.prototype.getSearchTerm = function () {
          return this.get_current_searchbar().value || "";
        }),
        (e.prototype.get_editing = function () {
          return this.editing;
        }),
        (e.prototype.run_edit = function (e) {
          try {
            (this.editing = !0), e();
          } finally {
            this.editing = !1;
          }
        }),
        (e.prototype.is_searching = function () {
          return this.search.is_searching();
        }),
        (e.prototype.set_selection = function (e, t, i) {
          if (this.get_is_in_read_mode())
            this.selection_manager.set_no_select();
          else {
            var n = this.get_node_state(e);
            this.node_view.select_content(n, t, i);
            var o = n.dom.content_el;
            this.scrollbox.scrollSelectionRangeIntoView(o) ||
              this.scrollbox.scroll_el_into_view(o),
              this.isMobileMultiselect && this.toggleMobileMultiselect();
          }
        }),
        (e.prototype.set_note_selection = function (e, t, i) {
          if (this.get_is_in_read_mode())
            this.selection_manager.set_no_select();
          else {
            var n = this.get_node_state(e);
            this.node_view.select_note(n, t, i);
            var o = n.dom.note_el;
            this.scrollbox.scrollSelectionRangeIntoView(o) ||
              this.scrollbox.scroll_el_into_view(o),
              this.isMobileMultiselect && this.toggleMobileMultiselect();
          }
        }),
        (e.prototype.select_node = function (e) {
          this.get_node_state(e).set_ui_selected(!0);
        }),
        (e.prototype.deselect_node = function (e) {
          this.get_node_state(e).set_ui_selected(!1);
        }),
        (e.prototype.get_dom_selection = function () {
          var e = window.getSelection().anchorNode;
          if (!e) return qo;
          var t = $(e);
          t.hasClass("Node-content") ||
            t.hasClass("Node-note") ||
            (t = $(e).parents(".Node-content, .Node-note"));
          var i = t.hasClass("Node-content"),
            n = t.hasClass("Node-note"),
            o = this.get_node_from_el(e),
            s = Ar(t.get(0));
          return o && s
            ? i
              ? zo.select_content_range(o, s.start, s.end)
              : n
              ? zo.select_note_range(o, s.start, s.end)
              : qo
            : qo;
        }),
        (e.prototype.selection = function () {
          return this.selection_manager;
        }),
        (e.prototype.clear_selection = function () {
          this.selection().set_no_select();
        }),
        (e.prototype.get_node_from_el = function (e) {
          var t = Ra.get_node_id_from_node_inner_el(e);
          return t ? this.node_collection.find_node(t) : null;
        }),
        (e.prototype.blur_cursor = function () {
          var e = this.selection().get();
          if (e instanceof Bo) {
            var t = e.get_node(),
              i = this.get_node_state(t);
            i.set_ui_editing(!1), i.set_ui_editing_note(!1);
          }
          this.hide_current_node_highlight();
        }),
        (e.prototype.switch_to_ready_only = function () {}),
        (e.prototype.apply_focus_node = function (e) {
          var t = this;
          wt(function () {
            t.selection().apply(zo.select_multi_node(e));
          });
        }),
        (e.prototype.toggle_spellcheck = function () {
          this.preferences.toggle_boolean(Ps.SPELLCHECK);
        }),
        (e.prototype.update_breadcrumb = function () {
          for (var o = this, e = [], t = this.current_root; t.has_parent(); )
            e.push(t.get_parent()), (t = t.get_parent());
          var s = this.breadcrumb;
          0 < e.length
            ? (e.reverse(),
              s.empty(),
              Array.each(e, function (t) {
                var i = t.get_meta_object().get_content(),
                  n = {
                    document_server_id: o.document.get_server_id(),
                    zoom_node_id: t.get_id(),
                    search_query: "",
                  },
                  e = o.userspace_view
                    .get_url_manager()
                    .create_url_from_state(n);
                s.createEl(
                  "a",
                  {
                    cls: "DocumentBreadcrumb-item",
                    text: "　",
                    attr: { href: e },
                  },
                  function (e) {
                    e.addEventListener("click", function (e) {
                      e.ctrlKey ||
                        e.metaKey ||
                        (o.userspace_view.get_url_manager().apply_state(n),
                        e.preventDefault());
                    }),
                      i &&
                        o.node_view.formatter.render_parse_tree(
                          t.get_content_parse_tree(),
                          e,
                          null,
                        );
                  },
                ),
                  s.createEl("span", {
                    cls: "DocumentBreadcrumb-delimiter",
                    text: " > ",
                  });
              }),
              (s.style.visibility = "visible"))
            : (s.setText(" "), (s.style.visibility = "hidden"));
        }),
        (e.prototype.show_node_menu = function (e, t, i, n) {
          var r = this,
            o = function (e) {
              yr(".NodeMenu .MenuGroup--" + e).hide();
            },
            s = function (e) {
              yr(".NodeMenu .MenuItem--" + e).hide();
            },
            a = function (e) {
              var t = e.split(" ");
              Array.each(t, function (e) {
                s(e);
              });
            },
            _ = this.node_context_menu,
            c = this.get_node_state(e),
            l = t instanceof Go,
            u = [];
          this.userspace_ui.hide_context_menu(),
            (this.context_menu_node = e),
            (u =
              t instanceof Go && t.is_node_inside(e)
                ? t.get_nodes()
                : (e.is_root() || (t = zo.select_multi_node(e)), [e])),
            this.selection().apply(t),
            yr(".NodeMenu .MenuGroup, .NodeMenu .MenuItem").show();
          var h = e.has_children(),
            p = e.get_children().some(function (e) {
              return e.has_children();
            }),
            d = e.get_children().some(function (e) {
              return !e.is_collapsed() && e.has_children();
            });
          if (e.is_root())
            yr(".NodeMenu .MenuGroup").hide(),
              yr(
                ".NodeMenu .MenuGroup--checkbox, .NodeMenu .MenuGroup--export, .NodeMenu .MenuGroup--edit",
              ).show(),
              a(
                "check uncheck collapse collapseAll collapseSiblings expand expandAll zoomIn deleteNode showCheckbox hideCheckbox",
              ),
              h &&
                p &&
                (d
                  ? (yr(".MenuItem--collapseAll").show(),
                    yr(".MenuItem--collapseSiblings").show())
                  : (yr(".MenuItem--expandAll").show(),
                    yr(".MenuItem--expandSiblings").show()));
          else if (c.is_current_root())
            o("indent"),
              h
                ? (d
                    ? yr(
                        ".NodeMenu .MenuGroup--edit > .MenuItem:not(.MenuItem--collapseAll)",
                      ).hide()
                    : yr(
                        ".NodeMenu .MenuGroup--edit > .MenuItem:not(.MenuItem--expandAll)",
                      ).hide(),
                  yr(
                    ".MenuItem--deleteCheckedNodes, .MenuItem--addNote, .MenuItem--sortChildren, .MenuItem--searchReplace",
                  ).show())
                : o("edit");
          else if (
            (l && 1 < u.length && a("zoomIn addNote bookmarkNode getLink"),
            l
              ? u.some(function (e) {
                  return e.has_children();
                })
                ? u.some(function (e) {
                    return !e.is_collapsed();
                  })
                  ? a("expand expandAll expandSiblings")
                  : a("collapse collapseAll collapseSiblings")
                : a(
                    "collapse collapseAll collapseSiblings expand expandAll expandSiblings addCheckboxToChildren removeCheckboxFromChildren",
                  )
              : h
              ? e.is_collapsed()
                ? a("collapse collapseAll collapseSiblings")
                : a("expand expandAll expandSiblings")
              : a(
                  "collapse collapseAll collapseSiblings expand expandAll expandSiblings addCheckboxToChildren removeCheckboxFromChildren",
                ),
            !this.controller.is_read_only() && e.get_parent())
          ) {
            var f = this.get_node_state(e.get_parent());
            f.is_current_root() && s("unindent"),
              f.visibleFirstChild() === e && s("indent");
          }
          if (
            (s("shareRootNode"),
            this.controller.is_read_only()
              ? (o("indent"),
                o("checkbox"),
                o("heading"),
                o("colorLabels"),
                a("deleteNode deleteCheckedNodes addNote bookmarkNode"))
              : (u.some(function (e) {
                  return !e.get_meta_object().has_checkbox();
                })
                  ? s("hideCheckbox")
                  : s("showCheckbox"),
                !(function (e) {
                  for (var t = !0, i = [], n = 0, o = e; n < o.length; n++) {
                    var s = o[n];
                    i = i.concat(s.get_children().array());
                  }
                  return (
                    r.recurse_children(i, function (e) {
                      if (!e.get_meta_object().has_checkbox()) return !(t = !1);
                    }),
                    t
                  );
                })(u)
                  ? s("removeCheckboxFromChildren")
                  : s("addCheckboxToChildren"),
                l
                  ? u.some(function (e) {
                      return !e.get_meta_object().is_numbered_list();
                    })
                    ? s("unmakeNumberedList")
                    : s("makeNumberedList")
                  : e.get_meta_object().is_numbered_list()
                  ? s("makeNumberedList")
                  : s("unmakeNumberedList"),
                e.is_root() &&
                  this.document.should_show_sharing_options() &&
                  yr(".MenuItem--shareRootNode").show(),
                e.get_meta_object().get_note() && s("addNote")),
            !e.is_root())
          ) {
            if (
              (l
                ? u.some(function (e) {
                    return !e.get_meta_object().is_checked();
                  })
                  ? s("uncheck")
                  : s("check")
                : e.get_meta_object().is_checked()
                ? s("check")
                : s("uncheck"),
              yr(".NodeMenu .set-heading-level").removeClass("current"),
              e.get_meta_object().is_heading())
            ) {
              var g = e.get_meta_object().get_heading();
              l
                ? u.every(function (e) {
                    return e.get_meta_object().get_heading() === g;
                  }) && yr(".NodeMenu .set-heading-" + g).addClass("current")
                : yr(".NodeMenu .set-heading-" + g).addClass("current");
            }
            if (
              (yr(".NodeMenu .set-color-label").removeClass("current"),
              e.get_meta_object().has_color_label())
            ) {
              var m = e.get_meta_object().get_color_label();
              l
                ? u.every(function (e) {
                    return e.get_meta_object().get_color_label() === m;
                  }) &&
                  yr(".NodeMenu .set-color-label-" + m).addClass("current")
                : yr(".NodeMenu .set-color-label-" + m).addClass("current");
            }
          }
          _.addClass("is-beingMeasured");
          var v = (function e(t, i, n, o, s) {
            var r = i;
            return (
              Er(r + o) ||
                (r = 0 < i - o - 10 ? i - o - 10 : window.innerHeight - o - 10),
              { top: r, left: Math.max(t - s - n, 10) }
            );
          })(n, i, _.width(), _.height(), 15);
          _.removeClass("is-beingMeasured"), _.show(), _.css(v);
        }),
        (e.prototype.show_second_level_node_menu = function (e) {
          var t = e.getAttribute("data-second-menu-name"),
            i = e.getBoundingClientRect().top,
            n = e.getBoundingClientRect().bottom,
            o = e.getBoundingClientRect().left,
            s = e.getBoundingClientRect().right;
          if (t) {
            var r = yr(
              '.ContextMenu.mod-second-level-menu[data-name="' + t + '"]',
            );
            if (r) {
              r.addClass("is-beingMeasured");
              var a = Cr(o, s, i, n, r.width(), r.height());
              r.removeClass("is-beingMeasured"), r.show(), r.css(a);
            }
          }
        }),
        (e.prototype.hide_second_level_node_menu = function () {
          var e = yr(".ContextMenu.mod-second-level-menu");
          e && e.hide();
        }),
        (e.prototype.hide_node_menu = function () {
          (this.context_menu_node = null),
            this.node_context_menu.hide(),
            yr(".view-filter").hide();
        }),
        (e.prototype.show_current_node_highlight = function () {
          if (this.should_show_node_highlight()) {
            var e = this.selection_manager.get();
            if (e instanceof Bo) {
              var t = e.get_node(),
                i = this.get_node_state(t);
              if (this.current_root !== t) {
                var n = i.dom.self_el,
                  o = Math.floor(
                    n.getBoundingClientRect().top -
                      this.document_el.getBoundingClientRect().top,
                  );
                "MacOS" == Ys && (o -= 2),
                  this.current_node_highlight
                    .show()
                    .css({ top: o })
                    .width(this.document_el.clientWidth)
                    .height(n.offsetHeight);
              }
            }
          }
        }),
        (e.prototype.start_loading_document = function () {
          (this.spinner_active = !0),
            this.$document_container_el
              .removeClass("loading-failed")
              .addClass("loading"),
            this.userspace_ui.document_loading_tips.show_tip();
        }),
        (e.prototype.end_load_document = function () {
          var e = this;
          (this.spinner_active = !1),
            this.$document_container_el.removeClass("loading loading-failed"),
            this.userspace_ui.document_loading_tips.hide_tip();
          var t = this.userspace_view.get_url_manager(),
            i = function () {
              t.parse_url_and_apply_state(window.location.href, {
                replace: !0,
                animate: !1,
              }),
                e.queue(function () {
                  (e.ready = !0),
                    e.node_view.update_node_rendering(),
                    e.after_navigate();
                });
            };
          t.get_is_working() ? this.queue(i) : i();
        }),
        (e.prototype.net_load_failed = function () {
          (this.spinner_active = !1),
            yr(".DocumentView")
              .removeClass("loading")
              .addClass("loading-failed");
        }),
        (e.prototype.get_selection_for_first_item_in_document = function () {
          if (this.get_userspace_ui().is_mobile_view()) return null;
          if (!this.preferences.get_boolean(Ps.AUTO_FOCUS_FIRST_ITEM))
            return null;
          if (this.app.scope.is_current_scope(Mr.FILE_RENAME)) return null;
          var e = this.node_view.get_current_root_node_state();
          if (!e) return null;
          var t = e.visibleFirstChild();
          return (
            t || (t = e.get_node()),
            t && !t.is_root() ? zo.select_content(t, -1) : null
          );
        }),
        (e.prototype.available_changed = function () {
          var e = this;
          this.initialized ||
            (this.controller.document_remote_loaded
              ? ((this.initialized = !0),
                this.spinner_active
                  ? this.end_load_document()
                  : (this.start_loading_document(),
                    this.set_timeout(function () {
                      e.end_load_document();
                    }, 100)))
              : this.start_loading_document());
        }),
        (e.prototype.get_public_link = function (e, t, i) {
          return (
            e === this.node_collection.get_root() && (e = null),
            this.userspace_view
              .get_url_manager()
              .create_absolute_url_from_state({
                document_server_id: this.document.get_server_id(),
                zoom_node_id: e ? e.get_id() : null,
                focus_node_id: t ? t.get_id() : null,
                search_query: i,
              })
          );
        }),
        (e.prototype.open_copy_link_popup = function (e) {
          this.userspace_ui.open_modal("node-get-link");
          var t = this.get_public_link(e),
            i = yr("#node-get-link-textbox"),
            n = i.get(0);
          i.val(t).focus(), n.setSelectionRange(0, n.value.length);
          var o = fish("#node-get-link-info"),
            s = !1;
          try {
            s = document.execCommand("copy");
          } catch (e) {}
          s
            ? (o.setText("Link copied to your clipboard!"),
              o.addClass("is-success"))
            : (o.setText("Press Ctrl+C to copy the link."),
              o.removeClass("is-success"));
        }),
        (e.prototype.showNodeReferences = function (e) {
          var t = this.get_public_link(e);
          this.start_global_search(t);
        }),
        (e.prototype.copy_node_link = function (e) {
          Bt(this.get_public_link(e)) ||
            this.userspace_ui.popup_message_manager.display_error_popup(
              'Dynalist cannot copy the link because your browser does not support it. Please manually copy the link with the menu option "Get link".',
            );
        }),
        (e.prototype.close_triggered_popups = function () {
          this.tag_suggestion_manager.close(),
            this.link_suggestion_manager.close(),
            this.datepicker_popup_manager.close(),
            this.search_tag_popup_manager.close(),
            this.node_mover.close(),
            this.templateFinder.close();
        }),
        (e.prototype.is_triggered_popup_open = function () {
          return (
            this.tag_suggestion_manager.is_open() ||
            this.link_suggestion_manager.is_open() ||
            this.datepicker_popup_manager.is_open()
          );
        }),
        (e.prototype.deselect_multiselect = function () {
          var e = this.selection();
          e.get() instanceof Go && e.set_no_select();
        }),
        (e.prototype.net_sync_before = function () {
          this.last_net_selection = this.selection().get();
        }),
        (e.prototype.net_sync_after = function () {
          this.last_net_selection &&
            (this.selection().apply(this.last_net_selection),
            (this.last_net_selection = null));
        }),
        (e.prototype.history_change = function (e, t) {
          this.mobile_undo_el.toggleClass("is-disabled", !e),
            this.mobile_option_container_el.toggleClass("is-redo-available", t),
            this.mobile_redo_el.uToggle(t);
        }),
        (e.prototype.document_permission_changed = function () {
          this.controller.is_read_only() && this.switch_to_ready_only();
        }),
        (e.prototype.hide_current_node_highlight = function () {
          this.should_show_node_highlight() &&
            this.current_node_highlight.hide();
        }),
        (e.prototype.should_show_node_highlight = function () {
          return this.preferences.get_boolean(Ps.CURRENT_NODE_HIGHLIGHT);
        }),
        (e.prototype.show_document_searchbar = function () {
          this.view_state_manager.save_view_state(),
            this.userspace_ui.is_mobile_view()
              ? this.userspace_ui.enter_document_search_on_mobile()
              : (yr(".DocumentTools").addClass("is-searching"),
                this.searchbar.focus());
        }),
        (e.prototype.update_search_tip_visibility = function () {
          this.app.scope.is_current_scope(Mr.DOCUMENT_SEARCH) &&
          this.preferences.get_boolean(Ps.SHOW_SEARCH_TIPs)
            ? this.search_tip_el.show()
            : this.search_tip_el.hide();
        }),
        (e.prototype.push_scope_document_search = function () {
          this.app.scope.push_scope(this.document_search_scope);
        }),
        (e.prototype.pop_scope_document_search = function () {
          this.app.scope.pop_scope(this.document_search_scope);
        }),
        (e.prototype.exit_document_search = function () {
          var e = this,
            t = this.selection().get(),
            i = this.get_relative_scroll(t);
          this.userspace_view.get_url_manager().set_search_query(null),
            this.clear_search.forEach(function (e) {
              return e.uHide();
            }),
            this.userspace_ui.is_searching_globally_on_mobile()
              ? this.go_to_document_search.uShow()
              : this.go_to_global_search.uShow(),
            this.search_icon.show(),
            this.bookmark_search_icon.hide(),
            this.search_tip_el.hide(),
            (this.searchbar.value = ""),
            (this.mobile_searchbar.value = ""),
            yr(".DocumentTools").removeClass("is-searching"),
            t.has_nodes()
              ? (this.selection().apply(t),
                this.queue(function () {
                  return e.restore_relative_scroll(i);
                }))
              : this.view_state_manager.apply_saved_view_state();
        }),
        (e.prototype.start_search = function (i) {
          var n = this;
          this.stop_deferred_searching();
          var e = this.node_collection.get_root();
          this.node_collection.traverse_tree_dfs(e, function (e) {
            var t = n.get_node_state(e);
            n.node_view.before_start_search(t, i);
          }),
            (this.deferred_search_timer_ref = this.recurse_children(
              e,
              function (e) {
                var t = n.get_node_state(e);
                n.node_view.start_search(t, n.search);
              },
              !0,
            ));
        }),
        (e.prototype.stop_search = function () {
          var i = this;
          this.stop_deferred_searching(),
            this.node_collection.traverse_tree_dfs(
              this.node_collection.get_root(),
              function (e) {
                var t = i.get_node_state(e);
                i.node_view.stop_search(t);
              },
            );
        }),
        (e.prototype.get_render_options = function () {
          return this.render_options;
        }),
        (e.prototype.is_using_bullet_to_zoom = function () {
          return !!Vs || this.preferences.get_boolean(Ps.USE_BULLET_TO_ZOOM);
        }),
        (e.prototype.stop_deferred_searching = function () {
          this.deferred_search_timer_ref &&
            this.deferred_search_timer_ref.ref &&
            clearInterval(this.deferred_search_timer_ref.ref),
            (this.deferred_search_timer_ref = null);
        }),
        (e.prototype.search_in_document = function (e, t) {
          if ((void 0 === t && (t = !1), this.initialized)) {
            e || (e = "");
            var i = this.is_searching();
            if (this.search.parse(e, t)) {
              var n = this.get_current_searchbar();
              n.value !== e &&
                "" !== (n.value = e) &&
                this.userspace_ui.show_mobile_search_header(),
                this.update_show_checked(!1);
              var o = this.is_searching();
              this.node_view.set_searching(o),
                o
                  ? (yr(".DocumentTools").addClass("is-searching"),
                    this.clear_search.forEach(function (e) {
                      return e.uShow();
                    }),
                    this.userspace_ui.is_searching_globally_on_mobile()
                      ? this.go_to_document_search.uHide()
                      : this.go_to_global_search.uHide(),
                    this.search_icon.hide(),
                    this.bookmark_search_icon.show(),
                    this.start_search(!i))
                  : (Oi(n) || yr(".DocumentTools").removeClass("is-searching"),
                    this.clear_search.forEach(function (e) {
                      return e.uHide();
                    }),
                    this.userspace_ui.is_searching_globally_on_mobile()
                      ? this.go_to_document_search.uShow()
                      : this.go_to_global_search.uShow(),
                    this.search_icon.show(),
                    this.bookmark_search_icon.hide(),
                    this.stop_search()),
                this.userspace_ui.update_bookmark_status();
            }
          }
        }),
        (e.prototype.update_bookmark_status = function () {
          this.userspace_ui.update_bookmark_button_status_by_url_state(
            this.node_bookmark_icon_el,
            this.userspace_view.get_url_state(this.document, this.current_root),
            "this list",
          ),
            this.userspace_ui.update_bookmark_button_status_by_url_state(
              this.bookmark_search_icon.get(0),
              this.userspace_view.get_url_state(
                this.document,
                this.current_root,
                this.search.get_query(),
              ),
              "this search",
            );
        }),
        (e.prototype.insertCurrentTime = function (e) {
          var t = Date.now(),
            i = this.view.generate_date_markdown(t, t, e, null);
          this.insert_text(i);
        }),
        (e.prototype.insert_text = function (e) {
          var t = this.selection_manager.get();
          if (t instanceof Bo) {
            var i = t.get_node(),
              n = t.get_text();
            if (i) {
              var o = t.get_position_start(),
                s = t.get_position_end(),
                r = n.substring(0, o) + e + n.substring(s);
              t instanceof Uo
                ? this.view.edit_content(
                    i,
                    r,
                    zo.select_content(i, o + e.length),
                  )
                : t instanceof jo &&
                  this.view.edit_note(i, r, zo.select_note(i, o + e.length));
            }
          }
        }),
        (e.prototype.insert_new_line = function () {
          this.insert_text("\n");
        }),
        (e.prototype.paste_to_upload_files = function (e) {
          var t = this,
            i = this.selection_manager.get();
          if (i instanceof Bo) {
            var n = this.file_uploader.upload_files(e, "paste", i),
              o = n.filename,
              s = n.is_image;
            wt(function () {
              t.insert_uploaded_file_placeholder_text(o, s);
            });
          }
        }),
        (e.prototype.drop_to_upload_files = function (e) {
          1 === e.length
            ? this.file_uploader.upload_files(e, "drop")
            : yr(".modal-container.file-drop").addClass("has-tooManyFiles");
        }),
        (e.prototype.insert_uploaded_file_placeholder_text = function (e, t) {
          e || (e = t ? "Pasted image" : "Pasted file"),
            t
              ? this.insert_text(" ![" + e + "](" + he + ") ")
              : this.insert_text(" [" + e + "](" + he + ") ");
        }),
        (e.prototype.done_pasting_to_upload = function (e, t) {
          var i = d + "/u/" + e,
            n = this.selection().get(),
            o = !1;
          n instanceof Uo && t instanceof Uo && n.get_node() === t.get_node()
            ? (o = !0)
            : n instanceof jo &&
              t instanceof jo &&
              n.get_node() === t.get_node() &&
              (o = !0);
          var s = "",
            r = null;
          if (t instanceof Uo)
            (s = (a = (r = t.get_node())
              .get_meta_object()
              .clone()).get_content()),
              a.set_content(s.replace(he, i)),
              this.controller.edit_meta(r, a.write());
          else if (t instanceof jo) {
            var a;
            (s = (a = (r = t.get_node()).get_meta_object().clone()).get_note()),
              a.set_note(s.replace(he, i)),
              this.controller.edit_meta(r, a.write());
          }
          if (o && n instanceof Bo) {
            var _ = n.get_position_start(),
              c = n.get_position_end(),
              l = i.length - he.length,
              u = s.indexOf(he),
              h = n;
            -1 !== u &&
              u + he.length < _ &&
              (n instanceof Uo
                ? (h = zo.select_content_range(r, _ + l, c + l))
                : n instanceof jo &&
                  (h = zo.select_note_range(r, _ + l, c + l))),
              this.selection_manager.apply(h);
          }
        }),
        (e.prototype.done_dropping_to_upload = function (e, t, i) {
          this.userspace_ui.open_modal("file-drop-succeeded");
          var n = d + "/u/" + e,
            o = i ? "![" + t + "](" + n + ")" : "[" + t + "](" + n + ")",
            s = yr("#file-upload-markdown-textbox");
          s.val(o).focus(), s.get(0).setSelectionRange(0, o.length);
        }),
        (e.prototype.update_drop_to_upload_progress = function (e, t) {
          yr(".modal.file-drop").addClass("is-uploading");
          var i = Math.floor((100 * e) / t);
          yr(".FileUploadProgress").css("width", i + "%"),
            100 === i &&
              yr(".modal-container.file-drop")
                .removeClass("is-uploading")
                .addClass("is-processing");
        }),
        (e.prototype.upload_failed = function (e) {
          if (413 != e.status) {
            var t = e.responseText;
            "quota-exceeded" === t
              ? this.userspace_ui.display_error(pe)
              : this.userspace_ui.display_error({ title: "", message: t });
          } else this.userspace_ui.display_error(de);
        }),
        (e.prototype.show_note_for_node = function (e) {
          var t = this.get_node_state(e);
          this.node_view.show_note(t),
            this.selection().apply(zo.select_note(e, -1));
        }),
        (e.prototype.enable_copying_on_safari = function () {
          !Vs &&
            this.selection().get() instanceof Go &&
            this.clipboard.focus_on_hidden_input(!0);
        }),
        (e.prototype.on_document_blur = function () {
          var e = this;
          (this.selection_before_blur = this.selection().get()),
            (this.detected_window_blur = !1),
            wt(function () {
              e.detected_window_blur || (e.selection_before_blur = null);
            });
        }),
        (e.prototype.on_document_scrolled = function () {
          this.selection_before_blur = null;
        }),
        (e.prototype.on_window_blur = function () {
          this.detected_window_blur = !0;
        }),
        (e.prototype.on_window_focus = function () {
          if (
            this.app.scope.is_current_scope(Mr.EDITOR) &&
            this.selection_before_blur
          ) {
            var e = this.scrollbox.get_scroll();
            this.selection().apply(this.selection_before_blur),
              (this.selection_before_blur = null),
              this.scrollbox.set_scroll(e);
          }
        }),
        (e.prototype.should_allow_edit = function () {
          return !this.is_in_read_mode && !this.controller.is_read_only();
        }),
        (e.prototype.toggleReadMode = function () {
          this.update_mobile_read_mode_enabled(!this.is_in_read_mode);
        }),
        (e.prototype.switch_between_content_and_note = function () {
          var e = this.selection().get();
          if (e instanceof Uo) {
            var t = e.get_node();
            if (
              !e.is_caret_selection() &&
              "" === t.get_meta_object().get_note()
            ) {
              var i = e.get_position_start(),
                n = e.get_position_end(),
                o = t.get_meta_object().get_content(),
                s = o.substring(i, n),
                r = o.substring(0, i) + o.substring(n);
              this.view.edit_content_and_note(t, r, s);
            }
            this.show_note_for_node(t);
          } else
            e instanceof jo &&
              this.selection().set_cursor_to_end_of_node(e.get_node());
        }),
        (e.prototype.move_cursor_by_one_line = function (e) {
          var t = this.selection_manager,
            i = t.get();
          if (i instanceof Go) {
            var n = null,
              o = null;
            return (
              "up" === e
                ? ((n = i.get_first_node()),
                  (o = this.get_node_state(n).visiblePrev()))
                : "down" === e &&
                  ((n = i.get_last_node()),
                  (o = this.get_node_state(n).visibleNextNonChild())),
              o
                ? this.selection().set_cursor_to_start_of_node(o)
                : this.selection().set_cursor_to_start_of_node(n),
              !0
            );
          }
          if (i instanceof Uo) {
            var s = i.get_node();
            (y = this.get_node_state(s)).initialize_self();
            var r = y.dom.content_el,
              a = y.dom.$content_el,
              _ = Or(r),
              c = a.offset(),
              l = !1;
            if (
              ("up" === e
                ? (l = _.isFirst && !_.isLineEnding)
                : "down" === e && (l = _.isLast),
              l)
            ) {
              if ("up" === e && y.is_current_root()) return !0;
              o = null;
              if (
                ("up" === e
                  ? (o = y.visiblePrev())
                  : "down" === e && (o = y.visibleNext()),
                !o)
              )
                return !0;
              if (y.is_current_root() && o.get_parent() !== s) return !0;
              var u = this.get_node_state(o);
              u.initialize_self();
              var h = u.dom.$content_el,
                p = u.dom.content_el,
                d = i.get_position_start(),
                f = 0;
              if (d === i.get_position_end() && 0 === d) f = 0;
              else if (0 === (k = _.left)) f = 0;
              else {
                t.set_cursor_to_position_in_node(o, 0);
                var g = h.offset(),
                  m = c.left + k,
                  v = g.top;
                "up" === e ? (v += h.height() - 5) : "down" === e && (v += 5),
                  (f = Tr(p, m, v, !0));
              }
              return t.set_cursor_to_position_in_node(o, f), !0;
            }
          } else if (i instanceof jo) {
            var y;
            s = i.get_node();
            (y = this.get_node_state(s)).initialize_self();
            var b = Or(y.dom.note_el),
              w = null;
            l = !1;
            if (
              ("up" === e
                ? ((w = s), (l = b.isFirst && !b.isLineEnding))
                : "down" === e &&
                  (l = (w = this.get_node_state(s).visibleNext()) && b.isLast),
              w && l)
            ) {
              var k;
              a = y.dom.$content_el;
              if (0 === (k = b.left)) t.set_cursor_to_start_of_node(w);
              else {
                "down" === e &&
                  (w.get_parent() === s
                    ? (k -= 30)
                    : w.get_parent() !== s.get_parent() && (k += 30));
                var E = (function e(t, i) {
                  var n = document.body.createEl("div"),
                    o = n.createEl("span");
                  function s(e) {
                    return o.setText(r.slice(0, e)), o.offsetWidth;
                  }
                  $(n).css({
                    width: t.width(),
                    height: t.height(),
                    font: t.css("font"),
                    fontFamily: t.css("fontFamily"),
                    fontSize: t.css("fontSize"),
                    whiteSpace: "pre-wrap",
                    wordWrap: "break-word",
                    overflowY: "auto",
                    position: "fixed",
                    top: 0,
                    left: 0,
                    padding: 0,
                    zIndex: 666,
                  });
                  var r = t.text(),
                    a = 0,
                    _ = r.length,
                    c = 0;
                  if ((o.setText(r), o.offsetWidth <= i)) return n.detach(), _;
                  for (; 1 < _ - a; )
                    i < s((c = Math.round((a + _) / 2))) ? (_ = c) : (a = c);
                  var l = s(a),
                    u = s(_);
                  return n.detach(), Math.abs(l - i) <= Math.abs(u - i) ? a : _;
                })(a, k);
                this.selection().set_cursor_to_position_in_node(w, E);
              }
              return !0;
            }
          }
        }),
        (e.prototype.move_selection_up_if_under_node = function (e) {
          var t = this.selection().get();
          t instanceof Bo
            ? t.get_node().has_ancestor(e) &&
              this.selection().apply(zo.select_content(e, 0))
            : t instanceof Go &&
              t.get_first_node().has_ancestor(e) &&
              t.get_last_node().has_ancestor(e) &&
              this.selection().apply(zo.select_content(e, 0));
        }),
        (e.prototype.remove_node_inline_element = function (e) {
          var t = this.get_node_from_el(e);
          if (t) {
            var i,
              n = t.get_meta_object(),
              o = e._block || {},
              s = o.token.start || 0,
              r = o.token.end || 0,
              a = $(e).parents(".Node-renderedContent, .Node-renderedNote");
            if (a.hasClass("Node-renderedContent")) i = !1;
            else {
              if (!a.hasClass("Node-renderedNote")) return;
              i = !0;
            }
            var _ = i ? n.get_note() : n.get_content();
            _.length >= r && " " === _.charAt(r)
              ? r++
              : 0 < s && " " === _.charAt(s) && s--;
            var c = _.substring(0, s) + _.substring(r);
            i
              ? this.view.edit_note(t, c, zo.select_note(t, s))
              : this.view.edit_content(t, c, zo.select_content(t, s));
          }
        }),
        (e.prototype.display_menu_icons_for_node = function (e) {
          if (!this.drag_manager.is_dragging_node()) {
            var t = this.get_node_state(e),
              i = t.dom.hover_el;
            this.userspace_ui.show_node_icons_el(i, 0 !== t.ui_backlink_count);
          }
        }),
        (e.prototype.reset_menu_icons = function () {
          this.userspace_ui.show_node_icons_el(null, !1);
        }),
        (e.prototype.get_tag_counter = function () {
          return this.app.preferences.get_boolean(Ps.GLOBAL_TAG_AUTOCOMPLETE)
            ? this.userspace_view.tag_counter
            : this.view.tag_counter;
        }),
        (e.prototype.update_mobile_read_mode_enabled = function (e) {
          (this.is_in_read_mode = e),
            this.app.env.set_env_data(kc, this.is_in_read_mode),
            fish(".AppHeader-lockMode").uToggle(this.is_in_read_mode),
            this.mobile_toggle_read_mode_el.toggleClass(
              "is-active",
              this.is_in_read_mode,
            ),
            this.node_view.update_editable_for_all();
        }),
        (e.prototype.update_clear_search = function (e) {
          var t = "" === e,
            i = this.userspace_ui.is_searching_globally_on_mobile();
          this.clear_search.forEach(function (e) {
            return e.uToggle(!t);
          }),
            this.go_to_document_search.uToggle(t && i),
            this.go_to_global_search.uToggle(t && !i);
        }),
        (e.prototype.start_second_level_menu_hover_timeout = function (e) {
          var t = this;
          this.second_level_menu_hover_timeout = this.set_timeout(function () {
            t.show_second_level_node_menu(e);
          }, 500);
        }),
        (e.prototype.clear_set_second_level_menu_hover_timeout = function () {
          clearTimeout(this.second_level_menu_hover_timeout),
            (this.second_level_menu_hover_timeout = null);
        }),
        (e.prototype.start_second_level_menu_disappear_timeout = function () {
          var e = this;
          this.second_level_menu_disappear_timeout = this.set_timeout(
            function () {
              e.hide_second_level_node_menu();
            },
            300,
          );
        }),
        (e.prototype.clear_second_level_menu_disappear_timeout = function () {
          clearTimeout(this.second_level_menu_disappear_timeout),
            (this.second_level_menu_disappear_timeout = null);
        }),
        (e.prototype.start_blur_searchbar_timeout = function () {
          var e = this;
          this.blur_searchbar_timeout = this.set_timeout(function () {
            e.exit_document_search();
          }, 100);
        }),
        (e.prototype.start_global_search_on_mobile = function () {
          if (this.userspace_ui.is_searching_globally_on_mobile()) {
            var e = this.mobile_searchbar.value;
            "" !== e &&
              (this.pop_scope_document_search(),
              this.userspace_view.get_url_manager().set_global_search_query(e));
          }
        }),
        (e.prototype.get_is_in_read_mode = function () {
          return this.is_in_read_mode;
        }),
        (e.prototype.before_navigate = function () {
          if (this.ready) {
            var e = this.current_root.get_id();
            this.view_state_manager.remember_view_state_for_node(e);
          }
        }),
        (e.prototype.after_navigate = function () {
          if (this.ready) {
            var e = this.get_selection_for_first_item_in_document();
            e && this.selection().apply(e);
            var t = this.current_root.get_id();
            this.view_state_manager.restore_view_state_for_node(t);
          }
        }),
        (e.prototype.get_relative_scroll = function (e) {
          if (!e.has_nodes()) return null;
          var t = e.get_nodes()[0],
            i = this.get_node_state(t).dom.node_el,
            n = this.scrollbox.get_y_range(i),
            o = this.scrollbox.get_view_y_range();
          return n.bottom < o.top || n.top > o.bottom
            ? null
            : { element: i, relative_y: n.top - o.top };
        }),
        (e.prototype.restore_relative_scroll = function (e) {
          if (e) {
            var t = e.element,
              i = e.relative_y;
            if (!t || !t.offsetParent) return;
            var n = this.scrollbox.get_y_range(t);
            this.scrollbox.set_scroll(n.top - i);
          }
        }),
        (e.prototype.scroll_node_into_view = function (e) {
          var t = this.get_node_state(e),
            i = this.scrollbox.get_y_range(t.dom.node_el);
          this.scrollbox.scroll_range_into_view(i, !0);
        }),
        (e.prototype.scroll_selection_into_view = function (e) {
          var t = this,
            i = this.selection(),
            n = i.get();
          if (n instanceof Bo) {
            var o = n.get_node(),
              s = this.get_node_state(o),
              r = function () {
                var e = i.get();
                t.userspace_ui.is_ios_device() && e instanceof Bo && i.apply(e);
              };
            if (n instanceof Uo) {
              var a = s.dom.content_el;
              this.scrollbox.scrollSelectionRangeIntoView(a, !0, e, r) ||
                this.scrollbox.scroll_el_into_view(a, !0, e, r);
            } else if (n instanceof jo) {
              a = s.dom.note_el;
              this.scrollbox.scrollSelectionRangeIntoView(a, !0, e, r) ||
                this.scrollbox.scroll_el_into_view(a, !0, e, r);
            }
          } else if (n instanceof Go) {
            var _ = n.get_first_node(),
              c = n.get_last_node(),
              l = this.get_node_state(_),
              u = this.get_node_state(c),
              h = this.scrollbox.get_y_range(l.dom.node_el),
              p = h;
            l !== u && (p = this.scrollbox.get_y_range(u.dom.node_el));
            var d = { top: h.top, bottom: p.bottom, height: p.bottom - h.top };
            this.scrollbox.scroll_range_into_view(d, !0);
          }
        }),
        (e.prototype.get_mobile_cached_selection = function () {
          return this.mobile_cached_selection;
        }),
        (e.prototype.save_mobile_cached_selection = function () {
          (this.mobile_cached_selection = this.selection_manager.get()),
            this.selection_manager.apply(qo);
        }),
        (e.prototype.restore_mobile_cached_selection = function () {
          var e = this.mobile_cached_selection;
          e &&
            (this.selection_manager.apply(e),
            (this.mobile_cached_selection = null));
        }),
        (e.prototype.updateReadOnlyStatus = function () {
          this.mainContainerEl.toggleClass(
            "is-readOnly",
            this.controller.is_read_only(),
          ),
            this.app.config.isAnonymousView() &&
              this.$document_container_el.addClass("whole-page"),
            this.container.toggleClass(
              "read-only-doc",
              this.controller.is_read_only(),
            );
        }),
        (e.prototype.update_per_document_settings = function () {
          this.update_document_checked_items_visibility(),
            this.update_document_notes_visibility(),
            this.update_document_layout(),
            this.updateDocumentTextDirection();
        }),
        (e.prototype.update_document_checked_items_visibility = function () {
          var e = this.document
            .get_user_data_object()
            .get_checked_items_visibility();
          this.doc_checked_visibility_choices_el.forEach(function (e) {
            return e.removeClass("is-selected");
          }),
            e
              ? "show" === e
                ? this.doc_checked_visibility_show_el.addClass("is-selected")
                : "hide" === e &&
                  this.doc_checked_visibility_hide_el.addClass("is-selected")
              : this.doc_checked_visibility_global_el.addClass("is-selected"),
            this.update_pref_show_checked();
        }),
        (e.prototype.update_document_notes_visibility = function () {
          var e = this.document.get_user_data_object().get_notes_visibility();
          this.doc_notes_visibility_choices_el.forEach(function (e) {
            return e.removeClass("is-selected");
          }),
            e
              ? "show" === e
                ? this.doc_notes_visibility_show_el.addClass("is-selected")
                : "teaser" === e
                ? this.doc_notes_visibility_teaser_el.addClass("is-selected")
                : "hide" === e &&
                  this.doc_notes_visibility_hide_el.addClass("is-selected")
              : this.doc_notes_visibility_global_el.addClass("is-selected"),
            this.update_pref_note_display();
        }),
        (e.prototype.update_document_layout = function () {
          var e =
            "article" === this.document.get_user_data_object().get_layout();
          this.userspace_ui
            .get_doc_view_container()
            .toggleClass("is-article-view", e),
            fish(".view-filter-option-choice.mod-list-layout").toggleClass(
              "is-selected",
              !e,
            ),
            fish(".view-filter-option-choice.mod-article-layout").toggleClass(
              "is-selected",
              e,
            );
        }),
        (e.prototype.updateDocumentTextDirection = function () {
          var e = this.document.get_user_data_object().getTextDirection();
          this.docTextDirectionChoicesEl.forEach(function (e) {
            return e.removeClass("is-selected");
          }),
            e
              ? "ltr" === e
                ? this.docTextDirectionLtrEl.addClass("is-selected")
                : "rtl" === e &&
                  this.docTextDirectionRtlEl.addClass("is-selected")
              : this.docTextDirectionGlobalEl.addClass("is-selected"),
            this.updatePrefTextDirectionDisplay();
        }),
        (e.prototype.clear_mobile_search = function () {
          this.mobile_searchbar.value = "";
        }),
        (e.prototype.start_global_search = function (e) {
          var t = e || this.getSearchTerm();
          "" !== t &&
            (this.pop_scope_document_search(),
            this.userspace_view.get_url_manager().set_global_search_query(t));
        }),
        (e.prototype.start_flat_search = function () {
          var e = this.getSearchTerm();
          "" !== e &&
            (this.pop_scope_document_search(),
            this.userspace_view
              .get_url_manager()
              .update_state({ flat: !0, search_query: e }));
        }),
        (e.prototype.openSearchReplaceModal = function () {
          var e = this.selection().get().get_nodes();
          this.context_menu_node && this.context_menu_node.is_root()
            ? (this.searchReplaceNodes = [this.context_menu_node])
            : 0 < e.length
            ? (this.searchReplaceNodes = e)
            : (this.searchReplaceNodes = [this.current_root]),
            (this.searchReplaceSearchTermEl.value = ""),
            (this.searchReplaceReplaceTextEl.value = ""),
            (this.searchReplaceMatchCaseOptionEl.checked = !1),
            this.userspace_ui.open_modal("search-replace"),
            this.searchReplaceSearchTermEl.focus();
        }),
        (e.prototype.searchReplaceAll = function () {
          var e = this.searchReplaceSearchTermEl.value,
            t = this.searchReplaceReplaceTextEl.value,
            i = this.searchReplaceMatchCaseOptionEl.checked;
          this.view.replaceTextOccurrences(this.searchReplaceNodes, e, t, i);
        }),
        (e.prototype.onSearchReplaceSuccess = function (e, t, i) {
          this.userspace_ui.close_modals(),
            this.userspace_ui.popup_message_manager.displayReplaceSuccessMessage(
              e,
              t,
              i,
            ),
            (this.searchReplaceNodes = []);
        }),
        (e.prototype.toggleMobileMultiselect = function () {
          (this.isMobileMultiselect = !this.isMobileMultiselect),
            this.mobileToggleMultiselectEl.toggleClass(
              "is-active",
              this.isMobileMultiselect,
            ),
            this.isMobileMultiselect || this.selection().deselect();
        }),
        (e.prototype.toggleSelectNode = function (e) {
          if (this.current_root !== e) {
            var t = this.selection(),
              i = t.get(),
              n = [],
              o = e;
            return (
              i instanceof Go &&
                ((o = i.get_from_node()), (n = i.get_nodes().clone())),
              n.contains(e)
                ? n.remove(e)
                : (n.push(e), (n = t.sort_multi_nodes(n))),
              0 === n.length
                ? (t.set_no_select(), !0)
                : (this.blur_cursor(),
                  t.apply(zo.select_multi_nodes(n, o, e)),
                  !0)
            );
          }
        }),
        (e.prototype.preventKeyEventOrHandleIOSAutoCapitalization = function (
          e,
        ) {
          if (Xs) {
            var t = this.selection_manager,
              i = t.get();
            this.clipboard.focus_on_hidden_input(!1),
              this.clipboard.onHiddenInput(function () {
                t.apply(i);
              }, 300);
          } else e.preventDefault();
        }),
        e
      );
    })(To),
    Cc = (function (i) {
      function e(e) {
        var t = i.call(this, Mr.DOCUMENT_SEARCH) || this;
        return (t.ui = e), t;
      }
      return (
        nt(e, i),
        (e.prototype.on_push = function () {
          this.ui.update_search_tip_visibility();
        }),
        (e.prototype.on_pop = function () {
          return (
            this.ui.update_search_tip_visibility(),
            i.prototype.on_pop.call(this)
          );
        }),
        e
      );
    })(Fr),
    Tc = (function (i) {
      function e(e) {
        var t = i.call(this, "UserspaceDragManager", e) || this;
        return (
          (t.events = t.submodule(new Eo())),
          (t.interval_manager = t.submodule(new Oo(e))),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          (this.ui = this.app.userspace.ui),
            (this.view = this.app.userspace.view),
            (this.controller = this.app.userspace.controller);
        }),
        (e.prototype._init_fields = function () {
          (this.start_pos = { x: 0, y: 0 }),
            (this.file_being_dragged = null),
            (this.sourceDocument = null),
            (this.nodes_being_dragged = null),
            (this.is_dragging = !1),
            (this.drop_location = null),
            (this.mouse_events = new Eo()),
            (this.touch_events = new Eo()),
            (this.left_pane_el = $(".LeftPaneContainer")),
            (this.drag_indicator_el = createEl("div", {
              cls: "drag-indicator u-use-pref-font",
            })),
            (this.drop_indicator_el = createEl("div", {
              cls: "pane-drop-indicator",
            })),
            (this.touch_drag_timer = 0),
            (this.scroll_amount = 0),
            (this.scroll_timer = 0);
        }),
        (e.prototype._init_after = function () {
          var e = document;
          this.mouse_events.register_array_event_listener([
            [e, "mousemove", this.on_mousemove.bind(this)],
            [e, "mouseup", this.on_mouseup.bind(this)],
          ]),
            this.touch_events.register_array_event_listener([
              [e, "touchmove", this.on_touchmove.bind(this), { passive: !1 }],
              [e, "touchend", this.on_touchend.bind(this)],
            ]);
          var t = this.events.make_context_on_off(
            $(".LeftPaneSlidebarContainer"),
          );
          this.events.register_with_context_array(t, [
            [
              "mousedown",
              ".FolderItem-header, .DocumentItem-header, .BookmarkItem-header",
              this.on_mousedown.bind(this),
            ],
            [
              "touchstart",
              ".FolderItem-header, .DocumentItem-header, .BookmarkItem-header",
              this.on_touchstart.bind(this),
            ],
          ]);
        }),
        (e.prototype.is_dragging_bookmark = function () {
          return this.file_being_dragged instanceof ri;
        }),
        (e.prototype.is_dragging_file = function () {
          return this.is_dragging;
        }),
        (e.prototype.get_nodes_being_dragged = function () {
          return this.nodes_being_dragged;
        }),
        (e.prototype.get_parent_in_ui = function (e) {
          return this.ui.get_link_file_if_shared(e).get_parent();
        }),
        (e.prototype.get_index_in_ui = function (e) {
          return this.ui.get_link_file_if_shared(e).get_index();
        }),
        (e.prototype.on_mousedown = function (e) {
          if (fr(e)) {
            var t = e.currentTarget;
            if (this.drag_init(t)) {
              e.preventDefault();
              var i = Ci(e);
              (this.start_pos = i), this.mouse_events.hook_events();
            }
          }
        }),
        (e.prototype.on_mousemove = function (e) {
          var t = Ci(e);
          !this.is_dragging &&
            ki(this.start_pos, t) > _ &&
            ((this.is_dragging = !0), this.drag_start(), this.drag_move(t, !1)),
            this.is_dragging && this.drag_move(t, !1);
        }),
        (e.prototype.on_mouseup = function (e) {
          gr(e) &&
            (this.drag_end(e),
            (this.is_dragging = !1),
            (this.start_pos = null),
            this.mouse_events.unhook_events());
        }),
        (e.prototype.on_touchstart = function (e) {
          var t = this;
          if (Vs) {
            var i = e.currentTarget;
            if (this.drag_init(i)) {
              var n = Ei(e);
              (this.start_pos = n),
                this.touch_events.hook_events(),
                clearTimeout(this.touch_drag_timer),
                (this.touch_drag_timer = this.set_timeout(function () {
                  (t.is_dragging = !0),
                    t.drag_start(),
                    t.drag_move(n, !0),
                    t.ui.vibrate_phone();
                }, I));
            }
          }
        }),
        (e.prototype.on_touchmove = function (e) {
          var t = Ti(e);
          this.is_dragging
            ? (e.preventDefault(), this.drag_move(t, !0))
            : ki(this.start_pos, t) > u &&
              ((this.start_pos = null),
              this.touch_events.unhook_events(),
              clearTimeout(this.touch_drag_timer));
        }),
        (e.prototype.on_touchend = function (e) {
          this.drag_end(e),
            (this.is_dragging = !1),
            (this.start_pos = null),
            this.touch_events.unhook_events(),
            clearTimeout(this.touch_drag_timer);
        }),
        (e.prototype.drag_init = function (e) {
          if (this.view.is_renaming()) return !1;
          var t =
            this.ui.get_file_from_el(e) || this.ui.get_bookmark_from_el(e);
          return (
            !!t &&
            (t instanceof ti && t.is_namespace_root()
              ? (this.file_being_dragged = t.get_namespace().get_linkfile())
              : (this.file_being_dragged = t),
            !0)
          );
        }),
        (e.prototype.drag_start = function () {
          this.view.select_file(this.file_being_dragged);
          var e = this.view
              .get_file_item_state(this.file_being_dragged)
              .make_ghost_html(),
            t = this.drag_indicator_el;
          t.html(e),
            this.ui.app_container.appendChild(t),
            this.ui.set_cursor_state(Ne);
        }),
        (e.prototype.drag_move = function (e, t) {
          this.drag_to_document(e, t) || this.show_drop_indicator(e);
          var i = e.x,
            n = e.y;
          t && ((i -= 60), (n += 30));
          var o = this.drag_indicator_el;
          (o.style.left = i + "px"), (o.style.top = n + "px");
        }),
        (e.prototype.drag_end = function (t) {
          this.edge_scroll_stop(),
            this.ui.set_cursor_state(De),
            this.view.deselect_file(),
            this.end_drag_file(),
            this.app.with_current_app_document(function (e) {
              e.ui.drag_manager.end_drag_node(t);
            }),
            (this.sourceDocument = null),
            (this.file_being_dragged = this.nodes_being_dragged = null),
            (this.drop_location = null);
        }),
        (e.prototype.drag_to_document = function (e, t) {
          if ((this._cancel_drag_to_document(), this.ui.is_mobile_view()))
            return !1;
          var i = this.file_being_dragged;
          if (!(i && i instanceof ti)) return !1;
          if (e.x <= this.left_pane_el.width()) return !1;
          var n = i.get_underlying_file();
          if (!(n instanceof Vn)) return !1;
          var o = null;
          return (
            this.app.with_current_app_document(function (e) {
              o = e.get_document();
            }),
            n !== o && (this._drag_to_document(n, e, t), !0)
          );
        }),
        (e.prototype.show_drop_indicator = function (e) {
          this.edge_scroll_stop();
          var t = O,
            i = D,
            n = x,
            o = A,
            s = this.get_scroll_container(),
            r = mr(s).top,
            a = s.offsetHeight,
            _ = e.y - r;
          if (_ < t) {
            var c = n + (o - n) * Math.min(1, (t - _) / t);
            this.edge_scroll_start(-c, i);
          }
          if (a - t < _) {
            c = n + (o - n) * Math.min(1, (_ - (a - t)) / t);
            this.edge_scroll_start(c, i);
          }
          var l = this._get_drop_location(e);
          if (l) {
            var u = (this.drop_location = l).index;
            if ((this.hide_drop_indicator(), this.is_dragging_bookmark())) {
              var h = this.app.userspace.get_userspace().get_root_bookmark();
              if (0 === u) {
                var p = this.view.get_file_item_state(h.get_child(0));
                this.draw_drop_indicator(p, "before");
              } else {
                p = this.view.get_file_item_state(h.get_child(u - 1));
                this.draw_drop_indicator(p, "after");
              }
            } else {
              var d = l.parent.get_underlying_file(),
                f = this.view.get_file_item_state(d);
              if (!f) return;
              if (u <= 0)
                if (d.is_root()) {
                  var g = this.app.userspace
                      .get_userspace()
                      .get_root_file()
                      .get_child(0)
                      .get_underlying_file(),
                    m = this.view.get_file_item_state(g);
                  this.draw_drop_indicator(m, "before");
                } else
                  d.is_collapsed() || d.children.is_empty() || d instanceof Vn
                    ? f.$header_el.addClass("highlighted")
                    : this.draw_drop_indicator(f, "children");
              else {
                var v = d.get_child(u - 1);
                if (!v) return;
                if (
                  (v = v.get_underlying_file()) instanceof ii &&
                  v.has_children() &&
                  !v.is_collapsed()
                ) {
                  var y = d.get_child(u).get_underlying_file();
                  if (y) {
                    m = this.view.get_file_item_state(y);
                    this.draw_drop_indicator(m, "before");
                  }
                } else {
                  p = this.view.get_file_item_state(v);
                  this.draw_drop_indicator(p, "after");
                }
              }
            }
          }
        }),
        (e.prototype.draw_drop_indicator = function (e, t) {
          var i = e.container,
            n = e.header_el,
            o = n.find(".pane-item-icon"),
            s = i.offsetParent,
            r = mr(i, s),
            a = mr(n, s),
            _ = mr(o, s),
            c = 0,
            l = 0;
          "before" === t
            ? ((c = _.left), (l = r.top))
            : "after" === t
            ? ((c = _.left), (l = r.top + i.offsetHeight))
            : "children" === t &&
              ((c = _.left + 30), mr(n, s), (l = a.top + n.offsetHeight));
          var u = this.drop_indicator_el;
          u.detach(), s.appendChild(u);
          var h = u.offsetHeight;
          (u.style.left = c + "px"), (u.style.top = l - h / 2 + "px");
        }),
        (e.prototype._get_drop_result_on_file = function (e, t, i) {
          var n = this,
            o = this.view
              .get_file_item_state(e)
              .container.getBoundingClientRect(),
            s = o.top,
            r = o.bottom,
            a = s + (r - s) / 2,
            _ = t < a && s <= t,
            c = a <= t && t <= r;
          if (o.left + (o.right - o.left) / 2 <= i) {
            var l = function (e) {
              return (
                (e instanceof ii && !e.has_visible_children()) ||
                !!(e instanceof Vn && n.nodes_being_dragged)
              );
            };
            if (c && l(e)) return { parent: e, index: 0 };
            if (_) {
              var u = this.ui.get_link_file_if_shared(e),
                h = u.get_index(),
                p = null;
              if (
                (u.get_parent() &&
                  0 < h &&
                  (p = u.get_parent().get_child(h - 1)) instanceof fi &&
                  (p = p.get_target_file()),
                p && l(p))
              )
                return { parent: p, index: 0 };
            }
          }
          {
            if (c)
              return e instanceof ii && e.has_visible_children()
                ? { parent: e, index: 0 }
                : {
                    parent: this.get_parent_in_ui(e),
                    index: (h = this.get_index_in_ui(e) + 1),
                  };
            if (_) {
              return {
                parent: this.get_parent_in_ui(e),
                index: (h = this.get_index_in_ui(e)),
              };
            }
          }
          return null;
        }),
        (e.prototype._get_drop_result_on_bookmark = function (e, t) {
          var i = this.view
              .get_file_item_state(e)
              .container.getBoundingClientRect(),
            n = i.top;
          return t <= n + (i.bottom - n) / 2
            ? { index: e.get_index() }
            : { index: e.get_index() + 1 };
        }),
        (e.prototype._get_drop_location = function (e) {
          var i = this,
            t = e.x,
            n = e.y,
            o = this.app.userspace.get_userspace(),
            s = this.file_being_dragged;
          if (s instanceof ri) {
            var r = null;
            if (
              (o
                .get_root_bookmark()
                .get_children()
                .each(function (e) {
                  var t = i.view.get_file_item_state(e);
                  if (i._hit_file(t.$container, n, 0)) return (r = e), !1;
                }),
              r)
            )
              return this._get_drop_result_on_bookmark(r, n);
          } else {
            for (var a = null, _ = o.get_root_file(); _ && !a; ) {
              var c = _;
              if (((_ = null), c instanceof ii)) {
                if (!c.has_children()) {
                  a = c;
                  break;
                }
                var l = this.view.get_file_item_state(c);
                if (!c.is_root() && this._hit_file(l.$header_el, n, 0)) {
                  a = c;
                  break;
                }
                c.get_children().each(function (e) {
                  var t = i.view.get_file_item_state(e);
                  if (t && i._hit_file(t.$container, n, 0)) return (_ = e), !1;
                });
              } else {
                if (c instanceof Vn) {
                  a = c;
                  break;
                }
                c instanceof fi && (_ = c.get_target_file());
              }
            }
            if (a) {
              var u = this._get_drop_result_on_file(a, n, t);
              return u && s instanceof fi && !u.parent.is_from_root_namespace()
                ? null
                : u;
            }
          }
          return null;
        }),
        (e.prototype._hit_file = function (e, t, i) {
          var n = e.offset().top,
            o = n + e.height();
          return n - i <= t && t <= o + i;
        }),
        (e.prototype.end_drag_file = function () {
          this.hide_drag_indicator(), this.hide_drop_indicator();
          var e = this.drop_location;
          if (e) {
            var t = e.parent,
              i = e.index;
            if (this.sourceDocument && this.nodes_being_dragged)
              t instanceof ii
                ? this.view.convert_node_to_document(
                    this.sourceDocument,
                    this.nodes_being_dragged,
                    t,
                    i,
                  )
                : t instanceof Vn &&
                  this.view.moveNodeToDocument(
                    this.sourceDocument,
                    this.nodes_being_dragged,
                    t,
                  );
            else if (this.is_dragging) {
              if (!this.file_being_dragged) return;
              var n = this.file_being_dragged;
              n instanceof ri
                ? (i > n.get_index() && (i = Math.max(i - 1, 0)),
                  this.controller.move_bookmark(n, i))
                : (t === n.get_parent() &&
                    i > n.get_index() &&
                    (i = Math.max(i - 1, 0)),
                  this.controller.attach_file(n, t, i));
            }
          }
        }),
        (e.prototype.hide_drag_indicator = function () {
          this.drag_indicator_el.detach();
        }),
        (e.prototype.hide_drop_indicator = function () {
          var e = fish(".pane-item-header.highlighted");
          e && e.removeClass("highlighted"), this.drop_indicator_el.detach();
        }),
        (e.prototype._drag_to_document = function (t, i, n) {
          this.hide_drop_indicator(),
            this.app.with_current_app_document(function (e) {
              e.ui.drag_manager.drag_to_document(t, i, n);
            });
        }),
        (e.prototype._cancel_drag_to_document = function () {
          this.app.with_current_app_document(function (e) {
            e.ui.drag_manager.drag_to_document(null, null, !1);
          });
        }),
        (e.prototype.edge_scroll_start = function (e, t) {
          this.scroll_timer && this.edge_scroll_stop(),
            (this.scroll_amount = e),
            (this.scroll_timer = this.interval_manager.set_interval(
              this.edge_scroll.bind(this),
              t,
            )),
            this.edge_scroll();
        }),
        (e.prototype.edge_scroll_stop = function () {
          this.interval_manager.clear_interval(this.scroll_timer),
            (this.scroll_amount = 0),
            (this.scroll_timer = 0);
        }),
        (e.prototype.edge_scroll = function () {
          var e = this.get_scroll_container();
          e.scrollTop = e.scrollTop + this.scroll_amount;
        }),
        (e.prototype.get_scroll_container = function () {
          return this.file_being_dragged instanceof ri
            ? this.ui.get_bookmarks_container()
            : this.ui.get_container();
        }),
        (e.prototype.show_drop_indicator_for_node = function (e, t, i) {
          (this.sourceDocument = e),
            (this.nodes_being_dragged = t),
            this.show_drop_indicator(i);
        }),
        (e.prototype.hide_drop_indicator_for_node = function () {
          (this.sourceDocument = null),
            (this.nodes_being_dragged = null),
            this.hide_drop_indicator();
        }),
        e
      );
    })(To),
    Oc = (function (i) {
      function e(e) {
        var t = i.call(this, "GlobalSearch", e) || this;
        return (
          (t.searchResultUi = null),
          (t.tag_suggestion_manager = t.submodule(new X_(e))),
          (t.searchResultUi = t.submodule(new Fa(e, t.search))),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype._init_fields = function () {
          var e = this;
          (this.scope = new Hr(Mr.GLOBAL_SEARCH, function () {
            return e.close(), !1;
          })),
            (this.containerEl = fish(".search-ui-container.mod-global-search")),
            this.searchResultUi.setContainer(this.containerEl),
            i.prototype._init_fields.call(this);
        }),
        (e.prototype.open = function (e) {
          if (((this.query = e), this.userspace_ui.is_mobile_view())) {
            var t = this.userspace_ui.mobile_searchbar;
            t.value !== e &&
              (this.userspace_ui.set_is_searching_globally_on_mobile(!0),
              "" !== (t.value = e) &&
                this.userspace_ui.show_mobile_search_header());
          }
          if (
            (this.app.scope.is_current_scope(Mr.GLOBAL_SEARCH) ||
              this.app.scope.push_scope(this.scope),
            this.userspace_ui.app_container.addClass("is-global-search"),
            (this.searchbar_el.value = e),
            this.header_el.toggleClass("is-searching", "" !== e),
            this.userspace_ui.update_bookmark_status(),
            "" === e)
          )
            return (
              this.results_el.empty(),
              this.summary_el.setText(""),
              void this.searchbar_el.focus()
            );
          this.search_term_el.setText(e),
            this.containerEl.addClass("is-loading");
          var i = this.app.userspace.get_userspace();
          if (i.are_all_documents_ready()) {
            var n = this.search;
            n.parse(e);
            var o = [];
            i.traverse_tree_dfs(null, function (e) {
              if (e instanceof Vn && !e.get_user_data_object().get_archived()) {
                var i = [];
                e.get_node_collection().traverse_tree_dfs(null, function (e) {
                  var t = n.match_node(e);
                  t && i.push({ node: e, match: t });
                }),
                  0 !== i.length && o.push({ document: e, node_results: i });
              }
            }),
              this.display_results(n, o);
          } else this.app.document_manager.request_load_all();
        }),
        (e.prototype.close = function () {
          var e = this.tag_suggestion_manager;
          e.is_open()
            ? e.close()
            : ((this.query = null),
              this.userspace_ui.app_container.removeClass("is-global-search"),
              this.results_el.empty(),
              this.summary_el.setText(""),
              this.app.scope.pop_scope(this.scope));
        }),
        (e.prototype.exit = function () {
          var e = this.query,
            t = this.app.get_current_app_document();
          t
            ? (this.userspace_view
                .get_url_manager()
                .apply_state({
                  document_server_id: t.document.get_server_id(),
                  zoom_node_id: t.ui.current_root.get_id(),
                }),
              yr(".DocumentSearch").val(e).focus())
            : this.userspace_view.get_url_manager().apply_state({});
        }),
        (e.prototype.display_results = function (e, t) {
          var i = this;
          if ((this.results_el.empty(), 0 === t.length))
            return (
              this.summary_el.setText("No results found."),
              this.searchbar_el.focus(),
              void this.containerEl.removeClass("is-loading")
            );
          var n =
              e.force_show_completed ||
              this.app.preferences.get_boolean(Ps.SHOW_CHECKED),
            o = 0,
            s = 0,
            r = new Ua(this.userspace_ui.render_options);
          Array.each(t, function (e) {
            (o += e.node_results.length),
              n || (e.node_results = Ba.filter_checked_results(e.node_results)),
              0 !== e.node_results.length &&
                ((s += e.node_results.length),
                i.results_el.appendChild(
                  i.searchResultUi.renderDocumentResult(e, r, !0, i.query),
                ));
          });
          var a = "";
          (a =
            0 !== o && 0 === s
              ? "No results found. " +
                (1 === o ? "1 match has" : o + " matches have") +
                ' been filtered out by your filter settings. Append "is:completed" to your search to see all matches.'
              : "Found " + (1 === s ? "1 match:" : s + " matches:")),
            this.summary_el.setText(a),
            this.containerEl.removeClass("is-loading"),
            this.userspace_ui.stop_loading();
        }),
        (e.prototype.updateQuery = function () {
          var e = this.searchbar_el.value;
          this.userspace_ui.is_mobile_view() &&
            (e = this.userspace_ui.mobile_searchbar.value),
            "" !== e && this.update_search_query(e);
        }),
        (e.prototype.update_search_query = function (e) {
          this.userspace_view.get_url_manager().set_global_search_query(e);
        }),
        e
      );
    })(Ba),
    xc = "is_open",
    Ac = "results",
    Dc = "selected_result_index",
    Sc = "search_term",
    Nc = (function (n) {
      function e(e, t) {
        var i = n.call(this, e, t) || this;
        return (
          (i.events = i.submodule(new Eo())),
          (i.shortcut_manager = i.submodule(new ia(t))),
          i._register_state(xc, !1, i.is_open_changed),
          i._register_state(Ac, null, i.results_changed),
          i._register_state(Dc, 0, i.selected_result_index_changed),
          i._register_state(Sc, "", i.search_term_changed),
          (i.requestUpdateSearch = debounce(i.updateSearch, 100, !0)),
          i
        );
      }
      return (
        nt(e, n),
        (e.prototype._init_before = function () {
          (this.finder_el = fish(this.finder_class_name)),
            (this.finder_inner_container_el =
              this.finder_el.find(".finder-container")),
            (this.results_container_el =
              this.finder_el.find(".finder-results")),
            (this.empty_state_el = this.finder_el.find(".finder-empty-state")),
            (this.search_bar_el = this.finder_el.find(".finder-search")),
            (this.mobile_search_bar_el = this.finder_el.find(
              ".finder-mobile-header-searchbar",
            )),
            (this.mobile_clear_search_el = this.finder_el.find(
              ".finder-mobile-header-clear-search",
            ));
        }),
        (e.prototype._init_after = function () {
          this.register_events();
        }),
        (e.prototype.register_events = function () {
          var i = this,
            e = this.events.make_context_on_off($(this.finder_el));
          this.events.register_array_on_off([
            [
              $(this.mobile_clear_search_el),
              "click",
              this.on_clear_search_mobile.bind(this),
            ],
            [
              $(this.search_bar_el),
              "propertychange change click keyup keydown input paste focus",
              this.on_search_change.bind(this),
            ],
            [
              $(this.mobile_search_bar_el),
              "propertychange change click keyup keydown input paste focus",
              this.on_search_change.bind(this),
            ],
          ]),
            this.events.register_with_context_array(e, [
              ["click", ".finder-result", this.on_result_click.bind(this)],
              [
                "mousemove",
                ".finder-result",
                this.on_result_mousemove.bind(this),
              ],
              ["click", this.on_background_click.bind(this)],
              [
                "click",
                ".finder-container",
                this.on_finder_container_click.bind(this),
              ],
            ]);
          var n = this.shortcut_manager,
            t = function (e, t) {
              n.register_unnamed(e, "keydown", t, i.scope.get_name());
            };
          t(new ea([], l.UP), this.on_keydown_up.bind(this)),
            t(new ea([], l.DOWN), this.on_keydown_down.bind(this)),
            t(new ea([], l.ENTER), this.on_keydown_enter.bind(this));
        }),
        (e.prototype.on_finder_container_click = function (e) {
          e.stopPropagation();
        }),
        (e.prototype.on_clear_search_mobile = function () {
          (this.mobile_search_bar_el.value = ""),
            this.mobile_search_bar_el.focus();
        }),
        (e.prototype.on_search_change = function (e) {
          var t = e.currentTarget,
            i = $(t).val();
          this.set(Sc, i), e.keyCode || e.stopPropagation();
        }),
        (e.prototype.on_background_click = function () {
          this.app.userspace.ui.is_mobile_view() || this.close_finder();
        }),
        (e.prototype.on_result_click = function (e) {
          e.preventDefault(),
            e.stopPropagation(),
            this.select_event_element(e.currentTarget),
            this.open_selected_result();
        }),
        (e.prototype.on_result_mousemove = function (e) {
          this.select_event_element(e.currentTarget);
        }),
        (e.prototype.on_keydown_up = function () {
          if (this.get(xc)) return this.select_previous_item(), !1;
        }),
        (e.prototype.on_keydown_down = function () {
          if (this.get(xc)) return this.select_next_item(), !1;
        }),
        (e.prototype.on_keydown_enter = function (e) {
          this.get(xc) && (this.open_selected_result(), e.preventDefault());
        }),
        (e.prototype.select_event_element = function (e) {
          this.set(Dc, $(e).index());
        }),
        (e.prototype.open_selected_result = function () {
          var e = this.get(Ac);
          if (e) {
            var t = this.get(Dc);
            this._select_result(e[t]);
          }
        }),
        (e.prototype.open_finder = function () {
          var e = this;
          this.set(xc, !0),
            this.app.userspace.ui.hide_context_menu(),
            this._get_finder_searchbar().focus(),
            this.queue(function () {
              e._get_finder_searchbar().focus();
            });
        }),
        (e.prototype.close_finder = function () {
          this.set(xc, !1),
            this.set(Sc, ""),
            (this._get_finder_searchbar().value = "");
        }),
        (e.prototype.select_previous_item = function () {
          var e = this.get(Ac);
          if (e) {
            var t = this.get(Dc) - 1;
            t < 0 && (t = e.length - 1), this.set(Dc, t);
          }
        }),
        (e.prototype.select_next_item = function () {
          var e = this.get(Ac);
          if (e) {
            var t = this.get(Dc) + 1;
            t >= e.length && (t = 0), this.set(Dc, t);
          }
        }),
        (e.prototype._get_finder_searchbar = function () {
          return this.app.userspace.ui.is_mobile_view()
            ? this.mobile_search_bar_el
            : this.search_bar_el;
        }),
        (e.prototype.is_open = function () {
          return this.get(xc);
        }),
        (e.prototype.results_changed = function (e) {
          var t = this;
          this.finder_el.toggleClass("is-empty", !e && "" !== this.get(Sc)),
            this.results_container_el.empty(),
            e &&
              (Array.each(
                e,
                function (e) {
                  e.element = t.get_result_element(e);
                },
                this,
              ),
              this.set(Dc, 0),
              this._force_update(Dc));
        }),
        (e.prototype.is_open_changed = function (e) {
          this.finder_el.uToggle(e),
            e
              ? (this.app.scope.push_scope(this.scope), this._force_update(Sc))
              : this.app.scope.pop_scope(this.scope);
        }),
        (e.prototype.selected_result_index_changed = function (e, t) {
          var i = this.get(Ac);
          i &&
            (i[t] && i[t].element.removeClass("is-selected"),
            i[e] && i[e].element.addClass("is-selected"));
        }),
        (e.prototype.search_term_changed = function () {
          this.requestUpdateSearch();
        }),
        (e.prototype.updateSearch = function () {
          var e = this.get(Sc),
            t = "" === e;
          this.mobile_clear_search_el.uToggle(!t);
          var i = this._get_results(e);
          0 === i.length && (i = null), this.set(Ac, i);
        }),
        (e.prototype.sort_and_filter_result = function (e) {
          return ks(e), e.slice(0, this.max_result_count);
        }),
        e
      );
    })(N_),
    Ic = (function (t) {
      function e(e) {
        return t.call(this, "FileFinder", e) || this;
      }
      return (
        nt(e, t),
        (e.prototype._init_before = function () {
          (this.finder_class_name = ".finder.mod-file-finder"),
            (this.scope = new Hr(Mr.FILE_FINDER, this.close_finder.bind(this))),
            (this.max_result_count = 5),
            t.prototype._init_before.call(this);
        }),
        (e.prototype._load = function () {
          this._update_all_states();
        }),
        (e.prototype._search_documents = function (s) {
          var r = this,
            a = [],
            e = this.app.userspace.get_userspace(),
            _ = ys(s);
          return (
            Object.each(
              e.get_files(),
              function (e) {
                var t =
                  e.has_ancestor(e.get_namespace().get_root_file()) ||
                  e.is_namespace_root();
                if (e instanceof Vn && t) {
                  var i = r.app.get_current_app_document();
                  if (!s && i && e === i.get_document()) return;
                  if (s) {
                    if ((o = ws(_, e.get_title()))) {
                      if (!s) {
                        n = e;
                        o.score = n.get_user_data_object().get_last_access();
                      }
                      a.push({ search_result: e, match: o });
                    }
                  } else {
                    var n,
                      o = {
                        score: (n = e).get_user_data_object().get_last_access(),
                        matches: [],
                      };
                    a.push({ search_result: e, match: o });
                  }
                }
              },
              this,
            ),
            t.prototype.sort_and_filter_result.call(this, a)
          );
        }),
        (e.prototype._search_bookmarks = function (e) {
          var i = [];
          if (!e) return i;
          var n = ys(e),
            o = this.app.userspace.get_userspace();
          return (
            Object.each(
              o.get_bookmarks(),
              function (e) {
                if (e.has_ancestor(o.get_root_bookmark())) {
                  var t = ws(n, e.get_data_object().get_title());
                  t && i.push({ search_result: e, match: t });
                }
              },
              this,
            ),
            t.prototype.sort_and_filter_result.call(this, i)
          );
        }),
        (e.prototype._select_result = function (e) {
          var t = e.search_result;
          this.close_finder(),
            t instanceof Vn
              ? this.app.userspace.view.switch_document(t)
              : t instanceof ri && this.app.userspace.view.go_to_bookmark(t);
        }),
        (e.prototype.get_result_element = function (e) {
          var i = this,
            n = e.search_result,
            t = e.match,
            o = "",
            s = "is-document";
          n instanceof Vn
            ? (o = n.get_title())
            : n instanceof ri &&
              ((o = n.get_data_object().get_title()), (s = "is-bookmark"));
          var r = this._get_matched_title_html(t.matches, o);
          return this.results_container_el.createEl(
            "li",
            { cls: "finder-result " + s },
            function (e) {
              if ((e.html(r), n instanceof Vn)) {
                var t = i.app.userspace.ui.get_breadcrumb_chain_text(n);
                e.createEl("div", { cls: "finder-result-breadcrumb", text: t });
              }
            },
          );
        }),
        (e.prototype._get_results = function (e) {
          return this._search_bookmarks(e).concat(this._search_documents(e));
        }),
        (e.prototype._get_matched_title_html = function (e, o) {
          var s = "";
          return (
            zt(0, o.length, e, function (e, t, i) {
              var n = o.substring(t, i);
              s += e
                ? '<span class="finder-match">' + xt(n) + "</span>"
                : xt(n);
            }),
            s
          );
        }),
        e
      );
    })(Nc),
    Lc = (function (t) {
      function e(e) {
        return t.call(this, "InboxNodeSuggestionProvider", e) || this;
      }
      return (
        nt(e, t),
        (e.prototype._init_before = function () {
          t.prototype._init_before.call(this),
            (this.global_search_suggestion_result = new T_(
              this.app.userspace.ui.node_formatter,
              this.app.userspace.view,
            )),
            this.container_el.addClass("LinkSuggestions");
        }),
        (e.prototype.get_suggestions = function (e) {
          return this.app.userspace.view.search_all_nodes(e, null);
        }),
        (e.prototype.render_suggestion = function (e, t, i) {
          var n = t.document,
            o = t.node,
            s = t.match;
          return this.global_search_suggestion_result.render(i, n, o, s);
        }),
        e
      );
    })(C_),
    Mc = (function (i) {
      function e(e) {
        var t = i.call(this, "InboxNodeSuggestionManager", e) || this;
        return (t.events = t.submodule(new Eo())), (t.search_term = ""), t;
      }
      return (
        nt(e, i),
        (e.prototype._init_fields = function () {
          (this.provider =
            this.app.userspace.ui.inbox_node_suggestion_provider),
            (this.input_element = fish(
              ".setting-section.mod-inbox-destination .setting-text-field",
            )),
            i.prototype._init_fields.call(this);
        }),
        (e.prototype._init_after = function () {
          this.events.register_array_on_off([
            [
              $(this.input_element),
              "focus propertychange change keyup keydown input paste",
              this.open.bind(this),
            ],
            [$(this.input_element), "blur", this.close.bind(this)],
          ]);
        }),
        (e.prototype.on_select_suggestion = function (e) {
          var t = e.document,
            i = e.node;
          i.get_meta_object().get_content();
          if ((this.app.userspace.view.set_inbox_location_pref(i, t), i)) {
            var n = i.get_meta_object().get_content();
            this.app.userspace.ui.popup_message_manager.display_set_inbox_popup(
              n,
            );
          }
          (this.input_element.value = ""),
            this.input_element.blur(),
            this.close();
        }),
        (e.prototype.open = function () {
          var e = this.input_element.value;
          if (null === e) return this.close(), !1;
          if (this.search_term !== e) {
            var t = this.provider;
            t.search(e, 3), (this.search_term = e);
            var i = fish(".settings-tabs-container"),
              n = this.get_dropdown_offset(i);
            return t.show(i, n, this), !0;
          }
        }),
        (e.prototype.get_dropdown_offset = function (e) {
          var t = mr(this.input_element, e);
          return {
            top: t.top,
            bottom: t.top + this.input_element.offsetHeight,
            left: t.left,
            right: t.left,
          };
        }),
        (e.prototype.close = function () {
          this.provider.hide();
        }),
        (e.prototype.is_open = function () {
          return this.provider.is_open_with(this);
        }),
        e
      );
    })(To),
    Rc = "is_open",
    Pc = (function (i) {
      function e(e) {
        var t = i.call(this, "InboxCapture", e) || this;
        return (
          (t.events = t.submodule(new Eo())),
          (t.shortcut_manager = t.submodule(new ia(e))),
          (t.tag_suggestion_manager = t.submodule(new V_(e))),
          (t.inbox_node_suggestion_manager = t.submodule(new Mc(e))),
          t._register_state(Rc, !1, t.is_open_changed),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype._init_before = function () {
          (this.inbox_capture_el = fish(".InboxCapture")),
            (this.$inbox_capture_input_el = yr(".InboxCapture-content")),
            (this.inbox_capture_input_container_el = fish(
              ".InboxCapture-contentContainer",
            )),
            (this.scope = new Hr(Mr.INBOX_CAPTURE, this.close.bind(this)));
        }),
        (e.prototype._init_after = function () {
          this.register_events();
        }),
        (e.prototype._load = function () {
          this._update_all_states();
        }),
        (e.prototype.register_events = function () {
          this.events.register_array_on_off([
            [
              $(".js-open-inbox-capture"),
              "click",
              this.on_open_inbox_capture_click.bind(this),
            ],
            [$(".InboxCapture-container"), "click", this.stop_propagation],
            [$(".InboxCapture"), "click", this.on_background_click.bind(this)],
            [
              $(
                ".mobile-header.mod-inbox-capture .MobileHeader-backIcon, .js-cancel-inbox-capture",
              ),
              "click",
              this.on_close_click.bind(this),
            ],
            [
              $(".js-complete-inbox-capture"),
              "click",
              this.on_complete_inbox_capture.bind(this),
            ],
            [
              this.$inbox_capture_input_el,
              "propertychange change keyup keydown input paste",
              this.on_inbox_content_keyup.bind(this),
            ],
            [
              this.$inbox_capture_input_el,
              "focus blur",
              this.on_inbox_content_focus_changed.bind(this),
            ],
          ]);
          var e,
            t,
            i,
            n = this.shortcut_manager,
            o = function (e, t, i) {
              n.register_unnamed(e, "keydown", t, i);
            };
          (e = na.APP_INBOX_CAPTURE),
            (t = this.on_keydown_open_inbox_capture.bind(this)),
            (i = [Mr.EDITOR, Mr.GLOBAL_SEARCH]),
            n.register_named(e, "keydown", t, i),
            o(
              new ea([], l.ESC),
              this.on_keydown_esc.bind(this),
              Mr.INBOX_CAPTURE,
            ),
            o(
              new ea([], l.ENTER),
              this.on_keydown_enter.bind(this),
              Mr.INBOX_CAPTURE,
            );
        }),
        (e.prototype.stop_propagation = function (e) {
          e.stopPropagation();
        }),
        (e.prototype.on_close_click = function () {
          this.close();
        }),
        (e.prototype.on_keydown_open_inbox_capture = function (e) {
          this.app.userspace.view.get_is_pro() &&
            (this.open(), e.preventDefault());
        }),
        (e.prototype.on_background_click = function () {
          this.app.userspace.ui.is_mobile_view() || this.close();
        }),
        (e.prototype.on_open_inbox_capture_click = function (e) {
          e.stopImmediatePropagation(),
            e.preventDefault(),
            this.app.userspace.view.get_is_pro() && this.open();
        }),
        (e.prototype.on_keydown_esc = function () {
          if (this.is_open()) {
            var e = this.tag_suggestion_manager;
            return e.is_open()
              ? void e.close()
              : (this.close(), this.app.userspace.ui.restore_selection(), !1);
          }
        }),
        (e.prototype.on_keydown_enter = function (e) {
          this.tag_suggestion_manager.is_open() ||
            (this.complete_capture(), e.preventDefault());
        }),
        (e.prototype.on_complete_inbox_capture = function () {
          this.complete_capture();
        }),
        (e.prototype.on_inbox_content_keyup = function () {
          this.auto_resize_textarea();
        }),
        (e.prototype.on_inbox_content_focus_changed = function () {
          var e =
            this.$inbox_capture_input_el.get(0) === document.activeElement;
          this.inbox_capture_input_container_el.toggleClass("is-focused", e);
        }),
        (e.prototype.auto_resize_textarea = function () {
          var e = this.$inbox_capture_input_el.get(0);
          (e.style.height = "1px"),
            (e.style.height = e.scrollHeight + 1 + "px");
        }),
        (e.prototype.complete_capture = function () {
          var t = this;
          if (this.get(Rc)) {
            var e = this.$inbox_capture_input_el.val();
            e &&
              (this.inbox_capture_el.addClass("loading"),
              this.app.userspace.view.create_new_node_in_inbox(e, function (e) {
                t.inbox_capture_el.removeClass("loading"),
                  e && (t.$inbox_capture_input_el.val(""), t.close());
              }));
          }
        }),
        (e.prototype.open_with_text = function (e) {
          this.open(),
            this.$inbox_capture_input_el.val(e),
            this.auto_resize_textarea();
        }),
        (e.prototype.open = function () {
          this.app.with_current_app_document(function (e) {
            e.ui.view_state_manager.save_view_state();
          }),
            this.set(Rc, !0),
            this.inbox_capture_el.removeClass("loading"),
            this.$inbox_capture_input_el.trigger("focus"),
            this.app.userspace.ui.hide_context_menu();
        }),
        (e.prototype.close = function () {
          this.set(Rc, !1);
        }),
        (e.prototype.is_open = function () {
          return this.get(Rc);
        }),
        (e.prototype.is_open_changed = function (e) {
          this.inbox_capture_el.uToggle(e),
            e
              ? (this.app.userspace.ui.modal_manager.close_modal(),
                this.app.scope.push_scope(this.scope))
              : (this.app.scope.pop_scope(this.scope),
                this.$inbox_capture_input_el.val(""),
                this.app.with_current_app_document(function (e) {
                  e.ui.view_state_manager.apply_saved_view_state();
                }),
                this.tag_suggestion_manager.close());
        }),
        e
      );
    })(N_),
    Fc = [
      "You can move an item by dragging its bullet point.",
      "You can bookmark search results for quicker access.",
      "Drag to select multiple items and change them in bulk.",
      "It may be better to use the dark theme at night.",
      "Made a mistake? You can undo it with Ctrl+Z.",
      "To quickly send an item somewhere else, use Ctrl+Shift+M while editing it.",
      "Use Ctrl+O to quickly switch to other documents or bookmarks.",
      "By referring friends, you can get up to 50% off Dynalist Pro.",
    ],
    Hc = (function () {
      function e(e) {
        (this.container_el = e),
          (this.tip_container_el = this.container_el.createEl("div", {
            cls: "tip-container u-hidden",
          })),
          (this.last_tip_ts = 0),
          (this.last_tip = ""),
          this.show_tip();
      }
      return (
        (e.prototype.show_tip = function () {
          var e = this.tip_container_el;
          if (this._should_show_new_tip()) {
            var t = this._get_random_tip();
            e.setText(t),
              e.uShow(),
              (this.last_tip_ts = Date.now()),
              (this.last_tip = t);
          } else e.setText(this.last_tip), e.uShow();
        }),
        (e.prototype.hide_tip = function () {
          this.tip_container_el.uHide();
        }),
        (e.prototype._get_random_tip = function () {
          var e = Math.floor(Math.random() * Fc.length);
          return Fc[e];
        }),
        (e.prototype._should_show_new_tip = function () {
          return 1e4 < Date.now() - this.last_tip_ts;
        }),
        e
      );
    })(),
    zc = (function (o) {
      function e(e) {
        return o.call(this, "NodeFinder", e) || this;
      }
      return (
        nt(e, o),
        (e.prototype._init_before = function () {
          (this.finder_class_name = ".finder.mod-node-finder"),
            (this.scope = new Hr(Mr.NODE_FINDER, this.close_finder.bind(this))),
            (this.max_result_count = 6),
            (this.global_search_suggestion_result = new T_(
              this.app.userspace.ui.node_formatter,
              this.app.userspace.view,
            )),
            o.prototype._init_before.call(this);
        }),
        (e.prototype._load = function () {
          this._update_all_states();
        }),
        (e.prototype._get_results = function (e) {
          if ("" === e) return [];
          var t = this.app.get_current_app_document(),
            i = [],
            n = [];
          return (
            (i = t
              ? this.app.userspace.view.search_all_nodes(e, t.get_document())
              : this.app.userspace.view.search_all_nodes(e, null)),
            Array.each(
              i,
              function (e) {
                n.push({
                  search_result: e.node,
                  match: e.match,
                  document: e.document,
                });
              },
              this,
            ),
            o.prototype.sort_and_filter_result.call(this, n)
          );
        }),
        (e.prototype._select_result = function (e) {
          this.close_finder();
          var t = e.document,
            i = e.search_result;
          t &&
            i &&
            this.app.userspace.view.url_manager.switch_document(t, i.get_id(), {
              animate: !1,
            });
        }),
        (e.prototype.get_result_element = function (e) {
          var t = e.search_result,
            i = e.match,
            n = e.document,
            o = this.global_search_suggestion_result.get_option_el(n, t, i);
          return (
            o.addClass("finder-result"),
            this.results_container_el.appendChild(o),
            o
          );
        }),
        (e.prototype.open_finder = function () {
          this.app.userspace.view.get_is_pro() &&
            o.prototype.open_finder.call(this);
        }),
        e
      );
    })(Nc),
    Bc = [
      {
        title: "Welcome{name}!",
        caption_html:
          "<p>This is Erica from Dynalist. Let me help you get started!</p><p>This will be quick, and we've prepared a special gift for you afterwards.</p>",
        button_text: "Sounds good!",
      },
      {
        title: "Indent and unindent",
        caption_html:
          "<p>Use <kbd>Tab</kbd> and <kbd>Shift+Tab</kbd> to move items between different levels. You can move <em>multiple items</em> at once.</p>",
        video_file_name: "onboarding1",
      },
      {
        title: "Moving between contexts",
        caption_html:
          "<p>Zoom in and out to only see what's relevant right now.</p>",
        video_file_name: "onboarding2",
      },
      {
        title: "Drag to rearrange",
        caption_html:
          "<p>Drag the bullet to rearrange items. You can also move <em>multiple items</em> at once.</p>",
        video_file_name: "onboarding3",
      },
      {
        title: "More options",
        caption_html:
          "<p>There are tons of things you can do to a list, such as turning it into a <em>checklist</em> or a <em>numbered list</em>. You can find these options in the menu, along with their keyboard shortcuts.</p>",
        video_file_name: "onboarding4",
      },
      {
        title: "Triggers",
        caption_html:
          "<p>Add <em>tags</em> (<kbd>#</kbd> or <kbd>@</kbd>), <em>dates</em> (<kbd>!</kbd>), and <em>internal links</em> (<kbd>[[</kbd>) with triggers.</p>",
        video_file_name: "onboarding5",
      },
      {
        title: "Bookmarks",
        caption_html:
          "<p>Click on the star next to things to add bookmarks. You can bookmark items, documents, and even <em>search results</em>.</p>",
        video_file_name: "onboarding6",
      },
      {
        title: "Finder",
        caption_html:
          "<p>Finder lets you jump to <em>any document or bookmark</em> within a few keystrokes. Use <kbd>Ctrl+O</kbd> to open it.</p>",
        video_file_name: "onboarding7",
      },
      {
        title: "You're done!",
        caption_html:
          '<p>Shortcuts make everything so much faster. To learn the shortcuts, check out the <em>shortcut help</em> on the right. You can open it in the menu at the top right if it\'s not already open.</p><p>If you ever need anything, <a href="#" class="js-open-feedback">contact us</a> or check out our <a href="http://help.dynalist.io/" target="_blank">help center</a>.</p>',
        button_text: "Got it",
        is_primary_button: !1,
      },
    ],
    Uc = (function (i) {
      function e(e) {
        var t = i.call(this, "OnboardingManager", e) || this;
        return (t.events = t.submodule(new Eo())), t;
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          (this.ui = this.app.userspace.ui),
            (this.view = this.app.userspace.view),
            (this.preferences = this.app.preferences);
        }),
        (e.prototype._init_fields = function () {
          (this.container_el = yr(".onboarding-container")),
            (this.title_el = yr(".onboarding-title")),
            (this.video_el = yr(".onboarding-video")),
            (this.caption_el = yr(".onboarding-caption")),
            (this.button_el = yr(".js-onboarding-next-step")),
            (this.current_step = 0),
            (this.has_redeemed_free_pro = 0);
        }),
        (e.prototype._init_after = function () {
          this.register_events(),
            this._set_welcome_user_name(),
            this._fill_in_page_names();
        }),
        (e.prototype.register_events = function () {
          var t = this,
            e = this.events.make_context_on_off($(".AppContainer"));
          this.events.register_with_context_array(e, [
            ["click", ".js-open-feedback", this._open_feedback.bind(this)],
          ]),
            this.events.register_array_on_off([
              [this.button_el, "click", this.next_step.bind(this)],
              [
                $(".onboarding-close-btn"),
                "click",
                this.exit_onboarding.bind(this),
              ],
              [
                $(".onboarding-page-link"),
                "click",
                this._go_to_step.bind(this),
              ],
              [
                $(".demo-tutorial-prompt .close-btn"),
                "click",
                function () {
                  yr(".demo-tutorial-prompt").hide();
                },
              ],
              [
                $(".js-demo-start-onboarding"),
                "click",
                function (e) {
                  e.preventDefault(),
                    t.ui.is_mobile_view() ||
                      (yr(".demo-tutorial-prompt").hide(),
                      (t.current_step = 1),
                      t.start_onboarding());
                },
              ],
            ]);
        }),
        (e.prototype.restart_onboarding = function () {
          (this.current_step = 1), this.start_onboarding();
        }),
        (e.prototype.start_onboarding = function () {
          this.ui.is_mobile_view() ||
            (this._get_has_redeemed(),
            this.container_el.show(),
            this._display_current_step());
        }),
        (e.prototype.exit_onboarding = function () {
          (this.current_step = 0),
            this.container_el.hide(),
            this.preferences.set_boolean(Ps.FINISHED_ONBOARDING, !0);
        }),
        (e.prototype.next_step = function () {
          (this.current_step += 1),
            this.current_step >= Bc.length
              ? this.exit_onboarding()
              : this._display_current_step();
        }),
        (e.prototype._display_current_step = function () {
          0 === this.current_step
            ? yr(".onboarding-page-slider").hide()
            : (yr(".onboarding-page-slider").show(),
              yr(".onboarding-page-link").removeClass("is-current"),
              yr(".onboarding-page-link")
                .get(this.current_step - 1)
                .addClass("is-current"));
          var e = Bc[this.current_step],
            t = this.video_el[0],
            i = bool(e.video_file_name);
          this.title_el.text(e.title),
            this.container_el.toggleClass("has-video", i),
            i &&
              (this.video_el.attr(
                "poster",
                this._get_video_poster_url(e.video_file_name),
              ),
              t.pause(),
              this._fill_in_video_source_url(e.video_file_name),
              t.load(),
              t.play());
          var n = e.caption_html;
          this.current_step === Bc.length - 1 &&
            (this.has_redeemed_free_pro
              ? (n += "<p>That's it, happy listing!</p>")
              : ((n +=
                  '<p><em>To thank you for trying out Dynalist, we\'ve gifted 14 days of free Dynalist Pro to you.</em> <a href="http://help.dynalist.io/article/94-pro-features" target="_blank">See what\'s included</a>.</p>'),
                this.app.config.is_demo_view() ||
                  this.view.redeem_free_14_day_pro())),
            this.caption_el.html(n),
            this.button_el
              .text(e.button_text || "Next")
              .toggleClass("mod-primary", !1 !== e.is_primary_button);
        }),
        (e.prototype._go_to_step = function (e) {
          e.preventDefault();
          var t = e.currentTarget;
          (this.current_step = parseInt(t.getAttr("data-index"))),
            this._display_current_step();
        }),
        (e.prototype._open_feedback = function (e) {
          e.preventDefault(),
            this.exit_onboarding(),
            this.ui.open_modal("feedback");
        }),
        (e.prototype._set_welcome_user_name = function () {
          var e = this.app.config.get_name();
          "" !== e && (e = ", " + e),
            (Bc[0].title = Bc[0].title.replace("{name}", e));
        }),
        (e.prototype._fill_in_page_names = function () {
          each(Bc, function (e, t) {
            0 !== t &&
              yr(".onboarding-page-link")
                .eq(t - 1)
                .attr("aria-label", e.title);
          });
        }),
        (e.prototype._fill_in_video_source_url = function (e) {
          var t = "/assets/vid/onboarding/" + e;
          this.video_el
            .find('source[type="video/webm"]')
            .attr("src", t + ".webm"),
            this.video_el
              .find('source[type="video/mp4"]')
              .attr("src", t + ".mp4"),
            this.video_el
              .find('source[type="video/ogg"]')
              .attr("src", t + ".ogv");
        }),
        (e.prototype._get_video_poster_url = function (e) {
          return "/assets/vid/onboarding/" + e + ".png";
        }),
        (e.prototype._get_has_redeemed = function () {
          var t = this;
          this.app.config.is_demo_view()
            ? (this.has_redeemed_free_pro = 0)
            : this.app.network.enqueue(q, {}, function (e) {
                t.has_redeemed_free_pro = e.has_redeemed_bonus;
              });
        }),
        e
      );
    })(To),
    jc = {
      LOGGED_OUT: { dismissible: !0, autoclose: !1, error: !0 },
      UPDATE_AVAILABLE: { dismissible: !0, autoclose: !1, error: !1 },
      UPDATE_RECOMMENDED: { dismissible: !1, autoclose: !1, error: !1 },
      MOVE_ITEM_SUCCESS: { dismissible: !0, autoclose: !0, error: !1 },
      MOVE_ITEM_FAILURE: { dismissible: !0, autoclose: !1, error: !0 },
      GCAL_SYNC: { dismissible: !0, autoclose: !0, error: !1 },
      SET_INBOX: { dismissible: !0, autoclose: !0, error: !1 },
      INBOX_CAPTURE_SUCCESS: { dismissible: !0, autoclose: !0, error: !1 },
      INBOX_CAPTURE_FAILURE: { dismissible: !0, autoclose: !1, error: !0 },
      INBOX_CAPTURE_EMPTY: { dismissible: !0, autoclose: !1, error: !0 },
      SYNC_NOT_WORKING: { dismissible: !0, autoclose: !1, error: !0 },
      DISMISSIBLE_ERROR: { dismissible: !0, autoclose: !1, error: !0 },
      REPLACE_TEXT_SUCCESS: { dismissible: !0, autoclose: !0, error: !1 },
    },
    Gc = {
      LOGGED_OUT:
        "You have been logged out. Please open a new tab to login to continue syncing with Dynalist.",
      UPDATE_AVAILABLE:
        "There's a new version available. Refresh to get the newest version.",
      UPDATE_AVAILABLE_DESKTOP:
        "A new version of Dynalist is available. Please restart the app to update.",
      MOVE_ITEM_FAILURE:
        "Dynalist failed to move the item, please move it manually or try again.",
      INSERT_TEMPLATE_FAILURE:
        "Dynalist failed to insert the template, please copy it manually or try again.",
      INBOX_CAPTURE_SUCCESS: "Successfully captured to your inbox.",
      INBOX_CAPTURE_FAILURE:
        "Capture to inbox failed, please double check your inbox location and try again.",
      INBOX_CAPTURE_EMPTY:
        'You haven\'t set an inbox location. Please select an item and choose "Set as inbox" in the item menu.',
      CLEANUP_NEWLINES_SUCCESS:
        "Trailing newlines have been successfully cleaned up.",
    },
    qc = { LOGGED_OUT: "logged-out", UPDATE_AVAILABLE: "update-available" },
    $c = (function (t) {
      function e(e) {
        return t.call(this, "PopupMessageManager", e) || this;
      }
      return (
        nt(e, t),
        (e.prototype._init_fields = function () {
          (this.popups_container_el = fish(".dismissible-popups-container")),
            (this.banner_el = fish(".popup-message-banner")),
            (this.existing_message_map = {});
        }),
        (e.prototype.display_logged_out_popup = function () {
          this._display_popup(Gc.LOGGED_OUT, jc.LOGGED_OUT, qc.LOGGED_OUT);
        }),
        (e.prototype.display_update_available_popup = function () {
          this.app.env.is("desktop")
            ? this._display_popup(
                Gc.UPDATE_AVAILABLE_DESKTOP,
                jc.UPDATE_AVAILABLE,
                qc.UPDATE_AVAILABLE,
              )
            : this._display_popup(
                Gc.UPDATE_AVAILABLE,
                jc.UPDATE_AVAILABLE,
                qc.UPDATE_AVAILABLE,
              );
        }),
        (e.prototype.display_update_recommended_popup = function () {
          this.app.env.is("desktop")
            ? this._display_popup(
                Gc.UPDATE_AVAILABLE_DESKTOP,
                jc.UPDATE_RECOMMENDED,
              )
            : this._display_popup(Gc.UPDATE_AVAILABLE, jc.UPDATE_RECOMMENDED);
        }),
        (e.prototype.display_move_item_success_popup = function (e, t, i) {
          var n = xt(Rt(e, 20)),
            o = xt(Rt(t, 20));
          this._display_popup(
            'The item "' +
              n +
              '" was successfully moved under "<a class="move-item-destination-link" href="' +
              i +
              '">' +
              o +
              '</a>".',
            jc.MOVE_ITEM_SUCCESS,
          );
        }),
        (e.prototype.display_move_item_multiple_success_popup = function (
          e,
          t,
          i,
        ) {
          var n = xt(Rt(t, 20));
          this._display_popup(
            e +
              ' items were successfully moved under "<a class="move-item-destination-link" href="' +
              i +
              '">' +
              n +
              '</a>".',
            jc.MOVE_ITEM_SUCCESS,
          );
        }),
        (e.prototype.display_move_item_failure_popup = function () {
          this._display_popup(Gc.MOVE_ITEM_FAILURE, jc.MOVE_ITEM_FAILURE);
        }),
        (e.prototype.displayInsertTemplateFailurePopup = function () {
          this._display_popup(Gc.INSERT_TEMPLATE_FAILURE, jc.MOVE_ITEM_FAILURE);
        }),
        (e.prototype.display_turn_on_gcal_sync = function (e) {
          var t = this.app.preferences.get(Ps.GCAL_SYNC_CALENDAR_NAME);
          this._display_popup(
            'Dates in "' +
              xt(e) +
              '" will now be synced to your "' +
              xt(t) +
              '" calendar.',
            jc.GCAL_SYNC,
          );
        }),
        (e.prototype.display_turn_off_gcal_sync = function (e) {
          var t = this.app.preferences.get(Ps.GCAL_SYNC_CALENDAR_NAME);
          this._display_popup(
            'Dates in "' +
              xt(e) +
              '" will no longer get synced to your "' +
              xt(t) +
              '" calendar.',
            jc.GCAL_SYNC,
          );
        }),
        (e.prototype.display_set_inbox_popup = function (e) {
          var t = xt(Rt(e, 20));
          this._display_popup(
            '"' + xt(t) + '" is now your inbox location.',
            jc.SET_INBOX,
          );
        }),
        (e.prototype.display_inbox_capture_success_popup = function () {
          this._display_popup(
            Gc.INBOX_CAPTURE_SUCCESS,
            jc.INBOX_CAPTURE_SUCCESS,
          );
        }),
        (e.prototype.display_inbox_capture_failure_popup = function () {
          this._display_popup(
            Gc.INBOX_CAPTURE_FAILURE,
            jc.INBOX_CAPTURE_FAILURE,
          );
        }),
        (e.prototype.display_inbox_capture_empty_popup = function () {
          this._display_popup(Gc.INBOX_CAPTURE_EMPTY, jc.INBOX_CAPTURE_EMPTY);
        }),
        (e.prototype.displayDismissibleMessage = function (e) {
          this._display_popup(e, { dismissible: !0, autoclose: !0, error: !1 });
        }),
        (e.prototype.display_sync_not_working = function () {
          this._display_popup(
            "Dynalist hasn't been able to sync for quite a while. If this problem persists, <a href=\"http://help.dynalist.io/article/111-my-dynalist-is-having-trouble-syncing-to-the-server\">here's how to save your work</a>.",
            jc.SYNC_NOT_WORKING,
          );
        }),
        (e.prototype.display_error_popup = function (e) {
          this._display_popup(e, jc.DISMISSIBLE_ERROR);
        }),
        (e.prototype.display_cleanup_newlines_success_popup = function (e) {
          var t = xt(Rt(e, 20));
          this._display_popup(
            'Trailing newlines have been successfully cleaned up for "' +
              t +
              '</a>".',
            jc.MOVE_ITEM_SUCCESS,
          );
        }),
        (e.prototype.displayReplaceSuccessMessage = function (e, t, i) {
          var n = 1 < e ? "occurrences" : "occurrence";
          this._display_popup(
            e +
              " " +
              n +
              ' of "' +
              xt(t) +
              '" has been successfully replaced with "' +
              xt(i) +
              '". <a class="js-undo" href="#">Undo</a>',
            jc.REPLACE_TEXT_SUCCESS,
          );
        }),
        (e.prototype._display_popup = function (e, t, i) {
          if ((void 0 === i && (i = ""), t.dismissible))
            this.app.userspace.ui.is_mobile_view()
              ? this._display_mobile_dismissible_popup(e, t, i)
              : this._display_dismissible_popup(e, t, i);
          else {
            this.popups_container_el.addClass("is-showing-update-banner");
            var n = this.banner_el;
            n.setText(e), n.uShow(), n.toggleClass("is-error", t.error);
          }
        }),
        (e.prototype.dismiss_popup = function (e, t, i) {
          void 0 === t && (t = !0),
            void 0 === i && (i = ""),
            null !== e &&
              e.parentNode === this.popups_container_el &&
              (t
                ? ((e.style.maxHeight = 0),
                  this.set_timeout(function () {
                    e.detach();
                  }, 500))
                : e.detach(),
              this.existing_message_map[i] &&
                delete this.existing_message_map[i]);
        }),
        (e.prototype._display_dismissible_popup = function (e, i, n) {
          var o = this;
          ("" !== n && this.existing_message_map[n]) ||
            (this.popups_container_el.createEl(
              "div",
              { cls: "dismissible-popup popover" },
              function (t) {
                (t.innerHTML = e),
                  i.error && t.addClass("is-error"),
                  t.createEl("div", { cls: "close-btn" }, function (e) {
                    e.addEventListener("click", function () {
                      o.dismiss_popup(t, !1, n);
                    });
                  }),
                  i.autoclose &&
                    o.set_timeout(function () {
                      o.dismiss_popup(t, !0, n);
                    }, 5e3);
              },
            ),
            (this.existing_message_map[n] = !0));
        }),
        (e.prototype._display_mobile_dismissible_popup = function (t, i, n) {
          var o = this;
          "" === n &&
            this.popups_container_el.createEl(
              "div",
              { cls: "mobile-dismissible-popup" },
              function (e) {
                (e.innerHTML = t),
                  e.addEventListener("click", function () {
                    o.queue(function () {
                      o.dismiss_popup(e, !1, n);
                    });
                  }),
                  i.autoclose &&
                    o.set_timeout(function () {
                      o.dismiss_popup(e, !1, n);
                    }, 5e3);
              },
            );
        }),
        e
      );
    })(To),
    Wc = (function () {
      function e() {
        (this.body = document.querySelector("body")),
          this.body.on(
            "mouseover",
            "[aria-label]",
            this.onDisplayTooltip.bind(this),
          ),
          this.body.on("mouseout", "[aria-label]", this.onMouseOut.bind(this)),
          this.body.addEventListener("click", this.hideTooltip.bind(this));
      }
      return (
        (e.prototype.displayTooltip = function (e, t, i, n, o) {
          if (this.parentEl !== e) {
            this.hideTooltip();
            var s = e.getBoundingClientRect(),
              r = s.top,
              a = s.left,
              _ = s.width,
              c = s.height;
            void 0 === o && (o = 8);
            var l,
              u,
              h = createEl("div", { cls: "tooltip", text: t }),
              p = h.createEl("div", { cls: "tooltip-arrow" }),
              d = n || [];
            "bottom" === i
              ? ((l = r + c + o), (u = a + _ / 2))
              : "right" === i
              ? ((l = r + c / 2), (u = a + _ + o), d.push("mod-right"))
              : "left" === i
              ? ((l = r + c / 2), (u = a - o), d.push("mod-left"))
              : "top" === i &&
                ((l = r - o - 5), (u = a + _ / 2), d.push("mod-top")),
              h.addClasses(d),
              (h.style.top = "0px"),
              (h.style.left = "0px"),
              (h.style.width = ""),
              (h.style.height = ""),
              this.body.appendChild(h);
            var f = h.getBoundingClientRect(),
              g = ["bottom", "top"].contains(i) ? f.width / 2 : f.width,
              m = "right" === i || "left" === i ? f.height / 2 : f.height;
            if (
              ("left" === i ? (u -= g) : "top" === i && (l -= m),
              l + m > window.innerHeight && (l = window.innerHeight - m - o),
              (l = Math.max(l, o)),
              "top" === i || "bottom" === i)
            ) {
              if (u + g > window.innerWidth)
                (u -= v = u + g + o - window.innerWidth),
                  (p.style.left = "initial"),
                  (p.style.right = g - v - o / 2 + "px");
              else if (u - o - g < 0) {
                var v;
                (u += v = -(u - o - g)),
                  (p.style.right = "initial"),
                  (p.style.left = g - v - o / 2 + "px");
              }
              u = Math.max(u, o);
            }
            (h.style.top = l + "px"),
              (h.style.left = u + "px"),
              (h.style.width = f.width + "px"),
              (h.style.height = f.height + "px"),
              (this.tooltipEl = h),
              (this.parentEl = e);
          }
        }),
        (e.prototype.onDisplayTooltip = function (e, t) {
          var i = t.getAttribute("aria-label"),
            n = "bottom",
            o = [];
          t.hasAttribute("aria-label-position") &&
            (n = t.getAttribute("aria-label-position")),
            t.hasAttribute("aria-label-classes") &&
              (o = t.getAttribute("aria-label-classes").split(" ")),
            this.displayTooltip(t, i, n, o);
        }),
        (e.prototype.onMouseOut = function (e, t) {
          var i = e.relatedTarget;
          (i instanceof Node && t.contains(i)) || this.hideTooltip();
        }),
        (e.prototype.hideTooltip = function () {
          this.tooltipEl &&
            (this.tooltipEl.detach(),
            (this.tooltipEl = null),
            (this.parentEl = null));
        }),
        e
      );
    })(),
    Yc = { space: "", asterisk: "* ", dash: "- ", no_indentation: "" },
    Kc = "selected_export_format",
    Vc = "indentation_style",
    Xc = "formatted",
    Zc = "plain-text",
    Jc = "opml",
    Qc = (function (i) {
      function e(e) {
        var t = i.call(this, "ExportManager", e, null) || this;
        return (
          (t.events = t.submodule(new Eo())),
          t._register_state(Kc, Zc, t.selected_export_format_changed),
          t._register_state(Vc, "space", t.indentation_style_changed),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          (this.userspace_view = this.app.userspace.view),
            (this.userspace_ui = this.app.userspace.ui);
        }),
        (e.prototype._init_fields = function () {
          (this.options = {}),
            (this.exported_document = null),
            (this.export_portable_node = null),
            (this.formatted_content_el = null),
            (this.plain_text_content_el = null),
            (this.opml_content_el = null),
            (this.$indentation_style_input_el = null),
            (this.nav_items_el = null),
            (this.content_sections_el = null),
            (this.hide_visible_el = null),
            (this.indentation_options_el = null),
            this.use_normal_container();
        }),
        (e.prototype._init_after = function () {
          this.events.register_array_on_off([
            [
              $(".MenuItem--exportDocument"),
              "click",
              this.on_export_document_mouseup.bind(this),
            ],
            [
              $(".js-copy-exported-to-clipboard"),
              "click",
              this.on_copy_to_clipboard_click.bind(this),
            ],
            [
              $(".js-download-exported-as-file"),
              "click",
              this.on_download_as_file_click.bind(this),
            ],
            [
              $('input[name="export-indentation-style"]'),
              "change",
              this.on_export_indentation_style_change.bind(this),
            ],
            [
              $(".export-nav-item"),
              "click",
              this.on_export_nav_item_click.bind(this),
            ],
          ]);
        }),
        (e.prototype._load = function () {
          this._update_all_states();
          var e = fish(".js-download-exported-as-file");
          e && this.app.env.is("mobile") && e.hide();
        }),
        (e.prototype.use_normal_container = function () {
          this.update_elements(fish(".modal-container.export"));
        }),
        (e.prototype.use_version_history_container = function () {
          this.update_elements(fish(".version-history-export"));
        }),
        (e.prototype.update_elements = function (e) {
          (this.formatted_content_el = e.find(
            ".export-content-section.mod-formatted",
          )),
            (this.plain_text_content_el = e.find(
              ".export-content-section.mod-plain-text",
            )),
            (this.opml_content_el = e.find(".export-content-section.mod-opml")),
            (this.$indentation_style_input_el = $(
              e.find('input[name="export-indentation-style"]'),
            )),
            (this.nav_items_el = e.findAll(".export-nav-item")),
            (this.content_sections_el = e.findAll(".export-content-section")),
            (this.hide_visible_el = e.find(".export-hide-visible")),
            (this.indentation_options_el = e.find(
              ".export-indentation-options",
            ));
        }),
        (e.prototype.selected_export_format_changed = function (e) {
          this.nav_items_el.forEach(function (e) {
            return e.removeClass("is-selected");
          }),
            this.content_sections_el.forEach(function (e) {
              return e.removeClass("is-selected");
            });
          var t = this.get_active_content_el(),
            i = this.get_active_nav_item_el();
          t && t.addClass("is-selected"),
            i && i.addClass("is-selected"),
            this.indentation_options_el.uToggle(e === Zc),
            this.select_all_in_active_content_el();
        }),
        (e.prototype.indentation_style_changed = function (e) {
          var t = "no_indentation" !== e;
          this.update_export_indentation_style(Yc[e], t);
        }),
        (e.prototype.set_hide_invisible = function (e) {
          (this.options.hide_invisible = e), this.update_export_content();
        }),
        (e.prototype.on_export_nav_item_click = function (e) {
          var t = e.currentTarget.getAttribute("data-format");
          this.set(Kc, t);
        }),
        (e.prototype.on_copy_to_clipboard_click = function (e) {
          var t = e.target,
            i = this.get_active_content_el(),
            n = !1;
          try {
            i.focus(),
              (n =
                document.execCommand("selectAll", !1, null) &&
                document.execCommand("copy")),
              i.blur();
          } catch (e) {}
          n ? t.setText("Copied!") : t.setText("Please manually copy"),
            setTimeout(function () {
              t.setText("Copy to clipboard");
            }, 1e3);
        }),
        (e.prototype.on_download_as_file_click = function () {
          var e = this.get_visible_only_export_skip_callback(),
            t = this.shouldHideNote(),
            i = this.get(Kc),
            n = "",
            o = "",
            s = "text/plain";
          i === Xc
            ? ((n =
                "<!DOCTYPE html><html><body>" +
                (n = this.export_portable_node.export_formatted({
                  skip_callback: e,
                  hideNote: t,
                }).innerHTML) +
                "</body></html>"),
              (o = "html"),
              (s = "text/html"))
            : i === Zc
            ? ((n = this.export_portable_node.export_plaintext_children({
                skip_callback: e,
                prefix: this.options.prefix,
                has_indentation: this.options.has_indentation,
              })),
              (o = "txt"))
            : i === Jc &&
              ((n = this.export_portable_node.export_opml(DYNALIST.SESSION, {
                skip_callback: e,
              })),
              (o = "opml"),
              (s = "text/opml")),
            this.download_exported_file(n, s, o);
        }),
        (e.prototype.on_export_document_mouseup = function () {
          this.use_normal_container();
          var e = this.userspace_view.get_current_file();
          e instanceof Vn && this.export_document(e),
            this.userspace_ui.hide_context_menu();
        }),
        (e.prototype.on_export_indentation_style_change = function (e) {
          var t = e.currentTarget;
          this.set(Vc, t.value);
        }),
        (e.prototype.get_indentation_prefix = function () {
          var e = this.$indentation_style_input_el.val();
          return Yc[e];
        }),
        (e.prototype.export_document = function (e) {
          var s = this;
          (this.userspace_ui.modal_manager
            .get_modal_el("export")
            .removeClass("has-network-problem"),
          this.app.find_app_document(e))
            ? (this.export_node([e.get_node_collection().get_root()], null),
              this.userspace_ui.open_modal("export"))
            : (this.userspace_ui.open_modal("export"),
              this.userspace_ui.modal_manager.start_spinner(),
              new xo(e.get_server_id(), this.app.network).load(
                null,
                function (e, t) {
                  if (e)
                    s.userspace_ui.modal_manager
                      .get_modal_el("export")
                      .addClass("has-network-problem");
                  else {
                    var i = new Kn(),
                      n = wo.from_node_collection(i),
                      o = wo.from_server_load(t.nodes, t.root_node_server_id);
                    ko.make_diff(n, o).apply(i, !1, !0),
                      s.export_node([i.get_root()], null);
                  }
                  s.userspace_ui.modal_manager.stop_spinner();
                },
              ));
        }),
        (e.prototype.export_node = function (e, t) {
          e instanceof Array
            ? (this.export_portable_node = l_.from_nodes(e))
            : (this.export_portable_node = l_.from_node(e)),
            (this.exported_document = t),
            this.hide_visible_el.uToggle(bool(t)),
            this.update_export_content();
        }),
        (e.prototype.update_export_content = function () {
          this.rerender_exported_content(),
            this.select_all_in_active_content_el();
        }),
        (e.prototype.rerender_exported_content = function () {
          this.rerender_exported_formatted(),
            this.rerender_exported_plain_text(),
            this.rerender_exported_opml();
        }),
        (e.prototype.rerender_exported_formatted = function () {
          if (this.export_portable_node) {
            var e = this.get_visible_only_export_skip_callback(),
              t = this.shouldHideNote(),
              i = this.export_portable_node.export_formatted_children({
                skip_callback: e,
                hideNote: t,
              });
            (this.formatted_content_el.innerHTML = ""),
              this.formatted_content_el.appendChild(i);
          }
        }),
        (e.prototype.rerender_exported_plain_text = function () {
          if (this.export_portable_node) {
            var e = this.get_visible_only_export_skip_callback(),
              t = this.shouldHideNote(),
              i = this.export_portable_node.export_plaintext_children({
                skip_callback: e,
                hideNote: t,
                prefix: this.options.prefix,
                has_indentation: this.options.has_indentation,
              });
            (this.plain_text_content_el.innerHTML = ""),
              this.plain_text_content_el.createEl("pre", { text: i });
          }
        }),
        (e.prototype.rerender_exported_opml = function () {
          if (this.export_portable_node) {
            var e = this.get_visible_only_export_skip_callback(),
              t = this.shouldHideNote(),
              i = this.export_portable_node.export_opml(DYNALIST.SESSION, {
                skip_callback: e,
                hideNote: t,
              });
            (this.opml_content_el.innerHTML = ""),
              this.opml_content_el.createEl("pre", { text: i });
          }
        }),
        (e.prototype.update_export_indentation_style = function (e, t) {
          void 0 === t && (t = !0),
            (this.options.prefix = e),
            (this.options.has_indentation = t),
            this.rerender_exported_plain_text(),
            this.select_all_in_active_content_el();
        }),
        (e.prototype.get_active_content_el = function () {
          var e = this.get(Kc);
          return e === Xc
            ? this.formatted_content_el
            : e === Zc
            ? this.plain_text_content_el
            : e === Jc
            ? this.opml_content_el
            : void 0;
        }),
        (e.prototype.get_active_nav_item_el = function () {
          for (
            var e = this.get(Kc), t = 0, i = this.nav_items_el;
            t < i.length;
            t++
          ) {
            var n = i[t];
            if (n.getAttribute("data-format") === e) return n;
          }
          return null;
        }),
        (e.prototype.download_exported_file = function (e, t, i) {
          try {
            new Blob();
            var n = new Blob([e], { type: t + ";charset=utf-8" }),
              o = this.export_portable_node.get_content() || "dynalist",
              s = new Date(),
              r =
                s.getFullYear() + "-" + (s.getMonth() + 1) + "-" + s.getDate();
            Di(n, o + "-" + r + "." + i);
          } catch (e) {
            alert(
              "Your browser doesn't let us create files on the fly. You'll need to create the file yourself.",
            );
          }
        }),
        (e.prototype.get_visible_only_export_skip_callback = function () {
          var e = null,
            t = this.exported_document;
          if (!t || !this.options.hide_invisible) return e;
          var o = this.app.find_app_document(t);
          return (
            o &&
              o.ui &&
              (e = function (e) {
                var t = e.node;
                if (t) {
                  var i = t.get_parent();
                  if (i)
                    if (o.ui.get_node_state(i).is_ui_collapsed()) return !0;
                  var n = o.ui.get_node_state(t);
                  if (n) return !n.is_visible() || void 0;
                }
              }),
            e
          );
        }),
        (e.prototype.shouldHideNote = function () {
          var e = this.exported_document;
          if (!e || !this.options.hide_invisible) return !1;
          var t = this.app.find_app_document(e);
          return (
            !(!t || !t.ui) &&
            t.ui.get_render_options().note_display !== Fs.NOTE_DISPLAY.SHOW
          );
        }),
        (e.prototype.select_all_in_active_content_el = function () {
          var t = this;
          this.queue(function () {
            var e = t.get_active_content_el();
            e &&
              !(function e(t) {
                var i = document.createRange();
                i.selectNodeContents(t);
                var n = window.getSelection();
                n.removeAllRanges(), n.addRange(i);
              })(e);
          });
        }),
        e
      );
    })(N_),
    el = As(),
    tl = (function (t) {
      function e(e) {
        return t.call(this, "FileItemRenderer", e) || this;
      }
      return (
        nt(e, t),
        (e.prototype._init_dependencies = function () {
          (this.userspace_ui = this.app.userspace.ui),
            (this.file_item_view = this.app.userspace.view.file_item_view);
        }),
        (e.prototype._init_fields = function () {}),
        (e.prototype.initialize = function (e) {
          (e.$children_el = $(e.children_el)), (e.$container = $(e.container));
          var t = e.file,
            i = e.container;
          el.set(i, t.get_id()), this.file_item_view.initialize_complete(e);
        }),
        (e.prototype.initialize_visible_file = function (e) {
          var t = e.title_el;
          $(e.title_el).on("paste", function () {
            wt(function () {
              return t.setText(t.getText() || "");
            });
          });
        }),
        (e.prototype.initialize_folder = function (t) {
          var i = t.file;
          t.container = createEl(
            "div",
            { cls: "FolderItem pane-item pane-item-parent is-empty" },
            function (e) {
              (t.header_el = e.createEl(
                "div",
                { cls: "FolderItem-header pane-item-header" },
                function (e) {
                  (t.$header_el = $(e)),
                    (t.toggler_el = e.createEl("div", {
                      cls: "FolderItem-toggler pane-item-toggler",
                    })),
                    (t.icon_el = e.createEl("div", {
                      cls: "FolderItem-icon pane-item-icon",
                    })),
                    (t.title_el = e.createEl("div", {
                      cls: "FolderItem-title pane-item-title",
                      text: i.get_title(),
                    }));
                },
              )),
                (t.menu_trigger_el = e.createEl("div", {
                  cls: "FolderItem-menuTrigger pane-item-menu-trigger",
                })),
                (t.children_el = e.createEl("div", {
                  cls: "pane-item-children",
                }));
            },
          );
        }),
        (e.prototype.initialize_document = function (t) {
          var i = t.file;
          t.container = createEl(
            "div",
            { cls: "DocumentItem pane-item" },
            function (e) {
              (t.header_el = e.createEl(
                "div",
                { cls: "DocumentItem-header pane-item-header" },
                function (e) {
                  (t.$header_el = $(e)),
                    (t.icon_el = e.createEl("div", {
                      cls: "DocumentItem-icon pane-item-icon",
                    })),
                    (t.title_el = e.createEl("div", {
                      cls: "DocumentItem-title pane-item-title",
                      text: i.get_title(),
                    }));
                },
              )),
                (t.menu_trigger_el = e.createEl("div", {
                  cls: "DocumentItem-menuTrigger pane-item-menu-trigger",
                })),
                (t.children_el = null);
            },
          );
        }),
        (e.prototype.initialize_bookmark = function (t) {
          var i = t.file;
          t.container = createEl(
            "div",
            { cls: "BookmarkItem pane-item" },
            function (e) {
              (t.header_el = e.createEl(
                "div",
                { cls: "BookmarkItem-header pane-item-header" },
                function (e) {
                  (t.$header_el = $(e)),
                    (t.icon_el = e.createEl("div", {
                      cls: "BookmarkItem-icon pane-item-icon",
                    })),
                    (t.title_el = e.createEl("div", {
                      cls: "BookmarkItem-title pane-item-title",
                      text: i.get_data_object().get_title(),
                    }));
                },
              )),
                (t.menu_trigger_el = e.createEl("div", {
                  cls: "BookmarkItem-menuTrigger pane-item-menu-trigger",
                })),
                (t.children_el = null);
            },
          );
        }),
        (e.prototype.initialize_rootfile = function (e) {
          (e.container = createEl("div", { cls: "RootFileItem" })),
            (e.children_el = this.userspace_ui.get_container());
        }),
        (e.prototype.initialize_root_bookmark = function (e) {
          (e.container = createEl("div", { cls: "RootFileItem" })),
            (e.children_el = this.userspace_ui.get_bookmarks_container());
        }),
        (e.prototype.initialize_linkfile = function (e) {
          (e.container = createEl("div", { cls: "LinkFileItem" })),
            (e.children_el = e.container);
        }),
        (e.prototype.ui_permission_change = function (e) {
          if (e.is_visible_type()) {
            var t = e.ui_permission;
            e.icon_el.toggleClass("is-readOnly", t <= ee);
          }
        }),
        (e.prototype.ui_renaming_change = function (e) {
          if (e.is_visible_type()) {
            var t = e.title_el,
              i = this.app.preferences.get_boolean(Ps.SPELLCHECK),
              n = e.ui_renaming;
            t.setAttr("contenteditable", n),
              t.toggleClass("is-beingEdited", n),
              t.setAttr("spellcheck", n && i),
              this.file_item_view.update_renaming(e),
              n || t.setText(t.getText());
          }
        }),
        (e.prototype.ui_selected_change = function (e) {
          if (e.is_visible_type()) {
            var t = e.header_el,
              i = e.ui_selected;
            t.toggleClass("selected", i);
          }
        }),
        (e.prototype.ui_collapsed_change = function (e, t) {
          if (e.is_folder_type()) {
            var i = e.header_el,
              n = e.children_el,
              o = e.ui_collapsed;
            if (
              (i.toggleClass("is-collapsed", o),
              e.ui_parent_file_item_state || (t = !1),
              o)
            ) {
              var s = function () {
                n.hide();
              };
              t ? Oa(n, s) : s();
            } else {
              s = function () {
                n.show();
              };
              t ? Ta(n, s) : s();
            }
          }
        }),
        (e.prototype.ui_archived_change = function (e) {
          if (e.is_document_type()) {
            var t = e.ui_archived;
            e.header_el.toggleClass("is-archived", t);
          }
        }),
        (e.prototype.ui_open_change = function (e) {
          if (e.is_document_type()) {
            var t = e.container,
              i = e.ui_open;
            t.toggleClass("is-open", i);
          }
        }),
        (e.prototype.ui_parent_file_item_state_change = function (e) {
          var t = e.file,
            i = e.container,
            n = e.ui_parent_file_item_state;
          if (
            (e.previous_ui_parent_file_item_state &&
              this.file_item_view.update_parental_properties(
                e.previous_ui_parent_file_item_state,
              ),
            (e.previous_ui_parent_file_item_state = n))
          ) {
            n.container.removeClass("is-empty");
            var o = n.children_el;
            if (t.is_first() || !t.has_parent()) o.prepend(i);
            else {
              var s = this.file_item_view.get_file_item_state(t.prev());
              s &&
                (s.ui_parent_file_item_state !== n &&
                  s.set_ui_parent_file_item_state(n),
                i.insertAfter(s.container));
            }
            i.show(),
              this.file_item_view.update_shared(e),
              this.file_item_view.update_renaming(e),
              this.file_item_view.update_collapse(e),
              this.file_item_view.update_parental_properties(n);
          } else i.detach();
        }),
        (e.get_file_id_from_file_inner_el = function (e) {
          for (var t = e; t; ) {
            var i = el.get(t);
            if (i) return i;
            t = t.parentElement;
          }
          return "";
        }),
        e
      );
    })(To),
    il = function (e, t) {
      return e.timestamp - t.timestamp;
    },
    nl = "is_open",
    ol = "is_button_unread",
    sl = As(),
    rl = (function (i) {
      function e(e) {
        var t = i.call(this, "NotificationsUi", e, null) || this;
        return (
          t._register_state(nl, !1, t.is_open_changed),
          t._register_state(ol, !1, t.is_button_unread_changed),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype._init_before = function () {
          (this.view = this.app.userspace.view),
            (this.notification_container_el = yr(".NotificationsContainer")),
            (this.notification_button_el = yr(".AppHeader-notifications")),
            (this.notification_container_list_el = yr(
              ".NotificationsContainer-list",
            )),
            (this.notification_container_empty_el = yr(
              ".NotificationsContainer-emptyState",
            ));
        }),
        (e.prototype._load = function () {
          this._update_all_states();
        }),
        (e.prototype.toggle = function () {
          this.get(nl) ? this.close() : this.open();
        }),
        (e.prototype.open = function () {
          this.set(nl, !0), this.set(ol, !1);
        }),
        (e.prototype.close = function () {
          this.set(nl, !1), $(".Notification").removeClass("is-unread");
        }),
        (e.prototype.update_notifications = function (e) {
          var n = this;
          if (0 !== e.length) {
            var o = !1;
            e.sort(il),
              Array.each(e, function (e) {
                var t = createEl("a", {
                  cls: "Notification",
                  attr: { href: "#", target: "_blank" },
                });
                e.timestamp > n.view.get_last_read_timestamp() &&
                  (t.addClass("is-unread"), (o = !0)),
                  e.url &&
                    (t.addClass("has-link"), t.setAttrs({ href: e.url })),
                  t.createEl("div", {
                    cls: "Notification-content",
                    text: e.title,
                  });
                var i = t.createEl("div", {
                  cls: "Notification-timestamp",
                  text: St(e.timestamp),
                });
                sl.set(i, e.timestamp),
                  n.notification_container_list_el.prepend(t);
              }),
              this.notification_container_empty_el.hide(),
              this.set(ol, o);
          }
        }),
        (e.prototype.update_notification_timestamps = function () {
          fishAll(".Notification-timestamp").forEach(function (e) {
            var t = sl.get(e);
            if (t) {
              var i = St(t);
              e.setText(i);
            }
          });
        }),
        (e.prototype.is_open_changed = function (e) {
          this.notification_container_el.toggle(e),
            this.notification_button_el.toggleClass("active", e);
        }),
        (e.prototype.is_button_unread_changed = function (e) {
          this.notification_button_el.toggleClass("is-unread", e);
        }),
        e
      );
    })(N_),
    al = "is_open",
    _l = "is_mobile_open",
    cl = "active_pane",
    ll = "file_pane_active",
    ul = "bookmark_pane_active",
    hl = "tag_pane_active",
    pl = "page_height",
    dl = "pane_width",
    fl = "splitter_visible",
    gl = "splitter_left",
    ml = "saved_nav_width",
    vl = "pane_status",
    yl = "",
    bl = "loading",
    wl = "error",
    kl = (function (i) {
      function e(e) {
        var t = i.call(this, "PaneUi", e, null) || this;
        return (
          (t.events = t.submodule(new Eo())),
          (t.request_window_resize = t.debounce(
            t.on_window_resized.bind(t),
            0,
          )),
          t._register_state(al, !1, t.is_open_changed),
          t._register_state(_l, !1, t.is_mobile_open_changed),
          t._register_state(cl, "file", t.active_pane_changed),
          t._register_state(ll, !1, t.file_pane_active_changed),
          t._register_state(ul, !1, t.bookmark_pane_active_changed),
          t._register_state(hl, !1, t.tag_pane_active_changed),
          t._register_state(pl, 0, t.page_height_changed),
          t._register_state(dl, 0, t.pane_width_changed),
          t._register_state(fl, !1, t.splitter_visible_changed),
          t._register_state(gl, 0, t.splitter_left_changed),
          t._register_state(ml, 0, t.saved_nav_width_changed),
          t._register_state(vl, yl, t.pane_status_changed),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype._init_before = function () {
          (this.userspace_ui = this.app.userspace.ui),
            (this.app_container_el = yr(".AppContainer")),
            (this.app_header_el = yr(".AppHeader")),
            (this.normal_view_el = yr(".normal-view")),
            (this.left_pane_el = yr(".LeftPaneSlidebarContainer")),
            (this.left_pane_container_el = yr(
              ".LeftPaneContainer, .LeftPaneSlidebarContainer-overlay",
            )),
            (this.left_pane_container_panes_el = yr(
              ".LeftPaneContainer-panes",
            )),
            (this.left_pane_nav_el = yr(".LeftPaneContainer-nav")),
            (this.files_el = yr(
              ".LeftPaneContainer-navItem--myFiles, .FilePane",
            )),
            (this.bookmarks_el = yr(
              ".LeftPaneContainer-navItem--bookmarks, .BookmarkPane",
            )),
            (this.tags_el = yr(".LeftPaneContainer-navItem--tags, .TagPane")),
            (this.doc_container_el = yr(".DocumentContainer")),
            (this.splitter_el = yr(".LeftPaneSplitter")),
            (this.splitter_events = new Eo());
        }),
        (e.prototype._init_after = function () {
          this.events.register_array_on_off([
            [
              this.splitter_el,
              "mousedown",
              this.on_splitter_mouse_down.bind(this),
            ],
          ]);
          var e = $(document);
          this.splitter_events.register_array_on_off([
            [e, "mousemove", this.on_splitter_mouse_move.bind(this)],
            [e, "mouseup", this.on_splitter_mouse_up.bind(this)],
          ]),
            this.normal_view_el.css({ position: "relative" }),
            this.left_pane_el.css({ position: "absolute" }),
            this.splitter_el
              .css({
                position: "absolute",
                "z-index": "100",
                cursor: "ew-resize",
              })
              .addClass("u-no-select"),
            this.doc_container_el.css({ position: "absolute", "z-index": "0" });
        }),
        (e.prototype._load = function () {
          this._set(cl, lr.get_pane_name()),
            this._set(al, _r.is_expanded()),
            this._set(ml, cr.get_width()),
            this._update_all_states();
        }),
        (e.prototype.open_mobile_pane = function () {
          this.set(_l, !0);
        }),
        (e.prototype.close_mobile_pane = function () {
          this.set(_l, !1);
        }),
        (e.prototype.is_mobile_pane_open = function () {
          return this.get(_l);
        }),
        (e.prototype.set_pane_status_loading = function () {
          this.set(vl, bl);
        }),
        (e.prototype.set_pane_status_error = function () {
          this.set(vl, wl);
        }),
        (e.prototype.clear_pane_status = function () {
          this.set(vl, yl);
        }),
        (e.prototype.open_pane = function (e) {
          this.set(cl, e),
            this.app.config.isAnonymousView()
              ? this.set(al, !1)
              : this.set(al, !0);
        }),
        (e.prototype.close_pane = function () {
          this.set(al, !1);
        }),
        (e.prototype.toggle_pane = function (e) {
          var t = this.get(cl),
            i = this.get(al);
          this.userspace_ui.is_mobile_view() || !i || e !== t
            ? this.open_pane(e)
            : this.close_pane();
        }),
        (e.prototype.window_resized = function () {
          this.request_window_resize();
        }),
        (e.prototype.on_window_resized = function () {
          this.update_height(),
            this._update_nav_width(),
            this._update_active_pane();
        }),
        (e.prototype.update_height = function () {
          var t =
            this.app_container_el.height() - this.app_header_el.outerHeight();
          this.userspace_ui.preferences.get_boolean(Ps.WORD_COUNT) && (t -= 22),
            this.app.with_current_app_document(function (e) {
              e.ui.node_toolbar.get_is_toolbar_open() &&
                (t -= dc.TOOLBAR_HEIGHT);
            }),
            this.set(pl, t);
        }),
        (e.prototype.get_constrained_position = function (e) {
          return Math.max(100, Math.min(e, 600));
        }),
        (e.prototype.on_splitter_mouse_down = function (e) {
          this.normal_view_el.addClass("u-no-select"),
            this.splitter_events.hook_events(),
            (this.splitter_move_location =
              this.left_pane_el[0].offsetWidth - e.pageX);
        }),
        (e.prototype.on_splitter_mouse_move = function (e) {
          var t = this.get_constrained_position(
            this.splitter_move_location + e.pageX,
          );
          this.set(gl, t);
        }),
        (e.prototype.on_splitter_mouse_up = function (e) {
          this.normal_view_el.removeClass("u-no-select"),
            this.splitter_events.unhook_events();
          var t = this.get_constrained_position(
            this.splitter_move_location + e.pageX,
          );
          this.set(ml, t);
        }),
        (e.prototype._update_nav_width = function () {
          var e = this,
            t = this.userspace_ui.is_mobile_view(),
            i = this.app.config.isAnonymousView(),
            n = this.get(ml),
            o = Math.floor(this.normal_view_el.width()),
            s = this.splitter_el.width(),
            r = this.get(al),
            a = 0,
            _ = 0,
            c = !1;
          t ||
            i ||
            (r
              ? ((a = Math.max(n, 20)),
                this.left_pane_el.toggleClass("is-narrow", a < 170))
              : (a = 20),
            (_ = a + s),
            (c = r) && (_ += s - 3)),
            this.left_pane_container_el.addClass("has-no-transition"),
            wt(function () {
              e.left_pane_container_el.removeClass("has-no-transition");
            }),
            this.set(fl, c),
            this.set(gl, a),
            this.set(dl, a),
            this.doc_container_el.css({ left: _ }).outerWidth(o - _);
        }),
        (e.prototype._update_active_pane = function () {
          var e = this.get(cl),
            t = this.get(al),
            i = this.get(_l),
            n = this.userspace_ui.is_mobile_view(),
            o = t || (n && i);
          this.left_pane_container_panes_el.toggle(o),
            this.set(ll, o && "file" === e),
            this.set(ul, o && "bookmark" === e),
            this.set(hl, o && "tag" === e);
        }),
        (e.prototype.is_open_changed = function (e) {
          _r.set_expanded_state(e),
            this.left_pane_el.toggleClass("is-closed", !e),
            this._update_active_pane(),
            this._update_nav_width();
        }),
        (e.prototype.is_mobile_open_changed = function (e) {
          this.left_pane_el.toggleClass("is-open", e),
            this._update_active_pane();
        }),
        (e.prototype.active_pane_changed = function (e) {
          lr.set_pane_name(e), this._update_active_pane();
        }),
        (e.prototype.file_pane_active_changed = function (e) {
          this.files_el.toggleClass("is-active", e);
        }),
        (e.prototype.bookmark_pane_active_changed = function (e) {
          this.bookmarks_el.toggleClass("is-active", e);
        }),
        (e.prototype.tag_pane_active_changed = function (e) {
          this.tags_el.toggleClass("is-active", e),
            e && this.app.userspace.view.tag_counter.initialize();
        }),
        (e.prototype.page_height_changed = function (e) {
          var t = this;
          this.left_pane_container_el.addClass("has-no-transition"),
            wt(function () {
              t.left_pane_container_el.removeClass("has-no-transition");
            }),
            this.splitter_el.height(e),
            this.left_pane_nav_el.height(
              e - parseInt(this.left_pane_nav_el.css("padding-top")),
            ),
            this.left_pane_el.height(e),
            this.doc_container_el.height(e);
        }),
        (e.prototype.pane_width_changed = function (e) {
          this.left_pane_el.width(e);
        }),
        (e.prototype.splitter_visible_changed = function (e) {
          e
            ? (function e(t) {
                t.css("visibility", "visible");
              })(this.splitter_el)
            : (function e(t) {
                t.css("visibility", "hidden");
              })(this.splitter_el);
        }),
        (e.prototype.splitter_left_changed = function (e) {
          this.splitter_el.css({ left: Math.max(0, e - 3) });
        }),
        (e.prototype.saved_nav_width_changed = function (e) {
          cr.set_width(e), this._update_nav_width();
        }),
        (e.prototype.pane_status_changed = function (e) {
          this.left_pane_el.toggleClass("loading", e === bl),
            this.left_pane_el.toggleClass("loading-failed", e === wl);
        }),
        e
      );
    })(N_),
    El = "DYNALIST_SHORTCUT_DATA",
    Cl = (function (i) {
      function e(e) {
        var t = i.call(this, "ShortcutUi", e, null) || this;
        return (
          (t.shortcut_container_els = {}),
          (t.shortcut_help_els = {}),
          (t.shortcut_display_els = []),
          (t.shortcut_tooltip_els = []),
          (t.success_message_el = null),
          (t.fail_message_el = null),
          (t.keymapSearchInputEl = null),
          (t.changing_shortcut_data = null),
          (t.keymapSections = []),
          (t.events = t.submodule(new Eo())),
          (t.shortcut_manager = t.submodule(new ia(e))),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          (this.ui = this.app.userspace.ui),
            (this.view = this.app.userspace.view);
        }),
        (e.prototype._init_fields = function () {
          (this.success_message_el = fish(
            ".setting-message.mod-set-shortcut-success",
          )),
            (this.fail_message_el = fish(
              ".setting-message.mod-set-shortcut-fail",
            )),
            (this.keymapSearchInputEl = fish(".js-search-keymap")),
            (this.scope = new Fr(Mr.CUSTOMIZE_SHORTCUT));
        }),
        (e.prototype._init_after = function () {
          var e = this.events.make_context_on_off($(".AppContainer"));
          this.events.register_array_on_off([
            [
              $(this.keymapSearchInputEl),
              "propertychange change keyup keydown input paste",
              debounce(this.onKeymapSearchTermChanged.bind(this), 500),
            ],
          ]),
            this.events.register_with_context_array(e, [
              [
                "click",
                ".js-change-shortcut",
                this.on_change_shortcut_click.bind(this),
              ],
              [
                "click",
                ".js-delete-shortcut",
                this.on_delete_shortcut_click.bind(this),
              ],
              [
                "click",
                ".js-reset-shortcut",
                this.on_reset_shortcut_click.bind(this),
              ],
            ]),
            this.shortcut_manager.register_unnamed(
              new ea(null, null),
              "keydown",
              this.on_set_custom_shortcut.bind(this),
              Mr.CUSTOMIZE_SHORTCUT,
            );
        }),
        (e.prototype._load = function () {
          this.create_custom_shortcut_dom();
          var e = this.app.config;
          (e.isAnonymousView() || e.is_demo_view()) &&
            this.display_keymap_shortcuts_info();
        }),
        (e.prototype.create_custom_shortcut_dom = function () {
          var s = this,
            e = fish(".keymap-keys");
          Array.each(la, function (i) {
            e.createEl("div", { cls: "setting-section" }, function (e) {
              var t = e.createEl("h3", {
                  cls: "setting-section-title",
                  text: i.name,
                }),
                n = e.createEl("ul", { cls: "keymap-section" }),
                o = { titleEl: t, shortcuts: [] };
              Array.each(i.shortcuts, function (e) {
                if (oa[e].customizable) {
                  var t = n.createEl("li", { cls: "keymap-shortcut" }),
                    i = ua[e];
                  (t.createEl("span", {
                    cls: "keymap-shortcut-overridden-icon js-reset-shortcut",
                    title: "Reset to default shortcut",
                  })[El] = { shortcut_id: e }),
                    t.createEl("span", {
                      cls: "keymap-shortcut-name",
                      text: i,
                    }),
                    (s.shortcut_container_els[e] = t.createEl("span", {
                      cls: "keymap-shortcut-keys-container",
                    })),
                    o.shortcuts.push({ name: i, el: t });
                }
              }),
                s.keymapSections.push(o);
            });
          });
          var o = yr(".ShortcutHelp-table.mod-shortcuts tbody").get(0);
          Array.each(la, function (e) {
            o
              .createEl("tr", { cls: "shortcut-category" })
              .createEl("td", { text: e.name, attr: { colspan: 2 } }),
              Array.each(e.shortcuts, function (e) {
                var t = ua[e],
                  i = oa[e].allow_in_read_only ? "" : " is-editModeOnly",
                  n = o.createEl("tr", {
                    cls: "ShortcutItem" + i,
                    attr: { "data-shortcut": e },
                  });
                n.createEl("td", { cls: "ShortcutItem-key", text: t }),
                  n
                    .createEl("td", { cls: "ShortcutItem-value" })
                    .createEl("kbd", { cls: "KeyboardShortcut" }),
                  (s.shortcut_help_els[e] = n);
              });
          }),
            fishAll(".shortcut-display").forEach(function (e) {
              s.shortcut_display_els.push(e);
            }),
            fishAll(".tooltip-container.mod-feature").forEach(function (e) {
              s.shortcut_tooltip_els.push(e);
            });
        }),
        (e.prototype.display_keymap_shortcuts_info = function () {
          var t = this;
          Object.each(na, function (e) {
            t.display_keymap_shortcut_info(e);
          });
        }),
        (e.prototype.display_keymap_shortcut_info = function (s) {
          var e = this.app.shortcuts.get_shortcuts(s),
            t = this.app.shortcuts.has_override(s);
          Array.isArray(e) || (e = [e]);
          var r = this.shortcut_container_els[s];
          r &&
            (r.empty(),
            Array.each(e, function (e, t) {
              var i = e.to_string(),
                n = { shortcut_id: s, shortcut_index: t },
                o = r.createEl("kbd", {
                  cls: "keymap-shortcut-combo js-change-shortcut",
                  text: i,
                });
              (o[El] = n),
                (o.createEl("span", {
                  cls: "keymap-shortcut-combo-delete js-delete-shortcut",
                  text: " ",
                })[El] = n);
            }),
            (r.createEl("kbd", {
              cls: "keymap-shortcut-combo js-change-shortcut",
              text: "+",
            })[El] = { shortcut_id: s, shortcut_index: -1 }),
            r.parentElement.toggleClass("is-overridden", t));
          var i = null,
            n = "Blank";
          0 < e.length && ((i = e[0]), (n = i.to_string()));
          var o = this.shortcut_help_els[s];
          o && (o.uToggle(null !== i), o.find(".KeyboardShortcut").setText(n));
          Array.each(this.shortcut_display_els, function (e) {
            e.getAttribute("data-shortcut") === s && e.setText(n);
          });
          var a = ua[s];
          Array.each(this.shortcut_tooltip_els, function (e) {
            e.getAttribute("data-name") === s &&
              e.setAttribute("aria-label", a + " (" + n + ")");
          });
        }),
        (e.prototype.on_change_shortcut_click = function (e) {
          if (this.view.get_is_pro()) {
            this.exit_customizing_shortcut();
            var t = e.currentTarget,
              i = t[El];
            i &&
              ((this.changing_shortcut_data = i),
              t.addClass("is-being-changed"),
              this.app.scope.push_scope(this.scope),
              this.show_success_message(
                'Press the desired keys for "' + ua[i.shortcut_id] + '".',
              )),
              e.stopPropagation();
          }
        }),
        (e.prototype.on_reset_shortcut_click = function (e) {
          var t = e.currentTarget[El];
          if (t) {
            var i = t.shortcut_id;
            this.view.reset_shortcut_to_default(i);
            var n = ua[i];
            this.show_success_message(
              'Successfully reset shortcut for "' + n + '".',
            );
          }
        }),
        (e.prototype.on_delete_shortcut_click = function (e) {
          var t = e.currentTarget[El];
          if (t) {
            var i = t.shortcut_id,
              n = t.shortcut_index,
              o = this.app.shortcuts.get_cloned_shortcuts(i);
            if ((Array.isArray(o) || (o = [o]), 0 <= n && n < o.length)) {
              o.splice(n, 1), this.view.set_custom_shortcut(i, o);
              var s = ua[i];
              this.show_success_message(
                'Successfully removed shortcut for "' + s + '".',
              );
            }
          }
          e.stopPropagation();
        }),
        (e.prototype.on_set_custom_shortcut = function (e, t, i) {
          var n = this.changing_shortcut_data;
          return (
            n &&
              (t !== l.ESC || 0 < i.length) &&
              this.set_custom_shortcut(n, t, i),
            this.exit_customizing_shortcut(),
            e.preventDefault(),
            !1
          );
        }),
        (e.prototype.set_custom_shortcut = function (e, t, i) {
          var n = this,
            o = e.shortcut_id,
            s = e.shortcut_index,
            r = Yr.decompile_modifiers(i);
          if (0 !== r.length) {
            var a = new ea(r, t),
              _ = a.to_string(),
              c = null;
            if (
              (each(na, function (i) {
                var e = n.app.shortcuts.get_shortcuts(i);
                if (
                  (Array.isArray(e) || (e = [e]),
                  Array.each(e, function (e, t) {
                    if (e.to_string() === _)
                      return !(c = { shortcut_id: i, shortcut_index: t });
                  }),
                  c)
                )
                  return !1;
              }),
              c)
            ) {
              var l = c.shortcut_id;
              if (l !== o || c.shortcut_index !== s) {
                var u = ua[l];
                return (
                  (u = u ? '"' + u + '"' : "a system shortcut"),
                  void this.show_error_message(
                    'The key combination "' +
                      _ +
                      '" is already taken by ' +
                      u +
                      ".",
                  )
                );
              }
            }
            if (!c) {
              var h = this.app.shortcuts.get_cloned_shortcuts(o);
              Array.isArray(h) || (h = [h]),
                s < 0 ? h.push(a) : (h[s] = a),
                this.view.set_custom_shortcut(o, h);
            }
            this.show_success_message(
              'Successfully set "' + _ + '" for "' + ua[o] + '".',
            );
          } else
            this.show_error_message(
              "At least one modifier key from Ctrl, Shift, and Alt is needed.",
            );
        }),
        (e.prototype.exit_customizing_shortcut = function () {
          if (this.changing_shortcut_data) {
            var e =
              this.shortcut_container_els[
                this.changing_shortcut_data.shortcut_id
              ];
            e &&
              e.find(".keymap-shortcut-combo").removeClass("is-being-changed"),
              (this.changing_shortcut_data = null);
          }
          this.app.scope.pop_scope(this.scope);
        }),
        (e.prototype.show_success_message = function (e) {
          $(this.fail_message_el).hide(),
            this.success_message_el.setText(e),
            $(this.success_message_el).show();
        }),
        (e.prototype.show_error_message = function (e) {
          $(this.success_message_el).hide(),
            this.fail_message_el.setText(e),
            $(this.fail_message_el).show();
        }),
        (e.prototype.hide_messages = function () {
          $(this.success_message_el).hide(), $(this.fail_message_el).hide();
        }),
        (e.prototype.onKeymapSearchTermChanged = function () {
          for (
            var e = this.keymapSearchInputEl.value,
              t = 0,
              i = this.keymapSections;
            t < i.length;
            t++
          ) {
            for (
              var n = i[t], o = 0, s = 0, r = n.shortcuts;
              s < r.length;
              s++
            ) {
              var a = r[s];
              "" === e
                ? (a.el.uShow(), (o += 1))
                : -1 !== a.name.toLowerCase().indexOf(e.toLowerCase())
                ? (a.el.uShow(), (o += 1))
                : a.el.uHide();
            }
            n.titleEl.uToggle(0 < o);
          }
        }),
        (e.prototype.clearKeymapSearch = function () {
          (this.keymapSearchInputEl.value = ""),
            this.onKeymapSearchTermChanged();
        }),
        e
      );
    })(To),
    Tl = "is_exporting",
    Ol = As(),
    xl = (function (i) {
      function e(e) {
        var t = i.call(this, "VersionHistoryUi", e) || this;
        return (
          (t.events = t.submodule(new Eo())),
          t._register_state(Tl, !1, t.is_exporting_changed),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          (this.ui = this.app.userspace.ui),
            (this.view = this.app.userspace.view),
            (this.controller = this.app.userspace.controller);
        }),
        (e.prototype._init_fields = function () {
          (this.document = null),
            (this.net = new xo("", this.app.network)),
            (this.node_collection = null),
            (this.selected_version_group = 0),
            (this.diffs = []),
            (this.start_version = 0),
            (this.loaded_version = 0),
            (this.last_action_ts = 0),
            (this.timer = 0),
            (this.container_el = fish(".version-history-container")),
            (this.version_list_el = fish(".version-history-versions")),
            (this.diff_container_el = fish(".version-history-diff-container")),
            (this.export_el = fish(".version-history-export")),
            (this.version_before_el = fish(".version-history-before")),
            (this.version_after_el = fish(".version-history-after")),
            (this.version_groups = []);
        }),
        (e.prototype._init_after = function () {
          var e = this.events.make_context_on_off($(this.container_el));
          this.events.register_with_context_array(e, [
            [
              "click",
              ".version-history-before .Node",
              this.on_version_history_export_before.bind(this),
            ],
            [
              "click",
              ".version-history-after .Node",
              this.on_version_history_export_after.bind(this),
            ],
            [
              "click",
              ".js-version-history-goto",
              this.on_goto_version.bind(this),
            ],
            [
              "click",
              ".js-version-history-load-more",
              this.on_load_more.bind(this),
            ],
            [
              "click",
              ".version-history-export-back",
              this.on_version_history_export_back.bind(this),
            ],
            ["mouseenter", ".Node-self", this.on_node_mouseenter.bind(this)],
            ["mouseleave", ".Node-self", this.on_node_mouseleave.bind(this)],
          ]);
        }),
        (e.prototype.open = function (e) {
          if (this.view.get_is_pro()) {
            this.close(),
              (this.document = e),
              this.net.set_document_server_id(e.get_server_id()),
              (this.node_collection = new Kn()),
              (this.selected_version_group = -1),
              (this.loaded_version = 0);
            var t = this.ui.modal_manager;
            t.open_modal("version-history"),
              this.set(Tl, !1),
              t.start_spinner(),
              this.load_document();
          }
        }),
        (e.prototype.close = function () {
          this.ui.modal_manager.close_modal(),
            (this.document = null),
            this.net.set_document_server_id(""),
            (this.node_collection = null),
            (this.diffs = []),
            this.version_list_el.empty(),
            (this.version_groups = []),
            (this.selected_version_group = -1),
            (this.start_version = 0),
            (this.loaded_version = 0),
            this.version_after_el.empty(),
            this.version_before_el.empty();
        }),
        (e.prototype.toggle_version_history_after = function (e) {
          this.version_after_el.uToggle(e),
            this.version_before_el.toggleClass("is-full-width", !e);
        }),
        (e.prototype.load_document = function () {
          var s = this,
            e = 1e4 - (Date.now() - this.last_action_ts);
          if (0 < e)
            return (
              clearTimeout(this.timer),
              void (this.timer = this.set_timeout(
                this.load_document.bind(this),
                e,
              ))
            );
          (this.last_action_ts = Date.now() - 1e3),
            this.net.load(Io.PRIORITY.HIGH, function (e, t) {
              if ((s.ui.modal_manager.stop_spinner(), !e && t)) {
                var i = t.version,
                  n = wo.from_node_collection(s.node_collection),
                  o = wo.from_server_load(t.nodes, t.root_node_server_id);
                ko.make_diff(n, o).apply(s.node_collection, !1, !1),
                  s.node_collection.set_version(t.version),
                  s.node_collection.set_user_version(t.user_version),
                  (s.start_version = i),
                  (s.loaded_version = i),
                  (s.diffs = []),
                  s.load_version_history();
              }
            });
        }),
        (e.prototype.load_version_history = function () {
          var p = this;
          if (0 !== this.loaded_version) {
            this.ui.modal_manager.start_spinner(),
              this.container_el.addClass("loading");
            var e = 1e3 - (Date.now() - this.last_action_ts);
            if (0 < e)
              return (
                clearTimeout(this.timer),
                void (this.timer = this.set_timeout(
                  this.load_version_history.bind(this),
                  e,
                ))
              );
            (this.last_action_ts = Date.now()),
              this.net.get_version_history(
                this.loaded_version,
                function (e, t) {
                  if ((p.ui.modal_manager.stop_spinner(), !e && t)) {
                    var i = p.loaded_version,
                      n = t.diffs.length;
                    if (0 < n)
                      for (var o = n - 1; 0 <= o; o--) {
                        var s = t.diffs[o],
                          r = t.diffs_meta[o],
                          a = r.ts,
                          _ = r.version,
                          c = r.user_identity;
                        if (_ === p.loaded_version) {
                          p.loaded_version = _ - 1;
                          var l = ko.net_deserialize(s, a),
                            u = t.users[c];
                          l.user = {
                            identity: c,
                            name: u.name,
                            email: u.email,
                          };
                          var h = p.version_to_index(_);
                          p.diffs[h] = l;
                        } else
                          log(
                            "Bad version: " +
                              _ +
                              " instead of " +
                              p.loaded_version,
                          );
                      }
                    t.has_more
                      ? i === p.loaded_version && (p.loaded_version = 0)
                      : (p.loaded_version = 0),
                      p.display_version_list(),
                      p.selected_version_group < 0 && p.goto_version_group(0);
                  }
                },
              );
          }
        }),
        (e.prototype.display_version_list = function () {
          var _ = this;
          this.version_list_el.empty();
          for (var e = [], t = null, i = 0; i < this.diffs.length; i++) {
            var n = this.diffs[i];
            if (n) {
              var o = this.index_to_version(i);
              t &&
                (t.user.identity !== n.user.identity || 3e5 < t.ts - n.ts
                  ? (e.push(t), (t = null))
                  : ((t.version_start = o), (t.ts = n.ts))),
                t ||
                  (t = {
                    version_start: o,
                    version_end: o,
                    ts: n.ts,
                    user: n.user,
                    menu_el: null,
                  });
            } else t && (e.push(t), (t = null));
          }
          t && (e.push(t), (t = null)),
            (this.version_groups = e),
            Array.each(e, function (t, i) {
              var e = new Date(t.ts),
                n = t.user,
                o = t.version_start,
                s = t.version_end,
                r = "Versions " + o + " - " + s;
              o === s && (r = "Version " + o);
              var a = Si(e).format("HH:mm, D MMMM YYYY");
              _.version_list_el.createEl(
                "div",
                {
                  cls: "version-history-version js-version-history-goto",
                  text: a,
                  title: r,
                },
                function (e) {
                  n &&
                    e.createEl("div", {
                      cls: "version-history-version-details",
                      text: n.name + " (" + n.email + ")",
                    }),
                    Ol.set(e, i),
                    _.selected_version_group === i && e.addClass("is-selected"),
                    (t.menu_el = e);
                },
              );
            }),
            0 < this.loaded_version &&
              this.version_list_el.createEl("div", {
                cls: "version-history-version js-version-history-load-more",
                text: "Load more",
              });
        }),
        (e.prototype.on_version_history_export_before = function (e) {
          var t = e.currentTarget,
            i = this.version_groups[this.selected_version_group];
          if (i) {
            var n = i.version_start - 1;
            this.go_to_version(n);
            var o = null,
              s = Ra.get_node_id_from_node_inner_el(t);
            s && (o = this.node_collection.find_node(s)),
              this.ui.export_manager.use_version_history_container(),
              this.ui.export_manager.export_node([o], null),
              this.set(Tl, !0),
              e.stopPropagation();
          }
        }),
        (e.prototype.on_version_history_export_after = function (e) {
          var t = e.currentTarget,
            i = this.version_groups[this.selected_version_group];
          if (i) {
            var n = i.version_end;
            this.go_to_version(n);
            var o = null,
              s = Ra.get_node_id_from_node_inner_el(t);
            s && (o = this.node_collection.find_node(s)),
              this.ui.export_manager.use_version_history_container(),
              this.ui.export_manager.export_node([o], null),
              this.set(Tl, !0),
              e.stopPropagation();
          }
        }),
        (e.prototype.on_version_history_export_back = function () {
          this.set(Tl, !1);
        }),
        (e.prototype.on_node_mouseenter = function (e) {
          var t = Ra.get_node_el_from_node_inner_el(e.currentTarget);
          t && t.addClass("has-hover");
        }),
        (e.prototype.on_node_mouseleave = function (e) {
          var t = Ra.get_node_el_from_node_inner_el(e.currentTarget);
          t && t.removeClass("has-hover");
        }),
        (e.prototype.is_exporting_changed = function (e) {
          this.diff_container_el.uToggle(!e), this.export_el.uToggle(e);
        }),
        (e.prototype.on_goto_version = function (e) {
          var t = e.currentTarget,
            i = Ol.get(t);
          this.goto_version_group(i), this.set(Tl, !1);
        }),
        (e.prototype.on_load_more = function () {
          this.load_version_history();
        }),
        (e.prototype.goto_version_group = function (e) {
          if (!(e < 0) && e !== this.selected_version_group) {
            if (0 <= this.selected_version_group) {
              var t = this.version_groups[this.selected_version_group];
              t && t.menu_el.removeClass("is-selected");
            }
            this.selected_version_group = e;
            var i = this.version_groups[e];
            if (i) {
              i.menu_el.addClass("is-selected");
              var n = i.version_start - 1,
                o = i.version_end;
              this.go_to_version(n);
              var s = this.get_diffs(i.version_start, i.version_end),
                r = ko.merge_diffs(s);
              this.render_node_collection(
                this.version_before_el,
                this.node_collection,
                r,
                !0,
              ),
                this.go_to_version(o),
                this.render_node_collection(
                  this.version_after_el,
                  this.node_collection,
                  r,
                  !1,
                );
            }
          }
        }),
        (e.prototype.go_to_version = function (e) {
          for (var t = this.node_collection; t.get_version() !== e; )
            t.get_version() < e ? this.apply_forward() : this.apply_backward();
        }),
        (e.prototype.render_node_collection = function (e, i, t, n) {
          e.empty();
          var o = new Al(this.ui.render_options),
            s = {},
            r = function (e, t) {
              a(i.find_node(e), t);
            },
            a = function (e, t) {
              if (e) {
                var i = e.get_id();
                (s[i] = Math.max(s[i] || 0, t)), a(e.get_parent(), 2);
              }
            };
          Array.each(t.meta, function (e) {
            return r(e.id, 1);
          }),
            Array.each(t.location, function (e) {
              r(e.id, 1), r(e.parent_new, 2), r(e.parent_old, 2);
            }),
            r(i.get_root().get_id(), 2);
          var _ = o.render_node_collection(i, s);
          _.set_is_current_root(!0, e), _.collapse_or_expand(!1, !1);
          var c = function (e) {
            var t = o.get_node_dom(e);
            t && (n ? t.set_history_removed(!0) : t.set_history_added(!0));
          };
          Array.each(t.meta, function (e) {
            return c(e.id);
          }),
            Array.each(t.location, function (e) {
              return c(e.id);
            }),
            n
              ? Array.each(t.removed, function (e) {
                  return c(e);
                })
              : Array.each(t.added, function (e) {
                  return c(e);
                });
        }),
        (e.prototype.apply_forward = function () {
          var e = this.node_collection,
            t = e.get_version(),
            i = this.get_diff(t + 1);
          if (!i) throw (log("error!"), new Error());
          i.apply(e, !1, !1), e.set_version(t + 1);
        }),
        (e.prototype.apply_backward = function () {
          var e = this.node_collection,
            t = e.get_version(),
            i = this.get_diff(t);
          if (!i) throw (log("error!"), new Error());
          i.revert(e), e.set_version(t - 1);
        }),
        (e.prototype.version_to_index = function (e) {
          return this.start_version - e;
        }),
        (e.prototype.index_to_version = function (e) {
          return this.start_version - e;
        }),
        (e.prototype.get_diff = function (e) {
          var t = this.version_to_index(e);
          return this.diffs[t];
        }),
        (e.prototype.get_diffs = function (e, t) {
          var i = this.version_to_index(t),
            n = this.version_to_index(e) + 1,
            o = this.diffs.slice(i, n);
          return o.reverse(), o;
        }),
        e
      );
    })(N_),
    Al = (function (t) {
      function e(e) {
        return t.call(this, e) || this;
      }
      return (
        nt(e, t),
        (e.prototype.render_node_recursive = function (e, i) {
          var n = this,
            o = this.create_node_dom(e),
            t = i[e.get_id()] || 0;
          return (
            e.has_children() && t <= 1
              ? (o.collapse_or_expand(!0, !1), o.set_has_shown_children(!0))
              : e.children.each(function (e) {
                  var t = n.render_node_recursive(e, i);
                  o.children_el.appendChild(t.node_outer_el);
                }),
            o
          );
        }),
        (e.prototype.render_node_collection = function (e, t) {
          return this.render_node_recursive(e.get_root(), t);
        }),
        e
      );
    })(za),
    Dl = (function () {
      function e() {
        (this.open_modal_container_el = null),
          (this.open_modal_el = null),
          (this.open_modal_name = null);
      }
      return (
        (e.prototype.get_modal_container_el = function (e) {
          return fish(".modal-container." + e);
        }),
        (e.prototype.get_modal_el = function (e) {
          return fish(".modal-container." + e + " > .modal");
        }),
        (e.prototype.get_open_modal_name = function () {
          return this.open_modal_name;
        }),
        (e.prototype.close_modal = function () {
          return (
            !!this.open_modal_container_el &&
            (this.open_modal_container_el.removeClass("is-shown"),
            (this.open_modal_container_el = null),
            (this.open_modal_el = null),
            !(this.open_modal_name = null))
          );
        }),
        (e.prototype.open_modal = function (e) {
          this.close_modal();
          var t = this.get_modal_container_el(e);
          return (
            !!t &&
            ((this.open_modal_name = e),
            (this.open_modal_container_el = t),
            (this.open_modal_el = this.get_modal_el(e)),
            this.open_modal_container_el.addClass("is-shown"),
            !0)
          );
        }),
        (e.prototype.start_spinner = function () {
          var e = this.open_modal_el;
          e && e.addClass("loading");
        }),
        (e.prototype.stop_spinner = function () {
          var e = this.open_modal_el;
          e && e.removeClass("loading");
        }),
        e
      );
    })(),
    Sl = "mobile_header_more_options_open",
    Nl = "mobile_current_header",
    Il = "cursor_state",
    Ll = "document",
    Ml = "documentSearch",
    Rl = "datePicker",
    Pl = "";
  function Fl(e) {
    return ["dark", "scifi", "christmas", "darkgold"].contains(e);
  }
  var Hl = [ee, te, ie],
    zl = (function (i) {
      function e(e) {
        var t = i.call(this, "UserspaceUi", e) || this;
        return (
          (t.tooltip = new Wc()),
          (t.interval_manager = t.submodule(new Oo(e))),
          (t.tag_suggestion_provider = t.submodule(new W_(e))),
          (t.link_suggestion_provider = t.submodule(new A_(e))),
          (t.inbox_node_suggestion_provider = t.submodule(new Lc(e))),
          (t.drag_manager = t.submodule(new Tc(e))),
          (t.file_finder = t.submodule(new Ic(e))),
          (t.node_finder = t.submodule(new zc(e))),
          (t.inbox_capture = t.submodule(new Pc(e))),
          (t.onboarding_manager = t.submodule(new Uc(e))),
          (t.preference_events = t.submodule(new Co())),
          (t.events = t.submodule(new Eo())),
          (t.notification_ui = t.submodule(new rl(e))),
          (t.pane_ui = t.submodule(new kl(e))),
          (t.popup_message_manager = t.submodule(new $c(e))),
          (t.shortcut_ui = t.submodule(new Cl(e))),
          (t.version_history = t.submodule(new xl(e))),
          (t.export_manager = t.submodule(new Qc(e))),
          (t.global_search = t.submodule(new Oc(e))),
          (t.customMobileToolbar = t.submodule(new pc(e))),
          t._register_state(Sl, !1, t.mobile_header_more_options_open_changed),
          t._register_state(Nl, Ll, t.mobile_current_header_changed),
          t._register_state(Il, null, t.cursor_state_changed),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          (this.render_options = new yc()),
            (this.view = this.app.userspace.view),
            (this.controller = this.app.userspace.controller),
            (this.preferences = this.app.preferences),
            (this.node_formatter = new Is(this.render_options)),
            (this.modal_manager = new Dl());
        }),
        (e.prototype._init_fields = function () {
          (this.app_container = fish(".AppContainer")),
            (this.container = fish(".FilePane-files")),
            (this.bookmarks_container = fish(".BookmarkPane-bookmarks")),
            (this.main_menu = yr(".main-menu")),
            (this.file_nav_context_menu = fish(".FileNavContextMenu")),
            (this.folder_context_menu = fish(".FolderItemContextMenu")),
            (this.document_context_menu = fish(".DocumentItemContextMenu")),
            (this.bookmark_context_menu = fish(".BookmarkItemContextMenu")),
            (this.tag_context_menu = fish(".tag-context-menu")),
            (this.doc_view_container = fish(".DocumentContainer")),
            (this.app_header_el = fish(".AppHeader")),
            (this.elements_affected_by_font = fishAll(".u-use-pref-font")),
            (this.go_to_global_search = fish(
              ".MobileHeader-option--globalSearch",
            )),
            (this.go_to_document_search = fish(
              ".MobileHeader-option--documentSearch",
            )),
            (this.node_menu_icons_container_el = fish(
              ".node-menu-icons-container",
            )),
            (this.node_bookmark_icon_el = fish(".node-icon.mod-bookmark")),
            (this.document_container_el = fish(".DocumentContainer")),
            (this.mobile_searchbar = fish(".MobileHeader-searchbar")),
            (this.pref_font_css_el = null),
            (this.body = fish("body")),
            (this.global_checked_items_visibility_setting_el = fish(
              ".global-checked-item-visibility",
            )),
            (this.global_notes_visibility_setting_el = fish(
              ".global-notes-visibility",
            )),
            (this.globalTextDirectionSettingEl = fish(
              ".global-text-direction",
            )),
            (this.copy_share_link_btn_el = fish(
              ".js-copy-shared-link-to-clipboard",
            )),
            (this.shareLinkInputEl = fish(".public-link-for-share")),
            (this.document_loading_tips = new Hc(this.doc_view_container)),
            (this.export_portable_node = null),
            (this.file_being_deleted = null),
            (this.syncing_icon_timeout = null),
            (this.sync_needed_timeout = null),
            (this.sync_finished = !1),
            (this.last_activity = Date.now()),
            (this.is_in_global_search_mode_on_mobile = !1),
            (this.is_main_menu_open = !1),
            (this.is_mobile_file_menu_open = !1),
            (this.focused = document.hasFocus()),
            (this.node_icon_parent = null),
            (this.modal_scope = new Hr(Mr.POPUP, this.close_modals.bind(this)));
        }),
        (e.prototype._init_after = function () {
          this.register_preference_events(),
            this.setup_pull_intervals(),
            this.setup_desktop_ui(),
            this.setup_mobile_settings(),
            this.update_sync_settings();
        }),
        (e.prototype._load = function () {
          this.app.network.on("connected", this.on_network_connected, this),
            this.app.network.on(
              "disconnected",
              this.on_network_disconnected,
              this,
            ),
            this.setup_shortcut_help(),
            this.add_body_css_class();
          var e = this.app.config;
          e.isAnonymousView() || e.is_demo_view()
            ? (e.is_in_iframe() && yr(".AppHeader").hide(),
              yr(".main-menu-user-info").hide())
            : e.is_logged_in() &&
              (fish(".main-menu-user-name").setText(e.get_name()),
              fish(".main-menu-user-email").setText(e.get_email()),
              fish(".email-to-inbox-address").setText(e.get_identity() + s)),
            this.app.config.is_demo_view() &&
              !this.is_mobile_view() &&
              yr(".demo-tutorial-prompt").show(),
            fishAll(".dy-icon").forEach(function (e) {
              var t = e.getAttribute("data-icon"),
                i = e.getAttribute("data-size");
              t && (i ? cc(e, t, parseInt(i)) : cc(e, t));
            });
        }),
        (e.prototype._post_load = function () {
          this.on_window_resize(), this.fix_ios_menu_scroll();
        }),
        (e.prototype._unload = function () {}),
        (e.prototype.setup_pull_intervals = function () {
          this.app.config.isAnonymousView() ||
            this.app.config.is_demo_view() ||
            (this.register_pull_notification_interval(),
            this.register_ping_interval());
        }),
        (e.prototype.setup_desktop_ui = function () {
          this.app.env.is("desktop") && this.setup_desktop_app_about_modal();
        }),
        (e.prototype.setup_desktop_app_about_modal = function () {
          var e = this;
          this.update_desktop_app_about_modal(),
            this.interval_manager.register_interval(function () {
              e.update_desktop_app_about_modal();
            }, T);
        }),
        (e.prototype.setup_mobile_settings = function () {
          this.app.env.is("mobile") &&
            fish(".setting-section.mod-mobile-sync").uShow(),
            this.is_mobile_view() &&
              fish(".setting.mod-use-bullet-to-zoom").uHide();
        }),
        (e.prototype.update_sync_settings = function () {
          var e = this.app.env.get_env_data("disable-sync", !1),
            t = this.app.env.is("desktop") && (this.view.get_is_pro() || e);
          fish(".setting-section.mod-offline-mode").uToggle(t),
            (fish(".js-offline-mode").checked = e);
        }),
        (e.prototype.register_pull_notification_interval = function () {
          var e = this;
          this.interval_manager.register_interval(function () {
            e.notification_ui.update_notification_timestamps();
          }, C);
        }),
        (e.prototype.register_ping_interval = function () {
          var e = this;
          this.ping_ghost(),
            this.interval_manager.register_interval(function () {
              e.ping_ghost();
            }, T);
        }),
        (e.prototype.add_body_css_class = function () {
          yr("body").addClass(Ys),
            Vs && window.forceMobileStyles(!0),
            this.app.env.is("mobile") && yr("body").addClass("is-mobile-app");
        }),
        (e.prototype.get_document_container = function () {
          return fish(".Document-rootNode");
        }),
        (e.prototype.show_deprecation = function () {
          this.display_sync_disabled(), this.open_modal("version-deprecated");
        }),
        (e.prototype.set_focus = function (e) {
          (this.focused = e || document.hasFocus()),
            this.update_last_activity();
        }),
        (e.prototype.has_focus = function () {
          return this.focused || document.hasFocus();
        }),
        (e.prototype.get_last_activity = function () {
          return this.last_activity;
        }),
        (e.prototype.update_last_activity = function () {
          this.last_activity = Date.now();
        }),
        (e.prototype.ping_ghost = function () {
          this.focused && this.update_last_activity();
          var e = DYNALIST.DEPLOY_BUILD || "",
            t = DYNALIST.PLATFORM || "web",
            i = DYNALIST.DEPLOY_COMMIT || "";
          __(
            "ping",
            {
              last_activity: this.last_activity,
              build: e,
              platform: t,
              commit: i,
            },
            !0,
          );
        }),
        (e.prototype.get_file_from_el = function (e) {
          var t = tl.get_file_id_from_file_inner_el(e);
          return this.app.userspace.get_userspace().find_file(t);
        }),
        (e.prototype.get_bookmark_from_el = function (e) {
          var t = tl.get_file_id_from_file_inner_el(e);
          return this.app.userspace.get_userspace().find_bookmark(t);
        }),
        (e.prototype.register_preference_events = function () {
          var n = this.preference_events,
            o = this.preferences,
            e = function (e, t, i) {
              n.register(o, e, t, i);
            };
          e(Ps.ANY, this.update_pref_any, this),
            e(Ps.THEME, this.updatePrefTheme, this),
            e(Ps.FONT, this.update_pref_font, this),
            e(Ps.EA_FONT, this.update_pref_font, this),
            e(Ps.DYSLEXIA_FONT, this.update_pref_font, this),
            e(Ps.FONT_SIZE, this.update_pref_font_size, this),
            e(Ps.DISPLAY_DENSITY, this.update_pref_display_density, this),
            e(Ps.SHOW_HELP, this.update_pref_show_help, this),
            e(Ps.DOC_BORDER, this.update_pref_show_doc_border, this),
            e(Ps.SHOW_CHECKED, this.update_pref_show_checked, this),
            e(Ps.NOTE_DISPLAY, this.update_pref_note_display, this),
            e(Ps.RIGHT_TO_LEFT, this.updatePrefTextDirection, this),
            e(Ps.TIME_FORMAT, this.update_pref_time_format, this),
            e(
              Ps.CUSTOM_DATE_DISPLAY_FORMAT,
              this.update_pref_custom_date_format,
              this,
            ),
            e(
              Ps.CUSTOM_DATE_DISPLAY_FORMAT_NO_TIME,
              this.update_pref_custom_date_format_without_time,
              this,
            ),
            e(
              Ps.DISPLAY_IMAGES_INLINE,
              this.update_pref_display_images_inline,
              this,
            ),
            e(Ps.RIGHT_TO_LEFT, this.update_pref_right_to_left, this),
            e(Ps.TAG_BACKGROUND, this.update_pref_tag_background, this),
            e(Ps.CENTER_DOCUMENT, this.update_pref_center_document, this),
            e(
              Ps.EXPORT_VISIBLE_ONLY,
              this.update_pref_export_visible_only,
              this,
            ),
            e(Ps.KEYBOARD_LAYOUT, this.update_pref_keyboard_layout, this),
            e(Ps.SHORTCUT_OVERRIDE, this.update_pref_shortcut_override, this),
            e(
              Ps.FINISHED_ONBOARDING,
              this.update_pref_finished_onboarding,
              this,
            ),
            e(Ps.USE_BULLET_TO_ZOOM, this.update_pref_use_bullet_to_zoom, this),
            e(Ps.HIGHLIGHT_OVERDUE, this.update_pref_highlight_overdue, this),
            e(
              Ps.GCAL_SYNC_CALENDAR_ID,
              this.update_pref_gcal_sync_calendar_id,
              this,
            ),
            e(
              Ps.ONLY_USE_WIFI_TO_SYNC,
              this.update_pref_only_use_wifi_to_sync,
              this,
            ),
            e(Ps.INBOX_LOCATION, this.update_pref_inbox_location, this),
            e(Ps.USE_TRUE_BLACK, this.update_pref_use_true_black, this),
            e(
              Ps.SHOW_VERSION_HISTORY_AFTER,
              this.update_pref_show_version_history_after,
              this,
            ),
            e(Ps.CUSTOM_CSS, this.update_pref_custom_css, this),
            e(
              Ps.WORKFLOWY_SHORTCUTS,
              this.update_using_workflowy_shortcuts,
              this,
            ),
            e(
              Ps.SPELLCHECKER_LANGUAGE,
              this.update_spellchecker_language,
              this,
            ),
            e(
              Ps.MOBILE_TOOLBAR_OPTIONS_ORDER,
              this.updateMobileToolbarOrder,
              this,
            );
        }),
        (e.prototype.update_pref_any = function (e, t, i) {
          var n = fish(".js-update-setting[data-key='" + e + "']");
          n &&
            (this.preferences.is_boolean(e) && n instanceof HTMLInputElement
              ? (n.checked = this.preferences.get_boolean(e))
              : (n instanceof HTMLInputElement ||
                  n instanceof HTMLSelectElement ||
                  n instanceof HTMLTextAreaElement) &&
                (n.value = t)),
            this.app.config.isAnonymousView() ||
              this.app.config.is_demo_view() ||
              i ||
              (this.view.get_pref_net().set(e, t),
              this.view.request_save_preferences());
        }),
        (e.prototype.updatePrefTheme = function () {
          var e = this.preferences.get(Ps.THEME);
          "autodetect" === e &&
            (e =
              window.matchMedia &&
              window.matchMedia("(prefers-color-scheme: dark)") &&
              window.matchMedia("(prefers-color-scheme: dark)").matches
                ? "dark"
                : "default");
          var t = fish("#theme-stylesheet-link"),
            i = "/assets/css/theme_" + e + ".css";
          DYNALIST.IS_STANDALONE_MODE && (i = i.substr(1));
          var n = t.getAttribute("href");
          if (
            ((n && n.startsWith(i)) || t.setAttribute("href", i),
            this.check_for_true_black_theme(),
            this.app.env.is("mobile"))
          ) {
            var o = Fl(e) ? "dark" : "light";
            this.app.env.update_theme(o);
          }
          this.update_color_label_css_dom(e);
          var s = Fl(e);
          this.app_container.toggleClass("is-dark-mode", s);
        }),
        (e.prototype.update_pref_font = function () {
          var t = this.preferences.get(Ps.FONT),
            e = this.preferences.get(Ps.EA_FONT),
            i = this.preferences.get(Ps.DYSLEXIA_FONT),
            n = "";
          i === Fs.DYSLEXIA_FONT.OPEN_DYSLEXIC && ((t = i), (n = "22px")),
            this.elements_affected_by_font.forEach(function (e) {
              e.toggleClass("is-calibriLight", "calibri_light" === t),
                e.toggleClass("is-whitney", "whitney" === t);
            }),
            this.pref_font_css_el &&
              document.head.removeChild(this.pref_font_css_el),
            (this.pref_font_css_el = document.createElement("style"));
          var o =
              "font-family: " +
              (a[t] +
                ", " +
                a[e] +
                ', -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto') +
              "; ",
            s = n ? "line-height: " + n + "px; " : "";
          (this.pref_font_css_el.innerHTML =
            ".u-use-pref-font { " + o + s + "}"),
            document.head.appendChild(this.pref_font_css_el);
        }),
        (e.prototype.update_pref_font_size = function () {
          var e = this.preferences.get(Ps.FONT_SIZE);
          this.doc_view_container.removeClass(
            "is-smallFont",
            "is-mediumFont",
            "is-largeFont",
          ),
            this.doc_view_container.addClass("is-" + e + "Font");
        }),
        (e.prototype.update_pref_display_density = function () {
          var e = this.preferences.get(Ps.DISPLAY_DENSITY);
          this.doc_view_container.removeClass(
            "is-comfortableDensity",
            "is-cozyDensity",
            "is-compactDensity",
          ),
            this.doc_view_container.addClass("is-" + e + "Density");
        }),
        (e.prototype.update_pref_show_help = function () {
          var e = this.preferences.get_boolean(Ps.SHOW_HELP);
          fish(".ShortcutHelp").uToggle(e),
            fish(".MenuItem--shortcutHelp").uToggle(!e),
            this.app_container.toggleClass("is-showing-shortcut-help", e),
            this.on_window_resize();
        }),
        (e.prototype.update_pref_show_doc_border = function () {
          var e = this.preferences.get_boolean(Ps.DOC_BORDER);
          this.app_container.toggleClass("is-borderShowing", e);
        }),
        (e.prototype.update_pref_show_checked = function () {
          var e = this.preferences.get(Ps.SHOW_CHECKED);
          this.global_checked_items_visibility_setting_el.setText(
            "(" + { show: "show", hide: "hide" }[e] + ")",
          );
        }),
        (e.prototype.update_pref_note_display = function () {
          var e = this.preferences.get(Ps.NOTE_DISPLAY);
          this.global_notes_visibility_setting_el.setText(
            "(" + { show: "show", teaser: "1st line", hide: "hide" }[e] + ")",
          );
        }),
        (e.prototype.updatePrefTextDirection = function () {
          var e = this.preferences.get_boolean(Ps.RIGHT_TO_LEFT);
          this.globalTextDirectionSettingEl.setText(e ? "(RTL)" : "(LTR)");
        }),
        (e.prototype.update_pref_tag_background = function () {
          var e = this.preferences.get_boolean(Ps.TAG_BACKGROUND);
          yr(".DocumentContainer").toggleClass("has-tagBackground", e);
        }),
        (e.prototype.update_pref_center_document = function () {
          var e = this.preferences.get_boolean(Ps.CENTER_DOCUMENT);
          yr(".DocumentContainer").toggleClass("is-centerDocument", e);
        }),
        (e.prototype.update_pref_export_visible_only = function () {
          var e = this.preferences.get_boolean(Ps.EXPORT_VISIBLE_ONLY);
          this.export_manager.set_hide_invisible(e);
        }),
        (e.prototype.update_pref_time_format = function () {
          var e = this.preferences.get(Ps.TIME_FORMAT);
          this.render_options.set_use_24_hours(e === Fs.TIME_FORMAT.FORMAT_24H);
        }),
        (e.prototype.update_pref_custom_date_format = function () {
          var e = this.preferences.get(Ps.CUSTOM_DATE_DISPLAY_FORMAT);
          this.view.get_is_pro() || (e = ""),
            this.render_options.set_date_format(e);
        }),
        (e.prototype.update_pref_custom_date_format_without_time = function () {
          var e = this.preferences.get(Ps.CUSTOM_DATE_DISPLAY_FORMAT_NO_TIME);
          this.view.get_is_pro() || (e = ""),
            this.render_options.set_date_format_no_time(e);
        }),
        (e.prototype.update_pref_display_images_inline = function () {
          var e = this.preferences.get_boolean(Ps.DISPLAY_IMAGES_INLINE);
          this.render_options.set_inline_images(e);
        }),
        (e.prototype.update_pref_right_to_left = function () {
          this.preferences.get_boolean(Ps.RIGHT_TO_LEFT)
            ? fishAll(".u-use-pref-font, input, textarea").forEach(
                function (e) {
                  return e.setAttribute("dir", "rtl");
                },
              )
            : fishAll(".u-use-pref-font, input, textarea").forEach(
                function (e) {
                  return e.removeAttribute("dir");
                },
              );
        }),
        (e.prototype.update_pref_gcal_sync_calendar_id = function () {
          var e = this.preferences.get(Ps.GCAL_SYNC_CALENDAR_ID),
            t = this.preferences.get(Ps.GCAL_SYNC_CALENDAR_NAME);
          "" === e
            ? (fish(".setting.mod-no-calendar-chosen").uShow(),
              fish(".setting.mod-has-chosen-calendar").uHide())
            : (fish(".Preference-googleCalendarCurrentCalendarName").setText(t),
              fish(".setting.mod-no-calendar-chosen").uHide(),
              fish(".setting.mod-has-chosen-calendar").uShow());
        }),
        (e.prototype.update_pref_only_use_wifi_to_sync = function () {
          var e = this.preferences.get_boolean(Ps.ONLY_USE_WIFI_TO_SYNC);
          this.controller.set_use_wifi_only(e);
        }),
        (e.prototype.update_pref_keyboard_layout = function () {
          var e = this.preferences.get(Ps.KEYBOARD_LAYOUT);
          this.app.shortcuts.set_layout_override_locale(e);
        }),
        (e.prototype.update_pref_shortcut_override = function () {
          var e = this.preferences.get(Ps.SHORTCUT_OVERRIDE);
          "" === e && (e = "{}");
          try {
            this.view.set_shortcut_overrides(JSON.parse(e));
          } catch (e) {
            track_error(e);
          }
          this.shortcut_ui.display_keymap_shortcuts_info();
        }),
        (e.prototype.update_pref_finished_onboarding = function () {
          this.preferences.get_boolean(Ps.FINISHED_ONBOARDING) ||
            this.onboarding_manager.start_onboarding();
        }),
        (e.prototype.update_pref_use_bullet_to_zoom = function () {
          var e = this.preferences.get_boolean(Ps.USE_BULLET_TO_ZOOM);
          this.app_container.toggleClass("is-using-bullet-to-zoom", e);
        }),
        (e.prototype.update_pref_highlight_overdue = function () {
          var e = this.preferences.get_boolean(Ps.HIGHLIGHT_OVERDUE);
          this.app_container.toggleClass("is-highlighting-overdue", e);
        }),
        (e.prototype.update_pref_inbox_location = function () {
          var e = this.preferences.get(Ps.INBOX_LOCATION);
          this.view.set_inbox_node_from_location_string(e);
        }),
        (e.prototype.update_pref_use_true_black = function () {
          this.check_for_true_black_theme();
        }),
        (e.prototype.update_pref_show_version_history_after = function () {
          var e = this.preferences.get_boolean(Ps.SHOW_VERSION_HISTORY_AFTER);
          this.version_history.toggle_version_history_after(e);
        }),
        (e.prototype.update_pref_custom_css = function () {
          var e = fishAll("style.custom-css");
          if (
            (0 < e.length && document.head.removeChild(e[0]),
            this.view.get_is_pro())
          ) {
            var t = this.preferences.get(Ps.CUSTOM_CSS),
              i = document.createElement("style");
            i.addClass("custom-css"),
              (i.type = "text/css"),
              i.styleSheet
                ? (i.styleSheet.cssText = t)
                : i.appendChild(document.createTextNode(t)),
              document.head.appendChild(i);
          }
        }),
        (e.prototype.update_using_workflowy_shortcuts = function () {
          var e = this.preferences.get_boolean(Ps.WORKFLOWY_SHORTCUTS);
          this.app.shortcuts.set_is_using_workflowy_shortcuts(e);
        }),
        (e.prototype.update_spellchecker_language = function () {
          if (this.app.env.is("desktop")) {
            var e = this.preferences.get(Ps.SPELLCHECKER_LANGUAGE);
            this.app.env.get_spellchecker().setLanguage(e);
          }
        }),
        (e.prototype.updateMobileToolbarOrder = function () {
          this.customMobileToolbar.update();
        }),
        (e.prototype.display_file_context_menu = function (e, t) {
          t.preventDefault(), t.stopPropagation();
          var i = null,
            n = $(".MenuGroup--sharing"),
            o = this.get_file_from_el(e);
          if (
            (this.hide_context_menu(),
            this.view.stop_renaming(),
            this.view.set_current_file(o),
            o instanceof ii)
          )
            i = $(this.folder_context_menu);
          else {
            if (!(o instanceof Vn)) return;
            i = $(this.document_context_menu);
          }
          yr(".MenuGroup, .MenuItem").show();
          var s = o.get_namespace().get_permission(),
            r = te <= s,
            a = o.get_namespace().get_permission() > Q,
            _ = !r;
          if (
            (o.should_show_sharing_options() || n.hide(),
            _ && yr(".MenuGoup--createNewFile, .MenuItem--renameFile").hide(),
            this.view.get_is_pro() &&
              "" !== this.preferences.get(Ps.GCAL_SYNC_CALENDAR_ID))
          ) {
            if (o instanceof Vn) {
              var c = o.get_user_data_object().get_sync_calendar();
              fish(".toggleGcalSyncAction").setText(c ? "Turn off" : "Turn on"),
                yr(".MenuGroup--gcalSync").show();
            }
          } else yr(".MenuGroup--gcalSync").hide();
          if (o instanceof Vn) {
            var l = o.get_user_data_object().get_archived();
            fish(".toggle-document-archive").setText(
              l ? "Unarchive" : "Archive",
            );
          }
          if (
            ((o instanceof Vn &&
              this.preferences.get_boolean(Ps.SHOW_CLEANUP_NEWLINES_OPTION)) ||
              yr(".MenuGroup--cleanupNewlines").hide(),
            this.view.select_file(o),
            a)
          )
            if (this.is_mobile_view())
              this.display_file_context_menu_for_mobile(o, i);
            else {
              var u = br(t, i.get(0));
              i.css(u), i.css("bottom", "initial"), i.show();
            }
        }),
        (e.prototype.display_bookmark_context_menu = function (e, t) {
          var i = $(this.bookmark_context_menu);
          this.hide_context_menu(), this.view.stop_renaming();
          var n = this.get_bookmark_from_el(e);
          if (
            (this.view.set_current_file(n),
            this.view.select_file(n),
            this.is_mobile_view())
          )
            this.display_file_context_menu_for_mobile(n, i);
          else {
            var o = br(t, i.get(0));
            i.css(o), i.css("bottom", "initial"), i.show();
          }
          t.preventDefault(), t.stopPropagation();
        }),
        (e.prototype.display_tag_context_menu = function (e, t) {
          var i = $(this.tag_context_menu);
          this.hide_context_menu(),
            this.view.stop_renaming(),
            this.view.tag_pane_manager.set_context_menu_tag_el(e);
          var n = br(t, i.get(0));
          i.css(n),
            i.css("bottom", "initial"),
            i.show(),
            t.preventDefault(),
            t.stopPropagation();
        }),
        (e.prototype.display_file_context_menu_for_mobile = function (e, t) {
          fish(".mobile-file-context-menu-background").uShow();
          var i =
              e instanceof ri ? e.get_data_object().get_title() : e.get_title(),
            n = e instanceof ri ? "/" : this.get_breadcrumb_chain_text(e);
          "" === n && (n = "/"),
            t.find(".file-details-file-name").text(Rt(i, 30)),
            t.find(".file-details-file-path").text(n),
            t
              .find(".file-details-icon")
              .removeClass("is-folder is-document is-bookmark"),
            e instanceof ii
              ? t.find(".file-details-icon").addClass("is-folder")
              : e instanceof Vn
              ? t.find(".file-details-icon").addClass("is-document")
              : e instanceof ri &&
                t.find(".file-details-icon").addClass("is-bookmark"),
            t.css({ bottom: -1e3, top: "initial", left: "initial" }),
            t.show(),
            wt(function () {
              t.css("bottom", 0);
            }),
            (this.is_mobile_file_menu_open = !0);
        }),
        (e.prototype.display_file_nav_context_menu = function (e) {
          var t = e.pageX || window.outerWidth - 46,
            i = e.pageY || 5;
          this.hide_context_menu(),
            this.view.stop_renaming(),
            kr(
              { top: i, bottom: i, left: t, right: t },
              this.file_nav_context_menu,
            ),
            e.preventDefault();
        }),
        (e.prototype.hide_context_menu = function () {
          this.is_main_menu_open &&
            (this.main_menu.hide(), (this.is_main_menu_open = !1)),
            yr(".ContextMenu").hide(),
            this.is_mobile_view() &&
              (yr(
                ".FolderItemContextMenu, .DocumentItemContextMenu, .BookmarkItemContextMenu",
              ).css("bottom", -1e3),
              (this.is_mobile_file_menu_open = !1)),
            fish(".mobile-file-context-menu-background").uHide(),
            this.notification_ui.close(),
            this.close_mobile_header_more_options(),
            yr(".AppHeader-mainMenu").removeClass("active"),
            this.app.with_current_app_document(function (e) {
              e.ui.close_triggered_popups(),
                e.ui.drag_manager.is_dragging_node() ||
                  e.ui.deselect_multiselect(),
                e.ui.clear_set_second_level_menu_hover_timeout();
            }),
            this.shortcut_ui.exit_customizing_shortcut(),
            this.view.set_current_file(null),
            this.app.with_current_app_document(function (e) {
              e.ui.hide_node_menu();
            });
        }),
        (e.prototype.restore_selection = function () {
          this.app.env.is("mobile") ||
            this.is_mobile_device() ||
            this.app.with_current_app_document(function (e) {
              e.ui.view_state_manager.apply_saved_view_state();
            });
        }),
        (e.prototype.clear_syncing_timeout = function () {
          null !== this.syncing_icon_timeout &&
            (clearTimeout(this.syncing_icon_timeout),
            (this.syncing_icon_timeout = null));
        }),
        (e.prototype.clear_sync_needed_timeout = function () {
          null !== this.sync_needed_timeout &&
            (clearTimeout(this.sync_needed_timeout),
            (this.sync_needed_timeout = null));
        }),
        (e.prototype.display_syncing = function () {
          var e = this;
          yr(".header-sync-state").hide(),
            yr(".header-sync-state.mod-syncing").show(),
            this.clear_syncing_timeout(),
            this.clear_sync_needed_timeout(),
            (this.syncing_icon_timeout = this.set_timeout(function () {
              (e.syncing_icon_timeout = null),
                e.sync_finished && (e.display_synced(), (e.sync_finished = !1));
            }, b));
        }),
        (e.prototype.display_synced = function () {
          this.clear_sync_needed_timeout(),
            yr(".header-sync-state").hide(),
            yr(".header-sync-state.mod-synced").show(),
            yr(
              ".MobileHeader-moreOption--saveNow, .MobileHeader-moreOption--saved",
            ).hide(),
            yr(".MobileHeader-moreOption--synced").show();
        }),
        (e.prototype.on_synced = function () {
          null !== this.syncing_icon_timeout
            ? (this.sync_finished = !0)
            : this.display_synced();
        }),
        (e.prototype.display_saved = function () {
          this.clear_sync_needed_timeout(),
            yr(".header-sync-state").hide(),
            yr(".header-sync-state.mod-saved").show(),
            yr(
              ".MobileHeader-moreOption--saveNow, .MobileHeader-moreOption--synced",
            ).hide(),
            yr(".MobileHeader-moreOption--saved").show();
        }),
        (e.prototype.display_sync_needed = function () {
          this.clear_syncing_timeout(),
            this.clear_sync_needed_timeout(),
            (this.sync_needed_timeout = this.set_timeout(function () {
              yr(".header-sync-state").hide(),
                yr(".header-sync-state.mod-sync-now").show();
            }, 3e3)),
            yr(
              ".MobileHeader-moreOption--saved, .MobileHeader-moreOption--synced",
            ).hide(),
            yr(".MobileHeader-moreOption--saveNow").show();
        }),
        (e.prototype.display_sync_error = function () {
          this.clear_syncing_timeout(),
            this.clear_sync_needed_timeout(),
            yr(".header-sync-state").hide(),
            yr(".header-sync-state.mod-sync-error").show();
        }),
        (e.prototype.display_save_error = function () {
          this.clear_sync_needed_timeout(),
            yr(".header-sync-state").hide(),
            yr(".header-sync-state.mod-save-error").show();
        }),
        (e.prototype.display_sync_disabled = function () {
          this.clear_sync_needed_timeout(),
            yr(".header-sync-state").hide(),
            yr(".header-sync-state.mod-sync-disabled").show();
        }),
        (e.prototype.setup_shortcut_help = function () {
          yr(".ShortcutHelp-closeButton").on(
            "click",
            this.toggle_shortcut_help.bind(this),
          );
        }),
        (e.prototype.toggle_shortcut_help = function () {
          this.preferences.toggle_boolean(Ps.SHOW_HELP);
        }),
        (e.prototype.enter_document_search_on_mobile = function () {
          this.show_mobile_search_header(),
            wt(function () {
              yr(".MobileHeader-searchbar").focus();
            });
        }),
        (e.prototype.exit_document_search_on_mobile = function () {
          this.is_searching_globally_on_mobile()
            ? (yr(".MobileHeader-searchbar").val(""),
              this.global_search.close(),
              this.set_is_searching_globally_on_mobile(!1),
              window.history.back())
            : (yr(".MobileHeader-searchbar").val("").trigger("change"),
              this.view.get_url_manager().set_search_query("")),
            this.show_mobile_document_header();
        }),
        (e.prototype.open_file_finder_on_mobile = function () {
          var e = this;
          this.close_mobile_slidebar(),
            setTimeout(function () {
              e.file_finder.open_finder();
            }, 200);
        }),
        (e.prototype.open_node_finder_on_mobile = function () {
          var e = this;
          this.close_mobile_slidebar(),
            setTimeout(function () {
              e.node_finder.open_finder();
            }, 200);
        }),
        (e.prototype.on_window_resize = function () {
          this.pane_ui.window_resized(),
            this.app.config.isAnonymousView() ||
              (this.app.with_current_app_document(function (e) {
                e.ui.request_show_current_node_highlight();
              }),
              this.reposition_document_tools());
        }),
        (e.prototype.on_panes_resize = function (e) {
          e.stopPropagation();
        }),
        (e.prototype.close_left_pane = function () {
          this.pane_ui.close_pane();
        }),
        (e.prototype.toggle_file_pane = function (e) {
          this.pane_ui.toggle_pane("file"), e && e.stopImmediatePropagation();
        }),
        (e.prototype.toggle_bookmark_pane = function (e) {
          this.pane_ui.toggle_pane("bookmark"),
            e && e.stopImmediatePropagation();
        }),
        (e.prototype.toggle_tag_pane = function (e) {
          this.pane_ui.toggle_pane("tag"), e && e.stopImmediatePropagation();
        }),
        (e.prototype.make_sure_bookmark_pane_is_open = function () {
          this.pane_ui.open_pane("bookmark");
        }),
        (e.prototype.update_pro_info = function (e) {
          if (e) {
            var t = new Date(e.expiry_ts),
              i = V[t.getMonth()] + " " + t.getDate() + ", " + t.getFullYear();
            yr(".setting-pro-expire-date").text(i),
              this.view.update_user_info({ fetch_auths: !0 }),
              yr(".BookmarkLimit").remove(),
              this.app.env.is("web") ||
                yr("html")
                  .removeClass("Dynalist-isFree")
                  .addClass("Dynalist-isPro");
          }
          yr(".setting.mod-pro-user, .settings-tabs-container").toggleClass(
            "is-pro-user",
            bool(e),
          );
        }),
        (e.prototype.update_backup_service_info = function (e) {
          var t = null,
            i = null,
            n = null;
          each(e, function (e) {
            e.type === X
              ? (t = e)
              : e.type === Z
              ? (i = e)
              : e.type === J && (n = e);
          }),
            t
              ? (yr(".Preference-dropboxDisplayName").text(t.display),
                yr(".setting.mod-link-dropbox").hide(),
                yr(".setting.mod-unlink-dropbox").show())
              : (yr(".setting.mod-link-dropbox").show(),
                yr(".setting.mod-unlink-dropbox").hide()),
            i
              ? (yr(".Preference-googleDriveDisplayName").text(i.display),
                yr(".setting.mod-link-google-drive").hide(),
                yr(".setting.mod-unlink-google-drive").show())
              : (yr(".setting.mod-link-google-drive").show(),
                yr(".setting.mod-unlink-google-drive").hide()),
            n
              ? (fish(".Preference-googleCalendarDisplayName").setText(
                  n.display,
                ),
                fish(".setting.mod-link-gcal").uHide(),
                fish(".setting.mod-unlink-gcal").uShow(),
                this.preferences.get(Ps.GCAL_SYNC_CALENDAR_ID)
                  ? fish(".setting.mod-has-chosen-calendar").uShow()
                  : fish(".setting.mod-no-calendar-chosen").uShow(),
                fish(".setting.mod-toggle-gcal-for-all-documents").uShow())
              : (fish(".setting.mod-link-gcal").uShow(),
                fish(".setting.mod-unlink-gcal").uHide(),
                fishAll(
                  ".setting.mod-no-calendar-chosen, .setting.mod-has-chosen-calendar",
                ).forEach(function (e) {
                  return e.uHide();
                }),
                fish(".setting.mod-toggle-gcal-for-all-documents").uHide(),
                fish(".setting.mod-choose-calendar").uHide());
        }),
        (e.prototype.update_upload_quota = function (e, t) {
          var i = ((t / e) * 100).toFixed(1);
          yr(".UploadQuota-usedSize").text(Ft(t)),
            yr(".UploadQuota-usedPercent").text(i),
            yr(".UploadQuota-quotaSize").text(Ft(e));
        }),
        (e.prototype.show_settings_spinner = function () {
          this.modal_manager.get_modal_el("settings").addClass("loading");
        }),
        (e.prototype.hide_settings_spinner = function () {
          this.modal_manager.get_modal_el("settings").removeClass("loading");
        }),
        (e.prototype.toggle_main_menu = function () {
          this.is_main_menu_open
            ? this.main_menu.hide()
            : this.main_menu.show(),
            (this.is_main_menu_open = !this.is_main_menu_open),
            yr(".AppHeader-mainMenu").toggleClass("active");
        }),
        (e.prototype.confirm_delete_file = function (e) {
          (this.file_being_deleted = e),
            yr(".confirm-delete-file .FileType").text(e.get_type()),
            yr(".confirm-delete-file .FileName").text(
              Rt(e.get_title(), 50) || c,
            ),
            this.open_modal("confirm-delete-file");
        }),
        (e.prototype.confirm_delete_bookmark = function (e) {
          var t = Rt(
            (this.file_being_deleted = e).get_data_object().get_title(),
            50,
          );
          yr(".confirm-delete-bookmark .FileName").text(
            t || this.view.get_default_bookmark_name(e.get_data_object()),
          ),
            this.open_modal("confirm-delete-bookmark");
        }),
        (e.prototype.update_bookmark_status = function () {
          var e = this.view.get_url_manager(),
            t = e.get_state();
          this.app.with_current_app_document(function (e) {
            e.ui.update_bookmark_status();
          }),
            this.update_bookmark_button_status_by_url_state(
              fish(".Pane-headerToolbarItem--bookmarkCurrent"),
              t,
              "what you see",
            ),
            e.is_global_search() &&
              e.is_flat_search() &&
              this.update_bookmark_button_status_by_url_state(
                fish(".search-ui-container .search-ui-bookmark-icon"),
                t,
                "this search",
              );
        }),
        (e.prototype.toggleBookmark = function (e) {
          void 0 === e && (e = !0);
          var t = this.view.get_bookmark_by_current_url_state();
          t
            ? e
              ? this.confirm_delete_bookmark(t)
              : ((this.file_being_deleted = t), this.delete_file())
            : this.view.bookmarkCurrentUrlState();
        }),
        (e.prototype.delete_file = function () {
          if (
            (assert_not_null(this.file_being_deleted),
            this.file_being_deleted instanceof ri)
          )
            this.controller.remove_bookmark(this.file_being_deleted),
              this.update_bookmark_status();
          else {
            var e = this.get_link_file_if_shared(this.file_being_deleted);
            this.view.delete_file(e);
          }
        }),
        (e.prototype.get_link_file_if_shared = function (e) {
          return e.is_namespace_root() ? e.get_namespace().get_linkfile() : e;
        }),
        (e.prototype.stop_loading = function () {
          this.doc_view_container.removeClass("loading", "loading-failed");
        }),
        (e.prototype.show_document_empty_state = function () {
          this.doc_view_container.addClass("blank"),
            fishAll(
              ".MobileHeader-option--undo, .MobileHeader-option--searchInDocument",
            ).forEach(function (e) {
              return e.uHide();
            }),
            fishAll(
              ".MobileHeader-moreOption--toggleChecked, .MobileHeader-moreOption--toggleNotes",
            ).forEach(function (e) {
              return e.uHide();
            });
        }),
        (e.prototype.hide_document_empty_state = function () {
          this.doc_view_container.removeClass("blank"),
            fishAll(
              ".MobileHeader-option--undo, .MobileHeader-option--searchInDocument",
            ).forEach(function (e) {
              return e.uShow();
            }),
            fishAll(
              ".MobileHeader-moreOption--toggleChecked, .MobileHeader-moreOption--toggleNotes",
            ).forEach(function (e) {
              return e.uShow();
            });
        }),
        (e.prototype.open_modal = function (e) {
          this.close_mobile_slidebar(),
            this.modal_manager.open_modal(e) &&
              this.app.scope.push_scope(this.modal_scope);
        }),
        (e.prototype.close_modals = function () {
          this.modal_manager.close_modal(),
            this.app.scope.pop_scope(this.modal_scope);
        }),
        (e.prototype.reposition_document_tools = function () {
          if (!this.is_mobile_view()) {
            var e = this.app_container.hasClass("is-borderShowing") ? 62 : 18,
              t = this.doc_view_container.scrollTop;
            e < t
              ? yr(".DocumentTools").css("top", t - 55)
              : yr(".DocumentTools").removeAttr("style");
          }
        }),
        (e.prototype.show_popup_success = function (e) {
          "copy" === e && this.open_modal("successfully-copied");
        }),
        (e.prototype.show_popup_error = function (e) {}),
        (e.prototype.show_bookmark_limit_reached_error = function () {
          this.open_modal("bookmark-limited-reached");
        }),
        (e.prototype.display_error = function (e) {
          yr(".GenericError-title").text(e.title || "Error"),
            yr(".GenericError-message").text(
              e.message || "Something went wrong!",
            ),
            this.open_modal("generic-error");
        }),
        (e.prototype.close_mobile_slidebar = function () {
          this.pane_ui.close_mobile_pane();
        }),
        (e.prototype.is_mobile_slidebar_open = function () {
          return this.pane_ui.is_mobile_pane_open();
        }),
        (e.prototype.is_mobile_view = function () {
          return window.is_mobile || this.is_mobile_device();
        }),
        (e.prototype.is_mobile_device = function () {
          return Vs;
        }),
        (e.prototype.is_ios_device = function () {
          return Xs;
        }),
        (e.prototype.handle_mobile_popstate = function () {
          return (
            !!this.is_mobile_view() &&
            (this.is_mobile_file_menu_open
              ? (this.hide_context_menu(), !0)
              : this.is_mobile_slidebar_open()
              ? (this.close_mobile_slidebar(), !0)
              : this.file_finder.is_open()
              ? (this.file_finder.close_finder(), !0)
              : this.node_finder.is_open()
              ? (this.node_finder.close_finder(), !0)
              : !0 === this.get(Sl)
              ? (this.close_mobile_header_more_options(), !0)
              : this.is_mobile_search_open()
              ? ((this.mobile_searchbar.value = ""),
                this.show_mobile_document_header(),
                !0)
              : "settings" === this.modal_manager.get_open_modal_name() &&
                (this.close_modals(), !0))
          );
        }),
        (e.prototype.open_settings_tab = function (e) {
          yr(".settings-nav-item, .settings-tab").removeClass("is-selected"),
            yr('.settings-nav-item[data-name="' + e + '"]').addClass(
              "is-selected",
            ),
            yr('.settings-tab[data-name="' + e + '"]').addClass("is-selected");
        }),
        (e.prototype.display_sync_status = function () {
          this.app.config.is_admin_user() &&
            (this.update_sync_status_popup(), this.open_modal("sync-status"));
        }),
        (e.prototype.update_sync_status_popup = function () {
          if ("sync-status" === this.modal_manager.get_open_modal_name()) {
            var s = fish(".sync-status-list"),
              e = this.controller.get_sync_manager().get_components(),
              r = !1;
            s.empty(),
              Array.each(e, function (e) {
                var t = e.sync_state,
                  i = e.error_log;
                if (0 < i.length) {
                  r = !0;
                  var n = e.get_controller(),
                    o =
                      n instanceof Ho
                        ? "Folder structure"
                        : n.get_app_document().get_document().get_title();
                  s.createEl("li", { cls: "sync-status" }, function (e) {
                    e.createEl("div", { cls: "sync-status-name", text: o }),
                      e.createEl("div", {
                        cls: "sync-status-state",
                        text: dt[t],
                      }),
                      e.createEl(
                        "div",
                        { cls: "sync-status-errors" },
                        function (t) {
                          i.forEach(function (e) {
                            t.createEl("p", {
                              cls: "sync-status-error",
                              text: e,
                            });
                          });
                        },
                      ),
                      e.createEl(
                        "a",
                        {
                          cls: "button sync-status-clear-local-btn",
                          text: "Clear local data",
                        },
                        function (e) {
                          e.addEventListener("click", function (e) {
                            e.preventDefault(), n.clear_local_data();
                          });
                        },
                      );
                  });
                }
              }),
              r
                ? (yr(".sync-status-success").hide(),
                  yr(".sync-status-container").show())
                : (yr(".sync-status-success").show(),
                  yr(".sync-status-container").hide());
          }
        }),
        (e.prototype.download_sync_error_report = function () {
          try {
            new Blob();
            var e = yr(".sync-error-report-data").text(),
              t = new Blob([e], { type: "text/plain;charset=utf-8" });
            Di(t, "Dynalist Sync Error.log");
          } catch (e) {
            alert(
              "Your browser doesn't let us create files on the fly. You'll need to create the file yourself.",
            );
          }
        }),
        (e.prototype.update_history_status = function () {
          yr(".desktop-app-history-control").removeClass("is-disabled"),
            this.app.env.can_go_back() ||
              yr(".desktop-app-history-control.mod-back").addClass(
                "is-disabled",
              ),
            this.app.env.can_go_forward() ||
              yr(".desktop-app-history-control.mod-forward").addClass(
                "is-disabled",
              );
        }),
        (e.prototype.fix_ios_menu_scroll = function () {
          !(function e(n) {
            n.addEventListener("touchstart", function () {
              var e = n.scrollTop,
                t = n.scrollHeight,
                i = e + n.offsetHeight;
              0 === e ? (n.scrollTop = 1) : i === t && (n.scrollTop = e - 1);
            });
          })(fish(".Pane-content"));
        }),
        (e.prototype.update_desktop_app_about_modal = function () {
          if (this.app.env.is("desktop")) {
            var e = this.app.env.get_updater_status() || {},
              t = e.dynalist_version,
              i = e.new_dynalist_version;
            yr(".desktop-about-current-version").text(t || "Unknown"),
              yr(".desktop-about-new-version").text(i || "Unknown");
            var n = i && i !== t;
            yr(".desktop-about-up-to-date").toggle(!n),
              yr(".desktop-about-new-version-available").toggle(n);
          }
        }),
        (e.prototype.is_searching_globally_on_mobile = function () {
          return this.is_in_global_search_mode_on_mobile;
        }),
        (e.prototype.set_is_searching_globally_on_mobile = function (e) {
          (this.is_in_global_search_mode_on_mobile = e),
            this.go_to_global_search.uToggle(!e),
            this.go_to_document_search.uToggle(e);
          var t = e ? "Search everywhere..." : "Search in this document...";
          this.mobile_searchbar.setAttr("placeholder", t),
            this.mobile_searchbar.focus();
        }),
        (e.prototype.get_breadcrumb_chain_text = function (e) {
          return this.app.userspace.view
            .get_document_parent_chain(e)
            .map(function (e) {
              return e.get_title();
            })
            .join(" > ");
        }),
        (e.prototype.fill_in_collaborator_information = function (e) {
          var o = this,
            t = fish(".collaborators-list"),
            s = Q;
          yr(".SharingForm").addClass("is-shared");
          var r = !0;
          t.empty(),
            each(e, function (i) {
              if ("" !== i.user_email) {
                r = !1;
                var e = t.createEl("li"),
                  n = "";
                i.pending
                  ? (e.createEl("div", {
                      cls: "collab-name",
                      text: i.user_email,
                    }),
                    (n = " (pending)"))
                  : e.createEl("div", {
                      cls: "collab-name",
                      text: i.user_name + " (" + i.user_email + ")",
                    }),
                  i.permission !== ne
                    ? (e.createEl(
                        "select",
                        { cls: "collab-permission-select" },
                        function (t) {
                          Array.each(Hl, function (e) {
                            t.createEl("option", {
                              text: Nt(e) + n,
                              value: String(e),
                            });
                          }),
                            (t.value = String(i.permission)),
                            t.addEventListener("change", function (e) {
                              o.view.set_file_sharing_permission(
                                i.user_email,
                                parseInt(t.value),
                              );
                            });
                        },
                      ),
                      e
                        .createEl("div", { cls: "collab-delete" })
                        .addEventListener("click", function (e) {
                          gr(e) &&
                            o.view.set_file_sharing_permission(i.user_email, Q);
                        }))
                    : e.createEl("div", {
                        cls: "collab-permission",
                        text: Nt(i.permission),
                      });
              } else s = i.permission;
            }),
            t.toggleClass("empty", r);
          var i = ee <= s,
            n = te <= s;
          (fish("#share-publicly-visible").checked = i),
            (fish("#share-publicly-editable").checked = n),
            (fish("#public-sharing-collapsed").checked = !1),
            (fish("#public-sharing-inline-images").checked = !1),
            (fish(".public-sharing-theme").value = "default"),
            fishAll(
              ".share-public-editable-container, .public-link-for-share-container",
            ).forEach(function (e) {
              return e.uToggle(i);
            });
        }),
        (e.prototype.update_color_label_css_dom = function (e) {
          var t,
            i = fishAll("style.color-label-css");
          0 === i.length
            ? ((t = document.createElement("style")).addClass(
                "color-label-css",
              ),
              document.head.appendChild(t))
            : (t = i[0]);
          var n = [];
          for (var o in Ee) {
            var s = Fl(e) ? Ce : Ee,
              r = Fl(e) ? "#fdfdfd" : "#222222",
              a = o,
              _ = s[a];
            n.push(
              '.set-color-label[data-color="' +
                a +
                '"],.Node-contentContainer.mod-color-label-' +
                a +
                " { background-color: " +
                _ +
                "; }",
            ),
              n.push(
                ".mindmap-node.mod-color-label-" +
                  a +
                  " > .mindmap-content { background-color: " +
                  _ +
                  "; border-color: " +
                  _ +
                  "; color: " +
                  r +
                  "; }",
              );
          }
          t.innerHTML = n.join("\n");
        }),
        (e.prototype.open_mobile_header_more_options = function () {
          this.set(Sl, !0);
        }),
        (e.prototype.close_mobile_header_more_options = function () {
          this.set(Sl, !1);
        }),
        (e.prototype.set_cursor_state = function (e) {
          this.set(Il, e);
        }),
        (e.prototype.mobile_header_more_options_open_changed = function (e) {
          e
            ? yr(".MobileHeader").addClass("is-moreOptionsOpen")
            : yr(".MobileHeader").removeClass("is-moreOptionsOpen");
        }),
        (e.prototype.mobile_current_header_changed = function (e) {
          yr(".MobileHeader").hide(), e && yr(".MobileHeader--" + e).show();
        }),
        (e.prototype.cursor_state_changed = function (e) {
          this.body.removeClass(Se, Ne), e !== De && this.body.addClass(e);
        }),
        (e.prototype.close_mobile_headers = function () {
          this.set(Nl, Pl);
        }),
        (e.prototype.show_mobile_document_header = function () {
          this.set(Nl, Ll);
        }),
        (e.prototype.show_mobile_search_header = function () {
          this.set(Nl, Ml);
        }),
        (e.prototype.show_mobile_date_picker_header = function (e) {
          fish(".MobileHeader-option--deleteCurrentDate").uToggle(e),
            this.set(Nl, Rl);
        }),
        (e.prototype.is_mobile_search_open = function () {
          return this.get(Nl) === Ml;
        }),
        (e.prototype.display_google_calendar_choices = function (e) {
          var n = fish(".setting-dropdown-menu.mod-choose-calendar-dropdown"),
            o = this.preferences.get(Ps.GCAL_SYNC_CALENDAR_ID);
          e.unshift({ title: "", id: "" }),
            n.empty(),
            Array.each(e, function (e) {
              var t = e.id,
                i = { value: t };
              o === t && (i.selected = "selected"),
                n.createEl("option", { cls: "", text: e.title, attr: i });
            });
        }),
        (e.prototype.open_settings = function () {
          this.update_gcal_synced_document_count(),
            this.shortcut_ui.clearKeymapSearch(),
            this.open_modal("settings");
        }),
        (e.prototype.update_gcal_synced_document_count = function () {
          var e = this.view.get_num_gcal_synced_documents();
          fish(".Preference-numDocumentGcalSynced").setText(e.toString());
        }),
        (e.prototype.vibrate_phone = function () {
          navigator.vibrate && navigator.vibrate(30);
        }),
        (e.prototype.update_bookmark_button_status_by_url_state = function (
          e,
          t,
          i,
        ) {
          var n = bool(this.view.get_bookmark_by_url_state(t));
          e.toggleClass("is-alreadyBookmarked", n),
            this.set_tooltip(e, (n ? "Unbookmark " : "Bookmark ") + i);
        }),
        (e.prototype.set_tooltip = function (e, t) {
          e.setAttr("aria-label", t);
        }),
        (e.prototype.show_node_icons_el = function (e, t) {
          var i = this.node_menu_icons_container_el;
          this.node_icon_parent &&
            (this.document_container_el.append(i),
            (this.node_icon_parent = null)),
            e &&
              (e.toggleClass("has-backlink-count", t),
              (this.node_icon_parent = e),
              this.node_icon_parent.prepend(i));
        }),
        (e.prototype.get_container = function () {
          return this.container;
        }),
        (e.prototype.get_bookmarks_container = function () {
          return this.bookmarks_container;
        }),
        (e.prototype.get_doc_view_container = function () {
          return this.doc_view_container;
        }),
        (e.prototype.open_sharing_modal_for_file = function (t) {
          var i = "";
          if (
            (this.view.set_file_being_shared(t),
            this.hide_context_menu(),
            t instanceof ii)
          )
            (i = "folder"), fish(".share-content.mod-with-link").uHide();
          else if (t instanceof Vn) {
            (i = "document"), fish(".share-content.mod-with-link").uShow();
            var e = this.view
              .get_url_manager()
              .create_absolute_url_from_state({
                document_server_id: t.get_server_id(),
              });
            fish(".public-link-for-share").value = e;
          }
          fishAll(".SharingForm-fileTitle").forEach(function (e) {
            return e.setText(t.get_title());
          }),
            fishAll(".SharingForm-fileType").forEach(function (e) {
              return e.setText(i);
            }),
            t.is_from_root_namespace()
              ? (fish(".SharingForm").removeClass("is-shared"),
                this.loader_hide())
              : (fish(".SharingForm").addClass("is-shared"),
                fish(".ErrorMessage.mod-sharing").setText(""),
                this.view.get_file_sharing_permission()),
            this.open_modal("sharing"),
            this.view.clear_selection();
        }),
        (e.prototype.display_inbox_destination_setting = function (e, t) {
          var i = fish(".setting-inbox-location-string");
          if (t && e) {
            var n = e.get_title(),
              o = Rt(t.get_meta_object().get_content(), 20);
            t.is_root()
              ? i.setText('document "' + n + '"')
              : i.setText('"' + o + '" under document "' + n + '"');
          } else i.setText("not set");
        }),
        (e.prototype.show_document_unavailable = function () {
          this.doc_view_container.addClass("whole-page", "unavailable");
        }),
        (e.prototype.check_for_true_black_theme = function () {
          var e = this.preferences.get_boolean(Ps.USE_TRUE_BLACK),
            t = "dark" === this.preferences.get(Ps.THEME);
          e && t && this.app.env.is("mobile")
            ? (this.document_container_el.style.backgroundColor = "black")
            : (this.document_container_el.style.backgroundColor = "");
        }),
        (e.prototype.mobile_header_back = function () {
          this.get(Nl) === Ml
            ? this.exit_document_search_on_mobile()
            : this.get(Nl) === Rl
            ? this.show_mobile_document_header()
            : "settings" === this.modal_manager.get_open_modal_name() &&
              this.close_modals(),
            this.app.scope.pop_scope(null);
        }),
        (e.prototype.copy_share_link = function () {
          var e = this,
            t = !1;
          try {
            this.shareLinkInputEl.focus(),
              this.shareLinkInputEl.select(),
              (t = document.execCommand("copy"));
          } catch (e) {}
          t
            ? this.copy_share_link_btn_el.setText("Copied!")
            : this.copy_share_link_btn_el.setText("Can't copy"),
            setTimeout(function () {
              e.copy_share_link_btn_el.setText("Copy link");
            }, 1e3);
        }),
        (e.prototype.sharing_operation_start = function () {
          yr(".ErrorMessage.mod-sharing").text("").hide(),
            yr("#collaborators-container")
              .removeClass("error")
              .addClass("loading");
        }),
        (e.prototype.updatePublicLink = function () {
          var e = fish("#public-sharing-collapsed").checked,
            t = fish("#public-sharing-inline-images").checked,
            i = fish(".public-sharing-theme").value,
            n = He.encode_url_query({
              collapse: e,
              "inline-images": t,
              theme: i,
            }),
            o = this.shareLinkInputEl.value,
            s = He.decode_url(o);
          this.shareLinkInputEl.value = s.path + "#" + n;
        }),
        (e.prototype.loader_hide = function () {
          yr("#collaborators-container").removeClass("loading error");
        }),
        (e.prototype.loader_error = function () {
          yr("#collaborators-container").addClass("loading error");
        }),
        (e.prototype.on_network_connected = function () {
          yr(
            ".MenuItem--manageFolderCollabs, .MenuItem--manageDocumentCollabs",
          ).removeClass("is-disabled"),
            yr(
              ".js-start-tutorial.MenuItem, .MenuItem--makeBackup",
            ).removeClass("is-disabled"),
            yr(".header-sync-state.mod-sync-now").text("Sync now");
        }),
        (e.prototype.on_network_disconnected = function () {
          yr(
            ".MenuItem--manageFolderCollabs, .MenuItem--manageDocumentCollabs",
          ).addClass("is-disabled"),
            yr(".js-start-tutorial.MenuItem, .MenuItem--makeBackup").addClass(
              "is-disabled",
            ),
            yr(".header-sync-state.mod-sync-now").text("Save now");
        }),
        e
      );
    })(N_),
    Bl = "gRecaptcha",
    Ul = (function () {
      function e(e, t) {
        (this.element = e), (this.sitekey = t), (this.captcha = null);
      }
      return (
        (e.prototype.initialize = function () {
          return (
            !!window[Bl] ||
            ((window[Bl] = wi()),
            bi(
              "https://www.recaptcha.net/recaptcha/api.js?onload=" +
                Bl +
                "&render=explicit",
            ),
            !1)
          );
        }),
        (e.prototype.load_captcha_when_ready = function () {
          var e = this;
          this.initialize(),
            window[Bl].push(function () {
              e.load_captcha();
            });
        }),
        (e.prototype.load_captcha = function () {
          this.initialize() || this.load_captcha_when_ready();
          var e = this.captcha_api();
          null === this.captcha
            ? (this.captcha = e.render(this.element, { sitekey: this.sitekey }))
            : e.reset(this.captcha);
        }),
        (e.prototype.get_captcha = function () {
          return this.captcha_api().getResponse(this.captcha);
        }),
        (e.prototype.captcha_api = function () {
          if ("undefined" == typeof grecaptcha)
            throw Error("Captcha cannot be loaded.");
          return grecaptcha;
        }),
        e
      );
    })(),
    jl = (function () {
      function e(e) {
        (this.container = e),
          (this.$error_el = this.container.find(".ErrorMessage")),
          (this.$success_el = this.container.find(".SuccessMessage")),
          (this.captcha_field = this.container.find(".CaptchaField")[0]),
          (this.captcha = new Ul(
            this.captcha_field,
            DYNALIST.RECAPTCHA_SITEKEY,
          )),
          (this.working = !1),
          (this.network = new No(!0));
      }
      return (
        (e.prototype.start_working = function () {
          (this.working = !0), this.container.addClass("loading");
        }),
        (e.prototype.end_working = function () {
          (this.working = !1), this.container.removeClass("loading");
        }),
        (e.prototype.show_response_error_message = function (e, t) {
          var i = t;
          e && e._msg && (i = e._msg), this.show_error_message(i);
        }),
        (e.prototype.show_error_message = function (e) {
          e ? this.$error_el.text(e).show() : this.$error_el.text("").hide();
        }),
        (e.prototype.show_success_message = function (e) {
          e
            ? this.$success_el.text(e).show()
            : this.$success_el.text("").hide();
        }),
        (e.prototype.clear_messages = function () {
          this.show_success_message(""), this.show_error_message("");
        }),
        (e.prototype.try_get_captcha = function () {
          try {
            return this.captcha.get_captcha();
          } catch (e) {}
          return null;
        }),
        (e.prototype.try_load_captcha = function () {
          try {
            this.captcha.load_captcha();
          } catch (e) {
            this.show_error_message(
              "Sorry, we can't load the captcha, possibly because it's not available in your country. Please try again later.",
            );
          }
        }),
        (e.prototype.api_enqueue = function (e, t, i, n) {
          var o = this;
          this.clear_messages(), this.start_working();
          var s = new Zousan();
          return (
            this.network.enqueue(
              e,
              t,
              function (e) {
                o.end_working(), s.resolve(e);
              },
              function (e) {
                o.end_working(),
                  e && e._captcha && o.try_load_captcha(),
                  o.show_response_error_message(e, i),
                  s.reject(e);
              },
              n,
            ),
            s
          );
        }),
        (e.prototype.api_login = function (e, t, i) {
          return this.api_enqueue(
            P,
            { email: e, password: t, captcha: i },
            "Failed to login.",
          );
        }),
        (e.prototype.api_google_login = function (e, t) {
          return this.api_enqueue(
            W,
            { google_id_token: e, captcha: t },
            "Something went wrong with Google sign-in.",
          );
        }),
        (e.prototype.api_apple_login = function (e, t, i) {
          return this.api_enqueue(
            Y,
            { apple_id_token: e, apple_auth_code: t, captcha: i },
            "Something went wrong with Apple sign-in.",
          );
        }),
        (e.prototype.api_login_request_create = function (e) {
          return this.api_enqueue(z, { source: e }, "Failed to request login.");
        }),
        (e.prototype.api_login_request_login = function (e, t) {
          return this.api_enqueue(
            B,
            { token: e, password: t },
            "Failed to login.",
          );
        }),
        (e.prototype.api_signup = function (e, t, i, n, o) {
          return this.api_enqueue(
            F,
            { name: e, email: t, password: i, copy_document_id: n, captcha: o },
            "Failed to signup.",
          );
        }),
        (e.prototype.api_google_signup = function (e, t) {
          return this.api_enqueue(
            F,
            { google_id_token: e, captcha: t },
            "Failed to signup.",
          );
        }),
        (e.prototype.api_apple_signup = function (e, t, i, n) {
          return this.api_enqueue(
            F,
            { apple_id_token: e, apple_auth_code: t, name: i, captcha: n },
            "Failed to signup.",
          );
        }),
        (e.prototype.api_link_google = function (e) {
          return this.api_enqueue(
            K,
            { google_id_token: e },
            "Something went wrong with linking your Google account.",
          );
        }),
        (e.prototype.api_forgot_password = function (e, t) {
          return this.api_enqueue(
            U,
            { email: e, captcha: t },
            "Failed to reset your password due to network issues, please try again.",
          );
        }),
        (e.prototype.api_reset_password = function (e, t) {
          return this.api_enqueue(
            H,
            { code: e, password: t },
            "Failed to reset your password due to network issues, please try again.",
          );
        }),
        (e.prototype.api_import_workflowy = function (e, t) {
          return this.api_enqueue(
            G,
            { email: e, password: t },
            "Failed to import from Workflowy.",
            { timeout: 18e5 },
          );
        }),
        (e.prototype.api_send_feedback = function (e, t) {
          return this.api_enqueue(
            j,
            { email: e, content: t },
            "Failed to send feedback.",
          );
        }),
        e
      );
    })(),
    Gl = (function (o) {
      function e(e, t, i) {
        var n = o.call(this, i) || this;
        return (
          (n.ui = e),
          (n.link = t),
          (n.email_field = n.container.find(".EmailField")),
          (n.password_field = n.container.find(".PasswordField")),
          (n.error_label = n.container.find(".ErrorMessage")),
          n.hook_event(),
          n
        );
      }
      return (
        nt(e, o),
        (e.prototype.hook_event = function () {
          var t = this;
          this.link.on("click", function (e) {
            e.preventDefault(), t.attempt_import();
          }),
            this.password_field.on("keydown", function (e) {
              e.keyCode === l.ENTER && t.attempt_import();
            });
        }),
        (e.prototype.attempt_import = function () {
          var t = this;
          if (!this.working) {
            yr(".WorkflowyImport-freeTrial").hide();
            var e = this.email_field.val(),
              i = this.password_field.val();
            this.api_import_workflowy(e, i).then(function (e) {
              t.ui.open_modal("import-workflowy-success"),
                e.can_redeem_bonus &&
                  (yr(".WorkflowyImport-freeTrial").show(),
                  t.ui.view.redeem_free_14_day_pro());
            });
          }
        }),
        e
      );
    })(jl),
    ql = (function (o) {
      function e(e, t, i) {
        var n = o.call(this, t) || this;
        return (
          (n.link = e),
          (n.success_callback = i),
          (n.email_field = n.container.find(".EmailField")),
          (n.content_field = n.container.find(".ContentField")),
          n.link.on("click", function (e) {
            e.preventDefault(), n.send_feedback();
          }),
          n
        );
      }
      return (
        nt(e, o),
        (e.prototype.send_feedback = function () {
          var e = this;
          if (!this.working) {
            var t =
                0 < this.email_field.length ? this.email_field.val() : void 0,
              i = this.content_field.val();
            this.api_send_feedback(t, i).then(function () {
              e.content_field.val(""),
                e.show_success_message("Your message is sent. Thank you!"),
                e.success_callback && e.success_callback();
            });
          }
        }),
        e
      );
    })(jl),
    $l = (function (i) {
      function e(e) {
        var t = i.call(this, "UserspaceDomEvents", e) || this;
        return (
          (t.events = t.submodule(new Eo())), (t.touchEvents = new Eo()), t
        );
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          (this.ui = this.app.userspace.ui),
            (this.view = this.app.userspace.view),
            (this.controller = this.app.userspace.controller),
            (this.keymap = this.app.keymap),
            (this.drag_manager = this.ui.drag_manager);
        }),
        (e.prototype._init_fields = function () {
          var e = this;
          (this.feedback_manager = new ql(
            yr(".js-send-feedback"),
            yr(".modal-container.feedback"),
            function () {
              e.ui.open_modal("feedback-success");
            },
          )),
            (this.workflowy_importer = new Gl(
              this.ui,
              yr(".js-import-workflowy"),
              yr(".modal-container.import-workflowy .modal"),
            )),
            (this.setting_saving_timeout = -1),
            (this.setting_saved_timeout = -1),
            (this.setting_section_being_saved = null),
            (this.touchstart_pos_x = null),
            (this.touchstart_pos_y = null),
            (this.cancelling_popstate = !1),
            (this.double_click_time = 0),
            (this.double_click_timeout = null);
        }),
        (e.prototype._init_after = function () {
          var t = this,
            e = this.events.make_context_on_off($(window));
          this.events.register_with_context_array(e, [
            ["resize", this.ui.on_window_resize.bind(this.ui)],
            ["blur", this.keymap.clear_last_modifiers.bind(this.keymap)],
            ["focus", this.on_window_focus.bind(this)],
            ["blur", this.on_window_blur.bind(this)],
            ["popstate", this.on_window_popstate.bind(this)],
          ]),
            this.events.register_event_listener(
              document,
              "mouseup",
              this.on_global_mouseup.bind(this),
              !0,
            );
          var i = this.events.make_context_on_off($(".AppContainer")),
            n = this.events.make_context_on_off(
              $(".LeftPaneSlidebarContainer"),
            );
          this.events.register_event_listener(
            document,
            "touchstart",
            this.on_document_touchstart.bind(this),
          ),
            this.touchEvents.register_array_event_listener([
              [document, "touchmove", this.on_document_touchmove.bind(this)],
              [document, "touchend", this.on_document_touchend.bind(this)],
            ]),
            this.events.register_with_context_array(i, [
              ["mouseup", this.on_document_mouseup.bind(this)],
              ["mousedown", this.on_document_mousedown.bind(this)],
              ["click", ".Notification", this.on_notification_click.bind(this)],
              [
                "click",
                ".js-prevent-default",
                function (e) {
                  e.preventDefault();
                },
              ],
              [
                "click",
                ".move-item-destination-link",
                this.on_move_item_destination_link.bind(this),
              ],
              [
                "mousedown",
                ".js-stop-mousedown-propagation",
                function (e) {
                  e.stopPropagation();
                },
              ],
              [
                "mousedown",
                ".MobileHeader-backIcon",
                this.on_back_icon_touch.bind(this),
              ],
            ]),
            this.events.register_with_context_array(n, [
              [
                "click",
                ".FolderItem-toggler",
                this.on_folder_toggler_click.bind(this),
              ],
              [
                "click",
                ".FolderItem-header",
                this.on_folder_header_click.bind(this),
              ],
              [
                "click",
                ".DocumentItem-header",
                this.on_document_header_click.bind(this),
              ],
              [
                "click",
                ".BookmarkItem-header",
                this.on_bookmark_header_click.bind(this),
              ],
              [
                "contextmenu",
                ".FolderItem-header, .DocumentItem-header",
                this.on_file_context_menu.bind(this),
              ],
              [
                "click",
                ".FolderItem-menuTrigger, .DocumentItem-menuTrigger",
                this.on_file_context_menu.bind(this),
              ],
              [
                "contextmenu",
                ".BookmarkItem-header",
                this.on_bookmark_context_menu.bind(this),
              ],
              [
                "click",
                ".BookmarkItem-menuTrigger",
                this.on_bookmark_context_menu.bind(this),
              ],
              [
                "contextmenu",
                ".tag-pane-doc-tag-instance",
                this.on_tag_context_menu.bind(this),
              ],
              [
                "click",
                ".mobile-file-context-menu-background",
                this.on_mobile_file_context_menu_background_click.bind(this),
              ],
              [
                "mousedown",
                ".DocumentItem-title.is-beingEdited, .FolderItem-title.is-beingEdited, .BookmarkItem-title.is-beingEdited",
                this.on_editing_title_mousedown.bind(this),
              ],
              [
                "dblclick",
                ".DocumentItem-header",
                this.on_file_header_double_click.bind(this),
              ],
              [
                "dblclick",
                ".BookmarkItem-header",
                this.on_bookmark_header_double_click.bind(this),
              ],
              [
                "mouseenter",
                ".FolderItem-header, .DocumentItem-header, .BookmarkItem-header",
                this.on_file_header_mouseenter.bind(this),
              ],
              [
                "mouseleave",
                ".FolderItem-header, .DocumentItem-header, .BookmarkItem-header",
                this.on_file_header_mouseleave.bind(this),
              ],
            ]),
            this.events.register_array_on_off([
              [
                $(".FilePane-files"),
                "contextmenu",
                this.on_file_nav_context_menu.bind(this),
              ],
              [
                $(".AppHeader-mainMenu"),
                "contextmenu",
                this.on_main_menu_contextmenu.bind(this),
              ],
              [
                $(".AppHeader-mainMenu"),
                "click",
                this.on_main_menu_mousedown.bind(this),
              ],
              [
                $(".AppHeader-syncStatus"),
                "click",
                this.on_sync_status_click.bind(this),
              ],
              [
                $(".header-sync-state.mod-sync-error"),
                "click",
                this.on_cant_sync_click.bind(this),
              ],
              [
                $(".js-download-sync-error-report"),
                "click",
                this.on_download_error_report_click.bind(this),
              ],
              [
                $(".AppHeader-notifications"),
                "click",
                this.on_notifications_click.bind(this),
              ],
              [
                $(
                  ".AppHeader-settings, .MenuItem--settings, .MobileHeader-moreOption--settings",
                ),
                "click",
                this.on_settings_click.bind(this),
              ],
              [
                $(".js-open-upload-manager"),
                "click",
                this.on_upload_manager_click.bind(this),
              ],
              [
                $(".js-history-back"),
                "click",
                this.on_history_back_click.bind(this),
              ],
              [
                $(".js-history-forward"),
                "click",
                this.on_history_forward_click.bind(this),
              ],
              [$(".MenuItem"), "click", this.on_menu_item_click.bind(this)],
              [
                $(
                  ".MenuItem--manageFolderCollabs, .MenuItem--manageDocumentCollabs",
                ),
                "click",
                this.on_manage_collab_click.bind(this),
              ],
              [
                $("#share-publicly-visible"),
                "change",
                this.on_public_visible_change.bind(this),
              ],
              [
                $("#share-publicly-editable"),
                "change",
                this.on_public_editable_change.bind(this),
              ],
              [
                $(".js-update-public-sharing-link"),
                "change",
                this.onPublicSharingLinkUpdate.bind(this),
              ],
              [
                $(".LeftPaneContainer-navItem--myFiles"),
                "click",
                this.ui.toggle_file_pane.bind(this.ui),
              ],
              [
                $(".LeftPaneContainer-navItem--bookmarks"),
                "click",
                this.ui.toggle_bookmark_pane.bind(this.ui),
              ],
              [
                $(".LeftPaneContainer-navItem--tags"),
                "click",
                this.ui.toggle_tag_pane.bind(this.ui),
              ],
              [
                $(".Pane-headerToolbarItem--collapse"),
                "click",
                this.ui.close_left_pane.bind(this.ui),
              ],
              [
                $(".Pane-headerToolbarItem--newFile"),
                "click",
                this.on_file_nav_context_menu.bind(this),
              ],
              [
                $(
                  ".Pane-headerToolbarItem--bookmarkCurrent, .Pane-headerButton--newBookmark",
                ),
                "click",
                this.on_bookmark_pane_toolbar_bookmark_current_mouseup.bind(
                  this,
                ),
              ],
              [
                $(".Pane-headerIcon--documentFinder"),
                "click",
                this.on_open_file_finder_click_mobile.bind(this),
              ],
              [
                $(".MenuItem--renameFile, .MenuItem--renameBookmark"),
                "click",
                this.on_rename_click.bind(this),
              ],
              [
                $(
                  ".MenuItem--newFolderUnderRoot, .Pane-headerButton--newFolder",
                ),
                "click",
                this.on_new_folder_under_root_mouseup.bind(this),
              ],
              [
                $(
                  ".MenuItem--newDocumentUnderRoot, .create-document-under-root-link, .Pane-headerButton--newDocument",
                ),
                "click",
                this.on_new_document_under_root_mouseup.bind(this),
              ],
              [
                $(".js-import-opml"),
                "click",
                this.on_import_opml_menu_option_click.bind(this),
              ],
              [
                $(".MenuItem--newFolder"),
                "click",
                this.on_new_folder_mouseup.bind(this),
              ],
              [
                $(".MenuItem--newDocument"),
                "click",
                this.on_new_document_mouseup.bind(this),
              ],
              [
                $(".MenuItem--deleteFolder, .MenuItem--deleteDocument"),
                "click",
                this.on_delete_file_mouseup.bind(this),
              ],
              [
                $(".MenuItem--toggleArchive"),
                "click",
                this.on_toggle_archive_mouseup.bind(this),
              ],
              [
                $(".MenuItem--versionHistory"),
                "click",
                this.on_version_history_click.bind(this),
              ],
              [
                $(".MenuItem--mindMapView"),
                "click",
                this.on_mindmap_view_click.bind(this),
              ],
              [
                $(".MenuItem--toggleGcalSync"),
                "click",
                this.on_toggle_gcal_sync_click.bind(this),
              ],
              [
                $(".js-cleanup-newlines"),
                "click",
                this.on_cleanup_newlines_click.bind(this),
              ],
              [
                $(".MenuItem--copyDocument"),
                "click",
                this.on_copy_document_mouseup.bind(this),
              ],
              [
                $(".MenuItem--bookmarkDocument"),
                "click",
                this.on_context_menu_bookmark_document_mouseup.bind(this),
              ],
              [
                $(".MenuItem--bookmarkNode"),
                "click",
                this.on_context_menu_bookmark_node_mouseup.bind(this),
              ],
              [
                $(".MenuItem--deleteBookmark"),
                "click",
                this.on_delete_bookmark_mouseup.bind(this),
              ],
              [
                $(".MenuItem--renameTag"),
                "click",
                this.on_rename_tag_mouseup.bind(this),
              ],
              [
                $(".MenuItem--deleteTag"),
                "click",
                this.on_delete_tag_click.bind(this),
              ],
              [
                $(".search-ui-bookmark-icon"),
                "click",
                this.on_global_search_bookmark_mouseup.bind(this),
              ],
              [
                $(".DocumentTools-bookmarkSearch"),
                "click",
                this.on_bookmark_search_mouseup.bind(this),
              ],
              [$(".js-sync-now"), "click", this.on_save_now_click.bind(this)],
              [
                $(".js-open-deprecated-modal"),
                "click",
                this.on_open_deprecated_popup_click.bind(this),
              ],
              [
                $("#retry-file-nav-connect"),
                "click",
                this.on_retry_click.bind(this),
              ],
              [
                $(".MobileHeader-moreOption--saveNow"),
                "click",
                this.on_save_now_click.bind(this),
              ],
              [
                $(".MenuItem--logout, .MobileHeader-moreOption--logout"),
                "click",
                this.on_logout_click.bind(this),
              ],
              [
                $(
                  ".MenuItem--importWorkflowy, .MobileHeader-moreOption--workflowyImport",
                ),
                "click",
                this.on_import_workflowy_click.bind(this),
              ],
              [
                $(".MenuItem--shortcutHelp"),
                "click",
                this.on_shortcut_help_click.bind(this),
              ],
              [
                $(".js-start-tutorial"),
                "click",
                this.on_restart_onboarding_tutorial_click.bind(this),
              ],
              [
                $(".MenuItem--link"),
                "click",
                this.on_main_menu_link_click.bind(this),
              ],
              [
                $(".NotificationsContainer-closeButton"),
                "click",
                this.on_notifications_close_click.bind(this),
              ],
              [
                $(".MenuItem--referral"),
                "click",
                this.on_referral_link_click.bind(this),
              ],
              [
                $(".MenuItem--makeBackup"),
                "click",
                this.on_make_backup_link_click.bind(this),
              ],
              [
                $(".js-download-backup"),
                "click",
                this.on_download_backup_click.bind(this),
              ],
              [
                $(".js-open-account-settings"),
                "click",
                this.on_open_account_settings.bind(this),
              ],
              [
                $(".js-open-help"),
                "click",
                this.oh_help_option_click.bind(this),
              ],
              [
                $(".MobileHeader-option--moreOptions"),
                "click",
                this.on_more_options_icon_click.bind(this),
              ],
              [
                $(".js-refresh-page"),
                "click",
                this.on_refresh_click.bind(this),
              ],
              [
                $(".js-open-desktop-about"),
                "click",
                this.on_open_desktop_about_click.bind(this),
              ],
              [$(".FilePane"), "resize", this.on_file_nav_resize.bind(this)],
              [
                $(".CopyDocumentButton"),
                "click",
                this.on_copy_document_click.bind(this),
              ],
              [
                $(".js-login-to-copy"),
                "click",
                this.on_login_to_copy_click.bind(this),
              ],
              [
                $(".js-signup-to-copy"),
                "click",
                this.on_signup_to_copy_click.bind(this),
              ],
              [
                $(".js-update-setting"),
                "change",
                this.on_preference_change.bind(this),
              ],
              [
                $(".js-update-doc-checked"),
                "click",
                this.on_update_doc_checked_click.bind(this),
              ],
              [
                $(".js-update-doc-notes"),
                "click",
                this.on_update_doc_notes_click.bind(this),
              ],
              [
                $(".js-update-doc-layout"),
                "click",
                this.on_update_doc_layout_click.bind(this),
              ],
              [
                $(".js-update-doc-text-direction"),
                "click",
                this.onUpdateDocTextDirection.bind(this),
              ],
              [
                $(".modal-container.change-password .close-btn"),
                "click",
                function (e) {
                  e.stopImmediatePropagation(), t.ui.open_settings();
                },
              ],
              [
                $(".close-btn, .done-btn"),
                "click",
                function (e) {
                  t.ui.close_modals(), t.view.clear_file_being_shared();
                },
              ],
              [
                $(".confirm-delete-file-btn"),
                "click",
                this.on_confirm_delete_file_click.bind(this),
              ],
              [
                $(".js-confirm-delete-tag"),
                "click",
                this.on_confirm_delete_tag_click.bind(this),
              ],
              [
                $(".SharingForm-stopSharing"),
                "click",
                this.on_stop_sharing_click.bind(this),
              ],
              [
                $(".js-confirm-unshare"),
                "click",
                this.on_confirm_unshare_click.bind(this),
              ],
              [
                $(".SharingForm-startSharing"),
                "click",
                this.on_start_sharing_click.bind(this),
              ],
              [
                $(".js-switch-setting-tab"),
                "click",
                this.switch_setting_tab.bind(this),
              ],
              [
                $(".js-link-dropbox"),
                "click",
                this.on_link_dropbox_click.bind(this),
              ],
              [
                $(".js-link-google-drive"),
                "click",
                this.on_link_google_drive_click.bind(this),
              ],
              [$(".js-link-gcal"), "click", this.on_link_gcal_click.bind(this)],
              [
                $(".js-fetch-gcal-calendars"),
                "click",
                this.on_fetch_gcal_calendars_click.bind(this),
              ],
              [$(".js-cancel"), "click", this.on_cancel_click.bind(this)],
              [
                $(".js-unlink-dropbox"),
                "click",
                this.on_unlink_dropbox_click.bind(this),
              ],
              [
                $(".js-unlink-google-drive"),
                "click",
                this.on_unlink_google_drive_click.bind(this),
              ],
              [
                $(".js-unlink-gcal"),
                "click",
                this.on_unlink_gcal_click.bind(this),
              ],
              [
                $(".js-enable-gcal-for-all-documents"),
                "click",
                this.on_enable_gcal_for_all_documents.bind(this),
              ],
              [
                $(".js-disable-gcal-for-all-documents"),
                "click",
                this.on_disable_gcal_for_all_documents.bind(this),
              ],
              [
                $(".js-copy-email-to-inbox-address"),
                "click",
                this.onCopyEmailToInboxAddress.bind(this),
              ],
              [
                $(".js-offline-mode"),
                "change",
                this.onOfflineModeChange.bind(this),
              ],
              [
                $(".js-open-referral"),
                "click",
                this.on_referral_link_click.bind(this),
              ],
              [
                $(".LeftPaneSlidebarContainer, .DocumentContainer"),
                "resize",
                this.ui.on_panes_resize.bind(this.ui),
              ],
              [
                $(".js-add-collaborator"),
                "click",
                this.on_add_collaborator_mouseup.bind(this),
              ],
              [
                $(".MobileHeader-mainMenuIcon"),
                "click",
                this.on_main_menu_click.bind(this),
              ],
              [
                $(".LeftPaneSlidebarContainer-overlay"),
                "click",
                this.on_left_pane_slidebar_overlay_touch.bind(this),
              ],
              [
                $(".MobileHeader-option--globalSearch"),
                "click",
                this.on_mobile_go_to_global_search.bind(this),
              ],
              [
                $(".MobileHeader-option--documentSearch"),
                "click",
                this.on_mobile_go_to_document_search.bind(this),
              ],
              [
                $(".settings-show-advanced-options-link"),
                "click",
                this.on_toggle_advanced_settings.bind(this),
              ],
              [
                $(".node-toolbar"),
                "touchmove",
                this.on_node_toolbar_touchmove.bind(this),
              ],
              [
                $(".import-opml-file-upload"),
                "change",
                this.on_upload_opml_to_import.bind(this),
              ],
              [
                $(".js-open-file-finder"),
                "click",
                this.on_open_file_finder_click.bind(this),
              ],
              [
                $(".js-open-node-finder"),
                "click",
                this.on_open_node_finder_click.bind(this),
              ],
              [
                $(".js-custom-recurrence-select-unit"),
                "change",
                this.on_custom_recurrence_unit_select_change.bind(this),
              ],
              [
                $(".js-confirm-custom-recurrences"),
                "click",
                this.on_custom_recurrence_confirm.bind(this),
              ],
              [
                $(".js-cancel-custom-recurrences"),
                "click",
                this.on_custom_recurrence_cancel.bind(this),
              ],
              [
                $(".js-choose-week-day"),
                "click",
                this.on_custom_recurrence_day_in_week_click.bind(this),
              ],
              [
                $(".modal-container.custom-date-recurrence .close-btn"),
                "click",
                this.on_custom_recurrence_cancel.bind(this),
              ],
              [
                $(".js-copy-shared-link-to-clipboard"),
                "click",
                this.on_copy_share_link_btn_el_click.bind(this),
              ],
              [$(".help-option"), "click", this.onHelpOptionClick.bind(this)],
            ]),
            window.matchMedia &&
              window.matchMedia("(prefers-color-scheme: dark)") &&
              window.matchMedia("(prefers-color-scheme: dark)")
                .addEventListener &&
              window
                .matchMedia("(prefers-color-scheme: dark)")
                .addEventListener("change", function (e) {
                  t.ui.updatePrefTheme();
                });
        }),
        (e.prototype.on_window_focus = function () {
          this.ui.set_focus(!0),
            this.controller.set_focus(!0),
            this.app.with_current_app_document(function (e) {
              e.controller.set_focus(!0), e.ui.on_window_focus();
            });
        }),
        (e.prototype.on_window_blur = function () {
          this.ui.set_focus(!1),
            this.controller.set_focus(!1),
            this.app.with_current_app_document(function (e) {
              e.controller.set_focus(!1), e.ui.on_window_blur();
            });
        }),
        (e.prototype.on_window_popstate = function () {
          var e = this;
          if (this.cancelling_popstate) this.cancelling_popstate = !1;
          else {
            if (!this.app.scope.is_current_scope(Mr.EDITOR))
              !1 !== this.app.scope.pop_scope(null) &&
                (this.cancelling_popstate = !0);
            if (
              (this.ui.handle_mobile_popstate() &&
                (this.cancelling_popstate = !0),
              this.cancelling_popstate)
            )
              return (
                history.forward(),
                void this.queue(function () {
                  e.cancelling_popstate = !1;
                })
              );
            var t = !this.app.env.is("mobile");
            this.view
              .get_url_manager()
              .parse_url_and_apply_state(window.location.href, {
                replace: !0,
                animate: t,
              }),
              this.ui.update_history_status();
          }
        }),
        (e.prototype.on_global_mouseup = function (e) {
          this.keymap.update_modifiers(e);
        }),
        (e.prototype.on_document_touchstart = function (e) {
          var t = !1,
            i = Ti(e);
          this.ui.is_mobile_slidebar_open()
            ? (t = !0)
            : i.x <= N &&
              !this.ui.modal_manager.get_open_modal_name() &&
              (t = !0),
            t && ((this.touchStartPos = i), this.touchEvents.hook_events());
        }),
        (e.prototype.on_document_touchmove = function (e) {
          var t = this.touchStartPos;
          if (t) {
            var i = !1;
            if (
              (this.app.with_current_app_document(function (e) {
                i = e.ui.drag_manager.is_dragging_node();
              }),
              !i)
            ) {
              var n = Ti(e),
                o = n.x - t.x,
                s = n.y - t.y,
                r = Math.abs(o);
              S < r &&
                r > Math.abs(s) &&
                (o < 0 && this.ui.is_mobile_slidebar_open()
                  ? (this.ui.close_mobile_slidebar(),
                    this.on_document_touchend())
                  : 0 < o &&
                    t.x <= N &&
                    !this.ui.modal_manager.get_open_modal_name() &&
                    (this.ui.pane_ui.open_mobile_pane(),
                    this.on_document_touchend()));
            }
          }
        }),
        (e.prototype.on_document_touchend = function () {
          this.touchEvents.unhook_events(), (this.touchStartPos = null);
        }),
        (e.prototype.on_document_mouseup = function (e) {
          fr(e) && this.view.deselect_file();
        }),
        (e.prototype.on_document_mousedown = function (e) {
          (3 !== e.button && 4 !== e.button) || e.preventDefault(),
            fr(e) &&
              (this.ui.close_modals(),
              this.ui.hide_context_menu(),
              this.view.clear_file_being_shared()),
            this.view.stop_renaming();
        }),
        (e.prototype.on_folder_toggler_click = function (e) {
          if (fr(e)) {
            var t = e.currentTarget,
              i = this.ui.get_file_from_el(t);
            this.view.toggle_folder_collapse(i), e.stopPropagation();
          }
        }),
        (e.prototype.on_folder_header_click = function (e) {
          var t = this;
          if (fr(e)) {
            var i = e.currentTarget,
              n = this.ui.get_file_from_el(i),
              o = performance.now();
            this.double_click_time && o <= this.double_click_time
              ? (n && !n.is_root() && this.view.start_renaming(n),
                clearTimeout(this.double_click_timeout))
              : (this.ui.is_mobile_view()
                  ? this.view.toggle_folder_collapse(n)
                  : (this.double_click_timeout = this.set_timeout(function () {
                      t.view.toggle_folder_collapse(n);
                    }, k)),
                (this.double_click_time = o + k));
          }
        }),
        (e.prototype.on_document_header_click = function (e) {
          if (
            fr(e) &&
            !this.drag_manager.is_dragging_file() &&
            !this.view.is_renaming()
          ) {
            var t = e.currentTarget,
              i = this.ui.get_file_from_el(t);
            if (this._is_ctrl_click_on_web(e)) {
              var n = this.view
                .get_url_manager()
                .create_absolute_url_from_state({
                  document_server_id: i.get_server_id(),
                });
              window.open(n, "_blank");
            } else this.view.switch_document(i);
          }
        }),
        (e.prototype.on_bookmark_header_click = function (e) {
          var t =
            this.drag_manager.is_dragging_file() &&
            this.drag_manager.is_dragging_bookmark();
          if (fr(e) && !t && !this.view.is_renaming()) {
            var i = e.currentTarget,
              n = this.ui.get_bookmark_from_el(i);
            if (this._is_ctrl_click_on_web(e)) {
              var o = n.get_data_object().convert_to_url_state(),
                s = this.view
                  .get_url_manager()
                  .create_absolute_url_from_state(o);
              window.open(s, "_blank");
            } else this.ui.close_mobile_slidebar(), this.view.go_to_bookmark(n);
          }
        }),
        (e.prototype.on_file_header_mouseenter = function (e) {
          var t = e.currentTarget;
          this.drag_manager.is_dragging_file() ||
            this.drag_manager.get_nodes_being_dragged() ||
            t.addClass("hover");
        }),
        (e.prototype.on_file_header_mouseleave = function (e) {
          e.currentTarget.removeClass("hover");
        }),
        (e.prototype.on_file_nav_resize = function () {}),
        (e.prototype.on_file_nav_context_menu = function (e) {
          if ("contextmenu" === e.type && e.button <= 0 && Vs)
            return e.preventDefault(), void e.stopPropagation();
          this.ui.display_file_nav_context_menu(e);
        }),
        (e.prototype.on_file_context_menu = function (e) {
          if ("contextmenu" === e.type && e.button <= 0 && Vs)
            return e.preventDefault(), void e.stopPropagation();
          var t = e.currentTarget;
          this.ui.display_file_context_menu(t, e);
        }),
        (e.prototype.on_bookmark_context_menu = function (e) {
          if ("contextmenu" === e.type && e.button <= 0 && Vs)
            return e.preventDefault(), void e.stopPropagation();
          this.ui.display_bookmark_context_menu(e.currentTarget, e);
        }),
        (e.prototype.on_tag_context_menu = function (e) {
          if ("contextmenu" === e.type && e.button <= 0 && Vs)
            return e.preventDefault(), void e.stopPropagation();
          this.ui.display_tag_context_menu(e.currentTarget, e);
        }),
        (e.prototype.on_mobile_file_context_menu_background_click = function (
          e,
        ) {
          e.stopPropagation(), this.ui.hide_context_menu();
        }),
        (e.prototype.on_save_now_click = function (e) {
          this.view.force_sync(), e.stopPropagation();
        }),
        (e.prototype.on_open_deprecated_popup_click = function () {
          this.ui.open_modal("version-deprecated");
        }),
        (e.prototype.on_logout_click = function (e) {
          var t = this;
          e.preventDefault(),
            this.ui.hide_context_menu(),
            this.app.network.enqueue("/user/logout", {}, function () {
              t.app.env.set_env_data_session(null, function () {
                return window.location.reload();
              });
            });
        }),
        (e.prototype.on_import_workflowy_click = function () {
          this.ui.open_modal("import-workflowy"), this.ui.hide_context_menu();
        }),
        (e.prototype.on_delete_file_mouseup = function (e) {
          var t = this.view.get_current_file();
          assert_not_null(t),
            this.ui.confirm_delete_file(t),
            this.ui.hide_context_menu(),
            e.stopPropagation();
        }),
        (e.prototype.on_toggle_archive_mouseup = function (e) {
          var t = this.view.get_current_file();
          assert_not_null(t);
          var i = t.get_user_data_object().get_archived();
          this.view.toggle_document_archived(t, !i),
            this.ui.hide_context_menu(),
            e.stopPropagation();
        }),
        (e.prototype.on_version_history_click = function (e) {
          var t = this.view.get_current_file();
          assert_not_null(t),
            t instanceof Vn && this.ui.version_history.open(t),
            this.ui.hide_context_menu(),
            e.stopPropagation();
        }),
        (e.prototype.on_mindmap_view_click = function (e) {
          if (this.view.get_is_pro()) {
            var t = this.view.get_current_file();
            this.view.url_manager.update_state({
              document_server_id: t.get_server_id(),
              zoom_node_id: "",
              mindmap: !0,
            });
          } else this.app.userspace.ui.open_modal("mindmap-view-upsell");
          this.ui.hide_context_menu(), e.stopPropagation();
        }),
        (e.prototype.on_toggle_gcal_sync_click = function (e) {
          var t = this.view.get_current_file();
          if (t) {
            var i = !t.get_user_data_object().clone().get_sync_calendar(),
              n = t.get_title();
            this.view.toggle_gcal_for_document(t, i),
              i
                ? this.ui.popup_message_manager.display_turn_on_gcal_sync(n)
                : this.ui.popup_message_manager.display_turn_off_gcal_sync(n);
          }
          this.ui.hide_context_menu(), e.stopPropagation();
        }),
        (e.prototype.on_cleanup_newlines_click = function (e) {
          var t = this.view.get_current_file();
          if (t && t instanceof Vn) {
            var i = this.app.find_app_document(t);
            if (!i) return;
            try {
              i.view.fix_ending_newlines(),
                this.ui.popup_message_manager.display_cleanup_newlines_success_popup(
                  t.get_title(),
                );
            } catch (e) {
              this.ui.popup_message_manager.display_error_popup(
                "Dynalist was not able to clean up the newlines, please try again.",
              );
            }
          }
          this.ui.hide_context_menu(), e.stopPropagation();
        }),
        (e.prototype.on_copy_document_mouseup = function (e) {
          var t = this.view.get_current_file();
          if ((assert_not_null(t), t instanceof Vn)) {
            e.stopPropagation();
            var i = this.ui.get_link_file_if_shared(t),
              n = this.view.copy_document(t, i.get_parent(), i.get_index() + 1);
            this.ui.hide_context_menu(), this.view.start_renaming(n);
          }
        }),
        (e.prototype.on_context_menu_bookmark_document_mouseup = function (e) {
          var t = this.view.get_current_file();
          if (t instanceof Vn) {
            var i = this.view.get_url_state(t);
            this.view.bookmarkUrlState(i),
              this.ui.hide_context_menu(),
              e.stopPropagation();
          }
        }),
        (e.prototype.on_context_menu_bookmark_node_mouseup = function (e) {
          var n = this;
          this.app.with_current_app_document(function (e) {
            var t = e.ui.context_menu_node;
            if (t) {
              var i = n.view.get_url_state(e.get_document(), t);
              n.view.bookmarkUrlState(i);
            }
          }),
            this.ui.hide_context_menu(),
            e.stopPropagation();
        }),
        (e.prototype.on_delete_bookmark_mouseup = function (e) {
          var t = this.view.get_current_file();
          assert_not_null(t),
            t instanceof ri &&
              (this.ui.confirm_delete_bookmark(t),
              this.ui.hide_context_menu(),
              e.stopPropagation());
        }),
        (e.prototype.on_rename_tag_mouseup = function (e) {
          this.view.tag_pane_manager.start_renaming_tag(),
            this.ui.hide_context_menu(),
            e.stopPropagation();
        }),
        (e.prototype.on_delete_tag_click = function (e) {
          this.view.tag_pane_manager.show_delete_tag_modal(),
            this.ui.hide_context_menu(),
            e.stopPropagation();
        }),
        (e.prototype.on_confirm_delete_file_click = function () {
          this.ui.delete_file(), this.ui.close_modals();
        }),
        (e.prototype.on_confirm_delete_tag_click = function () {
          this.view.tag_pane_manager.delete_tag(), this.ui.close_modals();
        }),
        (e.prototype.on_main_menu_mousedown = function (e) {
          fr(e) && this.ui.toggle_main_menu();
        }),
        (e.prototype.on_main_menu_contextmenu = function (e) {
          this.ui.toggle_main_menu(), e.preventDefault();
        }),
        (e.prototype.on_sync_status_click = function () {
          this.ui.display_sync_status();
        }),
        (e.prototype.on_cant_sync_click = function (e) {
          var t = this.app.network,
            i = JSON.stringify(t.get_errors());
          yr(".sync-error-report-data").text(i),
            this.ui.open_modal("sync-error-report"),
            e.stopImmediatePropagation();
        }),
        (e.prototype.on_download_error_report_click = function () {
          this.ui.download_sync_error_report();
        }),
        (e.prototype.on_rename_click = function (e) {
          var t = this.view.get_current_file();
          t && this.view.start_renaming(t),
            this.ui.hide_context_menu(),
            e.stopPropagation();
        }),
        (e.prototype.on_editing_title_mousedown = function (e) {
          e.stopPropagation();
        }),
        (e.prototype.on_new_folder_under_root_mouseup = function (e) {
          var t = this.controller.create_folder(
            this.app.userspace.get_userspace().get_root_file(),
            0,
          );
          this.view.stop_renaming(),
            this.view.start_renaming(t),
            this.ui.hide_context_menu(),
            e.stopImmediatePropagation();
        }),
        (e.prototype.on_new_document_under_root_mouseup = function (e) {
          var t = this.controller.create_document(
            this.app.userspace.get_userspace().get_root_file(),
            0,
          );
          this.app.userspace.view.switch_document(t),
            this.view.stop_renaming(),
            this.view.start_renaming(t),
            this.ui.hide_context_menu(),
            e.stopImmediatePropagation();
        }),
        (e.prototype.on_import_opml_menu_option_click = function () {
          this.ui.hide_context_menu();
          var e = fish(".import-opml-file-upload");
          e.focus(), e.click();
        }),
        (e.prototype.on_new_folder_mouseup = function (e) {
          var t = this.view.get_current_file();
          if (t) {
            var i = this.controller.create_folder(t, 0);
            this.view.start_renaming(i);
          }
          this.ui.hide_context_menu(), e.stopPropagation();
        }),
        (e.prototype.on_new_document_mouseup = function (e) {
          var t = this.view.get_current_file();
          if (t) {
            var i = this.controller.create_document(t, 0);
            this.app.userspace.view.switch_document(i),
              this.view.stop_renaming(),
              this.view.start_renaming(i);
          }
          this.ui.hide_context_menu(), e.stopPropagation();
        }),
        (e.prototype.on_file_header_double_click = function (e) {
          var t = e.currentTarget,
            i = this.ui.get_file_from_el(t);
          i && !i.is_root() && this.view.start_renaming(i);
        }),
        (e.prototype.on_bookmark_header_double_click = function (e) {
          var t = e.currentTarget,
            i = this.ui.get_bookmark_from_el(t);
          this.ui.make_sure_bookmark_pane_is_open(),
            this.view.start_renaming(i);
        }),
        (e.prototype.on_copy_document_click = function (e) {
          e.preventDefault();
          var t = this.app.config.is_logged_in(),
            i = this.app.config.load_document;
          t
            ? window.open(d + "/copy/" + i)
            : this.ui.open_modal("copy-document");
        }),
        (e.prototype.on_login_to_copy_click = function () {
          var e = this.app.config.load_document;
          window.open(d + "/copy/" + e);
        }),
        (e.prototype.on_signup_to_copy_click = function () {
          var e = this.app.config.load_document;
          window.open(d + "/signup?copy_document_id=" + e);
        }),
        (e.prototype.on_main_menu_link_click = function (e) {
          var t = e.currentTarget,
            i = $(t).data("href");
          window.open(i), this.ui.hide_context_menu();
        }),
        (e.prototype.on_referral_link_click = function (e) {
          this.ui.close_mobile_slidebar(),
            window.open(d + "/referral"),
            this.ui.hide_context_menu(),
            e.preventDefault();
        }),
        (e.prototype.on_make_backup_link_click = function (e) {
          this.ui.close_mobile_slidebar(),
            this.ui.open_modal("make-backup"),
            this.ui.hide_context_menu(),
            e.preventDefault();
        }),
        (e.prototype.on_download_backup_click = function () {
          window.open(d + "/backup"),
            this.ui.close_modals(),
            this.ui.hide_context_menu();
        }),
        (e.prototype.oh_help_option_click = function () {
          this.ui.close_mobile_slidebar(),
            this.ui.open_modal("help"),
            this.ui.hide_context_menu();
        }),
        (e.prototype.on_open_account_settings = function () {
          var e = this.app.config.get_email(),
            t = d + "/login?url=" + encodeURIComponent("/account");
          e && (t += "&email=" + encodeURIComponent(e)),
            window.open(t),
            this.ui.hide_context_menu();
        }),
        (e.prototype.on_more_options_icon_click = function (e) {
          this.ui.open_mobile_header_more_options(),
            e.stopPropagation(),
            e.preventDefault();
        }),
        (e.prototype.on_refresh_click = function () {
          this.app.env.relaunch();
        }),
        (e.prototype.on_retry_click = function () {
          this.controller.retry_load();
        }),
        (e.prototype.on_menu_item_click = function (e) {
          var t = e.currentTarget;
          $(t).hasClass("is-disabled") && e.stopImmediatePropagation();
        }),
        (e.prototype.on_manage_collab_click = function () {
          var e = this.view.get_current_file();
          this.ui.open_sharing_modal_for_file(e);
        }),
        (e.prototype.on_add_collaborator_mouseup = function () {
          assert_not_null(this.view.get_file_being_shared());
          var e = fish(".new-collab-email").value,
            t = fish(".new-collab-permission").value;
          this.view.set_file_sharing_permission(e, t);
        }),
        (e.prototype.on_start_sharing_click = function (e) {
          this.view.start_sharing_file(this.view.get_file_being_shared()),
            e.preventDefault();
        }),
        (e.prototype.on_stop_sharing_click = function (e) {
          this.ui.open_modal("confirm-unshare"), e.preventDefault();
        }),
        (e.prototype.on_confirm_unshare_click = function (e) {
          this.view.stop_sharing_file(this.view.get_file_being_shared()),
            e.preventDefault();
        }),
        (e.prototype.on_public_visible_change = function (e) {
          e.currentTarget.checked
            ? this.view.set_file_sharing_permission("", ee)
            : this.view.set_file_sharing_permission("", Q);
        }),
        (e.prototype.on_public_editable_change = function (e) {
          e.currentTarget.checked
            ? this.view.set_file_sharing_permission("", te)
            : this.view.set_file_sharing_permission("", ee);
        }),
        (e.prototype.onPublicSharingLinkUpdate = function () {
          this.ui.updatePublicLink();
        }),
        (e.prototype.on_notifications_click = function (e) {
          this.ui.notification_ui.toggle(),
            this.view.update_last_read_timestamp(),
            e.stopPropagation();
        }),
        (e.prototype.on_notifications_close_click = function () {
          this.ui.hide_context_menu();
        }),
        (e.prototype.on_settings_click = function (e) {
          this.ui.open_settings(),
            this.ui.close_mobile_slidebar(),
            this.ui.hide_context_menu(),
            e.stopImmediatePropagation(),
            e.preventDefault();
        }),
        (e.prototype.on_upload_manager_click = function () {
          this.view.get_upload_list(),
            this.ui.open_modal("upload-manager"),
            this.ui.hide_context_menu();
        }),
        (e.prototype.on_history_back_click = function () {
          this.view.history_back();
        }),
        (e.prototype.on_history_forward_click = function () {
          this.view.history_forward();
        }),
        (e.prototype.on_shortcut_help_click = function () {
          this.ui.toggle_shortcut_help(), this.ui.hide_context_menu();
        }),
        (e.prototype.on_restart_onboarding_tutorial_click = function () {
          this.ui.onboarding_manager.restart_onboarding(),
            this.ui.hide_context_menu();
        }),
        (e.prototype.switch_setting_tab = function (e) {
          var t = e.currentTarget,
            i = $(t).data("name");
          this.ui.open_settings_tab(i);
        }),
        (e.prototype.on_preference_change = function (e) {
          var t = this,
            i = e.currentTarget,
            n = $(i),
            o = n.data("key");
          if (
            (n.is(":checkbox")
              ? this.view.get_preferences().set_boolean(o, i.checked)
              : this.view.get_preferences().set(o, i.value),
            o === Ps.GCAL_SYNC_CALENDAR_ID)
          ) {
            var s = i.selectedIndex,
              r = -1 === i ? "" : i.options[s].getText();
            this.view.get_preferences().set(Ps.GCAL_SYNC_CALENDAR_NAME, r),
              fish(".Preference-googleCalendarCurrentCalendarName").setText(r);
          }
          var a = n.closest(".setting-section");
          a === this.setting_section_being_saved &&
            (clearTimeout(this.setting_saving_timeout),
            clearTimeout(this.setting_saved_timeout)),
            a.removeClass("is-saved").addClass("is-saving"),
            (this.setting_section_being_saved = a),
            (this.setting_saving_timeout = this.set_timeout(function () {
              a.removeClass("is-saving").addClass("is-saved"),
                (t.setting_saved_timeout = t.set_timeout(function () {
                  a.removeClass("is-saving is-saved"),
                    (t.setting_section_being_saved = null);
                }, 900));
            }, 700));
        }),
        (e.prototype.on_update_doc_checked_click = function (e) {
          var t = this,
            i = e.currentTarget.getAttribute("data-value");
          this.app.with_current_app_document(function (e) {
            t.view.set_document_checked_user_data(e.document, i);
          });
        }),
        (e.prototype.on_update_doc_notes_click = function (e) {
          var t = this,
            i = e.currentTarget.getAttribute("data-value");
          this.app.with_current_app_document(function (e) {
            t.view.set_document_notes_user_data(e.document, i);
          });
        }),
        (e.prototype.on_update_doc_layout_click = function (e) {
          var t = this,
            i = e.currentTarget.getAttribute("data-value");
          this.app.with_current_app_document(function (e) {
            "mindmap" === i
              ? t.view.get_is_pro()
                ? t.view.url_manager.update_state({ mindmap: !0 })
                : t.app.userspace.ui.open_modal("mindmap-view-upsell")
              : t.view.set_document_layout_user_data(e.document, i);
          });
        }),
        (e.prototype.onUpdateDocTextDirection = function (e) {
          var t = this,
            i = e.currentTarget.getAttribute("data-value");
          this.app.with_current_app_document(function (e) {
            t.view.setDocumentTextDirectionUserData(e.document, i);
          });
        }),
        (e.prototype.on_link_dropbox_click = function (e) {
          e.preventDefault(), window.open(d + "/dropbox/start");
        }),
        (e.prototype.on_unlink_dropbox_click = function (e) {
          e.preventDefault(),
            this.ui.show_settings_spinner(),
            this.view.unlink_dropbox();
        }),
        (e.prototype.on_link_google_drive_click = function (e) {
          e.preventDefault(), window.open(d + "/gdrive/start");
        }),
        (e.prototype.on_unlink_google_drive_click = function (e) {
          e.preventDefault(),
            this.ui.show_settings_spinner(),
            this.view.unlink_google_drive();
        }),
        (e.prototype.on_link_gcal_click = function (e) {
          e.preventDefault(), window.open(d + "/gcal/start");
        }),
        (e.prototype.on_fetch_gcal_calendars_click = function (e) {
          var i = this;
          e.preventDefault(),
            this.ui.show_settings_spinner(),
            this.view.fetch_gcal_calendars(
              function (e) {
                i.ui.display_google_calendar_choices(e.calendars),
                  fishAll(".js-fetch-gcal-calendars").forEach(function (e) {
                    e.removeClass("button", "mod-primary"),
                      e.setText("Refresh calendars");
                  }),
                  fish(".setting.mod-dropdown.mod-choose-calendar").uShow(),
                  i.ui.hide_settings_spinner();
              },
              function (e) {
                var t = "Failed to retrieve calendars.";
                e && e._msg && (t = e._msg),
                  i.ui.popup_message_manager.display_error_popup(t),
                  i.ui.hide_settings_spinner();
              },
            );
        }),
        (e.prototype.on_unlink_gcal_click = function (e) {
          e.preventDefault(),
            this.ui.show_settings_spinner(),
            this.view.unlink_gcal();
        }),
        (e.prototype.on_enable_gcal_for_all_documents = function (e) {
          e.preventDefault(),
            this.view.enable_gcal_sync_for_all_documents(),
            this.ui.update_gcal_synced_document_count();
        }),
        (e.prototype.on_disable_gcal_for_all_documents = function (e) {
          e.preventDefault(),
            this.view.disable_gcal_sync_for_all_documents(),
            this.ui.update_gcal_synced_document_count();
        }),
        (e.prototype.onCopyEmailToInboxAddress = function (e) {
          e.preventDefault(),
            Bt(this.app.config.get_identity() + s)
              ? this.ui.popup_message_manager.displayDismissibleMessage(
                  "The email address was successfully copied.",
                )
              : this.ui.popup_message_manager.display_error_popup(
                  "Dynalist cannot copy the link because your browser does not support it. Please manually copy the address.",
                );
        }),
        (e.prototype.onOfflineModeChange = function (e) {
          var t = e.currentTarget,
            i = t.checked;
          this.view.get_is_pro() || ((i = !1), (t.checked = !1)),
            this.app.env.set_env_data("disable-sync", i),
            this.ui.update_sync_settings();
        }),
        (e.prototype.on_cancel_click = function () {
          this.ui.close_modals();
        }),
        (e.prototype.on_back_icon_touch = function (e) {
          this.ui.mobile_header_back(), e.preventDefault();
        }),
        (e.prototype.on_main_menu_click = function (e) {
          this.ui.pane_ui.open_mobile_pane(), e.preventDefault();
        }),
        (e.prototype.on_left_pane_slidebar_overlay_touch = function (e) {
          this.ui.close_mobile_slidebar(),
            e.stopImmediatePropagation(),
            e.preventDefault();
        }),
        (e.prototype.on_notification_click = function (e) {
          var t = e.currentTarget;
          $(t).hasClass("has-link") || e.preventDefault();
        }),
        (e.prototype.on_bookmark_pane_toolbar_bookmark_current_mouseup =
          function (e) {
            e.stopImmediatePropagation(), this.on_bookmark_current_mouseup();
          }),
        (e.prototype.on_open_file_finder_click_mobile = function () {
          this.ui.open_file_finder_on_mobile();
        }),
        (e.prototype.on_global_search_bookmark_mouseup = function (e) {
          fr(e) && this.on_bookmark_current_mouseup();
        }),
        (e.prototype.on_bookmark_search_mouseup = function (e) {
          fr(e) && this.on_bookmark_current_mouseup();
        }),
        (e.prototype.on_bookmark_current_mouseup = function () {
          this.ui.toggleBookmark();
        }),
        (e.prototype.on_open_desktop_about_click = function () {
          this.ui.open_modal("desktop-about"),
            this.ui.update_desktop_app_about_modal(),
            this.ui.hide_context_menu();
        }),
        (e.prototype.on_mobile_go_to_global_search = function () {
          this.ui.set_is_searching_globally_on_mobile(!0);
        }),
        (e.prototype.on_mobile_go_to_document_search = function () {
          this.ui.set_is_searching_globally_on_mobile(!1);
        }),
        (e.prototype.on_toggle_advanced_settings = function (e) {
          var t = e.currentTarget,
            i = fish(".setting-section.mod-advanced");
          i.hasClass("u-hidden")
            ? (i.uShow(), t.setText("Hide advanced settings"))
            : (i.uHide(), t.setText("Show advanced settings")),
            e.preventDefault();
        }),
        (e.prototype.on_move_item_destination_link = function (e) {
          e.preventDefault();
          var t = e.currentTarget.getAttribute("href");
          this.view.url_manager.parse_url_and_apply_state(t);
        }),
        (e.prototype.on_node_toolbar_touchmove = function (e) {
          e.stopPropagation();
        }),
        (e.prototype.on_upload_opml_to_import = function (e) {
          var c = this,
            t = e.currentTarget.files;
          Array.each(t, function (t) {
            var r = function (e) {
                c.ui.popup_message_manager.display_error_popup(
                  'Failed to import "' + t.name + '". ' + e,
                );
              },
              a = t.name;
            if (!a.endsWith(".opml")) return r("Must be an OPML file.");
            a = a.slice(0, a.length - 5);
            var _ = new FileReader();
            _.addEventListener("load", function () {
              var e = _.result,
                t = [];
              try {
                t = l_.import_opml(e);
              } catch (e) {
                return console.error(e), r("Invalid OPML file.");
              }
              if (0 === t.length) return r("Must be an OPML file.");
              var i = c.controller.create_document(
                  c.app.userspace.get_userspace().get_root_file(),
                  0,
                  a,
                ),
                n = c.app.find_or_add_app_document(i),
                o = n.view,
                s = n.controller;
              o.set_loaded_callback(function () {
                s.import_portable_nodes(t),
                  c.app.userspace.view.switch_document(i);
              });
            }),
              _.addEventListener("error", function (e) {
                return console.log(e), r("Could not read the file.");
              }),
              _.readAsText(t);
          });
        }),
        (e.prototype.on_open_file_finder_click = function (e) {
          e.stopImmediatePropagation(),
            e.preventDefault(),
            this.ui.file_finder.open_finder();
        }),
        (e.prototype.on_open_node_finder_click = function (e) {
          e.stopImmediatePropagation(),
            e.preventDefault(),
            this.ui.node_finder.open_finder();
        }),
        (e.prototype.on_custom_recurrence_unit_select_change = function (e) {
          var t = fish(".custom-recurrence-weekly-repeat-options");
          "w" === e.target.value ? t.uShow() : t.uHide();
        }),
        (e.prototype.on_custom_recurrence_confirm = function () {
          var e = fish(".custom-recurrence-amount").value,
            t = fish(".custom-recurrence-unit").value,
            i = "",
            n = fishAll(".custom-recurrence-week-day-option.is-selected");
          0 < n.length &&
            (n.forEach(function (e) {
              i += e.getAttribute("data-day-number");
            }),
            (i = i.split("").sort().join("")));
          var o = this.app.get_current_app_document();
          o &&
            o.ui.datepicker_popup_manager.updateCustomRecurrenceOptionInMenu(
              parseInt(e),
              t,
              i,
            );
          this.ui.close_modals();
        }),
        (e.prototype.on_custom_recurrence_cancel = function () {
          var e = this.app.get_current_app_document();
          e && e.ui.datepicker_popup_manager.revertToPreviousRecurrenceOption();
        }),
        (e.prototype.on_copy_share_link_btn_el_click = function () {
          this.ui.copy_share_link();
        }),
        (e.prototype.on_custom_recurrence_day_in_week_click = function (e) {
          var t = e.currentTarget;
          t.toggleClass("is-selected", !t.hasClass("is-selected"));
        }),
        (e.prototype._is_ctrl_click_on_web = function (e) {
          var t =
            this.app.keymap.get_event_modifiers(e) ===
            Yr.compile_modifiers([we]);
          return this.app.env.is("web") && t;
        }),
        (e.prototype.onHelpOptionClick = function (e) {
          var t = e.currentTarget.getAttribute("data-href");
          window.open(t);
        }),
        e
      );
    })(To),
    Wl = (function (i) {
      function e(e) {
        var t = i.call(this, "UserspaceKeyEvents", e) || this;
        return (t.shortcut_manager = t.submodule(new ia(e))), t;
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          (this.ui = this.app.userspace.ui),
            (this.view = this.app.userspace.view);
        }),
        (e.prototype._init_fields = function () {}),
        (e.prototype._init_after = function () {
          this.register_events();
        }),
        (e.prototype.register_events = function () {
          var n = this.shortcut_manager,
            e = function (e, t, i) {
              n.register_named(e, "keydown", t, i);
            },
            t = function (e, t, i) {
              n.register_unnamed(e, "keydown", t, i);
            };
          e(na.APP_GO_ANYWHERE, this.on_keydown_go_anywhere.bind(this), [
            Mr.EDITOR,
            Mr.GLOBAL_SEARCH,
            Mr.DOCUMENT_FLAT_SEARCH,
            Mr.DOCUMENT_SEARCH,
          ]),
            e(na.APP_GOTO_ITEM, this.on_keydown_go_to_item.bind(this), [
              Mr.EDITOR,
              Mr.GLOBAL_SEARCH,
              Mr.DOCUMENT_FLAT_SEARCH,
              Mr.DOCUMENT_SEARCH,
            ]),
            e(
              na.APP_TOGGLE_FILE_PANE,
              this.on_keydown_toggle_file_pane.bind(this),
              [Mr.EDITOR, Mr.GLOBAL_SEARCH, Mr.DOCUMENT_FLAT_SEARCH],
            ),
            e(
              na.APP_TOGGLE_BOOKMARK_PANE,
              this.on_keydown_toggle_bookmark_pane.bind(this),
              [Mr.EDITOR, Mr.GLOBAL_SEARCH, Mr.DOCUMENT_FLAT_SEARCH],
            ),
            e(
              na.APP_TOGGLE_TAG_PANE,
              this.on_keydown_toggle_tag_pane.bind(this),
              [Mr.EDITOR, Mr.GLOBAL_SEARCH, Mr.DOCUMENT_FLAT_SEARCH],
            ),
            e(
              na.APP_TOGGLE_SHORTCUT_HELP,
              this.on_keydown_toggle_shortcut_help.bind(this),
              [Mr.EDITOR, Mr.GLOBAL_SEARCH, Mr.DOCUMENT_FLAT_SEARCH],
            ),
            e(na.APP_SAVE, this.on_keydown_save.bind(this), [
              Mr.EDITOR,
              Mr.GLOBAL_SEARCH,
            ]),
            e(na.APP_GOTO_INBOX, this.on_keydown_goto_inbox.bind(this), [
              Mr.EDITOR,
              Mr.GLOBAL_SEARCH,
              Mr.DOCUMENT_FLAT_SEARCH,
            ]),
            e(
              na.APP_TOGGLE_BOOKMARK_CURRENT_STATE,
              this.onKeydownBookmarkCurrentState.bind(this),
              [
                Mr.EDITOR,
                Mr.DOCUMENT_SEARCH,
                Mr.GLOBAL_SEARCH,
                Mr.DOCUMENT_FLAT_SEARCH,
              ],
            ),
            t(
              new ea([], l.ENTER),
              this.on_keydown_enter_file_rename.bind(this),
              Mr.FILE_RENAME,
            ),
            t(
              new ea([], l.ESC),
              this.on_keydown_esc_in_global_search.bind(this),
              Mr.GLOBAL_SEARCH,
            ),
            t(
              new ea([], l.ENTER),
              this.on_keydown_enter_in_global_search.bind(this),
              Mr.GLOBAL_SEARCH,
            ),
            t(
              new ea([], l.ESC),
              this.on_keydown_esc_in_document_flat_search.bind(this),
              Mr.DOCUMENT_FLAT_SEARCH,
            ),
            t(new ea([], l.ESC), this.on_keydown_esc.bind(this), Mr.ANY),
            e(
              na.APP_TOGGLE_SHOW_CHECKED,
              this.on_keydown_toggle_show_checked.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.APP_TOGGLE_SHOW_NOTES,
              this.on_keydown_show_notes.bind(this),
              Mr.EDITOR,
            ),
            e(
              na.APP_OPEN_SETTINGS,
              this.onKeydownOpenSettings.bind(this),
              Mr.ANY,
            );
        }),
        (e.prototype.on_keydown_enter_file_rename = function (e) {
          if (this.view.is_renaming())
            return this.view.stop_renaming(), e.preventDefault(), !1;
        }),
        (e.prototype.on_keydown_go_anywhere = function (e) {
          this.app.config.isAnonymousView() ||
            (this.ui.is_mobile_view()
              ? this.ui.open_file_finder_on_mobile()
              : this.ui.file_finder.open_finder(),
            e.preventDefault());
        }),
        (e.prototype.on_keydown_go_to_item = function (e) {
          !this.app.config.isAnonymousView() &&
            this.view.get_is_pro() &&
            (this.ui.is_mobile_view()
              ? this.ui.open_node_finder_on_mobile()
              : this.ui.node_finder.open_finder(),
            e.preventDefault());
        }),
        (e.prototype.on_keydown_esc = function (e) {
          e.preventDefault();
          var t = !1;
          this.ui.file_finder.is_open() &&
            (this.ui.file_finder.close_finder(), (t = !0)),
            this.ui.node_finder.is_open() &&
              (this.ui.node_finder.close_finder(), (t = !0)),
            this.ui.close_modals(),
            this.ui.hide_context_menu(),
            t && this.ui.restore_selection();
        }),
        (e.prototype.on_keydown_esc_in_global_search = function (e) {
          this.ui.global_search.exit();
        }),
        (e.prototype.on_keydown_enter_in_global_search = function (e) {
          this.ui.global_search.updateQuery();
        }),
        (e.prototype.on_keydown_esc_in_document_flat_search = function (e) {
          this.app.with_current_app_document(function (e) {
            e.ui.flat_search.exit();
          });
        }),
        (e.prototype.on_keydown_toggle_file_pane = function (e) {
          this.ui.toggle_file_pane(), e.preventDefault();
        }),
        (e.prototype.on_keydown_toggle_bookmark_pane = function (e) {
          this.ui.toggle_bookmark_pane(), e.preventDefault();
        }),
        (e.prototype.on_keydown_toggle_tag_pane = function (e) {
          this.ui.toggle_tag_pane(), e.preventDefault();
        }),
        (e.prototype.on_keydown_toggle_shortcut_help = function (e) {
          e.preventDefault(), this.ui.toggle_shortcut_help();
        }),
        (e.prototype.on_keydown_save = function (e) {
          this.view.force_sync(), e.preventDefault();
        }),
        (e.prototype.on_keydown_goto_inbox = function (e) {
          this.view.go_to_inbox_location(), e.preventDefault();
        }),
        (e.prototype.onKeydownBookmarkCurrentState = function (e) {
          this.ui.toggleBookmark(!1), e.preventDefault();
        }),
        (e.prototype.on_keydown_toggle_show_checked = function (e) {
          e.preventDefault(), this.view.toggle_show_checked();
        }),
        (e.prototype.on_keydown_show_notes = function (e) {
          e.preventDefault(), this.view.toggle_note_display();
        }),
        (e.prototype.onKeydownOpenSettings = function (e) {
          e.preventDefault(), this.ui.open_settings();
        }),
        e
      );
    })(To),
    Yl = (function () {
      function e(e, t) {
        (this.userspace = e), (this.network = t);
      }
      return (
        (e.prototype.get = function (e) {
          var t = this;
          this.userspace.trigger("net_pref_get_start"),
            this.network.enqueue(
              "/user/prefs/get",
              { ts: e },
              function (e) {
                t.on_get(e);
              },
              function (e) {
                t.on_get_error(e);
              },
            );
        }),
        (e.prototype.on_get = function (e) {
          this.userspace.trigger("net_pref_get_end", e.results, e.ts);
        }),
        (e.prototype.on_get_error = function (e) {
          var t = "";
          e && e._msg && (t = e._msg),
            this.userspace.trigger("net_pref_get_fail", t);
        }),
        (e.prototype.set = function (e, t) {
          var i = this;
          this.userspace.trigger("net_pref_set_start");
          var n = { pref_key: e, data: t };
          this.network.enqueue(
            "/user/prefs/set",
            n,
            function () {
              i.on_set(e, t);
            },
            function (e) {
              i.on_set_error(e);
            },
          );
        }),
        (e.prototype.on_set = function (e, t) {
          this.userspace.trigger("net_pref_set_end", e, t);
        }),
        (e.prototype.on_set_error = function (e) {
          var t = "";
          e && e._msg && (t = e._msg),
            this.userspace.trigger("net_pref_set_fail", t);
        }),
        (e.prototype.unlink_backup = function (e) {
          var t = this;
          this.network.enqueue("/auths/remove", { type: e }, function () {
            t.userspace.trigger("net_pref_unlink_backup_end");
          });
        }),
        (e.prototype.redeem_free_pro = function (e, t) {
          this.network.enqueue("/upgrade/redeem", {}, e, t);
        }),
        (e.prototype.fetch_gcal_calendars = function (e, t) {
          this.network.enqueue("/user/cal/get", {}, e, t);
        }),
        e
      );
    })(),
    Kl = (function () {
      function e(e, t) {
        (this.userspace = e), (this.network = t);
      }
      return (
        (e.prototype.get = function (i, n, o) {
          var e = { namespace_id: i.get_id() };
          this.network.enqueue(
            "/file/share/get",
            e,
            function (e) {
              var t = e.results;
              if (t) {
                t.sort(function (e, t) {
                  try {
                    return e.permission &&
                      t.permission &&
                      e.permission != t.permission
                      ? t.permission - e.permission
                      : e.user_email.localeCompare(t.user_email);
                  } catch (e) {
                    return 0;
                  }
                });
              }
              n && n(i, t);
            },
            function (e) {
              var t = "";
              e && e._msg && (t = e._msg), o && o(i, t);
            },
          );
        }),
        (e.prototype.set = function (i, e, t, n, o) {
          var s = { namespace_id: i.get_id(), user_email: e, permission: t };
          this.network.enqueue(
            "/file/share/set",
            s,
            function (e) {
              n && n(i, e.results);
            },
            function (e) {
              var t = "";
              e && e._msg && (t = e._msg), o && o(i, t);
            },
          );
        }),
        (e.prototype.share_new = function (i, t, n) {
          var o = this,
            e = { file_id: i.get_server_id(), is_document: i instanceof Vn };
          this.network.enqueue(
            "/file/share/new",
            e,
            function (e) {
              o.userspace.deserialize_new_share(e);
              t && t(i);
            },
            function (e) {
              var t = "";
              e && e._msg && (t = e._msg), n && n(i, t);
            },
          );
        }),
        (e.prototype.del = function (i, n, o) {
          var s = this,
            e = {
              linkfile_id: i.get_linkfile().get_server_id(),
              namespace_id: i.get_id(),
            };
          this.network.enqueue(
            "/file/share/del",
            e,
            function (e) {
              if (i.get_root_file()) {
                var t = s.userspace.get_root_namespace();
                i.get_linkfile() && (t = i.get_linkfile().get_namespace()),
                  i.get_root_file().set_namespace_recursive(t);
              }
              s.userspace.remove_namespace(i), n && n(i);
            },
            function (e) {
              var t = "";
              e && e._msg && (t = e._msg), o && o(i, t);
            },
          );
        }),
        e
      );
    })(),
    Vl = (function () {
      function e(e) {
        this.network = e;
      }
      return (
        (e.prototype.get = function (t, i) {
          this.network.enqueue(
            "/uploads/get",
            {},
            function (e) {
              t && t(e.uploads);
            },
            function (e) {
              var t = "";
              e && e._msg && (t = e._msg), i && i(t);
            },
          );
        }),
        (e.prototype.del = function (e, t, i) {
          this.network.enqueue(
            "/uploads/delete/" + e,
            {},
            function (e) {
              t && t();
            },
            function (e) {
              var t = "";
              e && e._msg && (t = e._msg), i && i(t);
            },
          );
        }),
        e
      );
    })(),
    Xl = (function () {
      function e(e, t) {
        (this.userspace = e),
          (this.network = t),
          (this.retry_timeout = 3e4),
          (this.last_received_timestamp = 0),
          (this.retry_timers = {});
      }
      return (
        (e.prototype.update_user_info = function (t) {
          var i = this;
          void 0 === t && (t = {});
          var e = t.fetch_notifications,
            n = void 0 === e || e,
            o = t.fetch_upgrades,
            s = void 0 !== o && o,
            r = t.fetch_auths,
            a = void 0 !== r && r,
            _ = t.fetch_upload_quota,
            c = void 0 !== _ && _,
            l = "update_user_info";
          this.clear_retry(l);
          var u = {
            n_ts: this.last_received_timestamp,
            n: n,
            u: s,
            a: a,
            ul: c,
          };
          this.network.enqueue(
            "/user/get_info",
            u,
            function (e) {
              if (e.n) {
                each(e.n, function (e) {
                  e &&
                    e.timestamp > i.last_received_timestamp &&
                    (i.last_received_timestamp = e.timestamp);
                });
                var t = {
                  last_read_timestamp: e.n_ts,
                  last_received_timestamp: i.last_received_timestamp,
                  notifications: e.n,
                };
                i.userspace.trigger("net_notification_receive", t);
              }
              e.u && i.userspace.trigger("net_upgrade_receive", e.u),
                e.a && i.userspace.trigger("net_auth_receive", e.a),
                e.ul &&
                  i.userspace.trigger(
                    "net_upload_quota_receive",
                    e.ul_q,
                    e.ul_u,
                  );
            },
            function () {
              var e = setTimeout(function () {
                i.update_user_info(t);
              }, 3e5);
              i.set_retry(l, e);
            },
          );
        }),
        (e.prototype.update_last_read = function () {
          var t = this;
          if (
            this.last_received_timestamp !== this.last_read_timestamp &&
            0 !== this.last_received_timestamp
          ) {
            var i = "update_last_read";
            this.clear_retry(i),
              this.network.enqueue(
                "/notifications/updatelastread",
                { timestamp: this.last_received_timestamp },
                function () {
                  t.last_read_timestamp = t.last_received_timestamp;
                },
                function () {
                  var e = setTimeout(function () {
                    t.update_last_read();
                  }, t.retry_timeout);
                  t.set_retry(i, e);
                },
              );
          }
        }),
        (e.prototype.clear_retry = function (e) {
          this.retry_timers[e] &&
            (clearTimeout(this.retry_timers[e]), delete this.retry_timers[e]);
        }),
        (e.prototype.set_retry = function (e, t) {
          this.retry_timers[e] = t;
        }),
        e
      );
    })(),
    Zl = (function (i) {
      function e(e) {
        var t = i.call(this, "BacklinkIndex", e) || this;
        return (
          (t.enabled = !1),
          (t.linkCache = {}),
          (t.backlinkCache = {}),
          (t.processQueue = []),
          (t.requestProcess = t.debounce(t.process.bind(t), 1e3)),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype.enable = function () {
          var t = this;
          this.enabled ||
            ((this.enabled = !0),
            each(this.app.app_documents, function (e) {
              t.processQueue.push(e.document);
            }),
            this.requestProcess());
        }),
        (e.prototype.disable = function () {
          this.enabled &&
            ((this.enabled = !1),
            (this.linkCache = {}),
            (this.backlinkCache = {}),
            (this.processQueue = []));
        }),
        (e.prototype.process = function () {
          for (
            var l = this,
              u = this.processQueue,
              h = this.linkCache,
              p = this.backlinkCache,
              d = [],
              e = function () {
                var e = u.pop(),
                  _ = e.get_id();
                if (h.hasOwnProperty(_)) {
                  var t = h[_];
                  for (var i in t)
                    if (t.hasOwnProperty(i))
                      for (
                        var n = _ + "/" + i, o = 0, s = t[i];
                        o < s.length;
                        o++
                      ) {
                        var r = s[o],
                          a = p[r];
                        a &&
                          0 < a.length &&
                          a.contains(n) &&
                          (a.remove(n), d.push(r));
                      }
                }
                var c = (h[_] = {});
                e.get_node_collection().traverse_tree_bfs(null, function (e) {
                  var t = e.get_id(),
                    i = _ + "/" + t,
                    n = l.computeLinks(e);
                  if (0 < n.length)
                    for (var o = 0, s = (c[t] = n); o < s.length; o++) {
                      var r = s[o],
                        a = p[r];
                      a || (a = p[r] = []),
                        a.contains(i) || (a.push(i), d.push(r));
                    }
                });
              };
            0 < u.length;

          )
            e();
          for (var t = 0, i = d; t < i.length; t++) {
            var n = i[t];
            this.notifyChange(n);
          }
        }),
        (e.prototype.documentChanged = function (e) {
          this.enabled &&
            (this.processQueue.contains(e) ||
              (this.processQueue.push(e), this.requestProcess()));
        }),
        (e.prototype.documentNodeChanged = function (e, t) {
          if (this.enabled) {
            var i = this.linkCache,
              n = e.get_id(),
              o = t.get_id();
            if (i.hasOwnProperty(n)) {
              var s = i[n],
                r = s[o] || [],
                a = this.backlinkCache,
                _ = n + "/" + o,
                c = this.computeLinks(t),
                l = [];
              if (0 < r.length)
                for (var u = 0, h = r; u < h.length; u++) {
                  (f = a[(v = h[u])]) &&
                    0 < f.length &&
                    f.contains(_) &&
                    (f.remove(_), l.push(v));
                }
              if (0 < c.length)
                for (var p = 0, d = (s[o] = c); p < d.length; p++) {
                  var f;
                  (f = a[(v = d[p])]) || (f = a[v] = []),
                    f.contains(_) || (f.push(_), l.push(v));
                }
              else delete s[o];
              for (var g = 0, m = l; g < m.length; g++) {
                var v = m[g];
                this.notifyChange(v);
              }
            }
          }
        }),
        (e.prototype.computeLinks = function (e) {
          var r = [],
            t = function (e) {
              if (e instanceof an) {
                var t = e.url,
                  i = Ls.parse_dynalist_url(t),
                  n = i.document_server_id;
                if (!n) return;
                var o = i.zoom_node_id,
                  s = void 0;
                (s = o ? n + "/" + o : n), r.push(s);
              }
            };
          return (
            e.get_content_parse_tree().traverse(t),
            e.get_note_parse_tree().traverse(t),
            r
          );
        }),
        (e.prototype.notifyChange = function (e) {
          var t = e.split("/");
          if (2 === t.length) {
            var i = this.app.userspace.userspace.find_server_file(t[0]);
            if (i && i instanceof Vn) {
              var n = this.app.find_app_document(i);
              if (n && n.ui && n.ui.node_view)
                n.ui.node_view.backlinkUpdated(t[1]);
            }
          }
        }),
        (e.prototype.getBacklinkCountForNode = function (e, t) {
          if (!this.enabled) return 0;
          var i = this.backlinkCache,
            n = 0,
            o = i[e.get_server_id() + "/" + t.get_id()];
          if ((o && (n += o.length), t.is_root())) {
            var s = i[e.get_server_id()];
            s && (n += s.length);
          }
          return n;
        }),
        (e.prototype.getBacklinksForNode = function (e, t) {
          if (!this.enabled) return [];
          var i = this.backlinkCache,
            n = [],
            o = i[e.get_server_id() + "/" + t.get_id()];
          if (o)
            for (var s = 0, r = o; s < r.length; s++) {
              var a = r[s];
              (u = this.getResultFromPath(a)) && n.push(u);
            }
          if (t.is_root()) {
            var _ = i[e.get_server_id()];
            if (_)
              for (var c = 0, l = _; c < l.length; c++) {
                var u;
                a = l[c];
                (u = this.getResultFromPath(a)) && n.push(u);
              }
          }
          return n;
        }),
        (e.prototype.getResultFromPath = function (e) {
          var t = e.split("/");
          if (2 !== t.length) return null;
          var i = this.app.userspace.userspace.find_file(t[0]);
          if (!(i && i instanceof Vn)) return null;
          var n = i.get_node_collection().find_node(t[1]);
          return n ? { document: i, node: n } : null;
        }),
        e
      );
    })(To),
    Jl = "document_tags_collapsed",
    Ql = "global_tags_collapsed",
    eu = "sorted_by_occurrence",
    tu = (function (i) {
      function e(e) {
        var t = i.call(this, "TagPaneManager", e) || this;
        return (
          (t.document_tag_counter_events = t.submodule(new Eo())),
          (t.dom_events = t.submodule(new Eo())),
          t._register_state(Jl, !1, t.document_tags_collapsed_changed),
          t._register_state(Ql, !1, t.global_tags_collapsed_changed),
          t._register_state(eu, !0, t.sorted_by_occurrence_changed),
          (t.request_update_tags = t.debounce(t.update_tags.bind(t), 2e3)),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          (this.userspace_view = this.app.userspace.view),
            (this.userspace_ui = this.app.userspace.ui);
        }),
        (e.prototype._init_fields = function () {
          (this.doc_tags_el = fish(".tag-pane-doc-tags")),
            (this.doc_tags_header_el = fish(".tag-pane-doc-tags-header")),
            (this.doc_tags_count_el = fish(".document-tags-total-count")),
            (this.global_tags_el = fish(".tag-pane-global-tags")),
            (this.global_tags_header_el = fish(".tag-pane-global-tags-header")),
            (this.global_tags_count_el = fish(".global-tags-total-count")),
            (this.sort_icon_el = fish(".Pane-headerToolbarItem.mod-tag-sort")),
            (this.mobile_sort_tag_button_el = fish(
              ".Pane-headerButton.mod-toggle-tag-sort",
            )),
            (this.tag_name_to_delete_el = fish(".tag-name-to-delete")),
            (this.is_initialized = !1),
            (this.original_tag_name = ""),
            (this.is_renaming_tag = !1),
            (this.context_menu_tag_el = null),
            (this.tag_being_deleleted = null);
        }),
        (e.prototype._init_after = function () {
          this.register_events();
        }),
        (e.prototype.initialize = function () {
          this.is_initialized ||
            (this.start_listening_for_changes(),
            this.update_section_collapsed_states(),
            this.request_update_tags(),
            (this.is_initialized = !0));
        }),
        (e.prototype.get_is_renaming_tag = function () {
          return this.is_renaming_tag;
        }),
        (e.prototype.set_context_menu_tag_el = function (e) {
          this.context_menu_tag_el = e;
        }),
        (e.prototype.start_renaming_tag = function () {
          if (this.context_menu_tag_el) {
            this.app.scope.push_scope(this.userspace_view.rename_scope),
              this.userspace_view.clear_selection();
            var e = $(this.context_menu_tag_el).find(".tag-instance-text");
            e.attr("contenteditable", !0),
              e.addClass("is-beingEdited"),
              e.focus(),
              Nr(e.get(0), 1, -1),
              (this.original_tag_name = e.text()),
              (this.is_renaming_tag = !0);
          }
        }),
        (e.prototype.stop_renaming_tag = function () {
          var t = this;
          if (
            (this.app.scope.pop_scope(this.userspace_view.rename_scope),
            this.userspace_view.clear_selection(),
            this.context_menu_tag_el)
          ) {
            var e = $(this.context_menu_tag_el).find(".tag-instance-text");
            e.attr("contenteditable", !1), e.removeClass("is-beingEdited");
            var i = e.text();
            this.app.with_current_app_document(function (e) {
              e.view.rename_tag(t.original_tag_name, i);
            }),
              (this.original_tag_name = ""),
              (this.context_menu_tag_el = null),
              (this.is_renaming_tag = !1);
          }
        }),
        (e.prototype.show_delete_tag_modal = function () {
          if (this.context_menu_tag_el) {
            var e = this.context_menu_tag_el
              .querySelector(".tag-instance-text")
              .getText();
            (this.tag_being_deleleted = e),
              this.tag_name_to_delete_el.setText(e),
              this.userspace_ui.open_modal("confirm-delete-tag");
          }
        }),
        (e.prototype.delete_tag = function () {
          var t = this;
          this.tag_being_deleleted &&
            this.app.with_current_app_document(function (e) {
              e.view.rename_tag(t.tag_being_deleleted, "");
            });
        }),
        (e.prototype.register_events = function () {
          var e = this.dom_events.make_context_on_off($(".TagPane"));
          this.dom_events.register_with_context_array(e, [
            [
              "click",
              ".js-toggle-tag-pane-sort",
              this.on_toggle_tag_pane_sort.bind(this),
            ],
            [
              "click",
              ".tag-pane-doc-tag-instance",
              this.on_doc_tag_link_click.bind(this),
            ],
            [
              "click",
              ".tag-pane-global-tag-instance",
              this.on_global_tag_link_click.bind(this),
            ],
            [
              "click",
              ".js-toggle-document-tags",
              this.on_toggle_document_tags_click.bind(this),
            ],
            [
              "click",
              ".js-toggle-global-tags",
              this.on_toggle_global_tags_click.bind(this),
            ],
            [
              "dblclick",
              ".tag-pane-doc-tag-instance",
              this.on_tag_double_click.bind(this),
            ],
            [
              "contextmenu",
              ".tag-pane-global-tag-instance",
              this.on_global_tag_context_menu.bind(this),
            ],
          ]);
        }),
        (e.prototype.start_listening_for_changes = function () {
          var e = this.document_tag_counter_events.make_context_on_off(
            this.app.userspace.get_userspace(),
          );
          this.document_tag_counter_events.register_with_context_array(e, [
            ["document_tag_counter_update", this.request_update_tags, this],
          ]),
            this.document_tag_counter_events.hook_events();
        }),
        (e.prototype.update_tags = function () {
          this.userspace_view.get_is_pro() &&
            (this.is_renaming_tag ||
              (this.update_document_tags(), this.update_global_tags()));
        }),
        (e.prototype.update_document_tags = function () {
          var i = this;
          this.userspace_view.get_is_pro() &&
            this.app.with_current_app_document(function (e) {
              var t = e.view.tag_counter;
              i.render_tags(
                t,
                i.doc_tags_el,
                i.doc_tags_count_el,
                "tag-pane-doc-tag-instance",
              );
            });
        }),
        (e.prototype.update_global_tags = function () {
          if (this.userspace_view.get_is_pro()) {
            var e = this.userspace_view.tag_counter;
            this.render_tags(
              e,
              this.global_tags_el,
              this.global_tags_count_el,
              "tag-pane-global-tag-instance",
            );
          }
        }),
        (e.prototype.render_tags = function (e, n, t, o) {
          var s = Ms.mergeCase(e.get_tags()),
            i = Object.keys(s),
            r = 0;
          this.get(eu)
            ? i.sort(function (e, t) {
                return s[t] - s[e];
              })
            : i.sort(function (e, t) {
                return e.localeCompare(t);
              }),
            n.empty(),
            each(i, function (t) {
              var i = s[t];
              n.createEl("div", { cls: o + " pane-item" }, function (e) {
                e.createEl("div", { cls: "pane-item-header" }, function (e) {
                  e.createEl("span", {
                    cls: "tag-instance-text pane-item-title",
                    text: t,
                  }),
                    e.createEl("span", {
                      cls: "pane-item-small-text",
                      text: "(" + i + ")",
                    });
                });
              }),
                (r += i);
            }),
            t.setText("(" + r.toString() + ")");
        }),
        (e.prototype.on_toggle_tag_pane_sort = function () {
          if (this.userspace_view.get_is_pro()) {
            var e = this.get(eu);
            this.set(eu, !e);
          }
        }),
        (e.prototype.on_doc_tag_link_click = function (e) {
          if (this.userspace_view.get_is_pro()) {
            this.userspace_ui.close_mobile_slidebar();
            var t = e.currentTarget
              .querySelector(".tag-instance-text")
              .getText();
            this.userspace_view.get_url_manager().set_search_query(t);
          }
        }),
        (e.prototype.on_global_tag_link_click = function (e) {
          if (this.userspace_view.get_is_pro()) {
            this.userspace_ui.close_mobile_slidebar();
            var t = e.currentTarget
              .querySelector(".tag-instance-text")
              .getText();
            this.userspace_view.get_url_manager().set_global_search_query(t);
          }
        }),
        (e.prototype.on_tag_double_click = function (e) {
          (this.context_menu_tag_el = e.currentTarget),
            this.start_renaming_tag();
        }),
        (e.prototype.on_global_tag_context_menu = function (e) {
          this.userspace_ui.popup_message_manager.displayDismissibleMessage(
            "Tag operations are only supported for Document tags.",
          ),
            e.preventDefault();
        }),
        (e.prototype.update_section_collapsed_states = function () {
          var e = this.app.env.get_env_data(Jl, !1),
            t = this.app.env.get_env_data(Ql, !1);
          this.set(Jl, e), this.set(Ql, t);
        }),
        (e.prototype.document_tags_collapsed_changed = function (e, t) {
          this.doc_tags_header_el.toggleClass("is-collapsed", e),
            e ? Oa(this.doc_tags_el) : Ta(this.doc_tags_el),
            this.app.env.set_env_data(Jl, e);
        }),
        (e.prototype.global_tags_collapsed_changed = function (e, t) {
          this.global_tags_header_el.toggleClass("is-collapsed", e),
            e ? Oa(this.global_tags_el) : Ta(this.global_tags_el),
            this.app.env.set_env_data(Ql, e);
        }),
        (e.prototype.sorted_by_occurrence_changed = function () {
          var e = this.get(eu);
          this.sort_icon_el.toggleClass("is-sorted-by-occurrence", e),
            e
              ? this.mobile_sort_tag_button_el.setText("Sort alphabetically")
              : this.mobile_sort_tag_button_el.setText("Sort by occurrences"),
            this.update_tags();
        }),
        (e.prototype.on_toggle_document_tags_click = function (e) {
          var t = this.get(Jl);
          this.set(Jl, !t), e.preventDefault();
        }),
        (e.prototype.on_toggle_global_tags_click = function (e) {
          var t = this.get(Ql);
          this.set(Ql, !t), e.preventDefault();
        }),
        e
      );
    })(N_),
    iu = (function (t) {
      function e(e) {
        return t.call(this, "UserspaceTagCounter", e) || this;
      }
      return (
        nt(e, t),
        (e.prototype._init_before = function () {
          this.document_tag_counter_events = new Eo();
        }),
        (e.prototype._initialize = function () {
          this.start_listening_for_changes(),
            this.initialize_tag_map(),
            this.app.userspace.view.tag_pane_manager.initialize();
        }),
        (e.prototype.initialize_tag_map = function () {
          var i = this;
          each(this.app.app_documents, function (e) {
            var t = e.view.tag_counter;
            t.is_initialized
              ? i._combine_tag_maps(i.tags, t.tags)
              : t.request_initialize();
          });
        }),
        (e.prototype.start_listening_for_changes = function () {
          var e = this.document_tag_counter_events.make_context_on_off(
            this.app.userspace.get_userspace(),
          );
          this.document_tag_counter_events.register_with_context_array(e, [
            [
              "document_tag_counter_update",
              this.document_tag_counter_update,
              this,
            ],
          ]),
            this.document_tag_counter_events.hook_events();
        }),
        (e.prototype.document_tag_counter_update = function (e, t) {
          e && this._combine_tag_maps(this.tags, e, !0),
            t && this._combine_tag_maps(this.tags, t);
        }),
        e
      );
    })(Ms),
    nu = (function () {
      function e(e, t, i) {
        (this.file = e),
          (this.renderer = t),
          (this.view = i),
          (this.ui_permission = null),
          (this.ui_renaming = !1),
          (this.ui_selected = !1),
          (this.ui_open = !1),
          (this.ui_collapsed = !1),
          (this.ui_archived = !1),
          (this.ui_parent_file_item_state = null),
          this.initialize();
      }
      return (
        (e.prototype.initialize = function () {
          this.renderer.initialize(this);
        }),
        (e.prototype.get_file = function () {
          return this.file;
        }),
        (e.prototype.is_visible_type = function () {
          return !1;
        }),
        (e.prototype.is_folder_type = function () {
          return !1;
        }),
        (e.prototype.is_document_type = function () {
          return !1;
        }),
        (e.prototype.is_linkfile_type = function () {
          return !1;
        }),
        (e.prototype.is_bookmark_type = function () {
          return !1;
        }),
        (e.prototype.get_ui_title = function () {
          return "";
        }),
        (e.prototype.get_title_el = function () {
          return this.title_el;
        }),
        (e.prototype.set_ui_permission = function (e) {
          this.ui_permission != e &&
            ((this.ui_permission = e),
            this.renderer.ui_permission_change(this));
        }),
        (e.prototype.set_ui_renaming = function (e) {
          this.ui_renaming != e &&
            ((this.ui_renaming = e), this.renderer.ui_renaming_change(this));
        }),
        (e.prototype.set_ui_selected = function (e) {
          this.ui_selected != e &&
            ((this.ui_selected = e), this.renderer.ui_selected_change(this));
        }),
        (e.prototype.set_ui_collapsed = function (e, t) {
          this.ui_collapsed != e &&
            ((this.ui_collapsed = e),
            this.renderer.ui_collapsed_change(this, t));
        }),
        (e.prototype.set_ui_archived = function (e) {
          this.ui_archived != e &&
            ((this.ui_archived = e), this.renderer.ui_archived_change(this));
        }),
        (e.prototype.set_ui_open = function (e) {
          this.ui_open != e &&
            ((this.ui_open = e), this.renderer.ui_open_change(this));
        }),
        (e.prototype.set_ui_parent_file_item_state = function (e) {
          this.ui_parent_file_item_state != e &&
            ((this.ui_parent_file_item_state = e),
            this.renderer.ui_parent_file_item_state_change(this));
        }),
        (e.prototype.make_ghost_html = function () {
          return null;
        }),
        e
      );
    })(),
    ou = (function (n) {
      function e(e, t, i) {
        return n.call(this, e, t, i) || this;
      }
      return (
        nt(e, n),
        (e.prototype.initialize = function () {
          this.renderer.initialize_rootfile(this),
            n.prototype.initialize.call(this);
        }),
        e
      );
    })(nu),
    su = (function (n) {
      function e(e, t, i) {
        return n.call(this, e, t, i) || this;
      }
      return (
        nt(e, n),
        (e.prototype.initialize = function () {
          this.renderer.initialize_linkfile(this),
            n.prototype.initialize.call(this);
        }),
        (e.prototype.is_linkfile_type = function () {
          return !0;
        }),
        (e.prototype.make_ghost_html = function () {
          var e = this.view.get_file_item_state(this.file.get_target_file());
          return e ? e.make_ghost_html() : null;
        }),
        e
      );
    })(nu),
    ru = (function (n) {
      function e(e, t, i) {
        return n.call(this, e, t, i) || this;
      }
      return (
        nt(e, n),
        (e.prototype.initialize = function () {
          this.renderer.initialize_visible_file(this),
            n.prototype.initialize.call(this);
        }),
        (e.prototype.is_visible_type = function () {
          return !0;
        }),
        (e.prototype.get_ui_title = function () {
          return this.title_el.getText();
        }),
        e
      );
    })(nu),
    au = (function (n) {
      function e(e, t, i) {
        return n.call(this, e, t, i) || this;
      }
      return (
        nt(e, n),
        (e.prototype.initialize = function () {
          this.renderer.initialize_folder(this),
            n.prototype.initialize.call(this);
        }),
        (e.prototype.is_folder_type = function () {
          return !0;
        }),
        (e.prototype.make_ghost_html = function () {
          return this.header_el.html();
        }),
        e
      );
    })(ru),
    _u = (function (n) {
      function e(e, t, i) {
        return n.call(this, e, t, i) || this;
      }
      return (
        nt(e, n),
        (e.prototype.initialize = function () {
          this.renderer.initialize_document(this),
            n.prototype.initialize.call(this);
        }),
        (e.prototype.is_document_type = function () {
          return !0;
        }),
        (e.prototype.make_ghost_html = function () {
          return this.header_el.html();
        }),
        e
      );
    })(ru),
    cu = (function (n) {
      function e(e, t, i) {
        return n.call(this, e, t, i) || this;
      }
      return (
        nt(e, n),
        (e.prototype.initialize = function () {
          this.renderer.initialize_root_bookmark(this),
            n.prototype.initialize.call(this);
        }),
        (e.prototype.is_bookmark_type = function () {
          return !0;
        }),
        e
      );
    })(nu),
    lu = (function (n) {
      function e(e, t, i) {
        return n.call(this, e, t, i) || this;
      }
      return (
        nt(e, n),
        (e.prototype.initialize = function () {
          this.renderer.initialize_bookmark(this),
            n.prototype.initialize.call(this);
        }),
        (e.prototype.is_bookmark_type = function () {
          return !0;
        }),
        (e.prototype.make_ghost_html = function () {
          return this.header_el.html();
        }),
        e
      );
    })(ru),
    uu = (function (i) {
      function e(e) {
        var t = i.call(this, "FileItemView", e) || this;
        return (
          (t.userspace_events = t.submodule(new Eo())),
          (t.renderer = t.submodule(new tl(e))),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          (this.userspace = this.app.userspace.get_userspace()),
            (this.userspace_view = this.app.userspace.view);
        }),
        (e.prototype._init_fields = function () {
          (this.file_item_states = {}),
            (this.selected_file_item_state = null),
            (this.renaming_file_item_state = null),
            (this.root_bookmark_item_state = null),
            (this.preserved_file_rename_selection = null);
        }),
        (e.prototype._init_after = function () {
          this.register_namespace_events();
        }),
        (e.prototype._load = function () {
          var t = this;
          Object.each(this.userspace.get_files(), function (e) {
            t.create_file_item_state(e);
          }),
            Object.each(this.userspace.get_files(), function (e) {
              t.initialize_complete(t.get_file_item_state(e));
            }),
            (this.root_bookmark_item_state = new cu(
              this.userspace.get_root_bookmark(),
              this.renderer,
              this,
            ));
        }),
        (e.prototype._unload = function () {}),
        (e.prototype.get_file_item_state = function (e) {
          if (!e) return null;
          var t = e.get_id();
          return (
            this.file_item_states[t] ||
              (this.create_file_item_state(e),
              trace("FileItemState cannot be found!", new Error())),
            this.file_item_states[t]
          );
        }),
        (e.prototype.create_file_item_state = function (e) {
          var t = e.get_id();
          if (!this.file_item_states[t]) {
            var i = null;
            e instanceof ii
              ? (i = e.is_root()
                  ? new ou(e, this.renderer, this)
                  : new au(e, this.renderer, this))
              : e instanceof Vn
              ? (i = new _u(e, this.renderer, this))
              : e instanceof fi
              ? (i = new su(e, this.renderer, this))
              : e instanceof ri && (i = new lu(e, this.renderer, this)),
              (this.file_item_states[t] = i);
          }
        }),
        (e.prototype.remove_file_item_state = function (e) {
          var t = e.get_id();
          delete this.file_item_states[t];
        }),
        (e.prototype.register_namespace_events = function () {
          var e = this.userspace_events.make_context_on_off(this.userspace);
          this.userspace_events.register_with_context_array(e, [
            ["file_create", this.on_file_created, this],
            ["bookmark_create", this.on_bookmark_created, this],
            ["attach", this.on_file_attached, this],
            ["detach", this.on_file_detached, this],
            ["remove", this.on_file_removed, this],
            ["file_title_change", this.on_file_title_changed, this],
            ["folder_collapse_change", this.on_folder_collapse_changed, this],
            [
              "namespace_linkfile_change",
              this.on_namespace_linkfile_changed,
              this,
            ],
            ["target_namespace_change", this.on_target_namespace_changed, this],
            ["bookmark_data_change", this.on_bookmark_data_changed, this],
            [
              "document_user_data_change",
              this.on_document_user_data_changed,
              this,
            ],
            [
              "namespace_permission_change",
              this.on_namespace_permission_changed.bind(this),
            ],
            ["file_namespace_change", this.on_file_namespace_changed, this],
            ["index_change", this.on_file_index_changed, this],
          ]);
        }),
        (e.prototype.on_file_created = function (e) {
          this.create_file_item_state(e);
        }),
        (e.prototype.on_bookmark_created = function (e) {
          this.create_file_item_state(e);
        }),
        (e.prototype.on_file_attached = function (e) {
          var t = this.get_file_item_state(e);
          this.update_parent(t),
            this.userspace_view.resize_file_pane(),
            this.userspace_view.update_bookmark_count();
        }),
        (e.prototype.on_file_detached = function (e) {
          var t = this.get_file_item_state(e);
          this.update_parent(t), this.userspace_view.update_bookmark_count();
        }),
        (e.prototype.on_file_removed = function (e) {
          this.remove_file_item_state(e);
        }),
        (e.prototype.on_file_title_changed = function (e) {
          this.update_title(this.get_file_item_state(e));
        }),
        (e.prototype.on_folder_collapse_changed = function (e) {
          this.update_collapse(this.get_file_item_state(e), !0);
        }),
        (e.prototype.on_bookmark_data_changed = function (e) {
          this.update_title(this.get_file_item_state(e));
        }),
        (e.prototype.on_document_user_data_changed = function (e) {
          this.update_archived(this.get_file_item_state(e));
        }),
        (e.prototype.on_namespace_linkfile_changed = function (e) {
          var t = e.get_root_file();
          t && this.on_file_attached(t);
        }),
        (e.prototype.on_target_namespace_changed = function (e) {
          var t = e.get_target_file();
          t && this.on_file_attached(t);
        }),
        (e.prototype.on_namespace_permission_changed = function (t) {
          var i = this;
          Object.each(this.file_item_states, function (e) {
            e.is_bookmark_type() ||
              (e.file.get_namespace() === t &&
                i.update_namespace_permission(e));
          });
        }),
        (e.prototype.on_file_namespace_changed = function (e) {
          this.update_shared(this.get_file_item_state(e));
        }),
        (e.prototype.on_file_index_changed = function (e) {}),
        (e.prototype.select_file = function (e) {
          var t = this.get_file_item_state(e);
          this.selected_file_item_state !== t &&
            (this.deselect_file(),
            t && t.set_ui_selected(!0),
            (this.selected_file_item_state = t));
        }),
        (e.prototype.deselect_file = function () {
          this.selected_file_item_state &&
            (this.selected_file_item_state.set_ui_selected(!1),
            (this.selected_file_item_state = null));
        }),
        (e.prototype.start_renaming = function (e) {
          this.stop_renaming(),
            (this.renaming_file_item_state = this.get_file_item_state(e)),
            this.renaming_file_item_state.set_ui_renaming(!0);
        }),
        (e.prototype.stop_renaming = function () {
          this.renaming_file_item_state &&
            (this.renaming_file_item_state.set_ui_renaming(!1),
            (this.renaming_file_item_state = null));
        }),
        (e.prototype.get_renaming_file_item_state = function () {
          return this.renaming_file_item_state;
        }),
        (e.prototype.save_renaming_selection_state = function () {
          if (this.renaming_file_item_state) {
            var e = Dr(this.renaming_file_item_state.get_title_el());
            if (e) {
              var t = e.start,
                i = e.end;
              this.preserved_file_rename_selection = {
                start: t,
                end: i,
                file_item_state: this.renaming_file_item_state,
              };
            }
          }
        }),
        (e.prototype.restore_renaming_selection_state = function () {
          if (this.preserved_file_rename_selection) {
            var e = this.preserved_file_rename_selection,
              t = e.file_item_state,
              i = e.start,
              n = e.end;
            if (
              ((this.preserved_file_rename_selection = null),
              !this.renaming_file_item_state || !t.is_visible_type())
            )
              return;
            Nr(t.title_el, i, n);
          }
        }),
        (e.prototype.initialize_complete = function (e) {
          this.update_namespace_permission(e),
            this.update_renaming(e),
            this.update_shared(e),
            this.update_collapse(e),
            this.update_toggler(e),
            this.update_parent(e),
            this.update_parental_properties(e),
            this.update_title(e),
            this.renderer.ui_renaming_change(e),
            this.renderer.ui_selected_change(e),
            this.renderer.ui_collapsed_change(e),
            this.renderer.ui_open_change(e),
            this.renderer.ui_parent_file_item_state_change(e);
        }),
        (e.prototype.update_namespace_permission = function (e) {
          if (!e.is_bookmark_type()) {
            var t = e.file.get_namespace().get_permission();
            e.set_ui_permission(t);
          }
        }),
        (e.prototype.update_renaming = function (e) {
          if (e.is_visible_type()) {
            var t = e.title_el,
              i = e.ui_renaming;
            e.is_visible_type() && i && (t.focus(), Ir(t));
          }
        }),
        (e.prototype.update_title = function (e) {
          if (e.is_visible_type() && !e.ui_renaming) {
            var t = e.file,
              i = e.title_el,
              n = "";
            t instanceof ri
              ? (n =
                  t.get_data_object().get_title() ||
                  this.userspace_view.get_default_bookmark_name(
                    t.get_data_object(),
                  ))
              : t instanceof ti && (n = t.get_title() || c),
              i.setText(n);
          }
        }),
        (e.prototype.update_shared = function (e) {
          if (e.is_visible_type() && !e.is_bookmark_type()) {
            var t = e.file;
            e.icon_el.toggleClass("shared", !t.is_from_root_namespace());
          }
        }),
        (e.prototype.update_collapse = function (e, t) {
          if (e.is_folder_type()) {
            var i = e.file;
            e.set_ui_collapsed(i.is_collapsed(), t);
          }
        }),
        (e.prototype.update_archived = function (e) {
          var t = e.file;
          t instanceof Vn &&
            e.set_ui_archived(t.get_user_data_object().get_archived());
        }),
        (e.prototype.update_toggler = function (e) {
          if (e.is_folder_type()) {
            var t = e.file;
            e.toggler_el.toggleClass("hidden", !t.has_children());
          }
        }),
        (e.prototype.update_parent = function (e) {
          var t = e.file,
            i = null;
          if (t instanceof ti)
            if (
              (t.is_root() && this.renderer.ui_parent_file_item_state_change(e),
              t.is_namespace_root())
            ) {
              var n = t.get_namespace().get_linkfile();
              n && (i = this.get_file_item_state(n));
            } else i = this.get_file_item_state(t.get_parent());
          else
            t instanceof ri &&
              (i = t.is_detached() ? null : this.root_bookmark_item_state);
          e.set_ui_parent_file_item_state(i);
        }),
        (e.prototype.update_parental_properties = function (e) {
          e.is_bookmark_type() ||
            (e.is_linkfile_type() && e.ui_parent_file_item_state
              ? this.update_parental_properties(e.ui_parent_file_item_state)
              : (this.update_collapse(e, !0), this.update_toggler(e)));
        }),
        e
      );
    })(To),
    hu = (function (i) {
      function e(e) {
        var t = i.call(this, "UpdateView", e) || this;
        return (
          (t.interval_manager = t.submodule(new Oo(e))),
          (t.events = t.submodule(new Eo())),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          this.ui = this.app.userspace.ui;
        }),
        (e.prototype._init_fields = function () {
          (this.current_build = DYNALIST.DEPLOY_BUILD),
            (this.new_build = ""),
            (this.update_available_ts = 0),
            (this.message_available_shown = !1),
            (this.message_recommended_shown = !1),
            (this.deprecated = !1);
        }),
        (e.prototype._init_after = function () {
          var e = this.app.network;
          this.events.register_event_on_off(
            e,
            "network_deprecated",
            this.on_deprecation,
            this,
          ),
            this.events.register_event_on_off(
              e,
              "build_changed",
              this.on_build_updated,
              this,
            ),
            this.interval_manager.register_interval(
              this.check_for_updates.bind(this),
              3e5,
            );
        }),
        (e.prototype.check_for_updates = function () {
          if (this.is_update_available() && this.is_update_ready())
            if (
              (0 === this.update_available_ts &&
                (this.update_available_ts = Date.now()),
              this.deprecated)
            )
              this.attempt_auto_relaunch();
            else {
              var e = Date.now() - this.update_available_ts;
              6048e5 < e
                ? (this.attempt_auto_relaunch(), this.show_recommended_update())
                : 1728e5 < e && this.show_available_update();
            }
        }),
        (e.prototype.on_deprecation = function () {
          (this.deprecated = !0), this.show_mandatory_update();
        }),
        (e.prototype.on_build_updated = function (e) {
          this.new_build = e;
        }),
        (e.prototype.is_update_available = function () {
          return this.new_build && this.new_build !== this.current_build;
        }),
        (e.prototype.is_update_ready = function () {
          if (this.app.env.is("desktop")) {
            var e = this.app.env.get_updater_status(),
              t = e.dynalist_version,
              i = e.new_dynalist_version;
            return i && i !== t;
          }
          return !this.app.env.is("mobile") && this.is_update_available();
        }),
        (e.prototype.attempt_auto_relaunch = function () {
          var e = this.ui.has_focus(),
            t = this.ui.get_last_activity();
          if (!(e || Date.now() < t + 864e5)) {
            var i = this.app.userspace.controller
              .get_sync_manager()
              .get_sync_state();
            (i !== pt && i !== ht) || this.app.env.relaunch();
          }
        }),
        (e.prototype.show_available_update = function () {
          this.message_available_shown ||
            ((this.message_available_shown = !0),
            this.ui.popup_message_manager.display_update_available_popup());
        }),
        (e.prototype.show_recommended_update = function () {
          this.message_recommended_shown ||
            ((this.message_recommended_shown = !0),
            this.ui.popup_message_manager.display_update_recommended_popup());
        }),
        (e.prototype.show_mandatory_update = function () {
          this.ui.show_deprecation();
        }),
        e
      );
    })(To),
    pu = (function (i) {
      function e(e) {
        var t = i.call(this, "UserspaceView", e, null) || this;
        return (
          (t.interval_manager = t.submodule(new Oo(e))),
          (t.file_item_view = t.submodule(new uu(e))),
          (t.update_view = t.submodule(new hu(e))),
          (t.dom_events = t.submodule(new $l(e))),
          (t.key_events = t.submodule(new Wl(e))),
          (t.url_manager = t.submodule(new Ls(e))),
          (t.events = t.submodule(new Eo())),
          (t.tag_counter = t.submodule(new iu(e))),
          (t.tag_pane_manager = t.submodule(new tu(e))),
          (t.linkIndex = t.submodule(new Zl(e))),
          (t.request_check_if_all_documents_are_loaded = t.debounce(
            t.check_if_all_documents_are_loaded,
            200,
          )),
          (t.request_save_preferences = t.debounce(t.save_preferences, 200)),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype._init_dependencies = function () {
          (this.ui = this.app.userspace.ui),
            (this.controller = this.app.userspace.controller),
            (this.userspace = this.app.userspace.get_userspace()),
            (this.preferences = this.app.preferences),
            (this.keymap = this.app.keymap);
          var e = this.app.network;
          (this.sharing_net = new Kl(this.userspace, e)),
            (this.pref_net = new Yl(this.userspace, e)),
            (this.user_net = new Xl(this.userspace, e)),
            (this.upload_net = new Vl(e));
        }),
        (e.prototype._init_fields = function () {
          (this.current_file = null),
            (this.file_being_shared = null),
            (this.shortcut_overrides = {}),
            (this.last_read_timestamp = 0),
            (this.has_called_documents_ready_callback = !1),
            (this.is_pro = true),
            (this.resize_timeout = 0),
            (this.user_data = {}),
            (this.user_data_initialized = !1),
            (this.inbox_document_id = null),
            (this.inbox_node_id = null),
            (this.sync_not_working = !1),
            (this.inbox_capture_global_shortcut = null),
            (this.rename_scope = new Hr(
              Mr.FILE_RENAME,
              this.stop_renaming.bind(this),
            )),
            (this.pref_ts = 0);
        }),
        (e.prototype._init_after = function () {
          this.register_events();
        }),
        (e.prototype._load = function () {
          var e = this;
          this.app.env.is("mobile") &&
            (this.url_manager.push_current_state(),
            this.queue(function () {
              e.app.env.register_intent_handler(e.on_handle_intent.bind(e));
            })),
            this.userspace.on(
              "file_server_id_change",
              this.on_file_server_id_changed,
              this,
            ),
            this.app.db.async_get_userdata(this.on_user_data_load.bind(this)),
            this.ping_analytics(),
            setInterval(function () {
              e.ping_analytics();
            }, 864e5),
            this.setup_desktop_global_shortcut_callback(),
            this.update_desktop_global_shortcut(),
            this.setup_desktop_spellchecker_languages(),
            this.display_desktop_specific_shortcuts();
        }),
        (e.prototype._unload = function () {
          this.app.env.is("mobile") && this.app.env.unregister_intent_handler();
        }),
        (e.prototype.ping_analytics = function () {
          var e = parseInt(
            this.app.env.get_env_data("last_analytics_ping_ts", 0),
          );
          864e5 <= Date.now() - e &&
            this.app.env.set_env_data("last_analytics_ping_ts", Date.now());
        }),
        (e.prototype.get_is_pro = function () {
          return true;
        }),
        (e.prototype.get_url_manager = function () {
          return this.url_manager;
        }),
        (e.prototype.switch_document = function (t) {
          var e = t ? t.get_server_id() : "",
            i = ar.get_zoom_level_for_doc(e);
          this.app.with_current_app_document(function (e) {
            t === e.get_document() &&
              (i = t.get_node_collection().get_root().get_id());
          }),
            this.url_manager.switch_document(t, i, { animate: !1 });
        }),
        (e.prototype.save_preferences = function () {
          if (this.user_data_initialized) {
            (this.user_data.preferences = this.preferences.get_all()),
              (this.user_data.pref_ts = this.pref_ts);
            var t = this.user_data.last_opened_document_id || "";
            this.app.with_current_app_document(function (e) {
              t = e.document.get_id();
            }),
              (this.user_data.last_opened_document_id = t);
          }
          this.save_user_data();
        }),
        (e.prototype.save_user_data = function () {
          this.user_data_initialized &&
            this.app.db.async_save_userdata(this.user_data);
        }),
        (e.prototype.on_user_data_load = function (i) {
          var e,
            t = this;
          (this.user_data_initialized = !0),
            i &&
              (each(this.user_data, function (e, t) {
                i[t] = e;
              }),
              (this.user_data = i).pref_ts &&
                Number.isInteger(i.pref_ts) &&
                (this.pref_ts = i.pref_ts),
              i.preferences && this.preferences.set_all(i.preferences),
              i.upgrade && this.on_upgrade_info_changed(i.upgrade),
              i.auth && this.ui.update_backup_service_info(i.auth),
              i.last_opened_document_id &&
                (this.app.config.get_autoload_document_server_id() ||
                  this.app.config.set_autoload_document_server_id(
                    i.last_opened_document_id,
                  ),
                this.attempt_autoload())),
            this.save_user_data();
          var n = this.app.config;
          n.is_demo_view()
            ? this.preferences.set_all({})
            : n.isAnonymousView()
            ? this.preferences.set_all((((e = {})[Ps.SHOW_HELP] = "hide"), e))
            : (this.update_user_info({
                fetch_notifications: !0,
                fetch_upgrades: !0,
                fetch_upload_quota: !0,
              }),
              this.update_user_preference(),
              this.interval_manager.register_interval(function () {
                t.update_user_info({
                  fetch_upload_quota: !0,
                  fetch_upgrades: !0,
                }),
                  t.update_user_preference();
              }, E));
        }),
        (e.prototype.clear_selection = function () {
          this.app.with_current_app_document(function (e) {
            e.ui.clear_selection();
          });
        }),
        (e.prototype.register_events = function () {
          var e = this.events.make_context_on_off(this.userspace);
          this.events.register_with_context_array(e, [
            ["sync_state_change", this.on_sync_state_change, this],
            ["net_pref_get_start", this.net_pref_operation_started, this],
            ["net_pref_get_end", this.net_pref_get_ended, this],
            ["net_pref_get_fail", this.net_pref_get_failed, this],
            ["net_pref_set_start", this.net_pref_operation_started, this],
            ["net_pref_set_end", this.net_pref_set_ended, this],
            ["net_pref_set_fail", this.net_pref_set_failed, this],
            ["net_upgrade_receive", this.net_upgrade_received, this],
            ["net_auth_receive", this.net_auth_received, this],
            [
              "net_pref_unlink_backup_end",
              this.net_pref_unlink_backup_ended,
              this,
            ],
            ["net_upload_quota_receive", this.net_upload_quota_received, this],
            ["net_sync_before", this.net_sync_before, this],
            ["net_sync_after", this.net_sync_after, this],
            ["net_notification_receive", this.net_notification_received, this],
            ["file_title_change", this.on_file_title_changed, this],
            ["app_document_switch", this.on_app_document_switched, this],
            [
              "document_user_data_change",
              this.on_document_user_data_changed,
              this,
            ],
          ]);
        }),
        (e.prototype.get_file_item_state = function (e) {
          return this.file_item_view.get_file_item_state(e);
        }),
        (e.prototype.get_preferences = function () {
          return this.preferences;
        }),
        (e.prototype.get_last_read_timestamp = function () {
          return this.last_read_timestamp;
        }),
        (e.prototype.resize_file_pane = function () {
          var e = this;
          clearTimeout(this.resize_timeout),
            (this.resize_timeout = this.set_timeout(function () {
              yr(".FilePane").trigger("resize"), (e.resize_timeout = 0);
            }, 100));
        }),
        (e.prototype.update_bookmark_count = function () {
          var e = $(".BookmarkItem").length;
          yr(".BookmarkLimit-used").text(e),
            yr(".BookmarkLimit").toggleClass("is-overLimit", 5 < e);
        }),
        (e.prototype.initialize = function () {
          if (!this.initialized) {
            this.initialized = !0;
            var e = this.app;
            if (!this.url_manager.is_global_search()) {
              this.ui.stop_loading(),
                e.switch_app_document(e.get_current_app_document());
              var t = !1;
              if (e.config.isAnonymousView()) {
                var i = He.decode_url(window.location.href).hash;
                i.collapse && (t = !0),
                  i["inline-images"] &&
                    this.preferences.set_boolean(Ps.DISPLAY_IMAGES_INLINE, !0),
                  i.theme && this.preferences.set(Ps.THEME, i.theme);
              }
              this.attempt_autoload(),
                !e.get_current_app_document() &&
                  e.config.isAnonymousView() &&
                  this.ui.show_document_unavailable(),
                t &&
                  e.with_current_app_document(function (t) {
                    t.view.set_loaded_callback(function () {
                      var e = t.document
                        .get_node_collection()
                        .get_root()
                        .get_children()
                        .array();
                      t.view.set_nodes_collapse(e, !0, !0, !0);
                    });
                  });
            }
          }
        }),
        (e.prototype.on_handle_intent = function (e) {
          "text" === e.type && this.ui.inbox_capture.open_with_text(e.text);
        }),
        (e.prototype.attempt_autoload = function () {
          if (!this.app.get_current_app_document()) {
            var e = this.url_manager,
              t = this.app.config.get_autoload_document_server_id();
            if (t) {
              var i = this.userspace.find_server_file(t);
              if ((i || (i = this.userspace.find_file(t)), i)) {
                var n = e.get_state(),
                  o = n.document_server_id,
                  s = n.zoom_node_id,
                  r = n.focus_node_id;
                o !== t && (r = s = null),
                  s || (s = ar.get_zoom_level_for_doc(i.get_server_id())),
                  e.update_state(
                    {
                      document_server_id: i.get_server_id(),
                      zoom_node_id: s,
                      focus_node_id: r,
                    },
                    { animate: !1 },
                  );
              }
            }
          }
        }),
        (e.prototype.on_sync_state_change = function (e) {
          var t = this.controller.get_sync_component();
          t.get_sync_state() === lt
            ? t.has_error() && !t.is_working()
              ? this.ui.pane_ui.set_pane_status_error()
              : this.ui.pane_ui.set_pane_status_loading()
            : (this.ui.pane_ui.clear_pane_status(), this.initialize());
          var i = this.is_offline() && this.app.env.is("desktop"),
            n = e.get_sync_state();
          e.is_disabled()
            ? this.ui.display_sync_disabled()
            : e.is_working()
            ? this.ui.display_syncing()
            : n === pt
            ? this.ui.on_synced()
            : e.has_error() && !i
            ? this.ui.display_sync_error()
            : n === ht
            ? this.ui.display_saved()
            : n === ut
            ? this.ui.display_sync_needed()
            : e.has_error() && this.ui.display_save_error(),
            this.ui.update_sync_status_popup();
          var o = e.get_earliest_unsynced(),
            s = n === ut && o < Date.now() - 9e5;
          this.sync_not_working !== s &&
            (this.sync_not_working = s) &&
            this.app.env.is("web") &&
            this.ui.popup_message_manager.display_sync_not_working();
        }),
        (e.prototype.on_upgrade_info_changed = function (e) {
          var t =true;
          var i = this.is_pro;
            this.app.shortcuts.set_enable_overrides(this.is_pro);
            this.preferences.init_all({});
            this.update_desktop_global_shortcut();
            this.ui.update_sync_settings();
            this.ui.update_pro_info(t);
        }),
        (e.prototype.net_pref_operation_started = function () {}),
        (e.prototype.net_pref_get_ended = function (e, t) {
          this.ui.hide_settings_spinner(),
            this.preferences.set_all(e),
            Number.isInteger(t) && (this.pref_ts = Math.max(this.pref_ts, t)),
            this.request_save_preferences();
        }),
        (e.prototype.net_pref_get_failed = function (e) {
          this.ui.hide_settings_spinner(), yr(".settings-error").text(e);
        }),
        (e.prototype.net_pref_set_ended = function (e, t) {}),
        (e.prototype.net_pref_set_failed = function (e) {
          yr(".settings-error").text(e);
        }),
        (e.prototype.net_upgrade_received = function (e) {
          this.on_upgrade_info_changed(e),
            (this.user_data.upgrade = e),
            this.save_user_data();
        }),
        (e.prototype.net_auth_received = function (e) {
          this.ui.update_backup_service_info(e),
            (this.user_data.auth = e),
            this.save_user_data();
        }),
        (e.prototype.net_pref_unlink_backup_ended = function () {
          this.ui.hide_settings_spinner(),
            this.update_user_info({ fetch_upgrades: !0 });
        }),
        (e.prototype.net_notification_received = function (e) {
          (this.last_read_timestamp = Math.max(
            this.last_read_timestamp,
            e.last_read_timestamp,
          )),
            this.ui.notification_ui.update_notifications(e.notifications);
        }),
        (e.prototype.net_upload_quota_received = function (e, t) {
          this.ui.update_upload_quota(e, t);
        }),
        (e.prototype.on_file_title_changed = function (i) {
          var n = this;
          this.app.with_current_app_document(function (e) {
            if (i === e.document) {
              var t = n.url_manager.get_state();
              n.url_manager.update_window_title(t);
            }
          });
        }),
        (e.prototype.on_app_document_switched = function (e) {
          if (e) {
            var t = e.document,
              i = t.get_user_data_object().clone();
            i.set_last_access(Date.now()),
              this.controller.edit_document_user_data(t, i.write());
          }
        }),
        (e.prototype.on_document_user_data_changed = function (t) {
          this.app.with_current_app_document(function (e) {
            e.document === t && e.ui.update_per_document_settings();
          }),
            this.app.document_manager.check_and_unload_archived_document(t);
        }),
        (e.prototype.test_error = function () {
          setTimeout(function () {
            throw new Error("Test error");
          }, 0);
        }),
        (e.prototype.get_sharing_net = function () {
          return this.sharing_net;
        }),
        (e.prototype.get_pref_net = function () {
          return this.pref_net;
        }),
        (e.prototype.delete_file = function (e) {
          this.controller.detach_file(e),
            this.check_current_open_document(),
            e instanceof Vn && this.app.remove_app_document(e);
        }),
        (e.prototype.check_current_open_document = function () {
          var t = this;
          this.app.with_current_app_document(function (e) {
            e.document.is_attached() || t.url_manager.apply_state({});
          });
        }),
        (e.prototype.net_sync_before = function () {
          this.file_item_view.save_renaming_selection_state();
        }),
        (e.prototype.net_sync_after = function () {
          this.file_item_view.restore_renaming_selection_state(),
            this.check_current_open_document();
        }),
        (e.prototype.toggle_folder_collapse = function (e) {
          var t = !e.is_collapsed() && e.has_visible_children();
          this.controller.set_folder_collapse(e, t);
        }),
        (e.prototype.update_user_preference = function () {
          this.get_pref_net().get(this.pref_ts);
        }),
        (e.prototype.force_sync = function () {
          this.controller.sync("user"),
            this.app.with_current_app_document(function (e) {
              e.controller.sync("user");
            });
        }),
        (e.prototype.start_renaming = function (e) {
          if (e) {
            var t = e.get_parent();
            t &&
              t instanceof ii &&
              t.is_collapsed() &&
              this.toggle_folder_collapse(t),
              this.app.scope.push_scope(this.rename_scope),
              this.clear_selection(),
              this.file_item_view.start_renaming(e);
          }
        }),
        (e.prototype.stop_renaming = function () {
          var e = this.file_item_view.get_renaming_file_item_state();
          if (e) {
            var t = e.get_file(),
              i = e.get_ui_title();
            if (t instanceof ri) {
              var n = t,
                o = n.get_data_object().clone();
              o.set_title(i), this.controller.edit_bookmark(n, o.write());
            } else t instanceof ti && this.controller.rename_file(t, i);
            this.app.scope.pop_scope(this.rename_scope),
              this.file_item_view.stop_renaming();
          } else
            this.tag_pane_manager.get_is_renaming_tag() &&
              this.tag_pane_manager.stop_renaming_tag();
        }),
        (e.prototype.is_renaming = function () {
          return (
            bool(this.file_item_view.get_renaming_file_item_state()) ||
            this.tag_pane_manager.get_is_renaming_tag()
          );
        }),
        (e.prototype.select_file = function (e) {
          this.file_item_view.select_file(e);
        }),
        (e.prototype.deselect_file = function () {
          this.file_item_view.deselect_file();
        }),
        (e.prototype.start_sharing_file = function (e) {
          this.ui.sharing_operation_start(),
            this.get_sharing_net().share_new(
              e,
              this.net_share_new_success.bind(this),
              this.net_share_new_fail.bind(this),
            );
        }),
        (e.prototype.stop_sharing_file = function (e) {
          this.ui.sharing_operation_start(),
            this.get_sharing_net().del(
              e.get_namespace(),
              this.net_share_del_success.bind(this),
              this.net_share_del_fail.bind(this),
            );
        }),
        (e.prototype.get_file_sharing_permission = function () {
          this.file_being_shared &&
            (this.ui.sharing_operation_start(),
            this.get_sharing_net().get(
              this.file_being_shared.get_namespace(),
              this.net_share_get_success.bind(this),
              this.net_share_get_fail.bind(this),
            ));
        }),
        (e.prototype.set_file_sharing_permission = function (e, t) {
          this.file_being_shared &&
            (this.ui.sharing_operation_start(),
            this.get_sharing_net().set(
              this.file_being_shared.get_namespace(),
              e,
              t,
              this.net_share_set_success.bind(this),
              this.net_share_set_fail.bind(this),
            ));
        }),
        (e.prototype.net_share_new_success = function (e) {
          this.get_file_sharing_permission();
        }),
        (e.prototype.net_share_new_fail = function (e, t) {
          this.ui.loader_error();
        }),
        (e.prototype.net_share_del_success = function () {
          this.get_file_sharing_permission(), this.ui.close_modals();
        }),
        (e.prototype.net_share_del_fail = function (e, t) {
          this.ui.loader_hide();
        }),
        (e.prototype.net_share_get_success = function (e, t) {
          this.ui.loader_hide(),
            this.file_being_shared &&
              this.file_being_shared.get_namespace() === e &&
              this.ui.fill_in_collaborator_information(t);
        }),
        (e.prototype.net_share_get_fail = function (e, t) {
          this.ui.loader_error(),
            yr(".ErrorMessage.mod-sharingr")
              .text(t || "Could not load collaborators")
              .show();
        }),
        (e.prototype.net_share_set_success = function () {
          this.ui.loader_hide(),
            (fish(".new-collab-email").value = ""),
            (fish(".new-collab-permission").value = "1"),
            this.get_file_sharing_permission();
        }),
        (e.prototype.net_share_set_fail = function (e, t) {
          this.ui.loader_hide(),
            yr(".ErrorMessage.mod-sharing")
              .text(t || "Failed to change collaborators")
              .show();
        }),
        (e.prototype.unlink_dropbox = function () {
          this.pref_net.unlink_backup(X);
        }),
        (e.prototype.unlink_google_drive = function () {
          this.pref_net.unlink_backup(Z);
        }),
        (e.prototype.unlink_gcal = function () {
          this.preferences.set(Ps.GCAL_SYNC_CALENDAR_ID, ""),
            this.preferences.set(Ps.GCAL_SYNC_CALENDAR_NAME, ""),
            this.pref_net.unlink_backup(J);
        }),
        (e.prototype.fetch_gcal_calendars = function (e, t) {
          this.pref_net.fetch_gcal_calendars(e, t);
        }),
        (e.prototype.redeem_free_pro = function (e, t) {
          this.pref_net.redeem_free_pro(e, t);
        }),
        (e.prototype.update_user_info = function (e) {
          void 0 === e && (e = {}), this.user_net.update_user_info(e);
        }),
        (e.prototype.update_last_read_timestamp = function () {
          this.user_net.update_last_read();
        }),
        (e.prototype.toggle_show_checked = function () {
          this.preferences.toggle_boolean(Ps.SHOW_CHECKED);
        }),
        (e.prototype.toggle_note_display = function () {
          var e = this.preferences.get(Ps.NOTE_DISPLAY),
            t = "";
          e === Fs.NOTE_DISPLAY.SHOW
            ? (t = Fs.NOTE_DISPLAY.TEASER)
            : e === Fs.NOTE_DISPLAY.TEASER
            ? (t = Fs.NOTE_DISPLAY.HIDE)
            : e === Fs.NOTE_DISPLAY.HIDE && (t = Fs.NOTE_DISPLAY.SHOW),
            this.preferences.set(Ps.NOTE_DISPLAY, t);
        }),
        (e.prototype.copy_document = function (e, t, i) {
          var n = e.get_node_collection().get_root(),
            o = this.controller.create_document(t, i, e.get_title()),
            s = o.get_node_collection().get_root(),
            r = this.app.find_or_add_app_document(o).view;
          return (
            r.set_loaded_callback(function () {
              r.controller.clone_from_nodes([n], s, 0, !0);
              var e = n.get_meta_object().clone();
              e.set_content(o.get_title()),
                r.controller.edit_meta(s, e.write());
            }),
            o
          );
        }),
        (e.prototype.convert_node_to_document = function (t, i, e, n) {
          var o = this,
            s = i[0].get_clean_title(),
            r = this.controller.create_document(e, n, s),
            a = r.get_node_collection().get_root(),
            _ = this.app.find_or_add_app_document(t),
            c = this.app.find_or_add_app_document(r).view;
          c.set_loaded_callback(function () {
            var e = c.controller.clone_from_nodes(i, a, 0, !0);
            a.set_meta(a.get_meta_object().set_content(s).write()),
              _.view.detach_nodes(i),
              o.fixLinks(t.get_server_id(), r.get_server_id(), e);
          });
        }),
        (e.prototype.moveNodeToDocument = function (e, t, i, n, o) {
          var s = this,
            r = this.app.find_or_add_app_document(i),
            a = this.app.get_current_app_document();
          if (r && a) {
            var _ = i.get_node_collection().get_root(),
              c = function (e) {
                return "bottom" ===
                  s.app.preferences.get(Ps.MOVE_ITEM_SEND_TO_POSITION)
                  ? e.num_children()
                  : 0;
              };
            r === a
              ? (n || (n = _), a.view.move_nodes(t, n, c(n)), o && o())
              : r.view.set_loaded_callback(function () {
                  n || (n = _);
                  var e = r.controller.clone_from_nodes(t, n, c(n));
                  a.view.detach_nodes(t),
                    s.fixLinks(
                      a.get_document().get_server_id(),
                      i.get_server_id(),
                      e,
                    ),
                    o && o();
                });
          }
        }),
        (e.prototype.fixLinks = function (l, u, h) {
          each(this.app.app_documents, function (c) {
            c.get_document()
              .get_node_collection()
              .traverse_tree_bfs(null, function (e) {
                var s = [],
                  t = function (e) {
                    if (e instanceof an) {
                      var t = e.url;
                      if (!t.contains(l)) return;
                      var i = Ls.parse_dynalist_url(t);
                      if (i.document_server_id !== l) return;
                      var n = i.zoom_node_id;
                      if (!n || !h.hasOwnProperty(n)) return;
                      var o = h[n];
                      s.push({ from: t, to: t.replace(l, u).replace(n, o) });
                    }
                  };
                if (
                  (e.get_content_parse_tree().traverse(t),
                  e.get_note_parse_tree().traverse(t),
                  0 < s.length)
                ) {
                  for (
                    var i = e.get_meta_object().clone(),
                      n = i.get_content(),
                      o = i.get_note(),
                      r = 0,
                      a = s;
                    r < a.length;
                    r++
                  ) {
                    var _ = a[r];
                    (n = n.replace(_.from, _.to)),
                      (o = o.replace(_.from, _.to));
                  }
                  i.set_content(n),
                    i.set_note(o),
                    c.controller.edit_meta(e, i.write());
                }
              });
          });
        }),
        (e.prototype.check_if_all_documents_are_loaded = function () {
          if (
            this.userspace.are_all_documents_ready() &&
            !this.has_called_documents_ready_callback
          ) {
            var e = this.get_url_manager();
            e.is_global_search() &&
              e.parse_url_and_apply_state(window.location.href, {
                replace: !0,
              }),
              this.controller.userspace_remote_loaded &&
                this.ui.update_pref_inbox_location(),
              (this.has_called_documents_ready_callback = !0);
          }
        }),
        (e.prototype.search_all_nodes = function (e, r) {
          var t = this.preferences.get(Ps.SHOW_CHECKED),
            a = [],
            _ = ys(e);
          return (
            this.userspace.traverse_tree_dfs(null, function (o) {
              if (o instanceof Vn && !o.get_user_data_object().get_archived()) {
                var s =
                  "hide" ===
                  (o.get_user_data_object().get_checked_items_visibility() ||
                    t);
                o.get_node_collection().traverse_tree_dfs(null, function (e) {
                  var t = e.get_meta_object();
                  if (!s || !t.is_checked()) {
                    var i = t.get_content(),
                      n = ws(_, i);
                    n &&
                      (o === r && (n.score += 1),
                      t.is_checked() && (n.score -= 0.5),
                      a.push({ document: o, node: e, match: n }));
                  }
                });
              }
            }),
            ks(a),
            a
          );
        }),
        (e.prototype.has_hit_free_user_bookmark_limit = function () {
          return (
            !this.is_pro &&
            5 <= this.userspace.get_root_bookmark().num_children()
          );
        }),
        (e.prototype.get_url_state = function (e, t, i) {
          return (
            t && t.is_root() && (t = null),
            {
              document_server_id: e.get_server_id(),
              zoom_node_id: t ? t.get_id() : null,
              search_query: i,
            }
          );
        }),
        (e.prototype.go_to_bookmark = function (e) {
          var t = e.get_data_object().convert_to_url_state();
          this.url_manager.apply_state(t),
            "" === t.search_query
              ? this.app.with_current_app_document(function (e) {
                  e.ui.exit_document_search();
                })
              : this.app.with_current_app_document(function (e) {
                  e.ui.search_in_document(t.search_query, !0);
                });
        }),
        (e.prototype.bookmarkCurrentUrlState = function () {
          this.bookmarkUrlState(this.url_manager.get_state());
        }),
        (e.prototype.bookmarkUrlState = function (e) {
          if (!this.get_bookmark_by_url_state(e))
            if (this.has_hit_free_user_bookmark_limit())
              this.ui.show_bookmark_limit_reached_error();
            else {
              var t = this.userspace.get_root_bookmark().num_children(),
                i = this.controller.create_bookmark(t),
                n = i.get_data_object().clone();
              n.set_url_manager_state(e),
                n.set_title(this.get_default_bookmark_name(n)),
                this.controller.edit_bookmark(i, n.write()),
                this.ui.make_sure_bookmark_pane_is_open(),
                this.start_renaming(i),
                this.ui.update_bookmark_status();
            }
        }),
        (e.prototype.get_bookmark_by_current_url_state = function () {
          var e = this.url_manager.get_state();
          return this.get_bookmark_by_url_state(e);
        }),
        (e.prototype.get_bookmark_by_url_state = function (e) {
          var i = this,
            n = this.url_manager.create_url_from_state(e),
            o = null;
          return (
            this.userspace
              .get_root_bookmark()
              .get_children()
              .each(function (e) {
                var t = e.get_data_object().convert_to_url_state();
                if (n === i.url_manager.create_url_from_state(t))
                  return (o = e), !1;
              }),
            o
          );
        }),
        (e.prototype.get_default_bookmark_name = function (e) {
          var t = e.get_document(),
            i = e.get_zoom(),
            n = e.get_search_query(),
            o = e.get_flat_search(),
            s = "",
            r = "",
            a = t ? this.userspace.find_server_file(t) : null;
          if (a && ((s = a.get_title()), i)) {
            var _ = a.get_node_collection().find_node(i);
            r = _ ? _.get_clean_title() : "";
          }
          (s = Rt(s, 40)), (r = Rt(r, 40));
          return "" !== n
            ? "" === t
              ? 'Search results for "' + n + '"'
              : r || s
              ? o
                ? 'Flat search results for "' + n + '" in "' + (r || s) + '"'
                : 'Search results for "' + n + '" in "' + (r || s) + '"'
              : 'Search results for "' + n + '"'
            : r || s
            ? r || s
            : c;
        }),
        (e.prototype.get_node_title_by_url = function (e) {
          var t = Ls.parse_dynalist_url(e),
            i = t.document_server_id,
            n = t.zoom_node_id,
            o = this.userspace.find_server_file(i);
          if (!o) return null;
          if (!n) return { type: "document", title: o.get_title() };
          var s = o.get_node_collection().find_node(n);
          return s
            ? {
                type: "node",
                title:
                  s.get_content_parse_tree().getText() ||
                  s.get_meta_object().get_content(),
              }
            : null;
        }),
        (e.prototype.get_node_parent_chain = function (e) {
          var t = [];
          for (e = e.get_parent(); e; ) t.push(e), (e = e.get_parent());
          return t.reverse(), t;
        }),
        (e.prototype.get_document_parent_chain = function (e) {
          for (var t = [], i = e.get_parent(); i && !i.is_root(); )
            t.push(i), (i = i.get_parent());
          return t.reverse(), t;
        }),
        (e.prototype.set_custom_shortcut = function (e, t) {
          (this.shortcut_overrides[e] = ea.serialize(t)),
            this.preferences.set(
              Ps.SHORTCUT_OVERRIDE,
              JSON.stringify(this.shortcut_overrides),
            );
        }),
        (e.prototype.reset_shortcut_to_default = function (e) {
          delete this.shortcut_overrides[e],
            this.preferences.set(
              Ps.SHORTCUT_OVERRIDE,
              JSON.stringify(this.shortcut_overrides),
            );
        }),
        (e.prototype.set_shortcut_overrides = function (e) {
          e &&
            ((this.shortcut_overrides = e),
            this.app.shortcuts.set_all_overrides(e),
            this.update_desktop_global_shortcut());
        }),
        (e.prototype.setup_desktop_global_shortcut_callback = function () {
          var t = this;
          this.app.env.is("desktop") &&
            this.app.env.on_global_shortcut(function (e) {
              t.get_is_pro() &&
                e === t.inbox_capture_global_shortcut &&
                t.ui.inbox_capture.open();
            });
        }),
        (e.prototype.update_desktop_global_shortcut = function () {
          if (this.app.env.is("desktop")) {
            var e = this.app.env,
              t = this.get_inbox_capture_electron_accelerator();
            this.inbox_capture_global_shortcut !== t &&
              (this.inbox_capture_global_shortcut &&
                (e.unregister_global_shortcut(
                  this.inbox_capture_global_shortcut,
                ),
                (this.inbox_capture_global_shortcut = null)),
              t &&
                (e.register_global_shortcut(t),
                (this.inbox_capture_global_shortcut = t)));
          }
        }),
        (e.prototype.setup_desktop_spellchecker_languages = function () {
          if (this.app.env.is("desktop")) {
            var e = this.app.env.get_spellchecker().getAvailableLanguages();
            if (0 !== e.length) {
              var t = fish(
                ".setting.mod-spellchecker-language .setting-dropdown-menu",
              );
              t.empty(),
                each(e, function (e) {
                  t.createEl("option", {
                    text: (function e(t) {
                      if (!t || "string" != typeof t) return "";
                      var i = t.split("-"),
                        n = {
                          ab: "Abkhazian",
                          aa: "Afar",
                          af: "Afrikaans",
                          ak: "Akan",
                          sq: "Albanian",
                          am: "Amharic",
                          ar: "Arabic",
                          an: "Aragonese",
                          hy: "Armenian",
                          as: "Assamese",
                          av: "Avaric",
                          ae: "Avestan",
                          ay: "Aymara",
                          az: "Azerbaijani",
                          bm: "Bambara",
                          ba: "Bashkir",
                          eu: "Basque",
                          be: "Belarusian",
                          bn: "Bengali",
                          bh: "Bihari languages",
                          bi: "Bislama",
                          nb: "Norwegian Bokmål",
                          bs: "Bosnian",
                          br: "Breton",
                          bg: "Bulgarian",
                          my: "Burmese",
                          es: "Spanish",
                          ca: "Valencian",
                          km: "Central Khmer",
                          ch: "Chamorro",
                          ce: "Chechen",
                          ny: "Nyanja",
                          zh: "Chinese",
                          za: "Zhuang",
                          cu: "Old Slavonic",
                          cv: "Chuvash",
                          kw: "Cornish",
                          co: "Corsican",
                          cr: "Cree",
                          hr: "Croatian",
                          cs: "Czech",
                          da: "Danish",
                          dv: "Maldivian",
                          nl: "Flemish",
                          dz: "Dzongkha",
                          en: "English",
                          eo: "Esperanto",
                          et: "Estonian",
                          ee: "Ewe",
                          fo: "Faroese",
                          fj: "Fijian",
                          fi: "Finnish",
                          fr: "French",
                          ff: "Fulah",
                          gd: "Scottish Gaelic",
                          gl: "Galician",
                          lg: "Ganda",
                          ka: "Georgian",
                          de: "German",
                          ki: "Kikuyu",
                          el: "Greek, Modern (1453-)",
                          kl: "Kalaallisut",
                          gn: "Guarani",
                          gu: "Gujarati",
                          ht: "Haitian Creole",
                          ha: "Hausa",
                          he: "Hebrew",
                          hz: "Herero",
                          hi: "Hindi",
                          ho: "Hiri Motu",
                          hu: "Hungarian",
                          is: "Icelandic",
                          io: "Ido",
                          ig: "Igbo",
                          id: "Indonesian",
                          ia: "Interlingua (International Auxiliary Language Association)",
                          ie: "Occidental",
                          iu: "Inuktitut",
                          ik: "Inupiaq",
                          ga: "Irish",
                          it: "Italian",
                          ja: "Japanese",
                          jv: "Javanese",
                          kn: "Kannada",
                          kr: "Kanuri",
                          ks: "Kashmiri",
                          kk: "Kazakh",
                          rw: "Kinyarwanda",
                          ky: "Kyrgyz",
                          kv: "Komi",
                          kg: "Kongo",
                          ko: "Korean",
                          kj: "Kwanyama",
                          ku: "Kurdish",
                          lo: "Lao",
                          la: "Latin",
                          lv: "Latvian",
                          lb: "Luxembourgish",
                          li: "Limburgish",
                          ln: "Lingala",
                          lt: "Lithuanian",
                          lu: "Luba-Katanga",
                          mk: "Macedonian",
                          mg: "Malagasy",
                          ms: "Malay",
                          ml: "Malayalam",
                          mt: "Maltese",
                          gv: "Manx",
                          mi: "Maori",
                          mr: "Marathi",
                          mh: "Marshallese",
                          ro: "Romanian",
                          mn: "Mongolian",
                          na: "Nauru",
                          nv: "Navajo",
                          nd: "North Ndebele",
                          nr: "South Ndebele",
                          ng: "Ndonga",
                          ne: "Nepali",
                          se: "Northern Sami",
                          no: "Norwegian",
                          nn: "Nynorsk, Norwegian",
                          ii: "Sichuan Yi",
                          oc: "Occitan (post 1500)",
                          oj: "Ojibwa",
                          or: "Oriya",
                          om: "Oromo",
                          os: "Ossetic",
                          pi: "Pali",
                          pa: "Punjabi",
                          ps: "Pushto",
                          fa: "Persian",
                          pl: "Polish",
                          pt: "Portuguese",
                          qu: "Quechua",
                          rm: "Romansh",
                          rn: "Rundi",
                          ru: "Russian",
                          sm: "Samoan",
                          sg: "Sango",
                          sa: "Sanskrit",
                          sc: "Sardinian",
                          sr: "Serbian",
                          sn: "Shona",
                          sd: "Sindhi",
                          si: "Sinhalese",
                          sk: "Slovak",
                          sl: "Slovenian",
                          so: "Somali",
                          st: "Sotho, Southern",
                          su: "Sundanese",
                          sw: "Swahili",
                          ss: "Swati",
                          sv: "Swedish",
                          tl: "Tagalog",
                          ty: "Tahitian",
                          tg: "Tajik",
                          ta: "Tamil",
                          tt: "Tatar",
                          te: "Telugu",
                          th: "Thai",
                          bo: "Tibetan",
                          ti: "Tigrinya",
                          to: "Tonga (Tonga Islands)",
                          ts: "Tsonga",
                          tn: "Tswana",
                          tr: "Turkish",
                          tk: "Turkmen",
                          tw: "Twi",
                          ug: "Uyghur",
                          uk: "Ukrainian",
                          ur: "Urdu",
                          uz: "Uzbek",
                          ve: "Venda",
                          vi: "Vietnamese",
                          vo: "Volapük",
                          wa: "Walloon",
                          cy: "Welsh",
                          fy: "Western Frisian",
                          wo: "Wolof",
                          xh: "Xhosa",
                          yi: "Yiddish",
                          yo: "Yoruba",
                          zu: "Zulu",
                        },
                        o = {
                          abk: "Abkhazian",
                          ace: "Achinese",
                          ach: "Acoli",
                          ada: "Adangme",
                          ady: "Adyghe",
                          aar: "Afar",
                          afh: "Afrihili",
                          afr: "Afrikaans",
                          afa: "Afro-Asiatic languages",
                          ain: "Ainu",
                          aka: "Akan",
                          akk: "Akkadian",
                          alb: "Albanian",
                          sqi: "Albanian",
                          gsw: "Swiss German",
                          ale: "Aleut",
                          alg: "Algonquian languages",
                          tut: "Altaic languages",
                          amh: "Amharic",
                          anp: "Angika",
                          apa: "Apache languages",
                          ara: "Arabic",
                          arg: "Aragonese",
                          arp: "Arapaho",
                          arw: "Arawak",
                          arm: "Armenian",
                          hye: "Armenian",
                          rup: "Macedo-Romanian",
                          art: "Artificial languages",
                          asm: "Assamese",
                          ast: "Leonese",
                          ath: "Athapascan languages",
                          aus: "Australian languages",
                          map: "Austronesian languages",
                          ava: "Avaric",
                          ave: "Avestan",
                          awa: "Awadhi",
                          aym: "Aymara",
                          aze: "Azerbaijani",
                          ban: "Balinese",
                          bat: "Baltic languages",
                          bal: "Baluchi",
                          bam: "Bambara",
                          bai: "Bamileke languages",
                          bad: "Banda languages",
                          bnt: "Bantu languages",
                          bas: "Basa",
                          bak: "Bashkir",
                          baq: "Basque",
                          eus: "Basque",
                          btk: "Batak languages",
                          bej: "Beja",
                          bel: "Belarusian",
                          bem: "Bemba",
                          ben: "Bengali",
                          ber: "Berber languages",
                          bho: "Bhojpuri",
                          bih: "Bihari languages",
                          bik: "Bikol",
                          byn: "Blin",
                          bin: "Edo",
                          bis: "Bislama",
                          zbl: "Blissymbols",
                          nob: "Norwegian Bokmål",
                          bos: "Bosnian",
                          bra: "Braj",
                          bre: "Breton",
                          bug: "Buginese",
                          bul: "Bulgarian",
                          bua: "Buriat",
                          bur: "Burmese",
                          mya: "Burmese",
                          cad: "Caddo",
                          spa: "Spanish",
                          cat: "Valencian",
                          cau: "Caucasian languages",
                          ceb: "Cebuano",
                          cel: "Celtic languages",
                          cai: "Central American Indian languages",
                          khm: "Central Khmer",
                          chg: "Chagatai",
                          cmc: "Chamic languages",
                          cha: "Chamorro",
                          che: "Chechen",
                          chr: "Cherokee",
                          nya: "Nyanja",
                          chy: "Cheyenne",
                          chb: "Chibcha",
                          chi: "Chinese",
                          zho: "Chinese",
                          chn: "Chinook jargon",
                          chp: "Dene Suline",
                          cho: "Choctaw",
                          zha: "Zhuang",
                          chu: "Old Slavonic",
                          chk: "Chuukese",
                          chv: "Chuvash",
                          nwc: "Old Newari",
                          syc: "Classical Syriac",
                          rar: "Rarotongan",
                          cop: "Coptic",
                          cor: "Cornish",
                          cos: "Corsican",
                          cre: "Cree",
                          mus: "Creek",
                          crp: "Creoles and pidgins",
                          cpe: "Creoles and pidgins, English based",
                          cpf: "Creoles and pidgins, French-based",
                          cpp: "Creoles and pidgins, Portuguese-based",
                          crh: "Crimean Turkish",
                          hrv: "Croatian",
                          cus: "Cushitic languages",
                          cze: "Czech",
                          ces: "Czech",
                          dak: "Dakota",
                          dan: "Danish",
                          dar: "Dargwa",
                          del: "Delaware",
                          div: "Maldivian",
                          zza: "Zazaki",
                          din: "Dinka",
                          doi: "Dogri",
                          dgr: "Dogrib",
                          dra: "Dravidian languages",
                          dua: "Duala",
                          dut: "Flemish",
                          nld: "Flemish",
                          dum: "Dutch, Middle (ca.1050-1350)",
                          dyu: "Dyula",
                          dzo: "Dzongkha",
                          frs: "Eastern Frisian",
                          efi: "Efik",
                          egy: "Egyptian (Ancient)",
                          eka: "Ekajuk",
                          elx: "Elamite",
                          eng: "English",
                          enm: "English, Middle (1100-1500)",
                          ang: "English, Old (ca.450-1100)",
                          myv: "Erzya",
                          epo: "Esperanto",
                          est: "Estonian",
                          ewe: "Ewe",
                          ewo: "Ewondo",
                          fan: "Fang",
                          fat: "Fanti",
                          fao: "Faroese",
                          fij: "Fijian",
                          fil: "Pilipino",
                          fin: "Finnish",
                          fiu: "Finno-Ugrian languages",
                          fon: "Fon",
                          fre: "French",
                          fra: "French",
                          frm: "French, Middle (ca.1400-1600)",
                          fro: "French, Old (842-ca.1400)",
                          fur: "Friulian",
                          ful: "Fulah",
                          gaa: "Ga",
                          gla: "Scottish Gaelic",
                          car: "Galibi Carib",
                          glg: "Galician",
                          lug: "Ganda",
                          gay: "Gayo",
                          gba: "Gbaya",
                          gez: "Geez",
                          geo: "Georgian",
                          kat: "Georgian",
                          ger: "German",
                          deu: "German",
                          nds: "Saxon, Low",
                          gmh: "German, Middle High (ca.1050-1500)",
                          goh: "German, Old High (ca.750-1050)",
                          gem: "Germanic languages",
                          kik: "Kikuyu",
                          gil: "Gilbertese",
                          gon: "Gondi",
                          gor: "Gorontalo",
                          got: "Gothic",
                          grb: "Grebo",
                          grc: "Greek, Ancient (to 1453)",
                          gre: "Greek, Modern (1453-)",
                          ell: "Greek, Modern (1453-)",
                          kal: "Kalaallisut",
                          grn: "Guarani",
                          guj: "Gujarati",
                          gwi: "Gwich'in",
                          hai: "Haida",
                          hat: "Haitian Creole",
                          hau: "Hausa",
                          haw: "Hawaiian",
                          heb: "Hebrew",
                          her: "Herero",
                          hil: "Hiligaynon",
                          him: "Western Pahari languages",
                          hin: "Hindi",
                          hmo: "Hiri Motu",
                          hit: "Hittite",
                          hmn: "Mong",
                          hun: "Hungarian",
                          hup: "Hupa",
                          iba: "Iban",
                          ice: "Icelandic",
                          isl: "Icelandic",
                          ido: "Ido",
                          ibo: "Igbo",
                          ijo: "Ijo languages",
                          ilo: "Iloko",
                          arc: "Official Aramaic (700-300 BCE)",
                          smn: "Inari Sami",
                          inc: "Indic languages",
                          ine: "Indo-European languages",
                          ind: "Indonesian",
                          inh: "Ingush",
                          ina: "Interlingua (International Auxiliary Language Association)",
                          ile: "Occidental",
                          iku: "Inuktitut",
                          ipk: "Inupiaq",
                          ira: "Iranian languages",
                          gle: "Irish",
                          mga: "Irish, Middle (900-1200)",
                          sga: "Irish, Old (to 900)",
                          iro: "Iroquoian languages",
                          ita: "Italian",
                          jpn: "Japanese",
                          jav: "Javanese",
                          kac: "Kachin",
                          jrb: "Judeo-Arabic",
                          jpr: "Judeo-Persian",
                          kbd: "Kabardian",
                          kab: "Kabyle",
                          xal: "Oirat",
                          kam: "Kamba",
                          kan: "Kannada",
                          kau: "Kanuri",
                          pam: "Pampanga",
                          kaa: "Kara-Kalpak",
                          krc: "Karachay-Balkar",
                          krl: "Karelian",
                          kar: "Karen languages",
                          kas: "Kashmiri",
                          csb: "Kashubian",
                          kaw: "Kawi",
                          kaz: "Kazakh",
                          kha: "Khasi",
                          khi: "Khoisan languages",
                          kho: "Sakan",
                          kmb: "Kimbundu",
                          kin: "Kinyarwanda",
                          kir: "Kyrgyz",
                          tlh: "tlhIngan-Hol",
                          kom: "Komi",
                          kon: "Kongo",
                          kok: "Konkani",
                          kor: "Korean",
                          kos: "Kosraean",
                          kpe: "Kpelle",
                          kro: "Kru languages",
                          kua: "Kwanyama",
                          kum: "Kumyk",
                          kur: "Kurdish",
                          kru: "Kurukh",
                          kut: "Kutenai",
                          lad: "Ladino",
                          lah: "Lahnda",
                          lam: "Lamba",
                          day: "Land Dayak languages",
                          lao: "Lao",
                          lat: "Latin",
                          lav: "Latvian",
                          ltz: "Luxembourgish",
                          lez: "Lezghian",
                          lim: "Limburgish",
                          lin: "Lingala",
                          lit: "Lithuanian",
                          jbo: "Lojban",
                          dsb: "Lower Sorbian",
                          loz: "Lozi",
                          lub: "Luba-Katanga",
                          lua: "Luba-Lulua",
                          lui: "Luiseno",
                          smj: "Lule Sami",
                          lun: "Lunda",
                          luo: "Luo (Kenya and Tanzania)",
                          lus: "Lushai",
                          mac: "Macedonian",
                          mkd: "Macedonian",
                          mad: "Madurese",
                          mag: "Magahi",
                          mai: "Maithili",
                          mak: "Makasar",
                          mlg: "Malagasy",
                          may: "Malay",
                          msa: "Malay",
                          mal: "Malayalam",
                          mlt: "Maltese",
                          mnc: "Manchu",
                          mdr: "Mandar",
                          man: "Mandingo",
                          mni: "Manipuri",
                          mno: "Manobo languages",
                          glv: "Manx",
                          mao: "Maori",
                          mri: "Maori",
                          arn: "Mapudungun",
                          mar: "Marathi",
                          chm: "Mari",
                          mah: "Marshallese",
                          mwr: "Marwari",
                          mas: "Masai",
                          myn: "Mayan languages",
                          men: "Mende",
                          mic: "Micmac",
                          min: "Minangkabau",
                          mwl: "Mirandese",
                          moh: "Mohawk",
                          mdf: "Moksha",
                          rum: "Romanian",
                          ron: "Romanian",
                          mkh: "Mon-Khmer languages",
                          lol: "Mongo",
                          mon: "Mongolian",
                          mos: "Mossi",
                          mul: "Multiple languages",
                          mun: "Munda languages",
                          nqo: "N'Ko",
                          nah: "Nahuatl languages",
                          nau: "Nauru",
                          nav: "Navajo",
                          nde: "North Ndebele",
                          nbl: "South Ndebele",
                          ndo: "Ndonga",
                          nap: "Neapolitan",
                          new: "Newari",
                          nep: "Nepali",
                          nia: "Nias",
                          nic: "Niger-Kordofanian languages",
                          ssa: "Nilo-Saharan languages",
                          niu: "Niuean",
                          zxx: "Not applicable",
                          nog: "Nogai",
                          non: "Norse, Old",
                          nai: "North American Indian languages",
                          frr: "Northern Frisian",
                          sme: "Northern Sami",
                          nso: "Sotho, Northern",
                          nor: "Norwegian",
                          nno: "Nynorsk, Norwegian",
                          nub: "Nubian languages",
                          iii: "Sichuan Yi",
                          nym: "Nyamwezi",
                          nyn: "Nyankole",
                          nyo: "Nyoro",
                          nzi: "Nzima",
                          oci: "Occitan (post 1500)",
                          pro: "Provençal, Old (to 1500)",
                          oji: "Ojibwa",
                          ori: "Oriya",
                          orm: "Oromo",
                          osa: "Osage",
                          oss: "Ossetic",
                          oto: "Otomian languages",
                          pal: "Pahlavi",
                          pau: "Palauan",
                          pli: "Pali",
                          pag: "Pangasinan",
                          pan: "Punjabi",
                          pap: "Papiamento",
                          paa: "Papuan languages",
                          pus: "Pushto",
                          per: "Persian",
                          fas: "Persian",
                          peo: "Persian, Old (ca.600-400 B.C.)",
                          phi: "Philippine languages",
                          phn: "Phoenician",
                          pon: "Pohnpeian",
                          pol: "Polish",
                          por: "Portuguese",
                          pra: "Prakrit languages",
                          que: "Quechua",
                          raj: "Rajasthani",
                          rap: "Rapanui",
                          "qaa-qtz": "Reserved for local use",
                          roa: "Romance languages",
                          roh: "Romansh",
                          rom: "Romany",
                          run: "Rundi",
                          rus: "Russian",
                          sal: "Salishan languages",
                          sam: "Samaritan Aramaic",
                          smi: "Sami languages",
                          smo: "Samoan",
                          sad: "Sandawe",
                          sag: "Sango",
                          san: "Sanskrit",
                          sat: "Santali",
                          srd: "Sardinian",
                          sas: "Sasak",
                          sco: "Scots",
                          sel: "Selkup",
                          sem: "Semitic languages",
                          srp: "Serbian",
                          srr: "Serer",
                          shn: "Shan",
                          sna: "Shona",
                          scn: "Sicilian",
                          sid: "Sidamo",
                          sgn: "Sign Languages",
                          bla: "Siksika",
                          snd: "Sindhi",
                          sin: "Sinhalese",
                          sit: "Sino-Tibetan languages",
                          sio: "Siouan languages",
                          sms: "Skolt Sami",
                          den: "Slave (Athapascan)",
                          sla: "Slavic languages",
                          slo: "Slovak",
                          slk: "Slovak",
                          slv: "Slovenian",
                          sog: "Sogdian",
                          som: "Somali",
                          son: "Songhai languages",
                          snk: "Soninke",
                          wen: "Sorbian languages",
                          sot: "Sotho, Southern",
                          sai: "South American Indian languages",
                          alt: "Southern Altai",
                          sma: "Southern Sami",
                          srn: "Sranan Tongo",
                          suk: "Sukuma",
                          sux: "Sumerian",
                          sun: "Sundanese",
                          sus: "Susu",
                          swa: "Swahili",
                          ssw: "Swati",
                          swe: "Swedish",
                          syr: "Syriac",
                          tgl: "Tagalog",
                          tah: "Tahitian",
                          tai: "Tai languages",
                          tgk: "Tajik",
                          tmh: "Tamashek",
                          tam: "Tamil",
                          tat: "Tatar",
                          tel: "Telugu",
                          ter: "Tereno",
                          tet: "Tetum",
                          tha: "Thai",
                          tib: "Tibetan",
                          bod: "Tibetan",
                          tig: "Tigre",
                          tir: "Tigrinya",
                          tem: "Timne",
                          tiv: "Tiv",
                          tli: "Tlingit",
                          tpi: "Tok Pisin",
                          tkl: "Tokelau",
                          tog: "Tonga (Nyasa)",
                          ton: "Tonga (Tonga Islands)",
                          tsi: "Tsimshian",
                          tso: "Tsonga",
                          tsn: "Tswana",
                          tum: "Tumbuka",
                          tup: "Tupi languages",
                          tur: "Turkish",
                          ota: "Turkish, Ottoman (1500-1928)",
                          tuk: "Turkmen",
                          tvl: "Tuvalu",
                          tyv: "Tuvinian",
                          twi: "Twi",
                          udm: "Udmurt",
                          uga: "Ugaritic",
                          uig: "Uyghur",
                          ukr: "Ukrainian",
                          umb: "Umbundu",
                          mis: "Uncoded languages",
                          und: "Undetermined",
                          hsb: "Upper Sorbian",
                          urd: "Urdu",
                          uzb: "Uzbek",
                          vai: "Vai",
                          ven: "Venda",
                          vie: "Vietnamese",
                          vol: "Volapük",
                          vot: "Votic",
                          wak: "Wakashan languages",
                          wln: "Walloon",
                          war: "Waray",
                          was: "Washo",
                          wel: "Welsh",
                          cym: "Welsh",
                          fry: "Western Frisian",
                          wal: "Wolaytta",
                          wol: "Wolof",
                          xho: "Xhosa",
                          sah: "Yakut",
                          yao: "Yao",
                          yap: "Yapese",
                          yid: "Yiddish",
                          yor: "Yoruba",
                          ypk: "Yupik languages",
                          znd: "Zande languages",
                          zap: "Zapotec",
                          zen: "Zenaga",
                          zul: "Zulu",
                          zun: "Zuni",
                        },
                        s = {
                          AF: "Afghanistan",
                          AX: "Åland Islands",
                          AL: "Albania",
                          DZ: "Algeria",
                          AS: "American Samoa",
                          AD: "Andorra",
                          AO: "Angola",
                          AI: "Anguilla",
                          AQ: "Antarctica",
                          AG: "Antigua and Barbuda",
                          AR: "Argentina",
                          AM: "Armenia",
                          AW: "Aruba",
                          AU: "Australia",
                          AT: "Austria",
                          AZ: "Azerbaijan",
                          BS: "Bahamas",
                          BH: "Bahrain",
                          BD: "Bangladesh",
                          BB: "Barbados",
                          BY: "Belarus",
                          BE: "Belgium",
                          BZ: "Belize",
                          BJ: "Benin",
                          BM: "Bermuda",
                          BT: "Bhutan",
                          BO: "Bolivia, Plurinational State of",
                          BQ: "Bonaire, Sint Eustatius and Saba",
                          BA: "Bosnia and Herzegovina",
                          BW: "Botswana",
                          BV: "Bouvet Island",
                          BR: "Brazil",
                          IO: "British Indian Ocean Territory",
                          BN: "Brunei Darussalam",
                          BG: "Bulgaria",
                          BF: "Burkina Faso",
                          BI: "Burundi",
                          KH: "Cambodia",
                          CM: "Cameroon",
                          CA: "Canada",
                          CV: "Cape Verde",
                          KY: "Cayman Islands",
                          CF: "Central African Republic",
                          TD: "Chad",
                          CL: "Chile",
                          CN: "China",
                          CX: "Christmas Island",
                          CC: "Cocos (Keeling) Islands",
                          CO: "Colombia",
                          KM: "Comoros",
                          CG: "Congo",
                          CD: "Congo, the Democratic Republic of the",
                          CK: "Cook Islands",
                          CR: "Costa Rica",
                          CI: "Côte d'Ivoire",
                          HR: "Croatia",
                          CU: "Cuba",
                          CW: "Curaçao",
                          CY: "Cyprus",
                          CZ: "Czech Republic",
                          DK: "Denmark",
                          DJ: "Djibouti",
                          DM: "Dominica",
                          DO: "Dominican Republic",
                          EC: "Ecuador",
                          EG: "Egypt",
                          SV: "El Salvador",
                          GQ: "Equatorial Guinea",
                          ER: "Eritrea",
                          EE: "Estonia",
                          ET: "Ethiopia",
                          FK: "Falkland Islands (Malvinas)",
                          FO: "Faroe Islands",
                          FJ: "Fiji",
                          FI: "Finland",
                          FR: "France",
                          GF: "French Guiana",
                          PF: "French Polynesia",
                          TF: "French Southern Territories",
                          GA: "Gabon",
                          GM: "Gambia",
                          GE: "Georgia",
                          DE: "Germany",
                          GH: "Ghana",
                          GI: "Gibraltar",
                          GR: "Greece",
                          GL: "Greenland",
                          GD: "Grenada",
                          GP: "Guadeloupe",
                          GU: "Guam",
                          GT: "Guatemala",
                          GG: "Guernsey",
                          GN: "Guinea",
                          GW: "Guinea-Bissau",
                          GY: "Guyana",
                          HT: "Haiti",
                          HM: "Heard Island and McDonald Islands",
                          VA: "Holy See (Vatican City State)",
                          HN: "Honduras",
                          HK: "Hong Kong",
                          HU: "Hungary",
                          IS: "Iceland",
                          IN: "India",
                          ID: "Indonesia",
                          IR: "Iran, Islamic Republic of",
                          IQ: "Iraq",
                          IE: "Ireland",
                          IM: "Isle of Man",
                          IL: "Israel",
                          IT: "Italy",
                          JM: "Jamaica",
                          JP: "Japan",
                          JE: "Jersey",
                          JO: "Jordan",
                          KZ: "Kazakhstan",
                          KE: "Kenya",
                          KI: "Kiribati",
                          KP: "Korea, Democratic People's Republic of",
                          KR: "Korea, Republic of",
                          KW: "Kuwait",
                          KG: "Kyrgyzstan",
                          LA: "Lao People's Democratic Republic",
                          LV: "Latvia",
                          LB: "Lebanon",
                          LS: "Lesotho",
                          LR: "Liberia",
                          LY: "Libya",
                          LI: "Liechtenstein",
                          LT: "Lithuania",
                          LU: "Luxembourg",
                          MO: "Macao",
                          MK: "Macedonia, the Former Yugoslav Republic of",
                          MG: "Madagascar",
                          MW: "Malawi",
                          MY: "Malaysia",
                          MV: "Maldives",
                          ML: "Mali",
                          MT: "Malta",
                          MH: "Marshall Islands",
                          MQ: "Martinique",
                          MR: "Mauritania",
                          MU: "Mauritius",
                          YT: "Mayotte",
                          MX: "Mexico",
                          FM: "Micronesia, Federated States of",
                          MD: "Moldova, Republic of",
                          MC: "Monaco",
                          MN: "Mongolia",
                          ME: "Montenegro",
                          MS: "Montserrat",
                          MA: "Morocco",
                          MZ: "Mozambique",
                          MM: "Myanmar",
                          NA: "Namibia",
                          NR: "Nauru",
                          NP: "Nepal",
                          NL: "Netherlands",
                          NC: "New Caledonia",
                          NZ: "New Zealand",
                          NI: "Nicaragua",
                          NE: "Niger",
                          NG: "Nigeria",
                          NU: "Niue",
                          NF: "Norfolk Island",
                          MP: "Northern Mariana Islands",
                          NO: "Norway",
                          OM: "Oman",
                          PK: "Pakistan",
                          PW: "Palau",
                          PS: "Palestine, State of",
                          PA: "Panama",
                          PG: "Papua New Guinea",
                          PY: "Paraguay",
                          PE: "Peru",
                          PH: "Philippines",
                          PN: "Pitcairn",
                          PL: "Poland",
                          PT: "Portugal",
                          PR: "Puerto Rico",
                          QA: "Qatar",
                          RE: "Réunion",
                          RO: "Romania",
                          RU: "Russian Federation",
                          RW: "Rwanda",
                          BL: "Saint Barthélemy",
                          SH: "Saint Helena, Ascension and Tristan da Cunha",
                          KN: "Saint Kitts and Nevis",
                          LC: "Saint Lucia",
                          MF: "Saint Martin (French part)",
                          PM: "Saint Pierre and Miquelon",
                          VC: "Saint Vincent and the Grenadines",
                          WS: "Samoa",
                          SM: "San Marino",
                          ST: "Sao Tome and Principe",
                          SA: "Saudi Arabia",
                          SN: "Senegal",
                          RS: "Serbia",
                          SC: "Seychelles",
                          SL: "Sierra Leone",
                          SG: "Singapore",
                          SX: "Sint Maarten (Dutch part)",
                          SK: "Slovakia",
                          SI: "Slovenia",
                          SB: "Solomon Islands",
                          SO: "Somalia",
                          ZA: "South Africa",
                          GS: "South Georgia and the South Sandwich Islands",
                          SS: "South Sudan",
                          ES: "Spain",
                          LK: "Sri Lanka",
                          SD: "Sudan",
                          SR: "Suriname",
                          SJ: "Svalbard and Jan Mayen",
                          SZ: "Swaziland",
                          SE: "Sweden",
                          CH: "Switzerland",
                          SY: "Syrian Arab Republic",
                          TW: "Taiwan, Province of China",
                          TJ: "Tajikistan",
                          TZ: "Tanzania, United Republic of",
                          TH: "Thailand",
                          TL: "Timor-Leste",
                          TG: "Togo",
                          TK: "Tokelau",
                          TO: "Tonga",
                          TT: "Trinidad and Tobago",
                          TN: "Tunisia",
                          TR: "Turkey",
                          TM: "Turkmenistan",
                          TC: "Turks and Caicos Islands",
                          TV: "Tuvalu",
                          UG: "Uganda",
                          UA: "Ukraine",
                          AE: "United Arab Emirates",
                          GB: "United Kingdom",
                          US: "United States",
                          UM: "United States Minor Outlying Islands",
                          UY: "Uruguay",
                          UZ: "Uzbekistan",
                          VU: "Vanuatu",
                          VE: "Venezuela, Bolivarian Republic of",
                          VN: "Viet Nam",
                          VG: "Virgin Islands, British",
                          VI: "Virgin Islands, U.S.",
                          WF: "Wallis and Futuna",
                          EH: "Western Sahara",
                          YE: "Yemen",
                          ZM: "Zambia",
                          ZW: "Zimbabwe",
                        };
                      return 1 < i.length
                        ? (n[i[0]] || o[i[0]] || i[0]) +
                            " (" +
                            (s[i[1]] || i[1]) +
                            ")"
                        : 0 < i.length
                        ? n[i[0]] || o[i[0]] || s[i[0]] || i[0]
                        : "";
                    })(e),
                    value: e,
                  });
                }),
                fish(".setting.mod-spellchecker-language").uShow();
            }
          }
        }),
        (e.prototype.display_desktop_specific_shortcuts = function () {
          this.app.env.is("mac") &&
            (fish(".desktop-app-history-control.mod-back").setAttr(
              "aria-label",
              "Back (⌘←)",
            ),
            fish(".desktop-app-history-control.mod-forward").setAttr(
              "aria-label",
              "Forward (⌘→)",
            ));
        }),
        (e.prototype.get_inbox_capture_electron_accelerator = function () {
          if (!this.get_is_pro()) return "";
          var e = this.app.shortcuts.get_shortcuts(na.APP_INBOX_CAPTURE);
          return (
            e && Array.isArray(e) && (e = e[0]),
            e ? e.to_electron_accelerator() : ""
          );
        }),
        (e.prototype.on_file_server_id_changed = function (t) {
          var i = this;
          this.app.with_current_app_document(function (e) {
            e.document === t &&
              i.url_manager.update_state(
                { document_server_id: t.get_server_id() },
                { replace: !0 },
              );
          });
        }),
        (e.prototype.is_offline = function () {
          return !this.app.network.get_is_connected();
        }),
        (e.prototype.history_back = function () {
          window.history.back(), this.ui.update_history_status();
        }),
        (e.prototype.history_forward = function () {
          window.history.forward(), this.ui.update_history_status();
        }),
        (e.prototype.get_upload_list = function () {
          this.upload_net.get(this.net_get_upload_success.bind(this));
        }),
        (e.prototype.net_get_upload_success = function (e) {
          var n = this,
            t = fish(".upload-list"),
            o = fish(".upload-list-contents"),
            i = fish(".upload-list-empty-state");
          o.empty(),
            t.toggleClass("empty", 0 === e.length),
            i.uToggle(0 === e.length),
            e.sort(function (e, t) {
              return t.ts - e.ts;
            }),
            each(e, function (t) {
              var i = Si(t.ts).fromNow();
              o.createEl("li", { cls: "upload-item" }, function (e) {
                e.createEl("div", { cls: "upload-item-name" }, function (e) {
                  e.createEl("a", {
                    text: t.original_name,
                    attr: { href: d + "/u/" + t.access_id, target: "_blank" },
                  });
                }),
                  e.createEl("div", {
                    cls: "upload-item-size",
                    text: Ft(t.file_size),
                  }),
                  e.createEl("div", { cls: "upload-item-ts", text: i }),
                  e.createEl(
                    "div",
                    { cls: "upload-item-delete" },
                    function (e) {
                      e.addEventListener("click", function () {
                        window.confirm(
                          'Are you sure you want to delete the file "' +
                            t.original_name +
                            '"?',
                        ) &&
                          n.upload_net.del(
                            t.access_id,
                            n.get_upload_list.bind(n),
                          );
                      });
                    },
                  );
              });
            });
        }),
        (e.prototype.bookmark_current_root_node = function () {
          var e = this.app.get_current_app_document(),
            t = e.get_document(),
            i = e.ui.current_root,
            n = this.get_url_state(t, i),
            o = this.get_bookmark_by_url_state(n);
          o
            ? (this.ui.confirm_delete_bookmark(o), this.ui.hide_context_menu())
            : this.bookmarkUrlState(n);
        }),
        (e.prototype.get_num_gcal_synced_documents = function () {
          var t = 0;
          return (
            this.userspace.traverse_tree_bfs(null, function (e) {
              e instanceof Vn &&
                e.get_user_data_object().get_sync_calendar() &&
                (t += 1);
            }),
            t
          );
        }),
        (e.prototype.enable_gcal_sync_for_all_documents = function () {
          this.set_gcal_sync_for_all_documents(!0);
        }),
        (e.prototype.disable_gcal_sync_for_all_documents = function () {
          this.set_gcal_sync_for_all_documents(!1);
        }),
        (e.prototype.set_gcal_sync_for_all_documents = function (t) {
          var i = this;
          this.userspace.traverse_tree_bfs(null, function (e) {
            e instanceof Vn && i.toggle_gcal_for_document(e, t);
          }),
            this.controller.request_sync();
        }),
        (e.prototype.toggle_gcal_for_document = function (e, t) {
          var i = e.get_user_data_object().clone();
          if (
            (i.set_sync_calendar(t),
            this.controller.edit_document_user_data(e, i.write()),
            t)
          ) {
            var n = this.app.find_app_document(e);
            n && n.controller.set_initial_calendar_sync();
          }
        }),
        (e.prototype.toggle_document_archived = function (e, t) {
          var i = e.get_user_data_object().clone();
          i.set_archived(t),
            this.controller.edit_document_user_data(e, i.write());
        }),
        (e.prototype.set_document_checked_user_data = function (e, t) {
          var i = e.get_user_data_object().clone();
          i.set_checked_items_visibility(t),
            this.controller.edit_document_user_data(e, i.write());
        }),
        (e.prototype.set_document_notes_user_data = function (e, t) {
          var i = e.get_user_data_object().clone();
          i.set_notes_visibility(t),
            this.controller.edit_document_user_data(e, i.write());
        }),
        (e.prototype.set_document_layout_user_data = function (e, t) {
          var i = e.get_user_data_object().clone();
          i.set_layout(t),
            this.controller.edit_document_user_data(e, i.write());
        }),
        (e.prototype.setDocumentTextDirectionUserData = function (e, t) {
          var i = e.get_user_data_object().clone();
          i.setTextDirection(t),
            this.controller.edit_document_user_data(e, i.write());
        }),
        (e.prototype.get_current_file = function () {
          return this.current_file;
        }),
        (e.prototype.set_current_file = function (e) {
          this.current_file = e;
        }),
        (e.prototype.get_file_being_shared = function () {
          return this.file_being_shared;
        }),
        (e.prototype.set_file_being_shared = function (e) {
          this.file_being_shared = e;
        }),
        (e.prototype.clear_file_being_shared = function () {
          this.file_being_shared = null;
        }),
        (e.prototype.set_inbox_location_pref = function (e, t) {
          var i = t.get_server_id();
          e.is_root() || (i += "/" + e.get_id()),
            this.preferences.set(Ps.INBOX_LOCATION, i);
        }),
        (e.prototype.parse_inbox_location = function (e) {
          var t = e.split("/");
          return { document_id: t[0], node_id: 1 < t.length ? t[1] : "" };
        }),
        (e.prototype.get_inbox_location = function (e) {
          var t = { document: null, node: null },
            i = this.parse_inbox_location(e),
            n = i.document_id,
            o = i.node_id,
            s = this.userspace.find_server_file(n),
            r = null;
          if (!s || !s.is_attached()) return t;
          this.app.document_manager.request_load_document(s);
          var a = s.get_node_collection();
          return a.is_available() &&
            (r = o ? a.find_node(o) : a.get_root()) &&
            r.is_attached_to_root()
            ? { document: s, node: r }
            : t;
        }),
        (e.prototype.set_inbox_node_from_location_string = function (e) {
          if (
            ((this.inbox_document_id = null),
            (this.inbox_node_id = null),
            "" !== e)
          ) {
            var t = e.split("/");
            if (
              ((this.inbox_document_id = t[0]),
              (this.inbox_node_id = t[1]),
              this.controller.userspace_remote_loaded)
            ) {
              var i = this.get_inbox_location(e),
                n = i.document,
                o = i.node;
              this.ui.display_inbox_destination_setting(n, o);
            }
            var s = this.userspace.find_server_file(this.inbox_document_id);
            if (s)
              this.app.find_or_add_app_document(s).controller.request_sync();
          }
        }),
        (e.prototype.create_new_node_in_inbox = function (e, t) {
          var i = this,
            n = this.preferences.get(Ps.INBOX_LOCATION);
          if (!n)
            return (
              this.ui.popup_message_manager.display_inbox_capture_empty_popup(),
              t(!1)
            );
          var o = this.parse_inbox_location(n).document_id,
            s = this.userspace.find_server_file(o);
          if (
            s &&
            !(l = this.app.find_or_add_app_document(s)).controller
              .document_remote_loaded
          )
            return void l.view.set_loaded_callback(function () {
              i.create_new_node_in_inbox(e, t);
            });
          var r = this.get_inbox_location(n),
            a = r.document,
            _ = r.node;
          if (!a || !_)
            return (
              this.ui.popup_message_manager.display_inbox_capture_failure_popup(),
              t(!1)
            );
          var c = "top" === this.preferences.get(Ps.INBOX_MOVE_POSITION);
          try {
            var l;
            if ((l = this.app.find_app_document(a)))
              return (
                l.view.receive_inbox(_, e, c),
                this.ui.popup_message_manager.display_inbox_capture_success_popup(),
                t(!0)
              );
            this.ui.popup_message_manager.display_inbox_capture_failure_popup();
          } catch (e) {
            track_error(e),
              this.ui.popup_message_manager.display_inbox_capture_failure_popup();
          }
          return t(!1);
        }),
        (e.prototype.redeem_free_14_day_pro = function () {
          var e = this;
          this.redeem_free_pro(
            function () {
              e.update_user_info({
                fetch_upgrades: !0,
                fetch_upload_quota: !0,
              });
            },
            function (e) {
              "Redeemed" !== e._code &&
                "NetError" !== e._code &&
                track_error(
                  new Error("Redeem free Pro failed"),
                  JSON.stringify(e),
                );
            },
          );
        }),
        (e.prototype.go_to_inbox_location = function () {
          if (this.inbox_document_id) {
            var e = this.userspace.find_server_file(this.inbox_document_id);
            this.url_manager.switch_document(
              e,
              this.inbox_node_id ? this.inbox_node_id : "",
              { animate: !1 },
            );
          } else
            this.ui.popup_message_manager.display_inbox_capture_empty_popup();
        }),
        e
      );
    })(To),
    du = (function () {
      function e() {
        var e = window.EDITOR || {};
        (this.anonymous_view = e.anonymous_view || !1),
          (this.demo_view = e.demo_view || !1),
          (this.load_document = e.load_document || ""),
          (this.session = DYNALIST.SESSION || {}),
          (this.db_user_id = this.session.identity || "anonymous"),
          (this.db_user_secret = "test"),
          (this.db_enable = !1);
      }
      return (
        (e.prototype.isAnonymousView = function () {
          return bool(this.anonymous_view);
        }),
        (e.prototype.is_demo_view = function () {
          return bool(this.demo_view);
        }),
        (e.prototype.get_autoload_document_server_id = function () {
          return this.load_document;
        }),
        (e.prototype.set_autoload_document_server_id = function (e) {
          this.load_document = e;
        }),
        (e.prototype.is_in_iframe = function () {
          try {
            return window.self !== window.top;
          } catch (e) {
            return !0;
          }
        }),
        (e.prototype.is_logged_in = function () {
          return bool(this.get_name() && this.get_email());
        }),
        (e.prototype.is_admin_user = function () {
          return this.session.is_admin;
        }),
        (e.prototype.get_name = function () {
          return this.session.name;
        }),
        (e.prototype.get_email = function () {
          return this.session.email;
        }),
        (e.prototype.get_identity = function () {
          return this.session.identity;
        }),
        e
      );
    })(),
    fu = (function (n) {
      function e(e) {
        var t = n.call(this, "App", null, null) || this;
        (t.config = new du()), (t.env = e), t.env.init(t.config.db_user_id);
        var i = ir.get_property("offline", !1);
        return (
          (t.env.is("desktop") || t.env.is("mobile")) && (i = !0),
          (t.db = new yo(
            t.env,
            t.config.db_user_secret,
            t.config.db_enable || i,
          )),
          (t.network = new Io()),
          (t.preferences = new Ws()),
          (t.scope = new zr()),
          (t.keymap = new Yr($(document), t.scope)),
          (t.shortcuts = t.submodule(new ta(t))),
          (t.userspace = t.submodule(new gu(t))),
          (t.document_manager = t.submodule(new Mo(t))),
          (t.app_documents = {}),
          (t.app_document = null),
          t.init(),
          t.load(),
          t
        );
      }
      return (
        nt(e, n),
        (e.prototype._pre_unload = function () {
          Object.each(this.app_documents, function (e) {
            e.unload();
          }),
            (this.app_documents = {}),
            (this.app_document = null);
        }),
        (e.prototype.set_logger = function (t) {
          n.prototype.set_logger.call(this, t),
            Object.each(this.app_documents, function (e) {
              e.set_logger(t);
            });
        }),
        (e.prototype.find_or_add_app_document = function (e) {
          var t = this.find_app_document(e);
          if (t) return t;
          var i = e.get_id();
          return (
            (t = new mu(this, e)),
            (this.app_documents[i] = t).set_module_parent(this),
            t.init(),
            t.load(),
            t
          );
        }),
        (e.prototype.find_app_document = function (e) {
          var t = e.get_id();
          return this.app_documents[t];
        }),
        (e.prototype.get_app_documents = function () {
          return this.app_documents;
        }),
        (e.prototype.remove_app_document = function (e) {
          var t = e.get_id(),
            i = this.app_documents[t];
          i && (delete this.app_documents[t], i.unload());
        }),
        (e.prototype.with_current_app_document = function (e) {
          var t = this.get_current_app_document();
          t && e(t);
        }),
        (e.prototype.get_current_app_document = function () {
          return this.app_document;
        }),
        (e.prototype.set_current_app_document = function (e) {
          (this.app_document = e),
            this.userspace.userspace.trigger("app_document_switch", e);
        }),
        (e.prototype.switch_document = function (e) {
          var t = null;
          e &&
            e instanceof Vn &&
            ((t = this.find_app_document(e)) ||
              (t = this.find_or_add_app_document(e))),
            this.switch_app_document(t);
        }),
        (e.prototype.switch_app_document = function (e) {
          var t = this.get_current_app_document();
          if (e !== t) {
            if (t) {
              t.unload_ui(), this.set_current_app_document(null);
              var i = t.document;
              this.userspace.view.get_file_item_state(i).set_ui_open(!1),
                this.document_manager.check_and_unload_archived_document(i);
            }
            if (e) {
              e.load_ui(), this.set_current_app_document(e);
              i = e.document;
              this.userspace.view.get_file_item_state(i).set_ui_open(!0),
                this.userspace.ui.hide_document_empty_state(),
                this.userspace.ui.update_bookmark_status(),
                e.ui.node_view.updateAllBacklinkCount();
            }
          }
          this.userspace.ui.close_mobile_slidebar(),
            e || this.userspace.ui.show_document_empty_state(),
            this.userspace.view.tag_pane_manager.request_update_tags(),
            this.userspace.view.request_save_preferences();
        }),
        e
      );
    })(To),
    gu = (function (i) {
      function e(e) {
        var t = i.call(this, "AppUserspace", e, null) || this;
        return (
          (t.userspace = new vo()),
          (t.controller = t.submodule(new Ho(e))),
          (t.view = t.submodule(new pu(e))),
          (t.ui = t.submodule(new zl(e))),
          t
        );
      }
      return (
        nt(e, i),
        (e.prototype.get_userspace = function () {
          return this.userspace;
        }),
        e
      );
    })(To),
    mu = (function (n) {
      function e(e, t) {
        var i = n.call(this, "AppDocument", e, null) || this;
        return (
          (i.document = t),
          (i.controller = i.submodule(new Lo(e, i))),
          (i.view = i.submodule(new dr(e, i))),
          (i.ui = null),
          i
        );
      }
      return (
        nt(e, n),
        (e.prototype.get_document = function () {
          return this.document;
        }),
        (e.prototype.load_ui = function () {
          this.ui ||
            ((this.ui = new Ec(this.app, this)),
            this.view.load_ui(this.ui),
            this.ui.init(),
            this.ui.load(),
            this.controller.set_focus(!0),
            this.controller.request_sync());
        }),
        (e.prototype.unload_ui = function () {
          this.ui &&
            (this.ui.unload(),
            this.view.unload_ui(),
            (this.ui = null),
            this.controller.set_focus(!1));
        }),
        (e.prototype._unload = function () {
          this.unload_ui();
        }),
        e
      );
    })(To);
  window.debug_modules = function () {
    console.log(DYNALIST.app.print_module(0));
  };
  var vu = (function () {
      function e(e) {
        var t = this;
        (this.platforms = {}),
          e &&
            Array.each(e, function (e) {
              t.set_platform(e);
            }),
          (this.env_data = {}),
          (this.ready = !1),
          (this.ready_callbacks = []);
      }
      return (
        (e.prototype.init = function (e) {
          (this.user_id = e), log("Persistence user id: " + e);
        }),
        (e.prototype.on_ready = function (e) {
          this.ready ? e() : this.ready_callbacks.push(e);
        }),
        (e.prototype.set_ready = function () {
          this.ready ||
            ((this.ready = !0),
            each(this.ready_callbacks, function (e) {
              e();
            }),
            (this.ready_callbacks = []));
        }),
        (e.prototype.is = function () {
          for (var e = [], t = 0; t < arguments.length; t++)
            e[t] = arguments[t];
          for (var i = 0; i < e.length; i++) {
            var n = e[i];
            if (!this.platforms[n]) return !1;
          }
          return !0;
        }),
        (e.prototype.set_platform = function (e) {
          this.platforms[e] = !0;
        }),
        (e.prototype.save_env_data = function (e) {}),
        (e.prototype.get_env_data = function (e, t) {
          return this.env_data[e] || t;
        }),
        (e.prototype.set_env_data = function (e, t, i) {
          this.set_env_data_nosave(e, t), this.save_env_data(i);
        }),
        (e.prototype.set_env_data_nosave = function (e, t) {
          null !== t ? (this.env_data[e] = t) : delete this.env_data[e];
        }),
        (e.prototype.get_env_data_session = function (e) {
          return this.get_env_data("session", e);
        }),
        (e.prototype.set_env_data_session = function (e, t) {
          this.set_env_data("session", e, t);
        }),
        (e.prototype.relaunch = function () {
          window.location.reload(!0);
        }),
        (e.prototype.can_go_back = function () {
          return !0;
        }),
        (e.prototype.can_go_forward = function () {
          return !0;
        }),
        (e.prototype.get_user_data = function (e, t) {
          t("Not Implemented");
        }),
        (e.prototype.set_user_data = function (e, t, i) {
          i("Not Implemented");
        }),
        (e.prototype.delete_user_data = function (e, t) {
          t("Not Implemented");
        }),
        (e.prototype.clear_user_data = function (e) {
          e("Not Implemented");
        }),
        e
      );
    })(),
    yu = {};
  Array.each(
    [
      "ain't",
      "aren't",
      "can't",
      "could've",
      "couldn't",
      "couldn't've",
      "didn't",
      "doesn't",
      "don't",
      "hadn't",
      "hadn't've",
      "hasn't",
      "haven't",
      "he'd",
      "he'd've",
      "he'll",
      "he's",
      "how'd",
      "how'll",
      "how's",
      "I'd",
      "I'd've",
      "I'll",
      "I'm",
      "I've",
      "isn't",
      "it'd",
      "it'd've",
      "it'll",
      "it's",
      "let's",
      "ma'am",
      "mightn't",
      "mightn't've",
      "might've",
      "mustn't",
      "must've",
      "needn't",
      "not've",
      "o'clock",
      "shan't",
      "she'd",
      "she'd've",
      "she'll",
      "she's",
      "should've",
      "shouldn't",
      "shouldn't've",
      "that'll",
      "that's",
      "there'd",
      "there'd've",
      "there're",
      "there's",
      "they'd",
      "they'd've",
      "they'll",
      "they're",
      "they've",
      "wasn't",
      "we'd",
      "we'd've",
      "we'll",
      "we're",
      "we've",
      "weren't",
      "what'll",
      "what're",
      "what's",
      "what've",
      "when's",
      "where'd",
      "where's",
      "where've",
      "who'd",
      "who'll",
      "who're",
      "who's",
      "who've",
      "why'll",
      "why're",
      "why's",
      "won't",
      "would've",
      "wouldn't",
      "wouldn't've",
      "y'all",
      "y'all'd've",
      "you'd",
      "you'd've",
      "you'll",
      "you're",
      "you've",
    ],
    function (e) {
      yu[e.replace(/'.*/, "")] = !0;
    },
  );
  var bu = (function () {
      function e(e, t) {
        (this.electron = e),
          (this.dict_path = t),
          (this.lastword = ""),
          (this.lru = new wu(500)),
          (this.hunspell = !1),
          (this.dictionary = {}),
          (this.lang = "");
        try {
          var i = require("@paulcbetts/spellchecker");
          i && ((this.s = i), (this.spellchecker = new i.Spellchecker()));
        } catch (e) {
          console.error("Failed to load spellchecker", e);
        }
      }
      return (
        (e.prototype.setLanguage = function (e) {
          if (this.spellchecker && e !== this.lang) {
            this.lang = e;
            var t = this.getAvailableLanguages();
            if (!t.contains(e) && !this.hunspell) {
              var i = e.split(/[-_]/g)[0];
              if (!i || !t.contains(i)) return;
              e = i;
            }
            this.electron.webFrame.setSpellCheckProvider(e, !0, {
              spellCheck: this.handleElectronSpellCheck.bind(this),
            }),
              this.hunspell || this.spellchecker.setDictionary(e),
              this.lru.removeAll();
          }
        }),
        (e.prototype.overrideMenu = function () {
          var r = this;
          if (this.spellchecker) {
            var a = this.electron.remote,
              _ = a.getCurrentWebContents(),
              c = a.Menu;
            this.electron.ipcRenderer.on("context-menu", function (e, t, i) {
              var n = t.misspelledWord;
              if (n && 1 <= n.length) {
                var o = r.spellchecker.getCorrectionsForMisspelling(n),
                  s = [];
                o && 0 < o.length
                  ? o.slice(0, 5).forEach(function (e) {
                      s.push({
                        label: e,
                        click: function () {
                          _.replaceMisspelling(e),
                            setTimeout(function () {
                              return _.insertText("");
                            }, 30);
                        },
                      });
                    })
                  : s.push({ label: "No suggestion", enabled: !1 }),
                  s.push({
                    label: "Add to Dictionary",
                    click: function () {
                      r.addToDictionary(n),
                        r.saveDictionary(),
                        r.lru.set(n, !1),
                        _.replaceMisspelling(n),
                        setTimeout(function () {
                          return _.insertText("");
                        }, 30);
                    },
                  }),
                  s.push({ type: "separator" }),
                  (i = s.concat(i));
              }
              c.buildFromTemplate(i).popup(a.getCurrentWindow());
            }),
              this.electron.ipcRenderer.sendSync("context-menu-override", !0);
          }
        }),
        (e.prototype.load = function () {
          if (this.spellchecker) {
            var e = require("fs");
            if (!e.existsSync(this.dict_path))
              try {
                e.mkdirSync(this.dict_path);
              } catch (e) {}
            0 === this.getAvailableLanguages().length &&
              ((this.hunspell = !0), this.loadDictionary("en-US")),
              this.setLanguage("en-US"),
              this.overrideMenu(),
              this.loadLocalDictionary(),
              log("Spellchecker successfully loaded.");
          }
        }),
        (e.prototype.loadDictionary = function (i) {
          var n = this;
          if (this.spellchecker) {
            var e = require("fs"),
              t = require("path"),
              o = i.replace("_", "-").toLowerCase(),
              s = t.join(this.dict_path, o + ".bdic");
            if (e.existsSync(s))
              return (
                console.log(
                  "Spellcheck: Loading dictionary " + i + " from " + s,
                ),
                void e.readFile(s, {}, function (e, t) {
                  e
                    ? console.error("Spellcheck: Failed to load dictionary", e)
                    : !t || t.length < 8192
                    ? n.downloadDictionary(i, s)
                    : (console.log("Spellcheck: Load dictionary success"),
                      n._loadDictionary(i, t));
                })
              );
            this.downloadDictionary(i, s);
          }
        }),
        (e.prototype.downloadDictionary = function (t, e) {
          var i = this,
            n = this.s.getURLForHunspellDictionary(t),
            o = require("fs");
          console.log(
            "Spellcheck: Downloading dictionary " +
              t +
              " from " +
              n +
              " to " +
              e,
          ),
            (function e(t, i, n) {
              var o = null;
              i.on("close", function () {
                n(o);
              }),
                (function i(e, n, o, s, r) {
                  var t = require("http");
                  var a = require("https");
                  var _ = require("url");
                  r || (r = 0);
                  if (10 < r)
                    return void n(new Error("Redirected too many times!"));
                  var c = _.parse(e);
                  var l = c.protocol.trim().toLowerCase().replace(/:$/, "");
                  var u = function (e) {
                    if (300 <= e.statusCode && e.statusCode < 400) {
                      var t = e.headers.location;
                      if (t) return i(t, n, o, s, r + 1);
                    }
                    200 === e.statusCode
                      ? (e.on("error", n), e.on("data", o), e.on("end", s))
                      : n(e.statusCode + " " + e.statusMessage);
                  };
                  var h;
                  "http" === l
                    ? (h = t.request(c, u))
                    : "https" === l && (h = a.request(c, u));
                  h.end();
                  h.on("error", n);
                })(
                  t,
                  function (e) {
                    (o = e), i.end();
                  },
                  function (e) {
                    i.write(e);
                  },
                  function () {
                    i.end();
                  },
                );
            })(
              n,
              o.createWriteStream(e, { flags: "w", encoding: "binary" }),
              function (e) {
                e
                  ? console.error(
                      "Spellcheck: Failed to download dictionary",
                      e,
                    )
                  : (console.log("Spellcheck: Download dictionary success"),
                    i.loadDictionary(t));
              },
            );
        }),
        (e.prototype._loadDictionary = function (e, t) {
          console.log(
            "Spellcheck: Initializing dictionary (size=" + t.length + ")",
          ),
            this.spellchecker.setDictionary(e, t),
            this.loadLocalDictionary();
        }),
        (e.prototype.loadLocalDictionary = function () {
          var i = this;
          if (this.spellchecker) {
            this.spellchecker.add("Dynalist");
            var e = require("fs"),
              t = require("path").join(this.dict_path, "local.dic");
            e.existsSync(t) &&
              (console.log("Spellcheck: Loading local dictionary"),
              e.readFile(t, "utf8", function (e, t) {
                e
                  ? console.error(
                      "Spellcheck: Failed to load local dictionary",
                      e,
                    )
                  : t &&
                    (Array.each(t.split("\n"), function (e) {
                      i.addToDictionary(e);
                    }),
                    i.lru.removeAll(),
                    i.saveDictionary(),
                    console.log(
                      "Spellcheck: Loading local dictionary success",
                    ));
              }));
          }
        }),
        (e.prototype.addToDictionary = function (e) {
          this.spellchecker &&
            ((this.dictionary[e] = !0), this.spellchecker.add(e));
        }),
        (e.prototype.saveDictionary = function () {
          if (this.spellchecker) {
            var e = Object.keys(this.dictionary).join("\n"),
              t = require("fs"),
              i = require("path").join(this.dict_path, "local.dic");
            t.writeFile(i, e, function (e) {
              e
                ? console.error(
                    "Spellcheck: Failed to save local dictionary",
                    e,
                  )
                : console.log("Spellcheck: Saving local dictionary success");
            });
          }
        }),
        (e.prototype.getAvailableLanguages = function () {
          return this.spellchecker
            ? this.spellchecker.getAvailableDictionaries()
            : [];
        }),
        (e.prototype.handleElectronSpellCheck = function (e) {
          return !this.isMisspelled(e);
        }),
        (e.prototype.isMisspelled = function (e) {
          var t = this.lru.get(e);
          return (
            void 0 !== t || ((t = this._isMisspelled(e)), this.lru.set(e, t)), t
          );
        }),
        (e.prototype._isMisspelled = function (e) {
          if (yu[e.toLocaleLowerCase()]) return !1;
          if (this.hunspell) {
            var t = this.spellchecker.checkSpelling(e);
            return (
              !(t.length < 1) &&
              (0 !== t[0].start ||
                this.spellchecker.isMisspelled(e.toLocaleLowerCase()))
            );
          }
          return this.spellchecker.isMisspelled(e);
        }),
        e
      );
    })(),
    wu = (function () {
      function e(e) {
        (this.size = 0),
          (this.limit = e),
          (this.oldest = this.newest = void 0),
          (this._keymap = {});
      }
      return (
        (e.prototype._markEntryAsUsed = function (e) {
          e !== this.newest &&
            (e.newer &&
              (e === this.oldest && (this.oldest = e.newer),
              (e.newer.older = e.older)),
            e.older && (e.older.newer = e.newer),
            (e.newer = void 0),
            (e.older = this.newest),
            this.newest && (this.newest.newer = e),
            (this.newest = e));
        }),
        (e.prototype.put = function (e, t) {
          var i = this._keymap[e];
          return i
            ? ((i.value = t), void this._markEntryAsUsed(i))
            : ((this._keymap[e] = i =
                { key: e, value: t, older: void 0, newer: void 0 }),
              this.newest
                ? ((this.newest.newer = i).older = this.newest)
                : (this.oldest = i),
              (this.newest = i),
              this.size++,
              this.size > this.limit ? this.shift() : void 0);
        }),
        (e.prototype.shift = function () {
          var e = this.oldest;
          return (
            e &&
              (this.oldest.newer
                ? ((this.oldest = this.oldest.newer),
                  (this.oldest.older = void 0))
                : ((this.oldest = void 0), (this.newest = void 0)),
              (e.newer = e.older = void 0),
              delete this._keymap[e.key],
              this.size--),
            e
          );
        }),
        (e.prototype.get = function (e, t) {
          var i = this._keymap[e];
          if (void 0 !== i) return this._markEntryAsUsed(i), t ? i : i.value;
        }),
        (e.prototype.find = function (e) {
          return this._keymap[e];
        }),
        (e.prototype.set = function (e, t) {
          var i,
            n = this.get(e, !0);
          return (
            n
              ? ((i = n.value), (n.value = t))
              : (i = this.put(e, t)) && (i = i.value),
            i
          );
        }),
        (e.prototype.remove = function (e) {
          var t = this._keymap[e];
          if (t)
            return (
              delete this._keymap[t.key],
              t.newer && t.older
                ? ((t.older.newer = t.newer), (t.newer.older = t.older))
                : t.newer
                ? ((t.newer.older = void 0), (this.oldest = t.newer))
                : t.older
                ? ((t.older.newer = void 0), (this.newest = t.older))
                : (this.oldest = this.newest = void 0),
              this.size--,
              t.value
            );
        }),
        (e.prototype.removeAll = function () {
          (this.oldest = this.newest = void 0),
            (this.size = 0),
            (this._keymap = {});
        }),
        (e.prototype.keys = function () {
          var e = [];
          for (var t in this._keymap) e.push(t);
          return e;
        }),
        (e.prototype.forEach = function (e, t, i) {
          var n;
          if (
            (!0 === t
              ? ((i = !0), (t = void 0))
              : "object" != typeof t && (t = this),
            i)
          )
            for (n = this.newest; n; )
              e.call(t, n.key, n.value, this), (n = n.older);
          else
            for (n = this.oldest; n; )
              e.call(t, n.key, n.value, this), (n = n.newer);
        }),
        (e.prototype.toJSON = function () {
          for (var e = new Array(this.size), t = 0, i = this.oldest; i; )
            (e[t++] = { key: i.key, value: i.value }), (i = i.newer);
          return e;
        }),
        (e.prototype.toString = function () {
          for (var e = "", t = this.oldest; t; )
            (e += String(t.key) + ":" + t.value), (t = t.newer) && (e += " < ");
          return e;
        }),
        e
      );
    })();
  var ku = function () {},
    Eu = (function (s) {
      function e() {
        var e =
          s.call(this, [
            "desktop",
            (function e() {
              var t = { win32: "win", darwin: "mac", linux: "linux" }[
                window.process.platform
              ];
              return t || (t = window.process.platform), t;
            })(),
          ]) || this;
        (e.spellchecker = null),
          (e.fs = require("fs")),
          (e.path = require("path")),
          (e.electron = require("electron"));
        try {
          var t = e.electron.remote.app.getAppPath(),
            i = e.path.resolve(t, "node_modules");
          e.fs.existsSync(i)
            ? window.module.paths.unshift(i)
            : log("Spellchecker: node_modules not found!");
        } catch (e) {
          console.error(e);
        }
        e.data_path = e.electron.ipcRenderer.sendSync("appdata");
        var n = (e.web_contents = e.electron.remote.getCurrentWebContents());
        (e.browser_window = e.electron.remote.getCurrentWindow()),
          (e.env_data_path = e.path.join(e.data_path, "env.json"));
        var o = e.path.join(e.data_path, "dictionaries");
        if (parseInt(process.versions.electron.split(".")[0]) <= 8) {
          e.spellchecker = new bu(e.electron, o);
          try {
            e.spellchecker.load();
          } catch (e) {
            console.error("Spellchecker: failed to load", e);
          }
        } else
          e.spellchecker = {
            setLanguage: function (e) {
              e || (e = this.getAvailableLanguages()[0]),
                e && (e = e.replace("_", "-"));
              try {
                n.session.setSpellCheckerLanguages([e]);
              } catch (e) {
                console.error(e);
              }
            },
            getAvailableLanguages: function () {
              try {
                return n.session.getSpellCheckerLanguages();
              } catch (e) {
                return console.error(e), [];
              }
            },
          };
        return (
          e.load_env_data(),
          e.set_ready(),
          log("Desktop environment initialized. Data folder: ", e.data_path),
          e
        );
      }
      return (
        nt(e, s),
        (e.prototype.get_spellchecker = function () {
          return this.spellchecker;
        }),
        (e.prototype.load_env_data = function () {
          try {
            this.env_data = JSON.parse(
              this._read_file_sync(this.env_data_path) || {},
            );
          } catch (e) {
            "ENOENT" !== e.code && console.error(e);
          }
          return {};
        }),
        (e.prototype.save_env_data = function (e) {
          this._write_file_sync(
            this.env_data_path,
            JSON.stringify(this.env_data),
          ),
            e && e();
        }),
        (e.prototype.relaunch = function () {
          this.electron.ipcRenderer.sendSync("relaunch");
        }),
        (e.prototype.get_updater_status = function () {
          return this.electron.ipcRenderer.sendSync("updater");
        }),
        (e.prototype.set_title = function (e) {
          return this.browser_window.setTitle(e);
        }),
        (e.prototype.can_go_back = function () {
          try {
            return this.web_contents.canGoBack();
          } catch (e) {
            return !0;
          }
        }),
        (e.prototype.can_go_forward = function () {
          try {
            return this.web_contents.canGoForward();
          } catch (e) {
            return !0;
          }
        }),
        (e.prototype.get_user_data = function (e, t) {
          return this._read_file(this._get_user_data_path(e), t);
        }),
        (e.prototype.set_user_data = function (e, t, i) {
          return this._write_file(this._get_user_data_path(e), t, i);
        }),
        (e.prototype.delete_user_data = function (e, t) {
          return this._delete_file(this._get_user_data_path(e), t);
        }),
        (e.prototype.clear_user_data = function (e) {
          var t = this,
            i = this._get_user_data_dir(),
            n = this.fs.readdirSync(i);
          each(n, function (e) {
            t._delete_file_sync(t.path.join(i, e));
          });
        }),
        (e.prototype.register_global_shortcut = function (e) {
          this._global_shortcut(e, !0);
        }),
        (e.prototype.unregister_global_shortcut = function (e) {
          this._global_shortcut(e, !1);
        }),
        (e.prototype.on_global_shortcut = function (i) {
          this.electron.ipcRenderer.on(
            "async-global-shortcut-trigger",
            function (e, t) {
              i(t);
            },
          );
        }),
        (e.prototype._global_shortcut = function (e, t) {
          this.electron.ipcRenderer.send("async-global-shortcut", e, t);
        }),
        (e.prototype._read_file_sync = function (e) {
          return this.fs.readFileSync(e, "utf8");
        }),
        (e.prototype._read_file = function (e, t) {
          return this.fs.readFile(e, "utf8", t || ku);
        }),
        (e.prototype._write_file_sync = function (e, t) {
          return (
            this._mkdir(this.path.dirname(e)),
            this.fs.writeFileSync(e, t, "utf8")
          );
        }),
        (e.prototype._write_file = function (e, t, i) {
          try {
            this._mkdir(this.path.dirname(e));
          } catch (e) {
            return i(e);
          }
          return this.fs.writeFile(e, t, "utf8", i || ku);
        }),
        (e.prototype._delete_file_sync = function (e) {
          return this.fs.unlinkSync(e);
        }),
        (e.prototype._delete_file = function (e, t) {
          return this.fs.unlink(e, t || ku);
        }),
        (e.prototype.get_data_dir = function () {
          return this.data_path;
        }),
        (e.prototype._get_user_data_dir = function () {
          return this.path.join(this.data_path, "data", this.user_id);
        }),
        (e.prototype._get_user_data_path = function (e) {
          return this.path.join(this._get_user_data_dir(), e + ".data");
        }),
        (e.prototype._mkdir = function (e) {
          var i = this.fs,
            n = this.path;
          try {
            i.mkdirSync(e);
          } catch (t) {
            switch (t.code) {
              case "ENOENT":
                this._mkdir(n.dirname(e)), this._mkdir(e);
                break;
              default:
                var o;
                try {
                  o = i.statSync(e);
                } catch (e) {
                  throw t;
                }
                if (!o.isDirectory()) throw t;
            }
          }
        }),
        (e.prototype._clear_cache = function () {
          this.web_contents.session.clearCache(function () {});
        }),
        (e.prototype._force_gc = function () {
          try {
            gc();
          } catch (e) {}
        }),
        (e.test = function () {
          try {
            var e = require("electron");
            return bool(e);
          } catch (e) {}
          return !1;
        }),
        e
      );
    })(vu),
    Cu = ".data",
    Tu = {
      unknown: "Unknown",
      ethernet: "Ethernet",
      wifi: "WiFi",
      "2g": "Cell 2G",
      "3g": "Cell 3G",
      "4g": "Cell 4G",
      cellular: "Cell generic",
      none: "No connection",
    },
    Ou = (function (t) {
      function e() {
        var e = t.call(this, ["mobile"]) || this;
        return (
          (e.file_action_queue = []),
          (e.file_action_running = !1),
          (e.intent_queue = []),
          (e.intent_callback = null),
          (e.fs_promise = null),
          document.addEventListener("deviceready", e.device_ready.bind(e)),
          e
        );
      }
      return (
        nt(e, t),
        (e.prototype.device_ready = function () {
          var t = this;
          try {
            (window.plugins = window.plugins || {}),
              (window.open = function (e, t, i) {
                return window.cordova.InAppBrowser.open(e, "_system", i);
              }),
              unsafe(function () {
                if (window.device) {
                  var e = window.device.platform.toLowerCase();
                  t.set_platform(e);
                }
              }),
              unsafe(function () {
                window.MobileAccessibility &&
                  window.MobileAccessibility.usePreferredTextZoom(!1);
              }),
              unsafe(function () {
                window.plugins.intentShim &&
                  (window.plugins.intentShim.getIntent(
                    t.push_android_intent.bind(t),
                    console.error.bind(console),
                  ),
                  window.plugins.intentShim.onIntent(
                    t.push_android_intent.bind(t),
                  ));
              }),
              unsafe(function () {
                window.cordova.openwith &&
                  (window.cordova.openwith.init(
                    function () {},
                    console.error.bind(console),
                  ),
                  window.cordova.openwith.setHandler(t.push_ios_share.bind(t)));
              });
          } catch (e) {
            console.error(e);
          }
          this.load_env_data().finally(function () {
            log("Mobile environment initialized."), t.set_ready();
          });
        }),
        (e.prototype.get_device_network = function () {
          var e = navigator.connection.type;
          return Tu[e] || "Unknown";
        }),
        (e.prototype.is_using_cell_network = function () {
          return this.get_device_network().startsWith("Cell");
        }),
        (e.prototype.push_android_intent = function (e) {
          if (
            (console.log("Received android intent", e),
            e.action === window.plugins.intentShim.ACTION_SEND)
          ) {
            var t = e.extras,
              i = t[window.plugins.intentShim.EXTRA_SUBJECT],
              n = t[window.plugins.intentShim.EXTRA_TEXT];
            i &&
              n.match(/^[a-zA-Z0-9.+\-]+:/g) &&
              (n = "[" + i + "](" + n + ")"),
              this.push_intent({ type: "text", text: n });
          }
        }),
        (e.prototype.push_ios_share = function (e) {
          console.log("Received ios share", e);
          var t = e.items[0],
            i = (t.text || "").trim();
          if ("text/url" === t.type || "public.url" === t.type) {
            var n = atob(t.base64);
            i = i ? "[" + i + "](" + n + ")" : n;
          }
          this.push_intent({ type: "text", text: i });
        }),
        (e.prototype.push_intent = function (e) {
          this.intent_queue.push(e), this.consume_intents();
        }),
        (e.prototype.consume_intents = function () {
          if (this.intent_callback)
            for (; 0 < this.intent_queue.length; )
              this.intent_callback(this.intent_queue.shift());
        }),
        (e.prototype.register_intent_handler = function (e) {
          (this.intent_callback = e), this.consume_intents();
        }),
        (e.prototype.unregister_intent_handler = function () {
          this.intent_callback = null;
        }),
        (e.prototype.update_theme = function (e) {
          this.is("android")
            ? (window.StatusBar.styleLightContent(),
              window.StatusBar.backgroundColorByHexString("black"),
              window.NavigationBar &&
                window.NavigationBar.backgroundColorByName("black", !1))
            : ((window.matchMedia &&
                window.matchMedia("(prefers-color-scheme:dark)")) ||
              "dark" === e
                ? (window.StatusBar.styleLightContent(),
                  window.StatusBar.backgroundColorByHexString("#272727"))
                : (window.StatusBar.styleDefault(),
                  window.StatusBar.backgroundColorByHexString("#FCFCFC")),
              window.Keyboard &&
                window.Keyboard.setTheme &&
                window.Keyboard.setTheme(e));
        }),
        (e.prototype._push_and_run_file_action = function (e) {
          var t = new Zousan(),
            i = { callback: e, promise: t };
          return this.file_action_queue.push(i), this._run_file_action(), t;
        }),
        (e.prototype._run_file_action = function () {
          var e = this;
          if (!this.file_action_running && 0 < this.file_action_queue.length) {
            var t = this.file_action_queue.shift();
            (this.file_action_running = !0),
              t
                .callback()
                .then(t.promise.resolve, t.promise.reject)
                .finally(function () {
                  (e.file_action_running = !1), e._run_file_action();
                });
          }
        }),
        (e.prototype.load_env_data = function () {
          var t = this;
          return this._get_env_file_entry(!1)
            .then(function (e) {
              return t._read_file(e);
            })
            .then(function (e) {
              t.env_data = JSON.parse(e);
            })
            .catch(function (e) {
              e.code !== FileError.NOT_FOUND_ERR &&
                console.error("Failed to load env data", e);
            });
        }),
        (e.prototype.save_env_data = function (e) {
          var t = this;
          return this._push_and_run_file_action(function () {
            return t._save_env_data(e);
          });
        }),
        (e.prototype._save_env_data = function (e) {
          var t = this;
          return this._get_env_file_entry(!0)
            .then(function (e) {
              return t._write_file(e, JSON.stringify(t.env_data));
            })
            .catch(function (e) {
              console.error("Failed to save env data", e);
            })
            .then(function () {
              e && e();
            });
        }),
        (e.prototype.get_user_data = function (e, t) {
          var i = this;
          return this._push_and_run_file_action(function () {
            return i
              ._get_fs_file("data/" + i.user_id + "/" + e + Cu, !1)
              .then(function (e) {
                return i._read_file(e);
              })
              .then(Zousan.cb_resolve(t), Zousan.cb_reject(t));
          });
        }),
        (e.prototype.set_user_data = function (e, t, i) {
          var n = this;
          return this._push_and_run_file_action(function () {
            return n._set_user_data(e, t, i);
          });
        }),
        (e.prototype._set_user_data = function (e, t, i) {
          var n = this;
          return this._get_fs_file("data/" + this.user_id + "/" + e + Cu, !1)
            .catch(function () {
              return n._get_user_file_entry(e, !0);
            })
            .then(function (e) {
              return n._write_file(e, t);
            })
            .then(Zousan.cb_resolve(i), Zousan.cb_reject(i));
        }),
        (e.prototype.delete_user_data = function (e, t) {
          return this.set_user_data(e, "", t);
        }),
        (e.prototype.clear_user_data = function (e) {
          var t = this;
          return this._get_user_dir_entry(!1)
            .then(function (e) {
              return t._delete_dir(e);
            })
            .then(Zousan.cb_resolve(e), Zousan.cb_reject(e));
        }),
        (e.prototype._get_data_dir_entry = function (t) {
          var i = this;
          return this._get_fs().then(function (e) {
            return i._get_dir_entry(e.root, "data", { create: t });
          });
        }),
        (e.prototype._get_user_dir_entry = function (t) {
          var i = this;
          return this._get_data_dir_entry(t).then(function (e) {
            return i._get_dir_entry(e, i.user_id, { create: t });
          });
        }),
        (e.prototype._get_env_file_entry = function (t) {
          var i = this;
          return this._get_data_dir_entry(t).then(function (e) {
            return i._get_file_entry(e, "env" + Cu, {
              create: t,
              exclusive: !1,
            });
          });
        }),
        (e.prototype._get_user_file_entry = function (t, i) {
          var n = this;
          return this._get_user_dir_entry(i).then(function (e) {
            return n._get_file_entry(e, t + Cu, { create: i, exclusive: !1 });
          });
        }),
        (e.prototype._get_fs = function () {
          return (
            this.fs_promise ||
              (this.fs_promise = new Zousan(function (e, t) {
                window.requestFileSystem(
                  window.LocalFileSystem.PERSISTENT,
                  0,
                  e,
                  t,
                );
              })),
            this.fs_promise
          );
        }),
        (e.prototype._get_fs_file = function (t, i) {
          var n = this;
          return this._get_fs().then(function (e) {
            return n._get_file_entry(e.root, t, { create: i, exclusive: !1 });
          });
        }),
        (e.prototype._get_dir_entry = function (i, n, o) {
          return new Zousan(function (e, t) {
            i.getDirectory(n, o, e, t);
          });
        }),
        (e.prototype._get_file_entry = function (i, n, o) {
          return new Zousan(function (e, t) {
            i.getFile(n, o, e, t);
          });
        }),
        (e.prototype._read_file = function (e) {
          return new Zousan(function (i, n) {
            e.file(function (e) {
              var t = new FileReader();
              (t.onload = function (e) {
                return i(e.target.result);
              }),
                (t.onerror = function (e) {
                  return n(e);
                }),
                t.readAsText(e);
            }, n);
          });
        }),
        (e.prototype._write_file = function (e, n) {
          return new Zousan(function (t, i) {
            e.createWriter(function (e) {
              (e.onwriteend = t), (e.onerror = i), e.write(n);
            }, i);
          });
        }),
        (e.prototype._delete_dir = function (i) {
          return new Zousan(function (e, t) {
            i.removeRecursively(e, t);
          });
        }),
        (e.prototype.attempt_googleplus_login = function (o, s, r) {
          var a = this;
          this.on_ready(function () {
            var e = window.plugins.googleplus,
              t = function (e) {
                try {
                  a.fix_ios_statusbar();
                } catch (e) {}
                s(e);
              },
              i = function (e) {
                try {
                  a.fix_ios_statusbar();
                } catch (e) {}
                r(e);
              },
              n = function () {
                e.login({ webClientId: o, offline: !0 }, t, i);
              };
            e.logout(n, n);
          });
        }),
        (e.prototype.attempt_apple_login = function (e, t) {
          this.on_ready(function () {
            window.cordova.plugins.SignInWithApple.signin(
              { requestedScopes: [0, 1] },
              e,
              function (e) {
                t(e.localizedDescription || "An unknown error occurred");
              },
            );
          });
        }),
        (e.prototype.fix_ios_statusbar = function () {
          this.on_ready(function () {
            window.StatusBar.overlaysWebView(!0),
              window.StatusBar.overlaysWebView(!1);
          });
        }),
        (e.test = function () {
          return bool(window.cordova);
        }),
        e
      );
    })(vu),
    xu = (function (t) {
      function e() {
        var e = t.call(this, ["web"]) || this;
        return (
          e.load_env_data(),
          e.set_ready(),
          log("Web environment initialized."),
          e
        );
      }
      return (
        nt(e, t),
        (e.prototype.init = function (e) {
          t.prototype.init.call(this, e);
          try {
            Ai.config({ name: "dynalist-" + e });
          } catch (e) {
            console.error(e);
          }
        }),
        (e.prototype.load_env_data = function () {
          this.env_data = ir.get_property("env", {});
        }),
        (e.prototype.save_env_data = function (e) {
          ir.set_property("env", this.env_data), e && e();
        }),
        (e.prototype.get_user_data = function (e, i) {
          Ai.getItem(e, function (e, t) {
            if (e) return i(e);
            try {
              return t && (t = Fe.decompressFromUTF16(t)), i(null, t);
            } catch (e) {
              return i(e);
            }
          });
        }),
        (e.prototype.set_user_data = function (e, t, i) {
          return t
            ? ((t = Fe.compressToUTF16(t)), Ai.setItem(e, t, i))
            : Ai.removeItem(e, i);
        }),
        (e.prototype.delete_user_data = function (e, t) {
          return Ai.removeItem(e, t);
        }),
        (e.prototype.clear_user_data = function (e) {
          return Ai.clear(e);
        }),
        (e.test = function () {
          return !0;
        }),
        e
      );
    })(vu);
  var Au = (function (o) {
      function e(e, t, i) {
        var n = o.call(this, e) || this;
        return (
          (n.login_source = i),
          (n.success_callback = t),
          (n.confirm_button_el = n.container.find("#confirm-btn")),
          n.confirm_button_el.on("click", function () {
            n.login();
          }),
          n
        );
      }
      return (
        nt(e, o),
        (e.prototype.request_login = function () {
          var i = this;
          this.working ||
            this.api_login_request_create(this.login_source).then(function (e) {
              if (e.session && e.session.signed_in)
                i.success_callback(e.session);
              else {
                (i.token = e.token), (i.password = e.password);
                var t =
                  d +
                  "/loginrequest/authorize?token=" +
                  encodeURIComponent(i.token);
                window.open(t, "_blank");
              }
            });
        }),
        (e.prototype.login = function () {
          var t = this;
          this.working ||
            this.api_login_request_login(this.token, this.password).then(
              function (e) {
                t.success_callback(e.session);
              },
            );
        }),
        e
      );
    })(jl),
    Du = (function (o) {
      function e(e, t) {
        var i = o.call(this, e) || this;
        (i.success_callback = t),
          (i.$email_el = i.container.find(".EmailField")),
          (i.$password_el = i.container.find(".PasswordField")),
          (i.$login_btn_el = i.container.find(".js-login")),
          i.$login_btn_el.on("click", function (e) {
            e.preventDefault(), i.attempt_login();
          }),
          i.$password_el.on("keydown", function (e) {
            e.keyCode === l.ENTER && i.attempt_login();
          });
        var n = DYNALIST.AUTOFILL_EMAIL;
        return (
          n && i.$email_el.val(n),
          i.$email_el.val() ? i.$password_el.focus() : i.$email_el.focus(),
          i
        );
      }
      return (
        nt(e, o),
        (e.prototype.attempt_login = function () {
          var t = this;
          if (!this.working) {
            var e = this.$email_el.val(),
              i = this.$password_el.val(),
              n = this.try_get_captcha();
            this.api_login(e, i, n).then(
              function (e) {
                t.success_callback
                  ? t.success_callback(e.session)
                  : (t.start_working(), setTimeout(yi, 200));
              },
              function (e) {
                return t.show_response_error_message(e, "Failed to login.");
              },
            );
          }
        }),
        e
      );
    })(jl),
    Su = (function (o) {
      function e(e, t, i) {
        var n = o.call(this, e) || this;
        return (
          (n.link = n.container.find(".js-signup")),
          (n.success_callback = t),
          (n.document_id_to_copy = i),
          (n.name_field = n.container.find(".NameField")),
          (n.email_field = n.container.find(".EmailField")),
          (n.password_field = n.container.find(".PasswordField")),
          n.link.on("click", function (e) {
            e.preventDefault(), n.attempt_signup();
          }),
          n.password_field.on("keydown", function (e) {
            e.keyCode === l.ENTER && n.attempt_signup();
          }),
          n
        );
      }
      return (
        nt(e, o),
        (e.prototype.attempt_signup = function () {
          var e = this;
          if (!this.working) {
            var t = this.name_field.val(),
              i = this.email_field.val(),
              n = this.password_field.val(),
              o = this.try_get_captcha();
            this.api_signup(t, i, n, this.document_id_to_copy, o).then(
              function () {
                e.container
                  .find(
                    ".signin-btn-container, .login-method-divider, .NameField, .EmailField, .PasswordField, .CaptchaField, .SignupLegalDisclaimer",
                  )
                  .hide(),
                  e.show_success_message(
                    "You're in! We've sent an account activation email to " +
                      i +
                      ".",
                  ),
                  e.link.hide(),
                  e.success_callback && e.success_callback();
              },
            );
          }
        }),
        e
      );
    })(jl),
    Nu = "gLogin",
    Iu = (function () {
      function e() {
        var e = this;
        (this.google_loaded = wi()),
          (this.google_error = null),
          this.initialize(),
          window[Nu].push(function () {
            e.init();
          });
      }
      return (
        (e.prototype.initialize = function () {
          return (
            !!window[Nu] ||
            ((window[Nu] = wi()),
            bi("https://apis.google.com/js/api:client.js?onload=" + Nu),
            !1)
          );
        }),
        (e.prototype.init = function () {
          var t = this;
          gapi.load("auth2", function () {
            gapi.auth2
              .init({
                client_id: DYNALIST.GOOGLE_LOGIN_PUBLICKEY,
                cookiepolicy: "single_host_origin",
              })
              .then(
                function () {
                  t.google_loaded();
                },
                function (e) {
                  "idpiframe_initialization_failed" === e.error &&
                  e.details.match(/Access is denied/)
                    ? (t.google_error =
                        'Google sign-in doesn\'t work if you turn on "Block third Party cookies and site data". The setting can be found in Settings > Show advanced settings > Privacy > Content settings.')
                    : ((t.google_error =
                        "Google sign-in doesn't seem to be working. Error: " +
                        e.error),
                      console.error(e)),
                    t.google_loaded();
                },
              );
          });
        }),
        (e.prototype.on_ready = function (e) {
          this.google_loaded.push(e);
        }),
        (e.prototype.get_error = function () {
          return this.google_error;
        }),
        (e.prototype.login = function (t, e) {
          gapi.auth2
            .getAuthInstance()
            .signIn({ scope: "profile email", prompt: "select_account" })
            .then(function (e) {
              t(e);
            }, e);
        }),
        e
      );
    })(),
    Lu = (function (i) {
      function e(e) {
        var t = i.call(this, e) || this;
        return (
          (t.$button = t.container.find(".js-google-signin")),
          t.$button.on("click", function () {
            t.attempt_google_login();
          }),
          t
        );
      }
      return nt(e, i), e;
    })(jl),
    Mu = (function (i) {
      function e(e) {
        var t = i.call(this, e) || this;
        return (t.google_login = new Iu()), t;
      }
      return (
        nt(e, i),
        (e.prototype.attempt_google_login = function () {
          var o = this;
          this.google_login.on_ready(function () {
            var e = o.google_login.get_error();
            e
              ? o.show_error_message(e)
              : o.google_login.login(
                  function (e) {
                    var t = e.getAuthResponse(),
                      i = e.getBasicProfile(),
                      n = o.try_get_captcha();
                    o.login_success({
                      id_token: t.id_token,
                      email: i.getEmail(),
                      name: i.getName(),
                      captcha: n,
                    });
                  },
                  function (e) {
                    var t = "Something went wrong with Google sign-in :(";
                    "popup_blocked_by_browser" === e.error &&
                      (t =
                        "The Google Login popup was blocked by the browser. Please check your browser settings and enable popups for the Dynalist website."),
                      "popup_closed_by_user" === e.error
                        ? (t = "The Google Login popup was closed.")
                        : "access_denied" === e.error &&
                          (t = "Access to your Google account was denied."),
                      o.show_error_message(t);
                  },
                );
          });
        }),
        e
      );
    })(Lu),
    Ru =
      ((function (t) {
        function e(e) {
          return t.call(this, e) || this;
        }
        nt(e, t),
          (e.prototype.login_success = function (e) {
            var t = this;
            this.api_google_login(e.id_token, e.captcha).then(function () {
              t.start_working(), setTimeout(yi, 300);
            });
          });
      })(Mu),
      (function (t) {
        function e(e) {
          return t.call(this, e) || this;
        }
        nt(e, t),
          (e.prototype.login_success = function (e) {
            var t = this;
            this.api_google_signup(e.id_token, e.captcha).then(function () {
              t.start_working(), setTimeout(yi, 300);
            });
          });
      })(Mu),
      (function (t) {
        function e(e) {
          return t.call(this, e) || this;
        }
        nt(e, t),
          (e.prototype.login_success = function (e) {
            var t = this;
            this.api_link_google(e.id_token).then(function () {
              t.show_success_message(
                "Successfully linked your Google account! You can close this page now.",
              );
            });
          });
      })(Mu),
      (function (a) {
        function e(e, t, i, n) {
          var o = a.call(this, e) || this;
          if (
            ((o.env = t),
            (o.success_callback = i),
            t.is("mobile") && t.is("ios"))
          ) {
            var s = e.get(0),
              r = s.find(".js-apple-signin");
            if (!r)
              r = s
                .find(".js-google-signin")
                .parentElement.createEl(
                  "div",
                  { cls: "signin-btn js-apple-signin" },
                  function (e) {
                    e.createEl("span", {
                      cls: "signin-icon apple-signin-icon",
                    }),
                      e.createEl("span", {
                        cls: "signin-button-text",
                        text: n,
                      });
                  },
                );
            r.addEventListener("click", function () {
              return o.attempt_apple_login();
            });
          }
          return o;
        }
        return (
          nt(e, a),
          (e.prototype.attempt_apple_login = function () {
            var i = this,
              n = this.env;
            this.clear_messages(),
              n.attempt_apple_login(
                function (e) {
                  var t = e.fullName.givenName;
                  t
                    ? (n.set_env_data_nosave("APPLE_NAME", t),
                      n.save_env_data())
                    : (t = n.get_env_data("APPLE_NAME", "")),
                    i.onAppleLoginSuccess(
                      e.identityToken,
                      e.authorizationCode,
                      t,
                    );
                },
                function (e) {
                  i.show_error_message(
                    "Something went wrong with Apple sign-in :(",
                  );
                },
              );
          }),
          (e.prototype.attempt_google_login = function () {
            var i = this;
            this.env.attempt_googleplus_login(
              DYNALIST.GOOGLE_LOGIN_PUBLICKEY,
              function (e) {
                var t = i.try_get_captcha();
                i.login_success({
                  id_token: e.idToken,
                  email: e.email,
                  name: e.displayName,
                  captcha: t,
                });
              },
              function () {
                return i.show_error_message(
                  "Something went wrong with Google sign-in :(",
                );
              },
            );
          }),
          e
        );
      })(Lu)),
    Pu = (function (s) {
      function e(e, t, i, n) {
        var o = s.call(this, e, t, i, "Sign in with Apple") || this;
        return (o.loginManager = n), o;
      }
      return (
        nt(e, s),
        (e.prototype.login_success = function (e) {
          var t = this;
          this.api_google_login(e.id_token, e.captcha).then(function (e) {
            t.success_callback(e.session);
          });
        }),
        (e.prototype.onAppleLoginSuccess = function (e, t, i) {
          var n = this,
            o = this.try_get_captcha();
          this.api_apple_login(e, t, o).then(function (e) {
            n.success_callback(e.session);
          });
        }),
        e
      );
    })(Ru),
    Fu = (function (s) {
      function e(e, t, i, n) {
        var o = s.call(this, e, t, i, "Sign up with Apple") || this;
        return (o.signupManager = n), o;
      }
      return (
        nt(e, s),
        (e.prototype.login_success = function (e) {
          var t = this;
          this.api_google_signup(e.id_token, e.captcha).then(function (e) {
            t.success_callback(e.session);
          });
        }),
        (e.prototype.onAppleLoginSuccess = function (e, t, i) {
          var n = this,
            o = this.try_get_captcha();
          this.api_apple_signup(
            e,
            t,
            i || this.signupManager.name_field.val(),
            o,
          ).then(function (e) {
            n.success_callback(e.session);
          });
        }),
        e
      );
    })(Ru),
    Hu = DYNALIST,
    zu = (function e() {
      return Eu.test() ? new Eu() : Ou.test() ? new Ou() : new xu();
    })(),
    Bu = function (e) {
      fishAll(".page").forEach(function (e) {
        return e.uHide();
      }),
        fish(".page.mod-" + e).uShow();
    },
    Uu = function () {
      try {
        Bu("app"), (Hu.app = new fu(zu));
      } catch (e) {
        var t = "";
        e.message && (t += e.message + "\n"),
          (t += get_stacktrace(e)),
          fish(".load-fail-trace").setText(t),
          Bu("load-fail"),
          console.error(e);
      }
      fish("#FeedbackForm-replyEmail").setText(Hu.SESSION.email);
    };
  zu.on_ready(function () {
    if (Hu.IS_STANDALONE_MODE) {
      var e = function (e) {
        if (zu.is("mobile", "ios")) {
          var t = Pe();
          t && zu.set_env_data("DYS", t);
        }
        zu.set_env_data_session(e), (Hu.SESSION = e || {}), Uu();
      };
      if (zu.is("mobile", "ios")) {
        var t = zu.get_env_data("DYS", "");
        t &&
          !(function e(t) {
            Re = t;
          })(t);
      }
      var i = document.baseURI,
        n = document.createElement("base");
      if (
        (n.setAttribute("href", i),
        document.head.appendChild(n),
        Hu.SESSION.loaded || (Hu.SESSION = zu.get_env_data_session({})),
        Hu.SESSION.signed_in)
      ) {
        Uu();
        var o = new No(),
          s = function () {
            o.enqueue(
              R,
              {},
              function (e) {
                var t = e.session;
                (Hu.SESSION = t || {}),
                  zu.set_env_data_session(t, function () {
                    t.signed_in ||
                      setTimeout(function () {
                        window.location.reload();
                      }, 1e3);
                  });
              },
              function () {
                setTimeout(s, 1e4);
              },
            );
          };
        s();
      } else {
        var r = $(".login-form"),
          a = $(".signup-form"),
          _ = $(".login-request-form"),
          c = new Du(r, e),
          l = new Su(a);
        if (zu.is("mobile")) new Pu(r, zu, e, c), new Fu(a, zu, e, l);
        else {
          var u = new Au(_, e, "Dynalist desktop app");
          r.find(".js-google-signin").on("click", function () {
            Bu("login-request"), u.request_login();
          }),
            a.find(".js-google-signin").on("click", function () {
              var e = d + "/signup";
              window.open(e, "_blank");
            });
        }
        $(".js-goto-login").on("click", function (e) {
          e.preventDefault(), Bu("login");
        }),
          $(".js-goto-signup").on("click", function (e) {
            e.preventDefault(), Bu("signup");
          }),
          Bu("login");
      }
    } else Uu();
  });
})();
